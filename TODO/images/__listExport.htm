<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>LibCurl has a callback to allow</title>
<style>
<!--
p            { font-family: Tahoma; width: 7in; font-size: 9pt; margin-left: .5in; margin-top:0px; margin-bottom:5px }

	
p, ul, li            { font-family: Tahoma; width: 7in; font-size: 9pt; margin-left: .5in; margin-top:0px; margin-bottom:5px }
.xbasic      { font-family: Courier New; font-size: 10pt; color: #0000FF; margin-left: 1.1in;
               margin-top: 0; margin-bottom: 0 }
.xbasicSmall      { font-family: Courier New; font-size: 9pt; color: #0000FF; margin-left: .75in;
               margin-top: 0; margin-bottom: 0 }
               
td           { font-family: Tahoma; font-size: 8pt; VERTICAL-ALIGN: top}
h1           { font-family: Tahoma; font-size: 11pt; color: #ff0000 }
h2           { font-family: Tahoma; font-size: 10pt ; color: #ff0000}
h4 			  {font-family: Tahoma; font-size: 9pt; font-weight: bold; color: #ff0000}
h3           { font-family: Tahoma; font-size: 10pt ; color: #ff0000; margin-left: .5in;}
.note		{ padding: 10px; background-color: #f0f0f0;	border-radius: 3px;}            




-->
</style>
</head>

<body>


<div style="color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 12.8000001907349px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255);">
	<p>&nbsp;</p>
	<p>&nbsp;</p>
						<table border="1" cellspacing="1" cellpadding="3" id="table67" style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; margin-left: 0.5in; border-collapse: collapse; " width="992">

							
							
							<tr>
								<td width="103" style="font-family: Tahoma; font-size: 8pt; vertical-align: top; ">
								&nbsp;</td>
								<td width="143" style="font-family: Tahoma; font-size: 8pt; vertical-align: top; ">
								&nbsp;</td>
								<td style="font-family: Tahoma; font-size: 8pt; vertical-align: top; ">
								&nbsp;</td>
							</tr>

							
							
							</table>
						<p>&nbsp;</p>
	<table border="1" cellspacing="1" cellpadding="3" id="table68" style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; margin-left: 0.5in; border-collapse: collapse; " width="992">
		<tr>
			<td width="103" style="font-family: Tahoma; font-size: 8pt; vertical-align: top; ">
			UX Component - List Control</td>
			<td width="143" style="font-family: Tahoma; font-size: 8pt; vertical-align: top; ">
			Exporting Data in List to Excel or Ascii Files</td>
			<td style="font-family: Tahoma; font-size: 8pt; vertical-align: top; ">
			A popular feature in the Grid component is the ability to export the 
			data in the Grid query to an Excel or Ascii file. The UX component 
			List control also allows the data in the List to be exported to 
			Excel or Ascii. When you export data from a List you can either 
			export the data currently shown in the List, or the data in the 
			query that the List is based on. Setting up the code to export the 
			List data is easily done using Action Javascript.<br>
			<br>
			In this video we show how the data in a List and in a List query can 
			be exported to Excel.<br>
			<br>
			<a href="http://www.ajaxvideotutorials.com/V12Videos/ux_list_export_data_to_excel.swf">
			Watch Video</a><br>
			<a href="http://www.ajaxvideotutorials.com/V12Videos/listexportDemo.zip">
			Download Component</a><br>
			<br>
			Date added: 2015-02-09</td>
		</tr>
	</table>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
						<p><b>UX Component - List Control - Export Data to Excel 
						or Ascii</b> - You can now export data in a List control 
						to either Excel or to Ascii files.</p>
	<p>
	<a href="http://www.ajaxvideotutorials.com/V12Videos/ux_list_export_data_to_excel.swf">
	Watch Video</a></p>
	<p>&nbsp;</p>
	<p>After the export file has been created you can either download the file 
	to the client, or call an Xbasic function to further process the exported 
	file. A typical use case where you might want to call an Xbasic function to 
	process the exported file would be if you wanted to email the file to a list 
	of recipients, or upload the file to cloud storage, such as Amazon S3 
	storage.</p>
	<p>In the case where the List is based on a SQL query you have the option 
	of:</p>
	<ul>
		<li>exporting the data in the List </li>
		<li>exporting the data in the List query</li>
	</ul>
	<p>Consider the case where you have defined a List and have turned on the 
	pagination feature. You might have set the page size to 100 rows. The query 
	that the List is based on might have 1,000 records, but the List will only 
	show 100 rows of data at a time. If the export is based on the 'Data in the 
	List' the export file will have 100 rows in it (because the List only has 
	one page of data - 100 rows - in memory at any time). However, if the export 
	is based on 'Data in the List Query' the export file will have 1,000 rows in 
	it (subject to the Max Records setting which might limit the number of rows 
	in the export file).</p>
	<p>To export data in a List you can use Action Javascript to define the 
	code.</p>
	<ol>
		<li>Select the 'List Control Actions' in Action Javascript<br>
		<br>
		<img border="0" src="listExportExcel_1.jpg"></li>
		<li>Select the 'Export List data to Excel/Ascii' action from the list of 
		available actions.<br>
		<br>
		<img border="0" src="listExportExcel_2.jpg"></li>
		<li>Click the smart field to define the 'Export list data settings'.<br>
&nbsp;</li>
	</ol>
	<p>In the case where the List is based on a SQL query, the builder shows the 
	'Export what' property which can be set to 'Data in List query' or 'Data 
	shown in List'.</p>
	<p>If the 'Export what' property is set to 'Data in List query' the 'Maximum 
	number of records to export' property is shown.</p>
	<p>&nbsp;</p>
	<p><img border="0" src="listExportExcel_3.jpg"></p>
	<p>&nbsp;</p>
	<p>In the case where the 'Export what' property is set to 'Data shown in 
	List' or if the List is not based on a SQL query (in which case the data 
	that is exported is always the 'Data shown in List'), the 'Customize field 
	sizes and column heading in export file' property is shown. </p>
	<p class="note"><b>NOTE</b>: The 'Customize field sizes and column heading 
	in export file' property is only shown if the 'Export format' is Excel.</p>
	<p>This property allows you to customize the column headings in the Excel 
	file and control the data types of the data in the excel file.</p>
	<p>&nbsp;</p>
	<p><img border="0" src="listexport_excel4.jpg"></p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
	<p>The customize fields, click the smart field for the 'Customize field 
	sizes and column heading in export file' property.</p>
	<p>A build opens up where you can enter a CR-LF delimited list of definition 
	- one for each field&nbsp; you want to customize.</p>
	<p>The syntax for the definition can be shown by clicking the 'Show syntax 
	help' hyperlink.</p>
	<p>The syntax allows you to specify the data type, size and column heading 
	of each column in the Excel file.</p>
	<p>&nbsp;</p>
	<p><img border="0" src="listExport_customizeColumns.jpg"></p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
	<p>&nbsp;</p>
	<p>&nbsp;</p></div>
								
</body>

</html>