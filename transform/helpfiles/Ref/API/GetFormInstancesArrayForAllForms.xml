<page api="transform" build=" 4872">
    <shortlink>transform GetFormInstancesArrayForAllForms method</shortlink>
    <topic method="GET" scope="ALL,RDA">/GetFormInstancesArrayForAllForms</topic>
    <description>Get information (meta data and form data) for all form instances in the account associated with the API token.</description>
    <arguments>
        <argument>
            <name>person</name>
            <type>C</type>
            <description>userId of the TransForm user. If blank form instances for all users are returned</description>
        </argument>
        <argument>
            <name>pageSize</name>
            <type>N</type>
            <description>The number of forms per page. Maximum allowed page size is 200.</description>
        </argument>
        <argument>
            <name>pageNumber</name>
            <type>N</type>
            <description>The page number for which data is returned</description>
        </argument>
        <argument>
            <name>mode</name>
            <type>C</type>
            <description>detailed/summary - determines if meta data and form data or just form instanceId and date created are returned</description>
        </argument>
        <argument>
            <name>getRecordCount</name>
            <type>L</type>
            <description>if true, count of number of records is returned</description>
        </argument>
        <argument>
            <name>timestamp</name>
            <type>C</type>
            <description>timestamp when record was last updated. Format is yyyy-mm-dd 0h:0m:0s</description>
        </argument>
        <argument>
            <name>fieldlist</name>
            <type>C</type>
            <description>a list of the top level form fields that you want to return data from. if blank then data for all form fields are returned.</description>
        </argument>
        <argument>
            <name>resolveMediaFields</name>
            <type>L</type>
            <description>determine if coded data for media fields is resolved to the actual URL on Amazon S3.</description>
        </argument>
        <argument>
            <name>returnMediaFileList</name>
            <type>L</type>
            <description>specify if an array of media files should be returned - only honored if 'resolveMediaFields' is not true.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <type>JSON Object</type>
            <description>Returns an object with these properties:</description>
            <properties>
                <property>
                    <name>error</name>
                    <type>boolean</type>
                    <description>*[js:true]* if there was an error</description>
                </property>
                <property>
                    <name>errorText</name>
                    <type>string</type>
                </property>
                <property>
                    <name>hightime</name>
                    <type>string</type>
                    <description>date of the last update to any record in the array (format yyyy-mm-dd 0h:0m:0s)</description>
                </property>
                <property>
                    <name>recordCount</name>
                    <description>number of records (1 if not paginated and getRecordCount is false)</description>
                </property>
                <property>
                    <name>pageCount</name>
                    <description>number of pages of data (1 if not paginated)</description>
                </property>
                <property>
                    <name>result</name>
                    <type>array</type>
                    <properties>
                        <property>
                            <name>formid</name>
                        </property>
                        <property>
                            <name>forminstanceid</name>
                        </property>
                        <property>
                            <name>created</name>
                            <description>date when the form instance was created</description>
                        </property>
                        <property>
                            <name>timestamp</name>
                            <description>date when the form instance was last updated</description>
                        </property>
                    </properties>
                </property>
            </properties>
        </return>
    </returns>
    <sections>
        <section>
            <title>CURL</title>
            <example><![CDATA[CURL --insecure -H "apikey:Your_api_key" -H "accept: application/json" "https://transform.alphasoftware.com/transformAPIVersion1.a5svc/GetFormInstancesArrayForAllForms?person=value_of_person&paginated=value_of_paginated&pagesize=value_of_pagesize&pageNumber=value_of_pageNumber&mode=value_of_mode&getrecordcount=value_of_getrecordcount&timestamp=value_of_timestamp&fieldList=value_of_fieldList&resolveMediaFields=value_of_resolveMediaFields&returnMediaFileList=value_of_returnMediaFileList"]]></example>
        </section>
        <section>
            <title>Node</title>
            <example code="js"><![CDATA[var https = require('https');
var options = {
  protocol: "https:",
  hostname: "transform.alphasoftware.com",
  path: "/transformAPIVersion1.a5svc/GetFormInstancesArrayForAllForms?person=value%5fof%5fperson&paginated=value%5fof%5fpaginated&pagesize=value%5fof%5fpagesize&pageNumber=value%5fof%5fpageNumber&mode=value%5fof%5fmode&getrecordcount=value%5fof%5fgetrecordcount&timestamp=value%5fof%5ftimestamp&fieldList=value%5fof%5ffieldList&resolveMediaFields=value%5fof%5fresolveMediaFields&returnMediaFileList=value%5fof%5freturnMediaFileList",
  headers: {apikey: "Your_api_key"}
};

https.get(options, (resp) => {
  let data = '';
  resp.on('data', (chunk) => {data += chunk;});
  resp.on('end', () => {console.log(data);});
}).on("error", (err) => {console.log("Error: " + err.message);});
]]>            </example>
        </section>
        <section>
            <title>Xbasic</title>
            <example code="xb"><![CDATA[dim apikey as c = "Your_api_key"
dim postdata as c 
dim url as c = "/GetFormInstancesArrayForAllForms?person=value%5fof%5fperson&paginated=value%5fof%5fpaginated&pagesize=value%5fof%5fpagesize&pageNumber=value%5fof%5fpageNumber&mode=value%5fof%5fmode&getrecordcount=value%5fof%5fgetrecordcount&timestamp=value%5fof%5ftimestamp&fieldList=value%5fof%5ffieldList&resolveMediaFields=value%5fof%5fresolveMediaFields&returnMediaFileList=value%5fof%5freturnMediaFileList"
dim pr as p
pr = a5dialogHelper_transformAPIQuery(url,postdata,apikey)
if pr.error = .f. then
	dim result as c 
	result = pr.result
else
	dim errorText as c 
	errorText = pr.errorText
end if 
]]>            </example>
        </section>
        <annotations>/TransForm/GetFormInstancesArrayForAllForms.xml</annotations>
    </sections>
</page>
