<page api="transform" build=" 4872">
<shortlink>transform Login method</shortlink>
<topic  method="GET" scope="ALL">/Login</topic>
<description>Login to TransForm account.</description>
<arguments>
    <argument>
        <name>userid</name>
        <type>string</type>
        <description>
            <p>The user id.</p>
        </description>
    </argument>
    <argument>
        <name>password</name>
        <type>string</type>
        <description>The user's password</description>
    </argument>
    <argument>
        <name>accountName</name>
        <type>string</type>
        <description>The name of account to login to. Only applies if user is a member of more than one account.</description>
    </argument>
</arguments>
<returns>
    <return>
        <name>result</name>
        <type>JSON Object</type>
        <description>Returns an object with these properties:</description>
        <properties>
            <property>
                <name>error</name>
                <type>boolean</type>
                <description>*[js:true]* if there was an error</description>
            </property>
            <property>
                <name>result</name>
                <type>object</type>
                <description>An object that contains the following information:</description>
                <properties>
                    <property>
                        <name>loginOK</name>
                        <type>boolean</type>
                        <description>true if credentials are OK, otherwise false</description>
                    </property>
                    <property>
                        <name>signincomplete</name>
                        <type>boolean</type>
                        <description>Will be true if credentials are OK and a valid account name is specified, or if user is only a member of one account. Will be false if the credentials are OK but an invalid account name is specified -- or is missing.</description>
                    </property>
                    <property>
                        <name>accounts</name>
                        <type>object array</type>
                        <description>An array of accounts for user. Only returned if *[js:signincomplete]* is false. Each entry in the array will contain the following properties:</description>
                        <properties>
                            <property>
                                <name>accountDisplayName</name>
                                <type>string</type>
                                <description>The display name for the account.</description>
                            </property>
                            <property>
                                <name>accountName</name>
                                <type>string</type>
                                <description>The account name. This is the account name you must specify in the *[js:accountName]* parameter when calling the /Login method.</description>
                            </property>
                        </properties>
                    </property>
                    <property>
                        <name>JWT</name>
                        <type>string</type>
                        <description>For use by Super User Only.</description>
                    </property>
                </properties>
            </property>
        </properties>
    </return>
</returns>
<sections>
    <section>
        <description>
            <p>If the user is a member of multiple accounts, you must specify the user account. If you do not specify a valid user account, you will be given a list of accounts for the user. For example:</p>
        </description>
        <example code="json" caption="JSON returned when an invalid user account is specified"><![CDATA[{
    "error": false,
    "result": {
        "loginOK": true,
        "signincomplete": false,
        "accounts": [
        {
            "accountDisplayName": "My Account",
            "accountName": "Account1"
        },
        {
            "accountDisplayName": "WorkPlace.Org",
            "accountName": "Account2"
        }]
    },
    "errorText": ""
}]]></example>
    </section>
    <section>
        <title>Examples</title>
    </section>
    <section>
        <title nested="2">CURL</title>
        <example><![CDATA[CURL --insecure -H "apikey:Your_api_key" -H "accept: application/json"  "https://transform.alphasoftware.com/transformAPIVersion1.a5svc/Login?username=value_of_username&password=value_of_password&accountName=value_of_accountName"]]></example>
    </section>
    <section>
        <title nested="2">Node</title>
        <example code="js"><![CDATA[var https = require('https');
var options = {
  protocol: "https:",
  hostname: "transform.alphasoftware.com",
  path: "/transformAPIVersion1.a5svc/Login?username=value%5fof%5fusername&password=value%5fof%5fpassword&accountName=value%5fof%5faccountName",
  headers: {apikey: "Your_api_key"}
};

https.get(options, (resp) => {
  let data = '';
  resp.on('data', (chunk) => {data += chunk;});
  resp.on('end', () => {console.log(data);});
}).on("error", (err) => {console.log("Error: " + err.message);});
]]></example>
    </section>
    <section>
        <title nested="2">Xbasic</title>
        <example code="xb"><![CDATA[dim apikey as c = "Your_api_key"
dim postdata as c 
dim url as c = "/Login?username=value%5fof%5fusername&password=value%5fof%5fpassword&accountName=value%5fof%5faccountName"
dim pr as p
pr = a5dialogHelper_transformAPIQuery(url,postdata,apikey)
if pr.error = .f. then
	dim result as c 
	result = pr.result
else
	dim errorText as c 
	errorText = pr.errorText
end if 
]]></example>
    </section>
</sections>
<annotations>/TransForm/Login.xml</annotations>
</page>
