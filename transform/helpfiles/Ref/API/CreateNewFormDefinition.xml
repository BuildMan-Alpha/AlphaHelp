<page api="transform" build=" 4872">
<shortlink>transform CreateNewFormDefinition method</shortlink>
<topic  method="POST" scope="ALL,CFO">/CreateNewFormDefinition</topic>
<description><p>Creates a new TransForm form definition in the account associated with the API key. You can either supply a complete form definition,
or just the form definition commands. The form definition commands define the fields on the form. 
The complete form definition includes the form definition commands, and also
defines meta data for the form such as icon, text color, etc. 
To see an example of the JSON for a complete form definition use the *[GetFormDefinitionForFormId]* method.</p>
<p>
<b>TIP:</b> You can automatically generate form commands from sample JSON data using the *[CreateFormCommandsFromSampleJSON]* method.</p>
</description>
<arguments>
    <argument>
        <name>formId</name>
        <type>C</type>
        <description>formId of the new form definition. Must be unique within the TransForm account</description>
    </argument>
    <argument>
        <name>formname</name>
        <type>C</type>
        <description>descriptive name of the form</description>
    </argument>
    <argument>
        <name>formDefinitionJSON</name>
        <type>C</type>
        <description>The JSON definition of the form. You can optionally supply just the form definition commands (i.e. omit meta data).</description>
    </argument>
</arguments>
<returns>
    <return>
        <name>result</name>
        <type>JSON Object</type>
        <description>Returns an object with these properties:</description>
        <properties>
            <property>
                <name>error</name>
                <type>boolean</type>
                <description>*[js:true]* if there was an error</description>
            </property>
            <property>
                <name>errorText</name>
                <type>string</type>
            </property>
            <property>
                <name>result</name>
                <type>object</type>
                <properties>
                    <property>
                        <name>rowsAdded</name>
                        <description>count of number of records added to the form definitions table</description>
                    </property>
                </properties>
            </property>
        </properties>
    </return>
</returns>
<sections>
    <section>
        <title>CURL</title>
        <example><![CDATA[CURL --insecure -H "apikey:Your_api_key" -H "accept: application/json" -d "{"""formId""":value_of_formId,"""formname""":value_of_formName,"""formDefinitionJSON""":value_of_formDefinitionJSON}" https://transform.alphasoftware.com/transformAPIVersion1.a5svc/CreateNewFormDefinition]]></example>
    </section>
    <section>
        <title>Node</title>
        <example code="js"><![CDATA[var request = require('request')
var path = 'https://transform.alphasoftware.com/transformAPIVersion1.a5svc/CreateNewFormDefinition';
var data = {"formId": "value_of_formId","formname": "value_of_formName","formDefinitionJSON": "value_of_formDefinitionJSON"};
var dataJSON = JSON.stringify(data)
request.post(
	{
		headers: {apikey: "Your_api_key"},   
		url: path, 
		form: dataJSON}, 
		function(err,httpResponse,body){
			if(err) console.log(err)
			console.log(body)
	}
)
]]></example>
    </section>
    <section>
        <title>Xbasic</title>
        <example code="xb"><![CDATA[dim apikey as c = "Your_api_key"
dim postdata as c
postdata = <<%txt%
{
    "formId": "value_of_formId",
    "formname": "value_of_formName",
    "formDefinitionJSON": "value_of_formDefinitionJSON"
}

%txt%

dim url as c = "/CreateNewFormDefinition"
dim pr as p
pr = a5dialogHelper_transformAPIQuery(url,postdata,apikey)
if pr.error = .f. then
	dim result as c 
	result = pr.result
else
	dim errorText as c 
	errorText = pr.errorText
end if 
]]></example>
    </section>
</sections>
<annotations>/TransForm/CreateNewFormDefinition.xml</annotations>
</page>
