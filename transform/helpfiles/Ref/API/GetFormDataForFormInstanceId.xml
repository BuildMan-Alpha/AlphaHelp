<page api="transform" build=" 4872">
<shortlink>transform GetFormDataForFormInstanceId method</shortlink>
<topic>GetFormDataForFormInstanceId API Method</topic>
<description>Get information about a particular formInstanceId</description>
<arguments>
    <argument>
        <name>formInstanceId</name>
        <type>C</type>
        <description>Id of the form instance</description>
    </argument>
    <argument>
        <name>mode</name>
        <type>C</type>
        <description>
            <p>"Detailed or "Summary" - determines if form meta data and data or just form meta data are returned.</p>
            <p>
                <list>
                    <item>
                        <name>Detailed</name>
                        <description>returns both meta data and form data</description>
                    </item>
                    <item>
                        <name>Summary</name>
                        <description>returns only the form meta data</description>
                    </item>
                </list>
            </p>
        </description>
    </argument>
    <argument>
        <name>resolveMediaFields</name>
        <type>L</type>
        <description>Determine if coded data for media fields is resolved to the actual URL on Amazon S3. If "true", media field values are resolved to the actual URL for the media field. If "false", media fields values are the coded values actually stored in the TransForm database.</description>
    </argument>
    <argument>
        <name>injectFormMetaDataIntoData</name>
        <type>L</type>
        <description>Specifies if form meta data (i.e. name of user filling in form, form status, etc.) should be injected into the formdata return by the method.</description>
    </argument>
    <argument>
        <name>returnMediaFileList</name>
        <type>L</type>
        <description>Specify if an array of media files should be returned - only honored if 'resolveMediaFields' is not true.</description>
    </argument>
    <argument>
        <name>getFormDefinition</name>
        <type>L</type>
        <description>Specify if the form definition should also be returned</description>
    </argument>
</arguments>
<returns>
    <return>
        <name>result</name>
        <type>JSON Object</type>
        <description>Returns an object with these properties:</description>
        <properties>
            <property>
                <name>error</name>
                <type>boolean</type>
                <description>*[js:true]* if there was an error</description>
            </property>
            <property>
                <name>errorText</name>
                <type>string</type>
                <description>
                    <p>The error message. Will be blank if no error occurred.</p>
                </description>
            </property>
            <property>
                <name>result</name>
                <type>array</type>
                <description>
                    <p>Contains the information for the form instance.</p>
                </description>
            </property>
        </properties>
    </return>
</returns>
<sections>
    <section>
        <title>CURL</title>
        <example><![CDATA[CURL --insecure -H "apikey:Your_api_key" -H "accept: application/json"  "https://transform.alphasoftware.com/transformAPIVersion1.a5svc/GetFormDataForFormInstanceId/value_of_forminstanceid?mode=value_of_mode&resolveMediaFields=value_of_resolveMediaFields&injectFormMetaDataIntoData=value_of_injectFormMetaDataIntoData&returnMediaFileList=value_of_returnMediaFileList&getFormDefinition=value_of_getFormDefinition"]]></example>
    </section>
    <section>
        <title>Node</title>
        <example code="js"><![CDATA[var https = require('https');
var options = {
  protocol: "https:",
  hostname: "transform.alphasoftware.com",
  path: "/transformAPIVersion1.a5svc/GetFormDataForFormInstanceId/value_of_forminstanceid?mode=value%5fof%5fmode&resolveMediaFields=value%5fof%5fresolveMediaFields&injectFormMetaDataIntoData=value%5fof%5finjectFormMetaDataIntoData&returnMediaFileList=value%5fof%5freturnMediaFileList&getFormDefinition=value%5fof%5fgetFormDefinition",
  headers: {apikey: "Your_api_key"}
};

https.get(options, (resp) => {
  let data = '';
  resp.on('data', (chunk) => {data += chunk;});
  resp.on('end', () => {console.log(data);});
}).on("error", (err) => {console.log("Error: " + err.message);});
]]></example>
    </section>
    <section>
        <title>Xbasic</title>
        <example code="xb"><![CDATA[dim apikey as c = "Your_api_key"
dim postdata as c 
dim url as c = "/GetFormDataForFormInstanceId/value_of_forminstanceid?mode=value%5fof%5fmode&resolveMediaFields=value%5fof%5fresolveMediaFields&injectFormMetaDataIntoData=value%5fof%5finjectFormMetaDataIntoData&returnMediaFileList=value%5fof%5freturnMediaFileList&getFormDefinition=value%5fof%5fgetFormDefinition"
dim pr as p
pr = a5dialogHelper_transformAPIQuery(url,postdata,apikey)
if pr.error = .f. then
	dim result as c 
	result = pr.result
else
	dim errorText as c 
	errorText = pr.errorText
end if 
]]></example>
    </section>
</sections>
<annotations>/TransForm/GetFormDataForFormInstanceId.xml</annotations>
</page>
