<page build="">
    <shortlink>Dashboard Quickstart</shortlink>
    <topic>Alpha TransForm Analytics Quickstart Guide</topic>
    <description>This document is still under development</description>
    <groups>
        <group>
            <title>Introduction</title>
            <sections>
                <section>
                    <description>
                        <p>Dashboards are a new way to analyze form data in TransForm Central. Create Charts, Lists, or fully custom visualizations from scratch to gain new insights, identify patterns, or track metrics with Alpha TransForm.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Accessing Dashboards</title>
            <sections>
                <section>
                    <description>
                        <p>Dashboards can be found on the new Dashboard tab in TransForm Central located to the left of the Home tab.</p>
                        <p>Only users who have been assigned the Management Console role will be able to access dashboards. You can change a user's roles on the Home tab in User Management > Manage User Roles. Select the user you want to give access to Management Console, then hold the Ctrl key down while clicking the Management Console role. Then click Set Roles. See [Manage User Roles] to learn more.</p>
                    </description>
                    <important>
                        <p>Adding the Management Console role to a user also gives them access to the Management Console where they can access and edit any forms in the system.</p>
                    </important>
                </section>
            </sections>
        </group>
        <group>
            <title>Overview of Dashboard Tab</title>
            <sections>
                <section>
                    <description>
                        <p>Dashboards can be created and managed using the options found in the Dashboard Toolbar.</p>
                    </description>
                    <figure>
                        <title>Dashboard Toolbar</title>
                        <alt>Dashboard Toolbar</alt>
                        <link>images/dashboardToolbar.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>On the left-hand side of the toolbar, the dashboard's name followed by a down arrow is displayed. When you click the dashboard's name, the List of Dashboards is shown. Here you can choose which dashboard to display by selecting it from the dashboard list.</p>
                    </description>
                    <figure>
                        <title>List of Dashboards</title>
                        <alt>List of Dashboards</alt>
                        <link>images/listOfDashboards.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>Clicking the hamburger menu icon in the upper left-hand corner open the List of Dashboards menu, which contains the following options:</p>
                        <p>
                            <list>
                                <item>
                                    <name>Add Dashboard</name>
                                    <description>Creates a new dashboard in My Dashboards.</description>
                                </item>
                                <item>
                                    <name>Duplicate Dashboard</name>
                                    <description>Creates a copy of the current dashboard and adds it to My Dashboards.</description>
                                </item>
                                <item>
                                    <name>Delete Selected Dashboard</name>
                                    <description>Deletes the current dashboard.</description>
                                </item>
                                <item>
                                    <name>Make Dashboard Shared</name>
                                    <description>Copies the current dashboard to Shared Dashboards.</description>
                                </item>
                                <item>
                                    <name>Save Shared Dashboards Only</name>
                                    <description>Saves all shared dashboards. Note: This is the only way to save shared dashboards.</description>
                                </item>
                                <item>
                                    <name>Auto-Refresh</name>
                                    <description>Puts the dashboard into automatic update mode. In this mode, the navigation bar is hidden and only the dashboard is shown. The dashboard is automatically refreshed every 15 minutes.</description>
                                </item>
                                <item>
                                    <name>Import/Export Dashboard Definition</name>
                                    <description>Opens a text window containing the JSON definition for the dashboard. To export, copy the JSON from the window. To import, replace the JSON in the window with another exported dashboard definition.</description>
                                </item>
                                <item>
                                    <name>Import/Export Predefined Tile Definitions</name>
                                    <description>Opens a text window where you can add your own Tile template definitions shown when adding a new Tile.</description>
                                </item>
                            </list>
                        </p>
                        <p>At the bottom of the List of Dashboards window, you'll see two informational messages that indicate the last time the dashboards and form types have been refreshed as well as several buttons:</p>
                        <p>
                            <list>
                                <item>
                                    <name>Refresh Dashboards</name>
                                    <description>Refreshes the List of Dashboards, including any modifications to the Shared Dashboards in the TransForm account.</description>
                                </item>
                                <item>
                                    <name>Reorder selected row</name>
                                    <description>Use the up and down arrows to reorder dashboards in the list within the section they are found.</description>
                                </item>
                                <item>
                                    <name>Refresh Form Type Definitions</name>
                                    <description>Fetches an updated list of Form Type definitions for the account. You only need to click this button if you've created a new Form Type on the Designer tab while the Dashboard tab was open and want to reference the new Form Type in your dashboards.</description>
                                </item>
                            </list>
                        </p>
                        <p>In the Dashboard toolbar to the right of the dashboard's name, you'll find the following options:</p>
                        <p>
                            <list>
                                <item>
                                    <name>Edit</name>
                                    <description>Opens the Dashboard Editor to edit the Dashboard's Name, Filter, Sort criteria, and User Inputs.</description>
                                </item>
                                <item>
                                    <name>Click to save modified info about all your dashboards to the server</name>
                                    <description>This orange message is shown when the dashboard contains modifications that need to be saved. Clicking the message saves your dashboards. If the dashboard is a Shared Dashboard, you must also save the Shared Dashboards to the server separately. See [Sharing Dashboards] below to learn more.</description>
                                </item>
                                <item>
                                    <name>Refresh</name>
                                    <description>Fetches the form data for the Dashboard. Forms are not automatically downloaded, so you need to do a refresh to get new form data.</description>
                                </item>
                                <item>
                                    <name>Export</name>
                                    <description>Exports the Dashboard as an HTML or PDF document. The exported dashboard can optionally be emailed.</description>
                                </item>
                                <item>
                                    <name>Show List</name>
                                    <description>Displays the list of forms for the Dashboard in a list similar to Management Console.</description>
                                </item>
                                <item>
                                    <name>Help</name>
                                    <description>Opens the help pane.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>System Default Dashboard</title>
            <sections>
                <section>
                    <description>
                        <p>Coming soon.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Creating Dashboards</title>
            <sections>
                <section>
                    <description>
                        <p>Dashboards are built with Tiles. When you create a new dashboard using the Add Dashboard option in the List of Dashboards menu, a new blank dashboard is created with one Tile, the Number of Forms Tile. The Number of Forms Tile displays the number of forms retrieved for the dashboard. </p>
                        <p>All dashboards are required to have at least one Tile. If you delete all Tiles from your dashboard, the Number of Forms Tile is automatically added.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">Creating Tiles from Templates</title>
                    <description>
                        <p>To create a new Tile, click the icon in the upper right corner of any Tile. Then, select Add New Tile.</p>
                    </description>
                    <figure>
                        <title>Tile menu</title>
                        <alt>Tile menu</alt>
                        <link>images/tilesMenu1.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>The Add New Dashboard Tile window will appear.</p>
                        <p>Select the type of Tile you want to add. There are three basic Tile types: Chart, List, and Text. In addition, the Add New Dashboard Tile includes some pre-built templates:</p>
                        <p>
                            <list>
                                <item>
                                    <name>Blank Chart Tile</name>
                                    <description>A blank Chart Tile. Chart Tiles can be used to create Line Charts, Bar Charts, Pie and Donut Charts, Polar Charts (i.e. Radar Charts), Area Charts, Stacked Charts, and Scatter Plots. Chart Tiles can also be used to create a basic List of forms.</description>
                                </item>
                                <item>
                                    <name>Blank List Tile</name>
                                    <description>A blank List Tile. List Tiles displays each form in a List using a layout defined using TPL.</description>
                                </item>
                                <item>
                                    <name>Blank Text Tile</name>
                                    <description>A blank Text Tile. Text Tiles are freeform Tiles that are defined using TPL templating.</description>
                                </item>
                                <item>
                                    <name>Number of Forms Tile</name>
                                    <description>The Number of Forms Tile, which is automatically added to all new dashboards.</description>
                                </item>
                                <item>
                                    <name>Forms by Month Tile</name>
                                    <description>A bar Chart Tile that displays the total number of forms created each month for the current year.</description>
                                </item>
                                <item>
                                    <name>Forms by Month and Status Tile</name>
                                    <description>A percent bar Chart Tile that displays the number of forms by month grouped by status (e.g. open, closed) for the current year.</description>
                                </item>
                                <item>
                                    <name>Form Counts with Date Navigation Tile</name>
                                    <description>An area line Chart Tile that displays the number of forms created each month. The form counts are displayed for each day of the month. The template includes a User Input that lets you change the month for which form counts are shown.</description>
                                </item>
                                <item>
                                    <name>Form Types with Sorting Tile</name>
                                    <description>A list Chart Tile that displays a list of forms types for the account and the number of instances for each form type.</description>
                                </item>
                                <item>
                                    <name>Account Usage Tile</name>
                                    <description>A Text Tile that displays a list of users, the number of forms assigned to them, and when they last submitted a form.</description>
                                </item>
                            </list>
                        </p>
                        <p>Select the Forms by Month Tile (Forms by Month) template from the list to add it to the dashboard. The Tile editor will open after the Forms by Month Tile is added to the dashboard, giving you the opportunity to edit the Tile immediately after creating it.</p>
                    </description>
                    <figure>
                        <title>Tile editor</title>
                        <alt>Tile editor</alt>
                        <link>images/tileEditor1.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>The Tile editor has 4 tabs:</p>
                        <p>
                            <list>
                                <item>
                                    <name>Properties</name>
                                    <description>Here is where you can configure the look and feel of the Tile. This includes specifying the type of Chart to use (Line, Bar, etc) as well as the templates for List and Text Tiles.</description>
                                </item>
                                <item>
                                    <name>Filtering</name>
                                    <description>Add additional local filters applied locally to the dashboard's forms. See [Filtering] below to learn more.</description>
                                </item>
                                <item>
                                    <name>Sort Order</name>
                                    <description>Custom sorting applied locally to the forms before they're displayed in the Tile. See [Sort Order] below to learn more.</description>
                                </item>
                                <item>
                                    <name>User Inputs</name>
                                    <description>Custom controls you can add to the Tile to add dynamic filtering (such as changing the month or form type shown) and sorting. User Inputs can also be referenced in some properties where TPL is used. See [User Inputs] below to learn more.</description>
                                </item>
                            </list>
                        </p>
                        <p>To the right of Tile editor tabs is the Tile Type property, which you can use to change the Tile's type. In addition to Tile Type, all Tiles have Tile Size properties that define the Tile's Width, Height, and whether or not the Tile Always starts on a new row. All Tiles also have an advanced TPL Functions section where you can define functions to use in properties, templates, filters, or sort order rules that support TPL. See [Extensibility with TPL] below to learn more.</p>
                        <p>A preview of the tile is shown on the right side of the Tile editor. When you hover your mouse over the tile, the preview is enlarged. You can enable or disable automatic updating of the preview using the Auto-Preview checkbox below the list of Properties.</p>
                        <p>In the title bar for the Tile editor on the right hand side are three buttons: Import/Export, Save, and Cancel. Save saves changes made to the Tile after it was added and closes the Tile editor. Cancel reverts the Tile to its original template definition and closes the Tile editor. Import/Export can be used to import or export a Tile. See [Exporting Dashboards and Tiles] below to learn more. </p>
                    </description>
                </section>
                <section>
                    <title nested="2">Creating Blank Tiles</title>
                    <description>
                        <p>Blank Tile templates can be used to add a Chart, List, or Text Tile with no other predefined settings. Depending on the type of visualization you want to create, starting with a blank Tile may be easier than trying to change one of the other Tile templates to suit your needs.</p>
                        <p>Tiles are configured using properties to customize the data display. Chart Tiles convert Form data into graphical displays. For example, Forms by Month displays a count of forms created each month for the current year as a bar chart. </p>
                    </description>
                    <cases>
                        <case>
                            <title nested="3">Processing Type</title>
                            <description>
                                <p>Creating a Chart begins with the Chart Type, Data Source, and Processing properties. The Value Processing Type describes how to transform your form data into a format that can then be used to create a chart. Types of data processing include:</p>
                                <p>
                                    <list bullet="true">
                                        <item>
                                            <name>Count of each different discrete X value - e.g. the number of forms by status (open, submitted, approval, and closed).</name>
                                        </item>
                                        <item>
                                            <name>Sum of numeric Y values</name>
                                        </item>
                                        <item>
                                            <name>Average of numeric Y values - e.g. the average 5S Audit score (Y) each month (X).</name>
                                        </item>
                                        <item>
                                            <name>Minimum of numeric Y values - e.g. the lowest 5S Audit score (Y) each week (X).</name>
                                        </item>
                                        <item>
                                            <name>Maximum of numeric Y values - e.g. the highest 5S Audit score (Y) each week (X).</name>
                                        </item>
                                        <item>
                                            <name>Discrete X values, numeric Y values - e.g. the 5S Audit score (Y) for the most recent form submitted by each user (X).</name>
                                        </item>
                                        <item>
                                            <name>Continuous numeric X and Y values - e.g. daily temperature readings.</name>
                                        </item>
                                        <item>
                                            <name>TPL calculates all charting data - see [Extensibility with TPL] below.</name>
                                        </item>
                                    </list>
                                </p>
                                <p>When charting data, it's important to understand the difference between discrete and continuous data.</p>
                                <p>Discrete data is data that can only have very specific values from a fixed set of choices. Form Status is an example of a discrete value. Alpha TransForm includes four basic status: "open", "submitted", "approval", and "closed". A form's Status can only be one of these options. Bar charts, pie charts, donut charts, and radar charts can be used to display discrete data values.</p>
                                <p>Continuous data is data that can have any value that cannot be enumerated as a fixed list of choices. Measurements are an example of continuous data, e.g. a temperature reading. Line charts and area charts are often used to display continuous data.    </p>
                                <p>After choosing the Processing Type that accurately describes the type of data you plan to chart, select the Source of the Data. Unless you plan on writing TPL to calculate the entire chart, Specific fields from each form should be selected. Finally, choose a Chart Type and then open the Graph X properties.</p>
                            </description>
                            <tip>
                                <p>Experiment with different Chart Types after you've finished configuring your X, Y, and Group data.</p>
                            </tip>
                        </case>
                        <case>
                            <title nested="3">X Values</title>
                            <description>
                                <p>Graph X properties define what data to chart. In the case of Pie and Donut charts, only the X value is plotted. All other charts support both an X and Y value. To configure the X value, first select one of the How To Specify Value options:</p>
                                <p>
                                    <list bullet="true">
                                        <item>
                                            <name>Choose From Field List - Select the field from the Form data.</name>
                                        </item>
                                        <item>
                                            <name>Graph Multiple Numeric Data Fields - Allows you to graph multiple data points.</name>
                                        </item>
                                        <item>
                                            <name>Graph Multiple Discrete-Value Data Fields - Allows you to graph multiple, discrete data points.</name>
                                        </item>
                                        <item>
                                            <name>TPL Expression - See [Extensibility with TPL] below.</name>
                                        </item>
                                    </list>
                                </p>
                                <p>For example, to create a Pie chart displaying a count of form status, you would select Choose From Field List and set Graph X to "Status" from the list of fields.</p>
                            </description>
                            <figure>
                                <title>Specifying X values</title>
                                <alt>Specifying X values</alt>
                                <link>images/specifyGraphX.png</link>
                            </figure>
                        </case>
                        <case>
                            <description>
                                <p>If you want to chart a field specific to a form type, select the form type from the Specify an optional Form Type whose field names will appear in choice lists below dropdown. This will add fields from the form definition to the list of Graph X choices.</p>
                            </description>
                            <figure>
                                <title>Selecting a Form Type</title>
                                <alt>Selecting a Form Type</alt>
                                <link>images/chooseFormType.png</link>
                            </figure>
                        </case>
                        <case>
                            <title nested="4">Clustering</title>
                            <description>
                                <p>You can optionally group form values together using Clustering. For example, clustering can be used to display a count of forms created by week. Graph X in this scenario is set to the Created field. The following options are available for clustering:</p>
                                <p>
                                    <list bullet="true">
                                        <item>
                                            <name>Year - cluster data together by year.</name>
                                        </item>
                                        <item>
                                            <name>Month - cluster data together by month. </name>
                                        </item>
                                        <item>
                                            <name>Day - cluster data together by day. </name>
                                        </item>
                                        <item>
                                            <name>Day of week - cluster data together by day of week (Monday, Tuesday, etc).</name>
                                        </item>
                                        <item>
                                            <name>Custom </name>
                                        </item>
                                    </list>
                                </p>
                                <p>Graph X must be set to a date or date-time field if one of the date clustering types is chosen. The Custom option can be used to write your own clustering criteria. Custom doesn't require the X value to be a date. The Custom method uses a test:value syntax separated by commas to define each cluster. For example, assume X can be any value from 1 to 100 and you'd like to cluster X into three categories: low, medium, and high. Your custom clustering definition would be:</p>
                                <p>
                                    <example><![CDATA[<35:low,<=75:medium,<=100:high]]></example>
                                </p>
                            </description>
                        </case>
                        <case>
                            <title nested="3">Y Values</title>
                            <description>
                                <p>The next step is to specify your Y values, if they apply to the Processing Type. The Graph Y properties are similar to the Graph X. The Y value is the data you want to plot along the Y axis of the chart. Here is where you would specify multiple values if you wanted to chart multiple data points over X. For example, the chart below plots the average 5S Audit scores (Sort Score, Set in Order Score, Shine Score, Standardize Score, and Sustain Score) for each audit category per month (Audit Date clustered by Month).</p>
                            </description>
                            <figure>
                                <title>Graphing Multiple Y Values</title>
                                <alt>Graphing Multiple Y Values</alt>
                                <link>images/averageAuditScores.png</link>
                            </figure>
                        </case>
                        <case>
                            <title nested="3">Grouping</title>
                            <description>
                                <p>Coming Soon</p>
                            </description>
                        </case>
                        <case>
                            <title nested="3">Titles, Labels, and Legends</title>
                            <description>
                                <p>Coming Soon</p>
                            </description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title nested="2">List Tiles</title>
                    <description>
                        <p>Coming Soon</p>
                    </description>
                </section>
                <section>
                    <title nested="2">Text Tiles</title>
                    <description>
                        <p>Coming Soon</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Filtering</title>
            <sections>
                <section>
                    <description>
                        <p>The Filtering tab is available in both the Dashboard properties and the Tile properties and is used to define a set of Filter rules which generate the list of Forms that comprise the source data for the Dashboard or Tile.  Filter rules defined at the Dashboard level operate against all forms in your account.  Filter rules defined at the Tile level operate against the results of the Dashboard filter.  This allows you to have tiles that show subsets of your dashboard data.</p>
                        <p>Create a new Filter rule using the + button below the filter list.  Filter rules can be reordered using the up and down arrow buttons and deleted with the X button.  Filter rules are applied against each Form in the order listed.  The Form must pass all rules in order to be included in the resulting source data set.  Filter rules may be contained within a group by using the grouping button ().  A Filter group may be set to require all rules contained within to match or any rule to match.  This allows creation of AND/OR rules.</p>
                        <p>A Filter rule takes a Field to test on, a test, and a value to test against.</p>
                        <p>The Field to test may be one of the top-level Form fields, such as Form ID, or any of the form data.  Select form data fields by choosing the Form Type from the dropdown list.  The form's fields will then display within the "Field" dropdown.</p>
                        <p>The following Tests are available:</p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>Less Than - The field is less than the specified value.</name>
                                </item>
                                <item>
                                    <name>Less Than or Equal - The field is less than or equal to the specified value.</name>
                                </item>
                                <item>
                                    <name>Equal - The field is equal to the value.</name>
                                </item>
                                <item>
                                    <name>Not Equal - The field is not equal to the value.</name>
                                </item>
                                <item>
                                    <name>Greater Than - The field is greater than the value.</name>
                                </item>
                                <item>
                                    <name>Greater Than or Equal - The field is greater than or equal to the value.</name>
                                </item>
                                <item>
                                    <name>Is One of the Items in a List - The field is one of the items in a List of values.</name>
                                </item>
                                <item>
                                    <name>Between - The field is between two values.</name>
                                </item>
                                <item>
                                    <name>Not Between - The field is not between two values.</name>
                                </item>
                                <item>
                                    <name>Is NULL - The field has no value.</name>
                                </item>
                                <item>
                                    <name>Is NOT NULL - The field has a value.</name>
                                </item>
                                <item>
                                    <name>Starts With - The field starts with the specified value.</name>
                                </item>
                                <item>
                                    <name>Ends With - The field ends with the specified value.</name>
                                </item>
                                <item>
                                    <name>Contains - The field contains the specified value.</name>
                                </item>
                                <item>
                                    <name>Does Not Start With - The field does not start with the specified value.</name>
                                </item>
                                <item>
                                    <name>Does Not End With - The field does not end with the specified value.</name>
                                </item>
                                <item>
                                    <name>Does Not Contain - The field does not contain the specified value.</name>
                                </item>
                                <item>
                                    <name>Equal (case-sensitive) - The field is equal to the value, ignoring case.</name>
                                </item>
                                <item>
                                    <name>Not Equal (case-sensitive) - The field is not equal to the value, ignoring case.</name>
                                </item>
                                <item>
                                    <name>During a Relative Time Period - The field occurs during a date-time period. E.g. during the last month.</name>
                                </item>
                                <item>
                                    <name>Not During a Relative Time Period - The field does not occur during a date-time period.</name>
                                </item>
                                <item>
                                    <name>During a Relative Time Range - The field occurs during a custom date-time period.</name>
                                </item>
                                <item>
                                    <name>Not During a Relative Time Range - The field does not occur during a custom date-time period.</name>
                                </item>
                            </list>
                        </p>
                        <p>The Value Type dropdown contains a list of options for specifying the value to use in the test.  These options are dependent on the test type.</p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>Typed Text - The value is entered as static text into the Filter rule.</name>
                                </item>
                                <item>
                                    <name>Field or User Input - The value is selected from a list of Form metadata, Form data (if a Form Type has been selected), or User Inputs defined.</name>
                                </item>
                                <item>
                                    <name>Item From A List - Certain fields, such as Form ID can have their value selected from a list of predetermined values.</name>
                                </item>
                                <item>
                                    <name>Date/Time - The value is selected from a timestamp picker control.</name>
                                </item>
                                <item>
                                    <name>Date - The value is selected from a date picker control.</name>
                                </item>
                                <item>
                                    <name>Time - the value is selected from a time picker control.</name>
                                </item>
                                <item>
                                    <name>User Input - The value is selected from the list of User Inputs defined.</name>
                                </item>
                                <item>
                                    <name>Relative Period - The value is selected from a list of relative time periods.</name>
                                </item>
                            </list>
                        </p>
                        <p>A Filter rule can be enabled or disabled as well as enabled based on User Input selections.  This allows you to create Dashboards and Tiles where the user can change the source data interactively, such as to filter based on product type.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">Advanced Filtering</title>
                    <description>
                        <p></p>
                    </description>
                    <cases>
                        <case>
                            <title nested="3">Data Groups</title>
                            <description>
                                <p>Filter rules can be created which evaluate form data located within top-level Data Groups.  Use the magic wand button to open the menu of advanced filter rules to select one of the data group filters:</p>
                                <p>
                                    <list bullet="true">
                                        <item>
                                            <name>Data Group Field "Any" Row - Include the Form if any Data Group entry matches the Filter rule.</name>
                                        </item>
                                        <item>
                                            <name>Data Group Field "All" Row - Include the Form if all of the Data Group entries match the Filter rule.</name>
                                        </item>
                                    </list>
                                </p>
                            </description>
                        </case>
                        <case>
                            <title nested="3">Advanced Tests</title>
                            <description>
                                <p>Coming soon.</p>
                            </description>
                        </case>
                    </cases>
                </section>
            </sections>
        </group>
        <group>
            <title>Sort Order</title>
            <sections>
                <section>
                    <description>
                        <p>The Sort Order tab is available in both the Dashboard properties and the Tile properties and is used to define a set of Sort rules that apply to the list of Forms included in the Dashboard or Tile's Filter.</p>
                        <p>Create a new Sort rule using the + button below the rule list.  Sort rules can be reordered using the up and down arrow buttons and deleted with the X button.  Sort rules are applied in the order listed against the list of Forms for the Tile or Dashboard.</p>
                        <p>Sort rules take a field to sort on, such as Created, and a sort direction:</p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>Up - String / Alphabetic sort A-Z.</name>
                                </item>
                                <item>
                                    <name>Down - String / Alphabetic sort Z-A.</name>
                                </item>
                                <item>
                                    <name>Up (numeric comparisons) - Ascending numeric sort.</name>
                                </item>
                                <item>
                                    <name>Down (numeric comparisons) - Descending numeric sort.</name>
                                </item>
                            </list>
                        </p>
                        <p>A sort rule can evaluate form data by choosing the Form Type from the dropdown list.  The form's fields will then display within the "Field To Use For Sort" dropdown.</p>
                        <p>Sort rules can be enabled and disabled as well as enabled based on User Input selections.  This allows you to create Dashboards and Tiles where the users can change the sorting interactively.</p>
                    </description>
                    <figure>
                        <title>Sort Order tab</title>
                        <alt>Sort Order tab</alt>
                        <link>images/sort.PNG</link>
                    </figure>
                </section>
            </sections>
        </group>
        <group>
            <title>User Inputs</title>
            <sections>
                <section>
                    <description>
                        <p>User Inputs allow Dashboards and Tiles to be interactive.  User Inputs can be used in Filter and Sorting rules, to control other User Inputs, and in custom TPL extensions. </p>
                    </description>
                    <figure>
                        <title>Stacked Bar Chart with several User Inputs</title>
                        <alt>Stacked Bar Chart with several User Inputs</alt>
                        <link>images/user input example1.PNG</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">User Input Types</title>
                    <description>
                        <p></p>
                        <p>
                            <list>
                                <item>
                                    <name>Text</name>
                                    <description>Contains arbitrary typed text.</description>
                                </item>
                                <item>
                                    <name>Date</name>
                                    <description>Contains a date string in YYYY-MM-DD format.  Provides a calendar date picker control for the user to select a date.</description>
                                </item>
                                <item>
                                    <name>Date/Time</name>
                                    <description>Contains a timestamp string in YYYY-MM-DD HH:MM:SS format.  Provides a calendar and time picker control for the user to select the date and time.</description>
                                </item>
                                <item>
                                    <name>Relative Date</name>
                                    <description>
                                        <p>Relative Dates refer to time periods relative to the current date, such as This Month, Today, or Last Year.  Relative Dates are stored in a format that contains the relative period, such as day or month, and a numeric value indicating the number of periods before or after the current period.  For example, week:-2 represents two weeks prior to the current week.</p>
                                        <p>Relative Date User Inputs can be set in two different ways:</p>
                                        <p>
                                            <list bullet="true">
                                                <item>
                                                    <name>Button List - Presents the user with a set of buttons of common relative date selections.  You can select which relative date options are displayed.</name>
                                                </item>
                                                <item>
                                                    <name>Adjustable Periods - Provides the user the ability to navigate forward and backwards through a relative date period.  You must specify which period length to use.  For example, you can give the user the ability to navigate forward and backward by months.</name>
                                                </item>
                                            </list>
                                        </p>
                                    </description>
                                </item>
                                <item>
                                    <name>List</name>
                                    <description>Presents a list of choices for the user to select from.  Only one choice may be selected at a time.  Lists can have an arbitrary number of choices defined.  Lists can be displayed to the user as either a Button List or a Dropdown.</description>
                                </item>
                                <item>
                                    <name>Checkbox</name>
                                    <description>Displays a single checkbox that contains "Y" when checked and "" when unchecked.</description>
                                </item>
                                <item>
                                    <name>Heading Only</name>
                                    <description>Contains no data but is used to display a text label within the User Input area of the Dashboard or Tile.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Extensibility with TPL</title>
            <sections>
                <section>
                    <description>
                        <p>While the majority of Dashboard uses can be configured by setting various properties, Alpha TransForm Analytics includes a number of areas where things can be extended by using TPL templates and scripts.  This allows the development of fully customized data visualizations.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">Dashboard System Variables</title>
                    <description>
                        <p>TPL scripts in Dashboards and Tiles have access to special system variables to allow for calculations.  These variables are all part of a $dash system object.  The $dash top-level object will have different properties depending on where it is being invoked.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">TPL Templates</title>
                    <description>
                        <p>TPL Templates in TransForm Analytics operate the same way they do in the form designer.  TPL templates may be used in several places:</p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>In Text Tiles, a TPL template defines all of the content for the tile.</name>
                                </item>
                                <item>
                                    <name>In List Tiles, a TPL template defines the content for a row of the source data and is repeated for each row.</name>
                                </item>
                                <item>
                                    <name>In Tile labels and titles, TPL expressions may be used to provide dynamic content.</name>
                                </item>
                            </list>
                        </p>
                        <p>TPL Templates have access to special system variables to allow for calculations.</p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>$dash.rows - the filtered list of rows for the Tile</name>
                                </item>
                                <item>
                                    <name>$dash.allrows - the unfiltered list of retrieved rows in the Dashboard</name>
                                </item>
                                <item>
                                    <name>$dash.tileuserinputs - object with a property for each User Input on the Tile</name>
                                </item>
                                <item>
                                    <name>$dash.dashboarduserinputs - object with a property for each User Input on the Dashboard</name>
                                </item>
                                <item>
                                    <name>$dash.tilenum - the order (0-originated) of the Tile on the Dashboard</name>
                                </item>
                                <item>
                                    <name>$dash.rowindex - in List tiles, the index of the row in $dash.rows being processed</name>
                                </item>
                                <item>
                                    <name>$dash.listingdetails - in List tiles, the row's listing details value</name>
                                </item>
                                <item>
                                    <name>$dash.tileheight - in Text tiles, the approximate height in pixels of the tile body without user inputs</name>
                                </item>
                                <item>
                                    <name>$dash.row - in List tiles, the row being processed. The row contains the retrieved form instance data, including:</name>
                                    <list bullet="true">
                                        <item>
                                            <name>ID</name>
                                        </item>
                                        <item>
                                            <name>formid</name>
                                        </item>
                                        <item>
                                            <name>forminstanceid</name>
                                        </item>
                                        <item>
                                            <name>formversion</name>
                                        </item>
                                        <item>
                                            <name>status</name>
                                        </item>
                                        <item>
                                            <name>person</name>
                                        </item>
                                        <item>
                                            <name>created</name>
                                        </item>
                                        <item>
                                            <name>completed</name>
                                        </item>
                                        <item>
                                            <name>haserrors</name>
                                        </item>
                                        <item>
                                            <name>missingrequired</name>
                                        </item>
                                        <item>
                                            <name>formdata</name>
                                        </item>
                                        <item>
                                            <name>timestamp</name>
                                        </item>
                                        <item>
                                            <name>user1,user2,user3,user4,user5</name>
                                        </item>
                                        <item>
                                            <name>userlabel1,userlabel2,userlabel3,userlabel4,userlabel5</name>
                                        </item>
                                        <item>
                                            <name>duedate</name>
                                        </item>
                                        <item>
                                            <name>displayname - the user's display name for the person field. This value is available after a short delay after opening the Dashboard tab.</name>
                                        </item>
                                        <item>
                                            <name>formdatajson - an object with the JSON.parse of the formdata field</name>
                                        </item>
                                    </list>
                                </item>
                            </list>
                        </p>
                        <p>See [TPL Templating] and [TransForm Programming Language Overview] for more info about TPL.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">TPL as Chart Source Data</title>
                    <description>
                        <p>TransForm Analytics allows the source data for a Chart to be calculated using a TPL script rather than specifying fields from the list of Forms.  This is done by selecting "All calculated using TPL (advanced)" option in the Chart Type, Data Source, and Processing property of the Chart Tile.  Using this option, a TPL script must return an object containing the chart data and other parameters used by the Chart.</p>
                        <p>The object returned should have the following properties:</p>
                        <p>
                            <list>
                                <item>
                                    <name>rawdata</name>
                                    <description>(required) an array of objects with the following values</description>
                                    <list>
                                        <item>
                                            <name>x</name>
                                            <description>(required) the x-axis data for the Chart</description>
                                        </item>
                                        <item>
                                            <name>y</name>
                                            <description>(optional) the y-axis data associated with the x value</description>
                                        </item>
                                        <item>
                                            <name>g</name>
                                            <description>(optional) the group associated with the x value</description>
                                        </item>
                                        <item>
                                            <name>pos</name>
                                            <description>(optional) comma separated list of the index values of Forms to display when the data point is clicked</description>
                                        </item>
                                    </list>
                                </item>
                                <item>
                                    <name>values</name>
                                    <description>(optional) an array with the text of the x-axis labels corresponding to the x-axis data points defined in rawdata.  The Tile will provide its own values if left blank.</description>
                                </item>
                                <item>
                                    <name>nopsvalue</name>
                                    <description>(optional) when set to a non-blank value, overrides the default behavior of using the original row index values as a list of Forms to display when clicked, if rawdata.pos is not defined.</description>
                                </item>
                            </list>
                        </p>
                        <p>When debugging, the Collected Data tab when Show Intermediate Data is checked will show the X, Y, Group and Pos (Form) data generated.</p>
                        <p>Here's an example of using TPL to source the raw data:</p>
                        <p>
                            <example code="tpl"><![CDATA[d=array()
for i = 0 to len($dash.rows)-1
    row=$dash.rows[i]
    r=obj()
    r.x = row.formdatajson.placeborn
    arrayPush(d,r)
endfor
return obj("rawdata",d)]]></example>
                        </p>
                    </description>
                </section>
                <section>
                    <title nested="2">List and Text Tile Templates</title>
                    <description>
                        <p>When adding a TPL Template to a List or Text Tile, the following a5-item values may be used to run actions:</p>
                        <p>a5-item="examineFiltered:spec" where "spec" may be "all" for all rows of the tile, or a comma-separated list of one or more 0-origined numbers to indicate which Tile rows should be shown in the Forms List.</p>
                        <p>Using examineFiltered also requires the a5-tile="{$dash.tilenum}" attribute to identify which tile the a5-item is being called. "{$dash.tilenum}" is a variable identifying the current Tile dynamically, rather than statically coding the Tile number. This lets you reorder Tiles without having to update the template with the new Tile number. For example:</p>
                        <p>
                            <example code="tpl"><![CDATA[<div a5-item="examineFiltered:{$dash.rowindex}" a5-tile="{$dash.tilenum}">View Yesterday's Forms</div>
<div a5-item="examineFiltered:all" a5-tile="{$dash.tilenum}">View all Forms</div>]]></example>
                        </p>
                        <p>a5-item="examineFull:spec" is similar to examineFiltered, but refers to the list of forms retrieved for the dashboard. It does not require a5-tile because no information about the Tile is needed to determine the Form List.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">Pre-processing Chart Data</title>
                    <description>
                        <p>After the Chart data is sourced, whether via selected fields or calculated by custom TPL, the data may be modified before it is run through the processing selected in the Value Processing Type dropdown.  By setting the Do pre-processing on the data using TPL property to Yes, you can enter TPL code to modify the Chart data.</p>
                        <p>The pre-processing TPL code is given $dash.data containing an array of all collected data rows generated by the Dashboard and Tile Filter and Sort rules.  The code must return an object with the following attributes:</p>
                        <p>
                            <list>
                                <item>
                                    <name>data</name>
                                    <description>(required) an array of the modified data rows (in the same format as the rawdata attribute in Chart data sourcing above)</description>
                                </item>
                                <item>
                                    <name>values</name>
                                    <description>(optional) an array with the x-axis values to override the automatically generated values</description>
                                </item>
                                <item>
                                    <name>gvalues</name>
                                    <description>(optional) an array with the group values to override the automatically generated values</description>
                                </item>
                                <item>
                                    <name>nosortxlabels</name>
                                    <description>(optional) if present and not blank, suppresses any alphabetic sorting of the x-axis values</description>
                                </item>
                            </list>
                        </p>
                        <p>When debugging, the Pre-Processed Data tab when Show Intermediate Data is checked will show the X, Y, Group and Form data generated.</p>
                        <p>Here is an example of TPL to pre-process the data and remove all rows that do not have a value defined (which is different than a value of "" in the raw data):</p>
                        <p>
                            <example code="tpl"><![CDATA[return arrayFilter($dash.data, "x isdefined")]]></example>
                        </p>
                    </description>
                </section>
                <section>
                    <title nested="2">Processing Chart Data</title>
                    <description>
                        <p>After the Chart data is sourced and potentially modified during the pre-processing phase it is processed for charting.  The Value Processing Type property contains a list of preset processing methods, such as Sum of Numeric Y Values.  For custom use cases the Chart data may be generated using TPL by selecting the option "TPL calculates all charting data."</p>
                        <p>The TPL code is given $dash.rawdata which is an array of the pre-processed, source data.  The code must return an object with the following attributes:</p>
                        <p>
                            <list>
                                <item>
                                    <name>data</name>
                                    <description>(required) array of objects with the following attributes:</description>
                                    <list>
                                        <item>
                                            <name>x</name>
                                            <description>(required) the x-axis value for the row.</description>
                                        </item>
                                        <item>
                                            <name>y</name>
                                            <description>(optional) the y-axis value for the row.</description>
                                        </item>
                                        <item>
                                            <name>z</name>
                                            <description>(optional) the group value for the row.</description>
                                        </item>
                                        <item>
                                            <name>attrs</name>
                                            <description>(optional) comma separated list of row indexes for the forms to display if the chart data point is clicked.</description>
                                        </item>
                                    </list>
                                </item>
                                <item>
                                    <name>values</name>
                                    <description>(optional) Like the pre-processing object, returns a list of x-axis labels to use instead of the automatically generated ones.</description>
                                </item>

                            </list>
                        </p>
                        <p>When debugging, the Processed Data tab when Show Intermediate Data is checked will show the X, Y, Group and Attrs (Form) data generated.</p>
                        <p>Here is an example of TPL processing similar to "Count of each different discrete X value", calculating both the Y value and the list of values encountered:</p>
                        <p>
                            <example code="tpl"><![CDATA[r = obj()
raw = $dash.rawdata
totals = obj()
vals = array()
for i=0 to len(raw)-1
    val = raw[i].x
    if totals[val]
        totals[val] += 1
    else
        totals[val] = 1
        arrayPush(vals, val)
    endif
endfor
r.data = array()
for i=0 to len(vals)-1
    r.data[i] = obj()
    r.data[i].x = vals[i]
    r.data[i].y = totals[vals[i]]
endfor
r.values = vals
return r]]></example>
                        </p>
                    </description>
                </section>
                <section>
                    <title nested="2">Post-processing Chart Data</title>
                    <description>
                        <p>After the Chart data processing the data may be further modified prior to rendering the chart. By setting the Do post-processing on the data using TPL property to Yes, you can enter TPL code to modify the Chart data.</p>
                        <p>The post-processing TPL code is given $dash.data and $dash.values containing the Chart source data as generated by the Value Processing rule.  These objects may be modified directly or a new object with data, values, gvalues, and nosortxlabels attributes may be returned.</p>
                        <p>In addition to the standard "x", "y", "g", and "attrs" attributes of $dash.data, the following optional attributes may also be set:</p>
                        <p>
                            <list>
                                <item>
                                    <name>tip</name>
                                    <description>text to show as a tooltip when hovering over the data point.  The \n character may be used to insert a carriage return.</description>
                                </item>
                                <item>
                                    <name>fillcolor</name>
                                    <description>An HTML RGB color (like #FF0000) to use as the fill color for the data point.</description>
                                </item>
                                <item>
                                    <name>linecolor</name>
                                    <description>An HTML RGB color (like #FF0000) to use as the line color for the data point.</description>
                                </item>
                                <item>
                                    <name>linewidth</name>
                                    <description>a number used to set the width of the line used to draw the data point.</description>
                                </item>
                                <item>
                                    <name>size</name>
                                    <description>a number used to set the size of the drawn data point.</description>
                                </item>
                                <item>
                                    <name>shape</name>
                                    <description>
                                        <p>the text name for the shape to use for the point marker on a scatter or line chart.  Possible values are:</p>
                                        <p>
                                            <list bullet="true">
                                                <item>
                                                    <name>dot - a circle</name>
                                                </item>
                                                <item>
                                                    <name>bar-v - a vertical bar</name>
                                                </item>
                                                <item>
                                                    <name>bar-h - a horizontal bar</name>
                                                </item>
                                                <item>
                                                    <name>bar-bltr - a diagonal bar from bottom-left to top-right</name>
                                                </item>
                                                <item>
                                                    <name>bar-tlbr - a diagonal bar from top-left to bottom-right</name>
                                                </item>
                                                <item>
                                                    <name>diamond - a diamond</name>
                                                </item>
                                                <item>
                                                    <name>square - a square</name>
                                                </item>
                                                <item>
                                                    <name>square-round - a square with rounded corners</name>
                                                </item>
                                                <item>
                                                    <name>x - an x-shape (two diagonals)</name>
                                                </item>
                                                <item>
                                                    <name>cross - a + shape (horizontal and vertical)</name>
                                                </item>
                                                <item>
                                                    <name>tri-b - a triangle pointing down</name>
                                                </item>
                                                <item>
                                                    <name>tri-t - a triangle pointing up</name>
                                                </item>
                                                <item>
                                                    <name>tri-r - a triangle pointing to the right</name>
                                                </item>
                                                <item>
                                                    <name>tri-l - a triangle pointing to the left</name>
                                                </item>
                                            </list>
                                        </p>
                                    </description>
                                </item>
                                <item>
                                    <name>label</name>
                                    <description>HTML to use as the data point label, if enabled on the chart.</description>
                                </item>
                                <item>
                                    <name>value</name>
                                    <description>for charts with multiple discrete fields, contains the raw value of the choice list.</description>
                                </item>
                                <item>
                                    <name>vname</name>
                                    <description>for charts with multiple discrete fields, contains the display value of the choice list.</description>
                                </item>
                            </list>
                        </p>
                        <p>When debugging, the Post-Processed Data tab when Show Intermediate Data is checked will show the X, Y, Group and Form, Label, Tip, Value/VName and Line/Fill/Width/Size/Shape data generated.</p>
                        <p>Here is an example of post-processing to add tooltips with the value:</p>
                        <p>
                            <example code="tpl"><![CDATA[d = $dash.data
for i=0 to len(d)-1
    di = d[i]
    di.tip = "The value is:\n" & di.y
endfor]]></example>
                        </p>
                    </description>
                </section>
                <section>
                    <title nested="2">Define Chart X, Y, and Group Data as TPL Expression</title>
                    <description>
                        <p>Coming soon.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">Custom Filter Rule</title>
                    <description>
                        <p>Coming soon.</p>
                    </description>
                </section>
                <section>
                    <title nested="2">TPL Functions</title>
                    <description>
                        <p>You can create your own TPL functions at the Dashboard and Tile level. These functions can be called in your TPL templates and scripts.</p>
                        <p>TransForm Analytics also has several new functions you can call in your dashboard TPL code:</p>
                    </description>
                    <cases>
                        <case>
                            <title nested="3">chartGauge(value,title,color,max)</title>
                            <description>
                                <p>Creates a gauge display that can be embedded anywhere TPL Templating is supported.</p>
                            </description>
                            <figure>
                                <title>A gauge chart</title>
                                <alt>A gauge chart</alt>
                                <link>images/chartGauge.png</link>
                            </figure>
                        </case>
                        <case>
                            <title nested="3">HTMLesc(string)</title>
                            <description>
                                <p>Escapes special characters like "&lt;" and "&amp;" so they render as characters and are not treated as HTML markup when output from a TPL template.</p>
                            </description>
                        </case>
                        <case>
                            <title nested="3">metaDataGet(fieldname)</title>
                            <description>
                                <p>Returns the value of a metadata field, including user* and userlabel* metadata fields.</p>
                            </description>
                        </case>
                        <case>
                            <title nested="3">logConsole(string)</title>
                            <description>
                                <p>Logs output to the browser console window as a debugging aid in debugging Dashboard processing TPL. Calls to logConsole() should be removed from your TPL templates when they are no longer needed.</p>
                            </description>
                        </case>
                    </cases>
                </section>
            </sections>
        </group>
        <group>
            <title>Sharing Dashboards</title>
            <sections>
                <section>
                    <description>
                        <p>Shared Dashboards are dashboards available to all users in a TransForm account. Shared dashboards can only be edited and saved by users who have the Administrator role. Any existing dashboard in the My Dashboards list can be shared using the Make Dashboard Shared option in the List of Dashboards menu. When selected, the current dashboard is copied and added to the Account Shared Dashboards list.</p>
                    </description>
                    <figure>
                        <title>List of Dashboards</title>
                        <alt>List of Dashboards</alt>
                        <link>images/listOfDashboards.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>After creating the shared dashboard, it then needs to be uploaded to the TransForm account using the Save Shared Dashboards Only option from the List of Dashboards menu. Shared dashboards are only updated on the TransForm account when Save Shared Dashboards Only is used. Aside from this extra step required to save a shared dashboard, editing and managing a shared dashboard is the same as editing dashboards listed in My Dashboards.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Exporting Dashboards and Tiles</title>
            <sections>
                <section>
                    <description>
                        <p>Exporting is another way to share a Dashboard or Tiles. The advantage of using export over sharing is that all or part of a Dashboard can be shared with a smaller group of TransForm users while Shared Dashboards are available to every user who has access to Dashboards for the TransForm account. </p>
                        <p>You can export Dashboards and Tiles using the Import/Export Dashboard Definition menu option in the List of Dashboards menu or the Import/Export button in the Tile editor. Dashboard and Tile definitions are exported using a JSON format. This JSON format can be used to copy visualizations between Dashboards for different TransForm accounts.</p>
                        <p>Exported Tile definitions can also be used to customize the Tile templates shown in the Add New Dashboard Tile dialog. Tile templates are created using Import/Export Tile Predefines. Custom Tile templates replace the system templates shown when adding a new Tile.</p>
                        <p>Tile templates are defined using JSON, as show in the sample Tile Predefines definition below:</p>
                        <p>
                            <example code="json"><![CDATA[[
    {
        "id":"template1",
        "title":"Text Box",
        "description":"Shows the number of forms retrieved.",
        "image":"http://abcxyz.s3.amazonaws.com/template1.png",
        "item":{
            "itemtype":"template",
            "width":"S",
            "height":"S",
            "rowtemplate":"{len($dash.rows)} Form Instances Selected",
            "templateaction":"showfilteredlist",
            "filter":{"main":[],"sort":[],"variables":[],"variablevalues":{},"tplfunctions":""}
        }
    }
]
]]></example>
                        </p>
                        <p>
                            <list>
                                <item>
                                    <name>id</name>
                                    <description>The Tile template id. This should be unique among all Tile templates in the Tile Predefines definition.</description>
                                </item>
                                <item>
                                    <name>title</name>
                                    <description>The template title.</description>
                                </item>
                                <item>
                                    <name>description</name>
                                    <description>The template description.</description>
                                </item>
                                <item>
                                    <name>image</name>
                                    <description>An optional URL for an image to show for the Tile Template. The image needs to be hosted on a third-party service that can be accessed by TransForm Central.</description>
                                </item>
                                <item>
                                    <name>item</name>
                                    <description>A JSON object containing the Tile definition. This is where you place the JSON exported from a Tile.</description>
                                </item>
                            </list>
                        </p>
                        <p>To save Tile Predefines, you must use the Save Shared Dashboards Only option to upload the templates to the TransForm account. Because Tile Predefines affect the entire TransForm account, they can only be created and saved by a user with the Administrator role.</p>
                    </description>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <link href="#group_Sharing%20Dashboards">Sharing Dashboards</link>
        <link href="#group_Filtering">Filtering</link>
        <link href="#group_Sort%20Order">Sort Order</link>
        <link href="#group_User%20Inputs">User Inputs</link>
        <link href="#group_Extensibility%20with%20TPL">Extensibility with TPL</link>
        <link href="#group_Exporting%20Dashboards%20and%20Tiles">Exporting Dashboards and Tiles</link>
        <link link="transform%20central%20home#section1_Manage%20User%20Roles">Manage User Roles</link>
        <link link="transform%20designer%20tpltemplating">TPL Templating</link>
        <link link="tpl%20overview">TransForm Programming Language Overview</link>
    </links>
</page>