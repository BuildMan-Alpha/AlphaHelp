<page>
    <shortlink>transform designer commandslist</shortlink>
    <topic>Commands List</topic>
    <description>An explanation of the list of commands that define a form on the left side of the screen.</description>
    <sections>
        <section>
            <description>
            <p>
  Most of the definition of a form type consists of the list of commands that tell apps what to display,
  how to receive input, and how to store the data received in a particular form instance.
  The Commands List, shown in the left side of the app window, shows you those commands
  and lets you edit them, adding, changing, or deleting commands.
 </p>
 <p>
  There are three ways to display the Commands List. 
  When a Form Type is selected in the Form Types List by clicking on 
  its row, the form properties are displayed in the Form Properties Screen,
  and a preview is displayed in the Preview Screen.
  If you double-click on the row, it is both selected and the Commands List for that 
  form type will be displayed in place of the Form Type List.
  Alternatively, once a form type is selected, you can click on the "Edit Form Commands"
  button above the list.
  Finally, if you click on a field or heading displayed in the preview,
  the Commands List will be displayed with the corresponding command selected.
 </p></description>
        </section>
        <section>
            <title>Contents of the Commands List</title>
            <description><p>
  The Commands List consists of numbered rows for each of the commands defining the form.
  The parts of each command are as follows:
 </p></description>
            <cases>
                <case>
                    <title nested="2">Command Name</title>
                    <description><p>
     The first part of each command is bold text indicating the name of the command, such 
     as "heading" or "field".
    </p></description>
                </case>
                <case>
                    <title nested="2">Command Type</title>
                    <description><p>
     For some commands, such as Field and Heading, the next part of the command row
     is the type of that command, displayed in italics.
     For example, "heading" commands would have a type of "group", "section", etc.
    </p></description>
                </case>
                <case>
                    <title nested="2">Group Array Name</title>
                    <description><p>
     For DataGroupStart commands, the next part of the command row
     is the field name of the array making up the group in the form instance data, displayed in italics.
     For example, a DataGroupStart command with an Array Name property of "array1" 
     would display "array1" in italics. (The instance data that would result would include the field
     "array1":[...] in the JSON.)
    </p></description>
                </case>
                <case>
                    <title nested="2">Field /</title>
                    <description><p>
     For Field commands, the next part of the command row
     is the Field property, followed by a "/" character.
     This specifies the item being referred to in the instance data.
     For example, a Field command with a Field property of "field1" 
     would display "field1 /". (The instance data that would result would be field
     "field1":... in the JSON.)
    </p></description>
                </case>
                <case>
                    <title nested="2">"Title", "DataGroup Name", "Heading Text", "HTML Text", "Error Text"</title>
                    <description><p>
     For Field, DataGroupStart, Heading, HTML, and Error commands, the next part of the command row
     is the Title, DataGroup Name, Heading Text, HTML Text, and Error Text properties, respectively,
     displayed enclosed in quotations.
    </p></description>
                </case>
                <case>
                    <title nested="2">"Test Expression"</title>
                    <description><p>
     For IF and ELSEIF commands, the next part of the command row
     is the Test property, displayed enclosed in quotations.
    </p></description>
                </case>
                <case>
                    <title nested="2">(Preview Value)</title>
                    <description><p>
     For Field commands, the next part of the command row
     is the Preview Value property, enclosed in parenthesis.
    </p></description>
                </case>
                <case>
                    <title nested="2">// Comment</title>
                    <description><p>
     For all commands, including rows with no command, the last part of the command row
     is the Comment property, preceded by "//".
     The comment may be used by the form type definition author to document the commands
     and to separate different sections visually in the listing.
    </p></description>
                </case>
            </cases>
        </section>
        <section>
            <title>Using the Commands List</title>
            <description><p>
  The list displayed by the Commands List serve as a simple "program" that 
  specifies what should be displayed on the screen for a form.
  Each row in the list corresponds to one "command" or program statement.
  When a form instance is displayed, each command is executed in the same orders as the rows.
 </p>
 <p>
  Clicking on a row selects that command and displays details about that command in the Command Properties
  Screen in the middle of the app window.
  The properties may be edited to configure the command as needed.
 </p>
 <p>
  Clicking on parts of the form shown in the Preview Screen will also select the corresponding
  row in the list and display the Command Properties for editing.
 </p>
 <p>
  Depending upon the commands, certain rows will be displayed indented to help
  indicate the structure of the "program". For example, commands
  between Data Group Start and Data Group End are indented,
  as well as between IF and ENDIF.
 </p>
 <p>
  Above the Commands List there is a control bar with several buttons.
  These buttons may be used to return to the Form Definitions List
  (e.g., the "&lt; Save Commands" button if changes were made) or to facilitate editing the list (the other buttons).
 </p>
 <p>
  The "&lt; Save Commands" button updates the form definition with any changes made to the commands
  and returns to the Form Definitions List.
  You will still need to use the "Save changes" button above the Forms Definition List
  to actually commit the changes to the server and apply them to form instances in other apps.
 </p>
 <p>
  *[Please note:]* If you reload the browser without saving and uploading, or logout the user, *[the changes will be lost]*.
 </p>
 <p>
  The other buttons are as follows (you can hover the mouse over a button to see its description):
 </p></description>
 <cases>
     <case>
         <title nested="2">Undo / Redo</title>
         <description><p>
     The Undo and Redo buttons may be used to step backwards and forwards through
     the changes made to the commands, similar to many editors.
     The list of remembered changes is reset each time you switch between the Commands List
     and Form Definitions List.
    </p></description>
     </case>
     <case>
         <title nested="2">+ (Add new command)</title>
         <description><p>
     Clicking the "+" button displays a list of different types of commands to insert after the
     currently selected row in the list.
     Click on the desired command type and then customize the command using the Command Properties as needed.
     The command types are explained further in the Command Types Help topic.
     The operation may be undone with the Undo button.
    </p>
    <p>
     One of the choices provided for different types of commands to insert is "Quickstart-style Input".
     This will bring up a large textbox to enter lines of text to specify commands to be inserted.
     See the Quickstart Text topic in this Help.
    </p></description>
     </case>
     <case>
         <title nested="2">Duplicate</title>
         <description><p>
     Clicking the Duplicate button inserts copies of the selected row(s) below the selection.
     Property values that were automatically generated (such as "field4") will be replaced with
     new unique values.
     The operation may be undone with the Undo button.
    </p>
    <p>
     More than one command row may be selected for duplication, but they
     all must be contiguous.
     Use the normal Shift-click, Ctrl-click, or Cmd-click modifiers
     supported by your operating system.
    </p></description>
     </case>
     <case>
         <title nested="2">- (Delete command)</title>
         <description><p>
     Clicking the "-" button deletes the selected command rows.
     The operation may be undone with the Undo button.
    </p>
    <p>
     More than one command row may be selected for deletion.
     Use the normal Shift-click, Ctrl-click, or Cmd-click modifiers
     supported by your operating system.
    </p></description>
     </case>
     <case>
         <title nested="2">Move up / Move down</title>
         <description><p>
     The right-most buttons let you move the selected rows
     up and down in the list.
     The operation may be undone with the Undo button.
    </p>
    <p>
     More than one command row may be selected for moving, but they
     all must be contiguous.
     Use the normal Shift-click, Ctrl-click, or Cmd-click modifiers
     supported by your operating system.
    </p></description>
     </case>
 </cases>
        </section>
    </sections>
</page>