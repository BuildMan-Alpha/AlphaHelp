
<page>
    <shortlink>transform quicklink in inframe</shortlink>
    <topic>TransForm QuickLink in IFRAME</topic>
    <description>
        Embed TransForm forms into your own applications. 
    </description>

    <sections>
        <section>
            <title>Overview</title>
                <description>
                  <p>Alpha TransForm is useful for capturing data through a form-like interface, often on mobile devices. There are times, though, when there is a need to use a custom web interface to create, view, or edit form instances where the TransForm UI is only a part of the interface. For example, an application may display information from a database where the TransForm form instance is only part of the data being used and displayed. When using the application, it may be necessary to display the form instance as a TransForm form, and maybe even allow editing of the data through the TransForm UI, all on the same screen and browser tab as the rest of the application.</p>
                  <p>As functionality to facilitate such use, TransForm QuickLink may be loaded into an &lt;IFRAME&gt; HTML element in another web application. An IFRAME element enables the embedding of another HTML page into the current one. The other application can use the framed QuickLink to view and edit form instances in a coordinated way. This is documentation about that use.</p>
                  <p>This documentation assumes familiarity with Alpha TransForm and the more direct use of QuickLink for accessing form instances through a web link provided to the user that is documented elsewhere, as well as familiarity with web technologies including HTML, JavaScript, and CSS.</p>
                </description>
        </section>

            <section>
            <title>Properties of QuickLink in an IFRAME</title>
                <description>
                    <p>Using QuickLink to view and edit a form instance is similar to using the TransForm Filler once a particular form instance is chosen. Only the Form Details screens and Editors are shown. Unlike the Web Filler, there is no Forms List with QuickLink nor an Add a Blank Form list.</p>
                    <p>Unlike the Mobile Filler but similar to the Web Filler, QuickLink runs in a browser connected to the Internet. Once launched, it supports the viewing, editing, and saving of a single form instance.</p>
                    <p>When running in an IFRAME within another web application’s window, QuickLink gets setup instructions from that parent window as part of the IFRAME’s src attribute’s query string. It also can communicate back to that parent window through JavaScript’s postMessage functionality. This lets the parent window respond to changes in the QuickLink window, such as when the user has made edits to the accessed form instance, or when edits are saved back to the TransForm server.</p>
                    <p>QuickLink, once invoked, requires login with user name, password, and account credentials. QuickLink handles the logging in of the user to an appropriate account on the TransForm server, if needed, through its UI as well as the persistence across subsequent invocations of QuickLink of the login credentials obtained from the server using those credentials. Multiple tabs in a browser may be open at once, all running different QuickLink URLs to edit different form instances for the user/account combination.</p>
                </description>
        </section>

     <section>
            <title>Parameters for IFRAME use</title>
                <description>
                    <p>The URL that is used to invoke QuickLink must include parameters (often called a Query component of the URL) after the domain and path, separated by a “?” character. The structure of the query follows a common Internet syntax. For example, the URL could be:</p>
	                <p>http://transform.alphasoftware.com/QuickLink?m=i&amp;f=lflza6l9_br9pnc11</p>
                    <p>In this case, the “http://transform.alphasoftware.com/QuickLink” is the part that indicates the address on a particular server. We will call that the “QuickLink Web Address”. The part after the “?”, “m=i&amp;f=lflza6l9_br9pnc11”, is the query. Multiple parameters in the query are separated by the “&amp;” character. An initial “&amp;” after the “?”is optional. (The construction of URLs with query strings this way is a normal, well-documented, web-development technology.)</p>
                    <p>The four QuickLink modes are specified by using the parameters in the query. The “m” parameter is used to explicitly specify the mode. Allowed values are: i, im, d, n, and q (representing Instance, Instance with Management Console role, Duplicate, New, and Queue). If the m parameter is missing, “i” is assumed. The other parameters are used to provide the details.</p>
                    <p>In addition to the parameters used by QuickLink when invoked using a link from, for example, an email, there are several additional parameters more applicable to IFRAME use. These additional parameters are used to control the area around the border of the app within its container, to control if and how to communicate with the window containing the IFRAME, and to control how to handle situations when the edited form instance is saved or the window closed.</p>
                    <p>Note: The values for the various parameters (the part after the “=”) should be encoded if they contain certain non-alphanumeric characters, such as using the JavaScript encodeURIComponent() function. For example, the value “calc(100% - 20px)” would be “calc(100%25%20-%2020px)”.</p>
		    <p>The additional parameters are:</p>
			
			<ul>
				<li>&amp;windowmargin=margin attributes - For example: 10px auto 10px auto</li>
				<li>&amp;windowmaxwidth=max width attribute - For example: 1024px or calc(100% - 20px)</li>
				<li>&amp;windowboxshadow=box shadow attribute - For example: rgb(187, 187, 187) 0px 0px 10px</li>
				<li>&amp;askonleave=Y/N (if Y or N, overrrides default) - Controls whether or not QuickLink will put up a warning message when the window is unloaded in certain cases (see JavaScript “window.onbeforeunload”).</li>
				<li>&amp;onsave=stay - Leaves form instance displayed (with Save disabled since not dirty after a successful save). Otherwise, a “close” screen is displayed instead of the form.</li>	
				<li>&amp;closemsg=part of EDITFORM_PANEL message (URI-component encoded) - For example (the default in many cases): You may now close the browser tab.
					May be empty after the “=” to suppress that part of the message on the screen shown after saving.</li>
				<li>&amp;postmessage=Y/N to parent window, default is N - Whether or not to post messages to the parent window. This is described in more detail below.</li>
				<li>&amp;postmessageprefix=text - For example: ATeditForm, default is no prefix</li>
			</ul>
		
		</description>
        </section>

    
      <section>
            <title>Sample code for using an IFRAME with QuickLink</title>
                <description>
                	<p>To use QuickLink in an IFRAME, you need to set the “src” attribute of the IFRAME to an appropriate URL, including parameters in the query string. Those parameters are usually determined dynamically and the src attribute set using JavaScript.</p>
			<p>For example, the IFRAME element could be the following:</p>
 			<p>&lt;iframe id="iframe" src=""style="width:100%;height:500px;border:1px solid #000;"&gt;&lt;/iframe&gt;</p>

 			<p>JavaScript could be used to set the src attribute:</p>
 			<p>function loadsrc() </p>
   			<p>&nbsp;&nbsp;&nbsp;var url = "https://transform.alphasoftware.com/QuickLink?m=im";</p>
   			<p>&nbsp;&nbsp;&nbsp;var instanceid = "abcdefgh_12345678";</p>
   			<p>&nbsp;&nbsp;&nbsp;url += "&amp;f="+instanceid;</p>
   			<p>&nbsp;&nbsp;&nbsp;var iframe = document.getElementById("iframe");</p>
   			<p>&nbsp;&nbsp;&nbsp;iframe.src = url;</p>
			<p></p>


			<p>Invoking the loadsrc() function would run QuickLink in the IFRAME with the form instance “abcdefgh_12345678” loaded.</p>
			<p>To help demonstrate this functionality more fully, a simple sample HTML application will be used in this document.</p>
			<p>When run in a browser, the sample HTML page looks like this:</p>
 
			<p>The top part of the application has three text input controls to set some of the various parts of the QuickLink url. There is a “Load” button to load the IFRAME using a computed url. There are also two checkboxes to set some common parameters in the url and two placeholder for status messages set dynamically during execution. Below that is the IFRAME, shown with content already loaded into it in the screenshot.</p>
			<p>The code for the sample application includes JavaScript to handle clicks on the button as well as for communication between the application and QuickLink in the IFRAME.</p>
			<p>Here is the code:</p>




			
                </description>
        </section>
    
    
    </sections>







</page>
