<page>
    <shortlink>transform quicklink</shortlink>
    <topic>TransForm QuickLink</topic>
    <description>
        Create URLs that point users directly to a specific form. 
    </description>

    <sections>
        <section>
            <title>Overview</title>
                <description>
                    <p>Many types of workflow involve sending a message to an individual to have them click on a link and automatically view a single form, often answering questions such as giving approval, and then submitting that form for further action. The TransForm QuickLink functionality provides this capability.</p>
                    <p>Other parts of TransForm, like the Filler and Management Console, require the user to run them and then locate or create an appropriate form instance and work with it along with a list of other form instances and types of forms. This general purpose operation does not easily fit into those link-driven types of workflows and is cumbersome in those cases.</p>
                    <p>QuickLink also makes it easy to send a link to a user that includes custom data to pre-populate parts of a form before editing. For example, an email created from a template can include template data fields in the URL which are in turn passed to the form.</p>
                    <p>Another example of using QuickLink is an intranet web page that uses simple Javascript to create a URL that any authorized user can click on, log in with their credentials (if they are not already logged in), and have a new form instance created using custom initialization data (such as a work order number). The user can then fill in the rest of the form and then submit it – all in just a few clicks.</p>
                </description>           
         </section>
               
        <section>
            <title>Properties of QuickLink</title>
                <description>
                    <p>Using QuickLink to view and edit a form instance is similar to using the TransForm Filler once a particular form instance is chosen. Only the Form Details screens and Editors are shown. Unlike the Web Filler, there is no Forms List with QuickLink nor an Add a Blank Form list.</p>
                    <p>Unlike the Mobile Filler but similar to the Web Filler, QuickLink runs in a browser connected to the Internet. It is launched by going to a custom URL, usually from an email, text message, QR code, or web page. Once launched, it supports the viewing, editing, and saving of a single form instance. The link includes special information to identify the desired form instance. Optionally, the link can specify initial automatic positioning of the view of the form to a specific field or section.</p>
                    <p>QuickLink, once invoked, requires login with user name, password, and account credentials which persist in the browser during subsequent sessions. Multiple tabs in a browser may be open at once, all running different QuickLink URLs to edit different form instances.</p>
                    <p>Once a form instance has been displayed for viewing and/or edit, the user may quit the tab without saving. Once edits have been made, a “Save” button will be enabled in the upper left above the form. Pressing that button, or pressing a form button that executes a “save” operation, will upload the form instance data and switch to a final screen.</p>
                </description>           
         </section>

        <section>
            <title>Four Modes of Operation Available</title>
                 <description>
                    <p>TransForm QuickLink works in one of four modes of operation specified in the URL: Edit a single explicit existing form instance, Edit a duplicate of an explicit existing form instance, Create and edit a new form instance of a specified form type, and Choose a form instance by viewing one or more TransForm Queues for the account and selecting one of the available form instances in the queue.</p>
                    <p>The URL that is used to invoke QuickLink must include parameters (often called a Query component of the URL) after the domain and path, separated by a “?” character. The structure of the query follows a common Internet syntax. For example, the URL could be:</p>
                    <p>http://transform.alphasoftware.com/QuickLink?m=d&amp;f=lflza6l9_br9pnc11</p>
                    <p>In this case, the "http://transform.alphasoftware.com/QuickLink" is the part that indicates the address on a particular server. We will call that the "QuickLink Web Address". The part after the "?", "m=d&amp;f=lflza6l9_br9pnc11", is the query. Multiple parameters in the query are separated by the "&amp;” character. An initial "&amp;" after the "?" is optional. (The construction of URLs with query strings this way is a normal, well-documented, web-development technology.)</p>
                    <p>The four QuickLink modes are specified by using the parameters in the query. The "m" parameter is used to explicitly specify the mode. Allowed values are: i, d, n, and q (representing Instance, Duplicate, New, and Queue). If the m parameter is missing, “i” is assumed.</p>
                    <p>The other parameters are used to provide the details. The "f" parameter specifies a form instance ID. This is one of the metadata fields for a form instance and uniquely identifies the form instance within the TransForm system. The “a” parameter specifies the Account ID for the account that the user must be logged into. The “q” parameter specifies a specific Queue ID within the account. The “d” parameter specifies the Form Definition ID of a form type for the account. The “v” parameter specifies a URI-encoded string to be passed to the form instance being edited as the TPL $environment.editformvalue System Data value. The “t” parameter specifies a location other than the default top of the form being displayed to initially position to be visible on the screen.</p>
                    <p>The four modes and the other parameters are explained in more detail below.</p>
                </description>           
         </section>

        <section>
            <title>Edit explicit form instance</title>
                 <description>            
                    <p>The Instance Mode is used to bring up an explicit, existing form instance for viewing and for optional editing and updating. The forms of the URL are any of ("QuickLink" should be the QuickLink Web Address, such as transform.alphasoftware.com/quicklink):</p>
                    <p>QuickLink?m=i&amp;f=formInstanceID</p>
                    <p>QuickLink?f=formInstanceID</p>
                    <p>QuickLink?formInstanceID</p>
                    <p>In the last case, a parameter with no value that looks like a formInstanceID is treated the same as an "f" parameter.</p>
                </description>           
         </section>

        <section>
            <title>Edit duplicate of an explicit form instance</title>
                 <description>            
                    <p>The Duplicate mode downloads an explicit, existing form instance, makes a copy, and then brings that copy up for editing as a new form instance with a new Form Instance ID. (The logged in user must have permission to access the original form instance for edit.)</p>
                    <p>QuickLink?m=d&amp;f=formInstanceID</p>
                    <p>This is useful, for example, to be able to always start from a particular partially filled-out form by just clicking a link.</p>
                </description>           
         </section>

        <section>
            <title>Edit form chosen from a queue</title>
                 <description>            
                    <p>The Queue mode brings up the Claim Forms screen that is used to display the account’s queues and claim a form there to assign to the user and start editing.</p>
                    <p>QuickLink?m=q&amp;a=accountID&amp;q=optionalQueueName</p>
                    <p>If the optional "q=optionalQueueName" parameter is present, that queue will be shown directly. If not present, then the list of queues for that user will be displayed, like with the Claim Forms menu item in the Filler.</p>
                    <p>When a form instance in a queue is selected, and then the button is pressed to submit a claim for that form, and the claim is accepted, then the form will be removed from the queue, be assigned to the logged in user, and then brought up for edit.</p>
                </description>           
         </section>        
        
        <section>
            <title>Create and edit new form instance</title>
                 <description>            
                    <p>The New Instance mode creates a new, blank form instance for the specified form type. This is similar to tapping the "+ Add Blank Form" button in the Filler, and then selecting that form type.</p>
                    <p>QuickLink?m=n&amp;a=accountID&amp;d=formDefinitionID</p>
                </description>           
         </section>        

        <section>
            <title>The "t" parameter</title>
                 <description>            
                    <p>For all of the modes, when a form instance is brought up for edit, the initial position may be specified with the "t" parameter. This is similar to having tapped a Go To command’s button on the form to bring a particular part of the form into view. It may be used, for example, to position the screen at a signature field for sign off, or to a place in a data group to add a new observation.</p>
                    <p>There are two types of values:</p>
                    <p>&amp;t=targetname</p>
                    <p>&amp;t=qID</p>
                    <p>The "targetname" is the same target name that would be used by a Go To command in a form type definition. The first Define Target command encountered in the form with that name will be used.</p>
                    <p>The "qID" is a special value that uniquely defines a particular command in a rendered form. This can be top level or even a specific field within a specific data group item. It has a command-line part and an optional path part.</p>
                    <p>The command-line part consists of a number that corresponds to the 0-origined position of the command in the Form Commands shown in the Designer. (For example, the first would be 0, the second would be 1.) The Designer displays line numbers that are 1-origined, so that number minus one would be used. This is then followed by a "_" character to finish the command-line part. For example, the third command line would be "2_".</p>
                    <p>The optional path part consists of the path of Data Group array name and 0-origined index combinations to get to that particular command. (The same command may be used repeatedly to define the display of fields for each item in a Data Group’s array of field values.) For example, a Data Group with an array name of "photos", and a "phototype" value within the Data Group, could have a qID of "15_photos,2," to specify the third item in the Data Group. Data Groups within Data Groups would have additional elements in the path, e.g., "16_photos,2,people,0,".</p>
                </description>           
         </section>        
        
         <section>
             <title>The "v" parameter</title>
                 <description>
                    <p>The "v" parameter specifies a URI-encoded string to be passed to the form instance being edited as the TPL $environment.editformvalue System Data value. For example, it could be used to pass a single value or a comma-separated list of multiple values.</p>
                    <p>This parameter (URI-encoding of "A &amp; B Market"):</p>
                    <p>&amp;v= A%20%26%20B%20Market</p>
                    <p>Could be used by this TPL code:</p>
                    <example>
                        <![CDATA[ON *LOAD
                       	   IF $environment.editform
                              #storename = $environment.editformvalue
                          ENDIF
                       	ENDON]]>
                    </example>
                     
                     <example><![CDATA[dim b[1] as C
*array_append(b, "b1")
*array_append(b, "b2")

? b
= [1] = "b1"
[2] = "b2"

dim c[1] as N
*array_append(c, 123)
*array_append(c, 456)
? c
= [1] = 123
[2] = 456]]></example>
                     
                     
                     
                    <p>The field "storename" would show "A &amp; B Market."</p>
                </description>           
         </section>        

      
        
     </sections>
</page>
