{
  "$id": "https://documentation.alphasoftware.com/schemas/database_service.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Alpha Anywhere Database Service Definition.",
  "definitions": {},
  "required": [
    "connection",
    "tables"
  ],
  "properties": {
    "connection": {
      "$id": "#/properties/connection",
      "type": "string",
      "title": "Connection string for the tables.",
      "default": "",
      "examples": [
        "::Name::AADemo-Northwind"
      ],
      "pattern": "^(.*)$"
    },
    "tables": {
      "$id": "#/properties/tables",
      "type": "array",
      "title": "The Tables Schema",
      "items": {
        "$id": "#/properties/tables/items",
        "type": "object",
        "title": "Tables exposed over the API",
        "required": [
          "name",
          "actualname",
          "query",
          "insert",
          "update",
          "delete",
          "first",
          "cursor",
          "skip",
          "totalCount",
          "orderBy",
          "fields",
          "children"
        ],
        "properties": {
          "name": {
            "$id": "#/properties/tables/items/properties/name",
            "type": "string",
            "title": "Logical name for the table",
            "default": "",
            "examples": [
              "Categories"
            ],
            "pattern": "^(.*)$"
          },
          "actualname": {
            "$id": "#/properties/tables/items/properties/actualname",
            "type": "string",
            "title": "The actual table name (physical table on the server)",
            "default": "",
            "examples": [
              "Categories"
            ],
            "pattern": "^(.*)$"
          },
          "query": {
            "$id": "#/properties/tables/items/properties/query",
            "type": "boolean",
            "title": "Support 'query' for the table",
            "default": false,
            "examples": [
              true
            ]
          },
          "insert": {
            "$id": "#/properties/tables/items/properties/insert",
            "type": "boolean",
            "title": "Support 'insert' mutation for the table",
            "default": false,
            "examples": [
              true
            ]
          },
          "update": {
            "$id": "#/properties/tables/items/properties/update",
            "type": "boolean",
            "title": "Support 'update' mutation for the table",
            "default": false,
            "examples": [
              true
            ]
          },
          "delete": {
            "$id": "#/properties/tables/items/properties/delete",
            "type": "boolean",
            "title": "Support 'delete' mutation for the table",
            "default": false,
            "examples": [
              true
            ]
          },
          "first": {
            "$id": "#/properties/tables/items/properties/first",
            "type": "boolean",
            "title": "support limit on query (exposed as an argument called first)",
            "default": false,
            "examples": [
              true
            ]
          },
          "cursor": {
            "$id": "#/properties/tables/items/properties/cursor",
            "type": "boolean",
            "title": "support cursor on query (exposed as an argument called cursor / requires a column with a logical name of cursor)",
            "default": false,
            "examples": [
              true
            ]
          },
          "skip": {
            "$id": "#/properties/tables/items/properties/skip",
            "type": "boolean",
            "title": "support skip on query (for pagination when used with first property)",
            "default": false,
            "examples": [
              true
            ]
          },
          "totalCount": {
            "$id": "#/properties/tables/items/properties/totalCount",
            "type": "boolean",
            "title": "Support returninf the total number of records.",
            "default": false,
            "examples": [
              true
            ]
          },
          "orderBy": {
            "$id": "#/properties/tables/items/properties/orderBy",
            "type": "boolean",
            "title": "Support an orderBy argument to change the order of records returned.",
            "default": false,
            "examples": [
              true
            ]
          },
          "fields": {
            "$id": "#/properties/tables/items/properties/fields",
            "type": "array",
            "title": "The Fields Schema",
            "items": {
              "$id": "#/properties/tables/items/properties/fields/items",
              "type": "object",
              "title": "The Items Schema",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "name": {
                  "$id": "#/properties/tables/items/properties/fields/items/properties/name",
                  "type": "string",
                  "title": "the name of the field.",
                  "default": "",
                  "examples": [
                    "CategoryID"
                  ],
                  "pattern": "^(.*)$"
                },
                "type": {
                  "$id": "#/properties/tables/items/properties/fields/items/properties/type",
                  "type": "string",
                  "title": "the data type of the field.",
                  "default": "",
                  "examples": [
                    "String"
                  ],
                  "pattern": "^(.*)$"
                },
                "expr": {
                  "$id": "#/properties/tables/items/properties/fields/items/properties/expr",
                  "type": "string",
                  "title": "expression for columns that do not match the name (or can be a complex expression with many SQL table fields)",
                  "default": "",
                  "examples": [
                    "firstname+' '+lastname"
                  ],
                  "pattern": "^(.*)$"
                }
              }
            }
          },
          "children": {
            "$id": "#/properties/tables/items/properties/children",
            "type": "array",
            "title": "The Children Schema",
            "items": {
              "$id": "#/properties/tables/items/properties/children/items",
              "type": "object",
              "title": "children linked to this table.",
              "required": [
                "name",
                "parent",
                "child"
              ],
              "properties": {
                "name": {
                  "$id": "#/properties/tables/items/properties/children/items/properties/name",
                  "type": "string",
                  "title": "logical name for child (match name or plural for a table)",
                  "default": "",
                  "examples": [
                    "Products"
                  ],
                  "pattern": "^(.*)$"
                },
                "parent": {
                  "$id": "#/properties/tables/items/properties/children/items/properties/parent",
                  "type": "string",
                  "title": "The parent tables column to match",
                  "default": "",
                  "examples": [
                    "CategoryID"
                  ],
                  "pattern": "^(.*)$"
                },
                "child": {
                  "$id": "#/properties/tables/items/properties/children/items/properties/child",
                  "type": "string",
                  "title": "The child tables column to match",
                  "default": "",
                  "examples": [
                    "CategoryID"
                  ],
                  "pattern": "^(.*)$"
                }
              }
            }
          }
        }
      }
    },
    "mutations": {
      "$id": "#/properties/mutations",
      "type": "array",
      "title": "Customs Mutations - array of class names",
      "items": {
        "$id": "#/properties/mutations/items",
        "type": "string",
        "title": "Custom mutation handlers.",
        "default": "",
        "examples": [
          "mynamespace::mutations",
          "nodeservices::myapi"
        ],
        "pattern": "^(.*)$"
      }
    }
  }
}