<page>
    <sections>
        <section>
            <title>Example: Loading an Audio File into the AudioPlayer Control</title>
            <description>
                <p>You can dynamically load an audio file into the AudioPlayer control in the UX Component using the *[js:load()]* method on the *[js:_play]* object of the AudioPlayer control's JavaScript object. For example:</p>
            </description>
            <example code="js"><![CDATA[// Get the object for the AudioPlayer Control:
var audioObj = {dialog.object}.getControl('AUDIOPLAYER');
            
var audioFile = "http://alphamediacapture.s3.amazonaws.com/myrecording.m4a";

if (audioObj) {
    // the audio player class object is stored in the _play
    // property of the AudioPlayer Control's JavaScript object:
    audioObj._play.load(audioFile);
}]]></example>
        </section>
        <section>
            <description>
                <p>Using *[js:load()]* to set the audio file, however, is not necessary. Because the AudioPlayer control is a Data Control in the UX Component, you can use *[js:{dialog.object}.setValue()]* to load an audio file instead of the *[js:load()]* method. EG:</p>
            </description>
            <example code="js"><![CDATA[var audioFile = "http://alphamediacapture.s3.amazonaws.com/myrecording.m4a";
{dialog.object}.setValue('AUDIOPLAYER',audioFile);]]></example>
        </section>
    </sections>
    <see>
        <ref link="ux controls data controls more audioplayer">AudioPlayer Control</ref>
        <ref link="ux controls data controls more audio recorder and player control">AudioRecorderAndPlayer Control</ref>
    </see>
</page>