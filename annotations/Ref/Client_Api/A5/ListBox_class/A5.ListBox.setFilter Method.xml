<page>
    <sections>
        <section>
            <title>Example: Performing a Client-side Search in a List Control</title>
            <description>
                <p>The following example shows several ways to set the filter. The filter can be set using regular expressions (*[js:RegExp]*) or a JavaScript function. The filter definition can use either a RegExp or function for each field specified in the JSON object defining the filter.</p>
            </description>
            <tip>If you want to search all columns in a List Control on a UX Component, use the [.filterListClientSide() method].</tip>
            <example code="js"><![CDATA[var listObj = {dialog.object}.getControl('list1');
//search for specific record
listObj.setFilter(
    {
        Firstname: RegExp('John','i'), 
        Lastname: RegExp('Smith','i'), 
        City: RegExp('Boston','i'), 
        State: RegExp('MA','i')
    }
);

//search for Firstname is 'John' or 'Fred' or 'Henry'
listObj.setFilter(
    {
        Firstname: RegExp('John|Fred|Henry','i') 
    }
);

//search using a single function. data for the entire current row is passed into the function
listObj.setFilter(function(data){
     // data is the row data
    if (data.Color == 'red' || data.Color == 'green') { return true; } // yes, show this row
    else { return false; } // no, hide this row
});

//using Regular Expressions on some fields and functions on other.
//filter on the Name starts with an "E" and the Age is between 18 and 65 - note the value of "Age" gets passed into the function.
listObj.setFilter(
    {
        Name: RegExp('^E','i'), 
        Age: function(val){
            if (val  65) { return false; }
            else { return true; }
        }
    }
);

//clear the filter
listObj.setFilter(false);]]></example>
        </section>
    </sections>
    <links>
        <link link="list object filterlistclientside method">.filterListClientSide() method</link>
    </links>
</page>