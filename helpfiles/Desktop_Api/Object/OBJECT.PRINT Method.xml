<page>
   <topic>OBJECT.PRINT Function</topic>
   <syntax>Output_Filename as C = :Object_Type.Print(c layoutname [,c filter [,c order [,* arguments [,* options ]]]])</syntax>
   <arguments>
   <argument>
         <name>Object_Type</name>
         <description>This word can be any of the following:</description>
<list>
<item>
<name>"Browse"</name>
</item>

<item>
<name>"Form"</name>
</item>

<item>
<name>"Label"</name>
</item>

<item>
<name>"Letter"</name>
</item>

<item>
<name>"Report"</name>
</item>

</list>         
         
     </argument>
     <argument>
         <name>layoutname</name>
         <description>The name of a form, browse, label, letter, or report layout.
</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Optional. Default = all records. An expression that selects records.
</description>
     </argument>
     <argument>
         <name>order</name>
         <description>Optional. Default = record order number. An expression that order the selected records.
</description>
     </argument>
     <argument>
         <name>arguments</name>
         <description>Optional. Default = NULL_VALUE(). Arguments that retrieve value(s) from variable(s) or prompts for value(s) at runtime. Only applicable to SQL Reports. Refer to SQL::Arguments Object</description>
     </argument>
     <argument>
         <name>options</name>
         <description>Optional. Default = NULL_VALUE(). Sets filter (WHERE) and order (ORDER BY) expressions for a query against a passive-linked table. A pointer dot variable with 2 elements. Refer to Using the Options Argument.</description>
<list>
<item>
<name>.filter = Adds to the WHERE clause in the underlying SQL expression.</name>
</item>
<item>
<name>.order = Replaces the ORDER BY clause in the underlying SQL expression.</name>
</item>

</list>
     
     
     
     </argument>
   </arguments>
   <description>method</description>
   <discussion><![CDATA[
The <OBJECT>.PRINT() method displays the Print dialog, which allows you to select the printer to use to output the selected layout.
Limitations: Desktop applications only.]]>
   </discussion>
   
   <sections>
       <section><title>Example</title>
           
            <example><![CDATA[
form.print("Customer Information", "lastname < 'b'", "lastname")
]]></example>
       </section>
       <section>
            <description>This script prints the Invoice report with an argument. You can add as many arguments to the arguments collection as you want.</description>
            <example><![CDATA[
:Report.archive("Invoice")
DIM myargs as SQL::arguments 
 myargs.add("whatcity","London") 
 report.print("report1", "", "", .f., .f., myargs)
]]></example>
       </section>
       
   </sections>
   <see>
      <ref href="/Desktop_Api/Form/Form Functions and Methods.html">Form Functions and  Methods</ref>
      <ref href="/Desktop/Reference/Design/View/Browse/Browse Functions and Methods.html">Browse  Functions and Methods</ref>
   </see>
  <terms>object,arguments,collection,expressions,filter,function,pointer,query,record,script,sql,variable</terms>
</page>