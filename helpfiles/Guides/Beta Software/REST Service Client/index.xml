<page>
<topic>Using REST Services from Alpha Anywhere</topic>
<description>Overview of REST Client Api Support in Alpha Anywhere.</description>
<sections>
	<section>
		<!--list:.-->
		</section>
<section>
<title>REST Client Genie</title>
<discussion>
<p>UX Components can make calls to third-party REST service providers, like Google, Twitter or Dropbox, or the server, on behalf of the client.</p>
<p>The REST Genie is available in all the Client JavaScript Action Scripting events on a UX.</p>
<p>The REST Genie defines how you will bind parameters to a REST call to controls and variables on a UX Component.</p>
<p>There are predefined 'REST' service definitions, along with Predefined 'Provider' definitions, but it is possible for users to add their own service definitions.</p>
<p>If the REST service you are using requires credentials, which most will, you will need to set up a 'Named Resource' for the Provider that the REST Genie expects.</p>
<p>It is important to note that the code that the REST genie generates does not embed any credentials, Credentials are always looked up using the 'Named Resource', which makes it possible to easily Deploy an application to a Web Site with different Credentials (A common pattern, since a development machine will often run with
Test Credentials).</p> 
</discussion>
</section>
<section>
<title>Named Resource</title>
<discussion>
<p>The Named Resource, which is stored in the 'Project Settings' and can be overridden in the 'Publish Profile' defines credentials for a specific Provider.</p>
<p>The Named Resource can use pre-defined System Providers (like Google and Twitter), or can use Providers defined by the developer using a Provider Definition.</p>  
</discussion>
</section>
<section>
<title>Provider</title>
<discussion>
<p>A 'Provider' definition describes how a provider is implemented.</p>  
<p>For example, it will describe if the provider is oAuth 1.0, oAuth 2.0 or uses API Keys or basic authentication.</p>
<p>OAuth provider definitions will include the endpoints used to login, get an access token, etc.</p>
<p>API Provider Definitions will include the fields expected, for example - a messaging provider may include an account id, a secret, and a phone number, I which case the API Provider would define the definition as requiring these three fields.</p>
<p>There are built in providers, but users may create their own providers as JSON files in a folder under the Web Project called 'oAuthProviders' for the oAuth 1.0 and 2.0 definitions, and a folder called 'ApiCredentials' for API definitions.</p>  
</discussion>
</section>
<section>
<title>REST API Definition</title>
<discussion>
<p>A REST API Definition defines the endpoints for actions, the data returned and consumed by the rest service, and how the endpoints bind to the Providers.</p>
<p>As with the Providers, there are built in 'REST API' Definitions, but users can add their own in the new 'REST References' Panel of the Web Control Panel.</p>  
</discussion>
</section>
<section>
<figure><link>images/parts.svg</link><title>How REST Client Components Are Related</title></figure>
</section>
</sections>
</page>
