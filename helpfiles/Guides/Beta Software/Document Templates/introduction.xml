<page build="0">
    <shortlink>document template guide</shortlink>
    <topic parent="Document Template" parentType="guide" elementName="Introduction to Document Templates">Introduction to Document Templates</topic>
    <sections>
        <section>
            <description>
                <p>Document Templates are similar to client side templates, but are designed to generate documents, specifically PDF and DOCX files.</p>
            </description>
        </section>
        <section>
            <title>Sample Data</title>
            <example code="json"><![CDATA[
{
    "static": [
        {
            "firstname": "John",
            "lastname": "Public"
        },
        {
            "firstname": "Fred",
            "lastname": "Flintstone"
        }
    ]
}]]></example>
            <description>
                <p>Lets start with a simple example of creating a PDF that renders a table of people.</p>
            </description>
        </section>
        <section>
            <title>JSON Template</title>
            <example code="json"><![CDATA[
{
    "table": {
        "columns": [
            "2in",
            "2in"
        ],
        "area": {
            "border": {
                "style": "Single"
            }
        },
        "body": {
            "source": "*root",
            "sections": [
                {
                    "source": "*header",
                    "rows": [
                        {
                            "textformat": {
                                "bold": true
                            },
                            "area": {
                                "bottom": {
                                    "style": "Double"
                                }
                            },
                            "cells": [
                                {
                                    "text": "First Name"
                                },
                                {
                                    "text": "Last Name"
                                }
                            ]
                        }
                    ]
                },
                {
                    "rows": [
                        {
                            "cells": [
                                {
                                    "field": "firstname"
                                },
                                {
                                    "field": "lastname"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }
}]]></example>
            <description>
                <p>To generate a PDF/DOCX template, you need to supply a JSON definition.</p>
                <p>Below is a template that generates a document that contains a simple table.</p>
            </description>
        </section>
        <section>
            <figure>
                <title>Sample PDF</title>
                <link>images/sample1.PNG</link>
            </figure>
            <description>
                <p>The Data applied against the simple Document Template creates a table of people.</p>
            </description>
        </section>
        <section>
            <title>Understanding The Template</title>
            <description>
                <p>At the top of the template, the content is tabular, so we use the "table" container.</p>
                <p>The first element inside "table" we see is "columns", which is an array of either columns widths, or an array of objects with a "width" property, we use the array of widths here since we are not using any other column properties in this example.</p>
                <p>You will note that the columns are both 2in, scalar values are expressed in CSS compatible units.</p>
                <p>This template has a "area" defined at the table level, with "border" set "style" or "Single" - this is a border for the entire table.</p>
                <p>The "body" tag is the table 'object' (or objects), this can contain other table objects in "sections" which can be nested.</p>
                <p>The "source" property in table object indicates what rows are to be iterated over, the source of "*root"  indicates this object iterators over the top level array</p>
                <p>The "sections" array lists all the nested table objects. We need two sections because we have a heading row and a data row.</p>
                <p>The first table object in sections has a source or "*header",  which indicates we only want this row showing up once for the parent "*root".</p>
                <p>The first table object "rows" first and only row contains a "textformat" property, this overrides the font and text settings for the row, here we are setting the font to "bold".</p>
                <p>The first row contains a "area" property which contains a "bottom" property, which is an override for the bottom border, which gives us our thick line under the title.</p>
                <p>The first row contains two "cells" , which define "text" elements for the column headings</p>
                <p>The second table object in sections has no source, so it inherits the '*root',  which means we will get one record for every row at the top level of the data.</p>
                <p>The second row contains two "cells" , which define "field" to read from the data.</p>
            </description>
        </section>
    </sections>
</page>