<page build="7743">
    <shortlink>uxlogin targetpanel</shortlink>
    <topic>Target Panel</topic>
    <description>The Panel to navigate to when the user logs in successfully.</description>
    <discussion>
        <p>If the *[ui:After login behavior]* property is set to "FocusPanelCard", the *[ui:Target Panel]* property is shown. This property defines the Panel in the UX component to navigate to after the user logs in to the application. In the [Login UX], this property is set to *[PANELCARD_APPLICATION]*.</p>
        <p>The "FocusPanelCard" option is often used in mobile apps that need to work offline. The alternative, "RedirectToTargetPage", makes a call to the Application Server to load the specified target page. If your device is offline, the page cannot be loaded.</p>
        <p>To use the "FocusPanelCard" method, place your main application inside the specified *[ui:Target Panel]* on the UX. When the user logs in, the panel containing the app is shown. The main application can be included as an [embedded component] or by directly adding the controls for your app to the panel.</p>
    </discussion>
    <sections>
        <title>Choosing the Target Panel at Runtime</title>
        <section>
            <description>
                <p>You can override the default Target Panel at runtime using the AfterLogin client-side event. This is done using the [{dialog.object}.panelSetActive()] method to navigate to the desired Panel. For example, the code below checks to see if the Address control is blank. If the control is blank, the user is shown PANELCARD_DATACAPTURE where the user is then asked to enter their Address.</p>
                <p>
                    <example code="js"><![CDATA[var address = {dialog.object}.getValue("ADDRESS");

if (address == "") {
    {dialog.object}.panelSetActive('PANELCARD_DATACAPTURE');
}]]></example>
                </p>
                <p>The code above only calls the *[js:panelSetActive()]* method when there is no address. In the event that the address is not blank, the application navigates to the default Panel set in the *[ui:Target Panel]* property.</p>
            </description>
        </section>
    </sections>
    <links>
        <link link="login%20uxcomp">Login UX</link>
        <link link="ux%20other%20controls%20embedded%20object">embedded component</link>
        <link link="ux%20component%20panelsetactive%20method">{dialog.object}.panelSetActive()</link>
    </links>
    <see>
        <ref link="login%20uxcomp">Login UX</ref>
        <ref link="uxembedded%20inpanelcard%20properties">Embedded Object In Panel Card Properties</ref>
    </see>
</page>