<page>
    <shortlink>UX Properties Login</shortlink>
    <topic>Login</topic>
    <description>The UX Component can include integrated login/logout functionality. This means you don't have to use a separate Login Component, or (AppLauncher with login turned on) to authenticate users in your application.</description>
    <!--list:.-->
    <sections>
        <section>
            <title>Videos</title>
        </section>
        <section>
            <videos>
                <title>Using a UX Component to Create a Login Component for a Mobile Application</title>
                <description>
                    <p>A common requirement for any application, Mobile included, is to authenticate users before they can interact with the application. There are several ways in which authentication can be performed in Alpha Anywhere. These include using the standard Login component, or using the AppLauncher. In addition to the above two techniques, you can also build a UX component for performing the authentication.</p>
                    <p>The advantage of building the Login screens using a UX component is that you can make a much richer UI for the login and it can include standard mobile elements like Panel Headers, etc.</p>
                    <p>In this video we show how an authentication layer has been added to a mobile application.</p>
                </description>
                <date>August 2013</date>
                <video>
                    <name>Watch Video - Part 1</name>
                    <link>https://www.ajaxvideotutorials.com/V12Videos/ux_mobile_login_part1.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 2</name>
                    <link>https://www.ajaxvideotutorials.com/V12Videos/ux_mobile_login_part2.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 3</name>
                    <link>https://www.ajaxvideotutorials.com/V12Videos/ux_mobile_login_part3.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 4</name>
                    <link>https://www.ajaxvideotutorials.com/V12Videos/ux_mobile_login_part4.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 5</name>
                    <link>https://www.ajaxvideotutorials.com/V12Videos/ux_mobile_login_part5.swf</link>
                </video>
                <resources>
                    <resource>
                        <link>https://www.ajaxvideotutorials.com/V12Videos/uxMobileSecurity.zip</link>
                    </resource>
                </resources>
            </videos>
            <note>
                <p>To use the project, create a new, empty Web Project, then click the 'Open Project Folder in Windows Explorer' button and paste these files into the folder. The passwords for the sample accounts are:</p>
                <p>
                    <list bullet="true">
                        <item>
                            <name>a@a.com - aalpha</name>
                        </item>
                        <item>
                            <name>s@a.com - salpha</name>
                        </item>
                        <item>
                            <name>m@a.com - malpha</name>
                        </item>
                    </list>
                </p>
            </note>
        </section>
        <section>
            <videos>
                <title>Mobile Applications with Persistent Logins</title>
                <description>
                    <p>A common pattern in mobile applications is to not require the user to login to the application after they have successfully logged in for the first time.  The login should be persistent until is is explicitly revoked by the action of an Administrator, or until the end of the persistent login period is reached.</p>
                    <p>Unlike a traditional Web application built using the Alpha Security Framework, the user will not have to log in again once their session expires, or when they restart the application.</p>
                    <p>In this video we show how this pattern is achieved.</p>
                </description>
                <date>2017-04-29</date>
                <video>
                    <name>Watch Video - Part 1</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/ux_persistent_login_1.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 2</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/ux_persistent_login_2.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 3</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/ux_persistent_login_3.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 4</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/ux_persistent_login_4.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 5</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/ux_persistent_login_5.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 6</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/ux_persistent_login_6.swf</link>
                </video>
                <resources>
                    <resource>
                        <link>http://www.ajaxvideotutorials.com/V12Videos/sampleMobleAppWithPersistentLogin.zip</link>
                    </resource>
                </resources>
            </videos>
        </section>
        <section>
            <videos>
                <title>Using a UX Component as your Login Dialog</title>
                <description>
                    <p>When you enable the Security Framework for your project you will need a login dialog where users will log into your application. A UX component can be used as the Login component and can be configured to allow password reset and new account creation.</p>
                    <p>In this video we show how to use a UX component as your Login dialog.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch video - Configuring a UX as a Login Component</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_uxlogincomponent.mp4</link>
                </video>
                <video>
                    <name>Watch video - Using a UX as a Login Component</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_uxlogincomponentinaction.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Reset Password</title>
                <description>
                    <p>A common requirement in any Security Framework is the ability for the user to reset their password if they have forgotten it. The typical pattern for this is to send an email to the user. The email has a link that the user can click to bring up a dialog where they can change their password.</p>
                    <p>In this video we show how this is done.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_forgotpassword.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Create new account</title>
                <description>
                    <p>A common requirement in any Security Framework is the ability for a user to create a new account. In addition, if the Web Project has defined an Extended User-information table, then at the same time that the user creates their new account, they can choose to enable two-factor authentication.</p>
                    <p>In this video we show how the user can create a new account and capture additional details about the user to store with their account.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_createaccount.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>After Login Behavior</title>
                <description>
                    <p>After the user has logged into your application using a UX component, configured as a Login dialog, the "after login behavior" can either redirect the user to another page in your application, or to another Panel in the UX component.</p>
                    <p>In this video we show how the "after login behavior" is configured.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://alphamediacapture.s3.amazonaws.com/videos/security_afterlogin.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Persistent Login</title>
                <description>
                    <p>A common requirement when building an application with the Security Framework is to enable 'persistent login'. With 'persistent login' a user will not need to log into the app again after they have successfully logged in once.</p>
                    <p>In this video we show how 'persistent login' is enabled.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://alphamediacapture.s3.amazonaws.com/videos/security_persistentLogin.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Password reset when userid is a value (not an email address)</title>
                <description>
                    <p>The password reset feature can be used when the userid in the security framework is a value (rather than an email address).</p>
                    <p>This video shows how this is done and how the extended user-information table must be configured.</p>
                </description>
                <date>2021-07-08</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/passwordreset_useridisvalue.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Using the password reset feature in a Cordova mobile application</title>
                <description>
                    <p>The password reset feature can be used in Cordova applications running on mobile devices. The behavior of the component is slightly different than when running in a browser.</p>
                    <p>In this video, we show how password reset works in a Cordova application.</p>
                </description>
                <date>2021-07-08</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/resetpassword_cordova.mp4</link>
                </video>
            </videos>
        </section>
    </sections>
    <see>
        <ref link="login%20uxcomp">Login UX</ref>
    </see>
</page>