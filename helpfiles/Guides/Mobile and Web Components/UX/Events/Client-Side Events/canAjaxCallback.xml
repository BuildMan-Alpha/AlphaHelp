<page>
    <shortlink>uxevent canAjaxCallback</shortlink>
    <topic>canAjaxCallback</topic>
    <description>Fires before an Ajax callback. If the function returns false, the callback will be aborted.</description>
    <arguments>
        <argument>
            <name>e</name>
            <types>
                <type>object</type>
            </types>
            <description>An object with the following properties:</description>
            <properties>
                <property>
                    <name>xbasicFunctionName</name>
                    <types>
                        <type>string</type>
                    </types>
                    <description>The Xbasic function that was called in the Ajax Callback.</description>
                </property>
                <property>
                    <name>ajaxEvent</name>
                    <types>
                        <type>string</type>
                    </types>
                    <description>The name of the event that triggered the Ajax Callback.</description>
                </property>
                <property build="4616">
                    <name>callbackId</name>
                    <types>
                        <type>string</type>
                    </types>
                    <description>A GUID that identifies the callback, allowing you to match it in the [afterAjaxCallbackComplete] event for a specific callback.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <discussion>
        <p>The *[ui:canAjaxCallback]* client-side event is called when a request is made to the server. The event can be used to stop an Ajax Callback or capture and store information about the callback (such as the callback ID or Xbasic function name) for use in other events (onAjaxCallbackFailed, afterAjaxCallbackComplete, etc).</p>
        <p>The simple example below prevents the callback to execute an Xbasic function called "doCallback" if a List control called 'LIST1' has unsaved edits.</p>
    </discussion>
    <example code="js"><![CDATA[if (e.xbasicFunctionName == "doCallback") {
    var lobj = {dialog.object}.getControl('LIST1');
    if (lobj && lobj.hasPendingEdits()) {
        var title = 'Unsaved Changes';
        var message = '<div>Please save or cancel your changes first.</div>';
        A5.msgBox.show(title,message,'o');
        return false;
    }
}
return true;]]></example>
    <links>
        <link link="uxevent afterajaxcallbackcomplete">afterAjaxCallbackComplete</link>
    </links>
    <see>
        <ref link="ux ssevents canAjaxCallback">canAjaxCallback (server-side)</ref>
        <ref link="uxevent afterajaxcallbackcomplete">afterAjaxCallbackComplete</ref>
        <ref link="uxevent onajaxcallbackfailed">onAjaxCallbackFailed</ref>
        <ref link="uxevent onajaxcallbacknotavailable">onAjaxCallbackNotAvailable</ref>
        <ref link="uxevent onajaxcallbacknotallowed">onAjaxCallbackNotAllowed</ref>
        <ref link="uxevent afterclientsidedatacacheajaxcallback">afterClientSideDataCacheAjaxCallback</ref>
    </see>
</page>