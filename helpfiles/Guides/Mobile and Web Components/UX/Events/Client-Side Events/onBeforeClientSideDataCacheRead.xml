<page build="0">
    <shortlink>uxevent onBeforeClientSideDataCacheRead</shortlink>
    <topic>onBeforeClientSideDataCacheRead</topic>
    <description>Fires before an item in the Client-side data cache is read.</description>
    <arguments>
        <argument>
            <name>e</name>
            <type>Object</type>
            <description>
                <p>An object with the following properties:</p>
            </description>
            <properties>
                <property>
                    <name>item</name>
                    <type>string</type>
                    <description>The Client-side data cache item being loaded.</description>
                </property>
                <property>
                    <name>hasBeenFetched</name>
                    <type>boolean</type>
                    <description>
                        <p>*[js:false]* if the data has not been fetched from the server. *[js:true]* if the data has already been fetched from the server.</p>
                        <p>If *[js:hasBeenFetched]* is *[js:false]*, a callback to the server will be made to fetch the data. Otherwise, the data will be read from where it was stored.</p>
                    </description>
                </property>
                <property>
                    <name>location</name>
                    <type>string</type>
                    <description>The location where the item is stored. For example, "Local Storage".</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <see>
        <ref link="uxevent afterClientSideDataCacheAjaxCallback">afterClientSideDataCacheAjaxCallback</ref>
        <ref link="uxevent afterControlBasedOnClientSideDataCacheRefreshed">afterControlBasedOnClientSideDataCacheRefreshed</ref>
    </see>
</page>