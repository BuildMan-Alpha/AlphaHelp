<page>

    <topic>afterSaveToRepository</topic>
    <description>Fires after the data in the component has been saved to the Repository</description>
    <arguments>
        <argument>
            <name>e</name>
            <type>object</type>
            <description>
                <p>An object with the following properties:</p>
            </description>
            <properties>
                <property readonly="true">
                    <name>hasErrors</name>
                    <type>boolean</type>
                    <description>A *[js:true]* or *[js:false]* value. If true, the component data was saved successfully without issue. If false, the component data could not be saved.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:afterSaveToRepository]* event is triggered when the component data has been saved to the application repository using the *[js:{dialog.object}.saveDataInRepository()]* method. This event can be used to check if the data was successfully saved as well as execute other logic to perform additional tasks after the component data has been saved to the repository.</p>
        <p>
            <example code="js"><![CDATA[var btn = {dialog.object}.getPointer("SAVE_BTN");

if (e.hasErrors) {
    // Notify user their settings could not be saved
    {dialog.object}.runAction("SettingsNotSavedNotice",btn);
} else {
    // Notify user their settings were saved
    {dialog.object}.runAction("SettingsSavedNotice",btn);
}]]></example>
        </p>
    </discussion>
    <see>
        <ref link="ux%20component%20savedatainrepository%20method">{dialog.object}.saveDataInRepository()</ref>
        <ref link="afterloadfromrepository">afterLoadFromRepository</ref>
        <ref link="web%20application%20repository">Web Application Repository</ref>
    </see>
</page>