<page>
    <shortlink>UX Component Server-side Action Scripting</shortlink>
    <topic>Server-side Action Scripting</topic>
    <description>Server-side action scripting makes it easy to add functionality to server-side events. For example, these actions can save data that was submitted from the client to the server, or populate client-side controls with data from a server, whenever the specified server-side event fires.</description>
    <sections>
        <section>
            <description>To add a server-side action to a server-side event first click the 'Action Scripting' button in the Server-side events page toolbar.</description>
            <figure>
                <link>images/ssa2.png</link>
            </figure>
        </section>
        <section>
            <description>Select the desired action to add it to the Xbasic server-side event.</description>
            <figure>
                <link>images/ssa.png</link>
            </figure>
        </section>
        <title>Available Action Scripts</title>
        <section>
            <!--list:.-->
            <!--order:Save Submitted Data to Table(s)
Send an e-mail message
Populate a Dialog with data from one or more tables
Load Web Security Values
Validate Web Security Values
Save Web Security Values
Change Web Security Password
Load Primary keys for Parent Table-->
        </section>
        <section>
            <title>Post-processing After an Action Script has Run</title>
            <description>
                <p>In some situations, you may want to execute additional Xbasic based on the result of an Action Script (e.g. generate a custom error message if a record was not saved.) Some Action Scripts have variables that you can reference in your Xbasic after the script has run. To find out what variables are available, place the mouse cursor in the text for an Action Script and select *[ui:Show variables exposed by this action]* option from the *[ui:Action Scripting]* button.</p>
                <p>Alpha Anywhere will open a window that lists the variables available to your Xbasic script. These variables can only be referenced *[after]* the *[xb:ExecuteServerSideAction]* function call for the Action Script.</p>
            </description>
            <figure>
                <link>images/showExposedVariables.png</link>
            </figure>
        </section>
        <section>
            <title>Sending JavaScript to the Client from a Server-side Event with an Action Script</title>
            <description>
                <p>Action Scripts may modify the *[xb:e.javascript]* variable in an Xbasic server-side event. When sending JavaScript to the client from an event that includes a server-side Action Script, be sure to append your JavaScript to the *[xb:e.javascript]* object to prevent accidentally overwriting JavaScript Alpha Anywhere has generated as part of the Action Script.</p>
                <p>A pattern you may want to consider adopting for adding your own JavaScript to execute on the client in addition to any JavaScript generated by an Action Script is shown below:</p>
            </description>
            <example code="xb"><![CDATA[function afterDialogValidate as v (e as p)
    ' TIP: Some server-side actions do not add JavaScript to the e.javascript variable.
    ' If you set e.javascript to an empty string at the beginning of the event, it 
    ' creates the e.javascript property. This allows you to append JavaScript later 
    ' without having to test if the e.javascript variable exists. 
    ' The e.javascript variable doesn't exist until it has been assigned a value.
    e.javascript = ""

    'To edit this action, place insertion point anywhere in the command, then click the 'Action Scripting' button'.
    ExecuteServerSideAction("Save Data::Save_Submitted_Data_to_Table_s_")

    ' Add a message to show the user indicating whether or not the record was saved:
    if (rtc.flagRecordWasSaved) then
        ' TIP: Appending crlf() makes it easier to read the javascript returned from the
        ' callback using debugging tools in a web browser.
        e.javascript = e.javascript + "alert('Record was saved!');" + crlf()
    else
        e.javascript = e.javascript + "alert('Record was not saved!');" + crlf()
    end if

    ' Add multiple lines of javascript using delimiters:
    e.javascript = e.javascript + <<%js%
    var listObj = {dialog.object}.getControl("LIST1");
    if (listObj) {
        alert("LIST1 exists!");
    } else {
        alert("LIST1 does not exist.");
    }
%js%

'additional code, comments, etc
end function]]></example>
        </section>
    </sections>
</page>