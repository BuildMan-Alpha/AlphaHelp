<page>
    <shortlink>ux ssevents onDialogExecute</shortlink>
    <topic>onDialogExecute</topic>
    <description>Fires every time the UX Component is run. This includes the first time it is run and whenever an Ajax callback is made.</description>
    <arguments>
        <argument>
            <name>e</name>
            <type>P</type>
            <description>
                <p>A pointer variable with the following properties:</p>
            </description>
            <properties>
                <property>
                    <name>tmpl</name>
                    <type>P</type>
                    <description>Component definition</description>
                </property>
                <property>
                    <name>rtc</name>
                    <type>P</type>
                    <description>
                        <p>Runtime calculations. Use this to store data to be passed to other server side events. For data that needs to be passed to the client, use the *[xb:_state]* property.</p>
                    </description>
                </property>
                <property build="6232">
                    <name>listInfoJSON</name>
                    <type>C</type>
                    <description>
                        <p>If the UX Component contains a List with a [check-box select control], contains a array of objects in JSON format of the checked rows for each List in the UX. The array has the following format:</p>
                        <p>
                            <example code="json"><![CDATA[{"list":"listId","checkedRows":"comma_delimited_list_of_checked_rows"}]]></example>
                        </p>
                        <p>*[xb:"list"]* contains the ID of the List control. If the List has a check-box select column, *[xb:"checkedRows"]* is a comma delimieted list of rows that have been checked.</p>
                        <p>You can inspect the JSON to determine what rows are checked in a List with a [check-box select control]. For example:</p>
                        <p>
                            <example code="xb"><![CDATA[DIM listInfo AS P
listInfo = json_parse(e.listInfoJSON)

if (listInfo.size() > 0) then
    if (variable_exists("listInfo[1].checkedRows")) then
        DIM listId AS C
        DIM rows AS C
        listId = listInfo[1].list
        rows = crlf_to_comma(listInfo[1].checkedRows.dump_properties(" value"))
        ' Return JS alert displaying the list of checked rows for the first list in listInfo.
        e.javascript = "alert('Checked rows for list \'"+listId+"\' : "+rows+"');"
    end if
end if]]></example>
                        </p>
                        <p>If a list has no checked rows, the *[js:checkedRows]* property will be blank.</p>
                    </description>
                </property>
                <property>
                    <name>_state</name>
                    <type>P</type>
                    <description>
                        <p>State information passed between the server and client. The value of any state variables will be available in all subsequent ajax callbacks.</p>
                        <p>To set state variables:</p>
                        <p>
                            <example code="xb"><![CDATA[e._state.myvar1 = "value1"
e._state.myvar2 = "value2"]]></example>
                        </p>
                        <p>To read the value of a state variable that was previously set:</p>
                        <p>
                            <example code="xb"><![CDATA[myVar1 = e._state.myvar1]]></example>
                        </p>
                    </description>
                </property>
                <property>
                    <name>arguments</name>
                    <type>SQL::Arguments</type>
                    <description>
                        <p>SQL::Arguments object with values for each of the arguments defined in this component. To read a value from arguments:</p>
                        <p>
                            <example code="xb"><![CDATA[e.arguments.find("argumentName").data]]></example>
                        </p>
                        <p>Where *[xb:argumentName]* is the name of the argument</p>
                    </description>
                </property>
                <property>
                    <name>javascript</name>
                    <type>C</type>
                    <description>
                        <p>An optional variable that can be used to pass JavaScript to the client for execution. For example:</p>
                        <p>
                            <example code="xb"><![CDATA[e.javascript = "alert('hello');"]]></example>
                        </p>
                    </description>
                </property>
            </properties>
        </argument>
    </arguments>
    <links>
        <link link="uxlist%20has%20checkbox%20select%20col">check-box select control</link>
    </links>
</page>