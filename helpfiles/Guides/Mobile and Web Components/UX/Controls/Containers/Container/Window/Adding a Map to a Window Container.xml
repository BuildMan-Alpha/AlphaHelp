<page>
    <shortlink>ux window Adding a Map to a Window Container</shortlink>
    <topic>Adding a Map to a Window Container</topic>
    <description>Create a dropdown window container with a map. This requires acquiring a 
        Google Map API key from Google.
    </description>
  
<sections>
<section>
     <figure><title>A map inside a dropdown window container.</title><link>images/am20.png</link></figure>
    
</section>
<section>
    <title>A Window Container with a Map</title>
    <steps>
        <step>
            <description>In the UX Builder on the UX Controls open the 'Data Controls' section. 
                Click on the [Map] option to add a Map Control to the component.
            </description>
            <figure><link>images/am2.png</link></figure>
        </step>
         <step>
            <description>Highlight the map control in the controls tree. In the properties 
                list on the right scroll down to the 'Map Properties'. Check the 
                'Fill container' checkbox, even though a window container has yet to be 
                defined. 
                
            </description>
            <figure><link>images/am3.png</link></figure>
        </step>
         <step>
            <description>Next to the [Google Maps API key] property place the API key that you 
                received from [Google's developers website]. This key can also be added to the [Project 
                Properties], in which case it will not be necessary to define it here.
            </description>
            <figure><link>images/am4.png</link></figure>
        </step>
         <step>
            <description>With the map control highlighted open the 'Containers' menu and click on the [Container] option.</description>
            <figure><link>images/am5.png</link></figure>
        </step>
         <step>
            <description>In the Container Type list select the 'Window' option. Click the 'Insert Around' 
                button.
            </description>
            <figure><link>images/am6.png</link></figure>
        </step>
         <step>
            <description>Highlight the opening window container tag. In the properties list on the right 
                click the [...] button next to the 'Window properties' property in the 'Window Properties' section.
            </description>
            <figure><link>images/am7.png</link></figure>
        </step>
         <step>
            <description>In the 'Window Container' dialog set the 'Window type' property to 'Dropdown'.</description>
            <figure><link>images/am8.png</link></figure>
        </step>
         <step>
            <description>Click the [...] button next the 'Dropdown Window position' property and select the 
                'Relative' radio button option. Click OK and return to the 'Window Container' dialog.
            </description>
            <figure><link>images/am9.png</link></figure>
        </step>
         <step>
            <description>Uncheck the 'Window title show' checkbox.</description>
            <figure><link>images/am10.png</link></figure>
        </step>
         <step>
            <description>Set the 'Window height' and 'Window width' properties to '3in'.</description>
            <figure><link>images/am11.png</link></figure>
        </step>
         <step>
            <description>Uncheck the 'Window is resizable' checkbox.</description>
            <figure><link>images/am12.png</link></figure>
        </step>
         <step>
            <description>Check the 'Has pointer icon' checkbox. Click OK to close the Window Container dialog.</description>
            <figure><link>images/am13.png</link></figure>
        </step>
         <step>
            <description>Highlight the window end tag, [Window End:WINDOW_1]. Open the 'Other Controls' 
                click on the [Button] option to add a button control to the component.
            </description>
            <figure><link>images/am14.png</link></figure>
        </step>
         <step>
            <description>Highlight the button control. In the properties list on the right set the 
                'Button text' to read 'Map'.
            </description>
            <figure><link>images/am15.png</link></figure>
        </step>
         <step>
            <description>Scroll down to the 'Javascript' section and click on the [...] button next 
                to the 'onClick' property.</description>
            <figure><link>images/am16.png</link></figure>
        </step>
         <step>
            <description>Set the editing mode to the 'Action Javascript' radio button. 
                Click the 'Add New Action' button.
            </description>
            <figure><link>images/am17.png</link></figure>
        </step>
         <step>
            <description>Type 'show' into the 'Filter list' control and select the 'Show Container Window' option. 
                Click OK.
            </description>
            <figure><link>images/am18.png</link></figure>
        </step>
         <step>
            <description>In the 'Display Window' dialog set the 'Container ID' property to be 'WINDOW_1'. Click OK, OK, 
                and click 'Save'.
            </description>
            <figure><link>images/am19.png</link></figure>
        </step>
         <step>
            <description>Run the component in Live Preview. Click the 'Map' button, the map should be displayed.</description>
            <figure><link>images/am20.png</link></figure>
        </step>
        
    </steps>
    
</section>


</sections>

<links>
    <link link="getting a google maps javascript api key">Google Maps API key</link>
    <link link="getting a google maps javascript api key">Project Properties</link>
    <link href="https://console.developers.google.com">Google's developers website</link>
</links>


<see>
    <ref link="ux window properties">Window properties</ref>
    <ref link="show container window">Show container window action</ref>
    <ref link="getting a google maps javascript api key">Getting a Google Maps Javascript API key</ref>
</see>

</page>