<page>
    <shortlink>ux control properties component argument bindings</shortlink>
    <topic>Argument bindings</topic>
    <description>Settings for assigning values to arguments for an embedded component.</description>
    <discussion>
        <p>If an embedded component has one or more arguments, the *[ui:Argument bindings]* property can be used to assign the value for one or more arguments. When the smart field button [...] is clicked for the *[ui:Argument bindings]* property, it will open the genie for configuring the embedded component.</p>
    </discussion>
    <sections>
        <section>
            <description>
                <p>If the component has arguments, the *[ui:Set Argument Values]* section will be shown. In this section, you will see a list of arguments defined for the component, as well as the assigned Argument Value and Default Value.</p>
            </description>
            <figure>
                <link>images/embeddedCompGenie.png</link>
            </figure>
        </section>
        <section>
            <title>Setting the Argument Value</title>
            <description>
                <p>An argument's value can be assigned by selecting it in the list of arguments and clicking the *[ui:Set Argument Value]* button.</p>
                <p>An argument's value can be set to one of the following:</p>
                <p>
                    <list bullet="true">
                        <item>
                            <name>A constant value. E.g. "Smith"</name>
                        </item>
                        <item>
                            <name>The value in a session variable. E.g. "context.session.customerID"</name>
                        </item>
                        <item>
                            <name>The value in a field on the component. E.g. "{customer_id}"</name>
                        </item>
                        <item>
                            <name>The result of a JavaScript function call. E.g. "(Javascript:functionName)". See [below] for more information.</name>
                        </item>
                    </list>
                </p>
                <p>The *[ui:Insert Field Placeholder]* button can be used to select a control in the component to use to get the value for the argument.</p>
            </description>
            <figure>
                <link>images/setArgumentValue.png</link>
            </figure>
        </section>
        <section>
            <title>Setting an Argument Value to the Result of a Javascript Function Call</title>
            <description>
                <p>You can set an argument to the value of a JavaScript function call. This done by using the following syntax to specify the JavaScript function that should be called to compute the value:</p>
                <p>
                    <example><![CDATA[(Javascript:functionName)]]></example>
                </p>
                <p>where *[js:functionName]* is the name of the JavaScript function to call. JavaScript functions are typically defined in the Javascript Functions section of the UX Builder.</p>
            </description>
            <important>Note that the syntax for specifying a JavaScript function is wrapped in parentheses.</important>
        </section>
        <section>
            <description>
                <p>If the embedded object is a Grid Component, the function you define will need to take *[js:rowNum]* as an argument. For example:</p>
                <p>
                    <example code="js"><![CDATA[function getLinkValue(rowNum) {
    var data = {dialog.EmbeddedGrid_myGridAlias}.getValue('G','FIRSNAME',rowNum) + ' ' + {dialog.EmbeddedGrid_myGridAlias}.getValue('G', 'LASTNAME', rowNum);
    return data;
}]]></example>
                </p>
            </description>
            <note>Replace *[myGridAlias]* with the alias you give the embedded grid. The embedded Grid's alias is defined in the *[ui:Component alias]* property.</note>
        </section>
    </sections>
    <links>
        <link href="#section1_Setting an Argument Value to the Result of a Javascript Function Call">below</link>
        <link href="/images/tools/ellipsesButton.png">...</link>
    </links>
</page>