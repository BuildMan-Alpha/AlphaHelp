<page build="4497">
    <shortlink>ux control properties custom control data bound control properties audio player events</shortlink>
    <topic>Events</topic>
    <description>These are the event hooks for the AudioPlayer and AudioRecordAndPlayer controls.</description>
    <discussion>
        <p>Custom event handlers can be added to the [AudioPlayer] and [AudioRecorderAndPlayer] controls. All events are available for both controls unless otherwise noted.</p>
    </discussion>
    <sections>
        <section>
            <description>
                <p>When writing your event handler, use the [{dialog.object}.getControl()] method to get a pointer to the audio player's JavaScript object:</p>
            </description>
            <example code="js"><![CDATA[var audioObj = {dialog.object}.getControl("AUDIOPLAYER1");]]></example>
        </section>
        <section>
            <title>onAbortOverwriteRecording</title>
            <description>
                <p>Fires if the user aborts a new recording that would have overwritten an existing audio recording.</p>
                <p> This event does not have any arguments.This event is available for only the [AudioRecorderAndPlayer] control.</p>
            </description>
        </section>
        <section>
            <title>onBeforeLoad</title>
            <description>
                <p>Fires before the control is loaded. This event does not have any arguments.</p>
            </description>
        </section>
        <section>
            <title>onBeforeOverwriteRecording</title>
            <description>
                <p>The *[ui:onBeforeOverwriteRecording]* event fires when there is an existing recording and the user clicks the record button. If there is an existing recording, the recording will get overwritten. This event will allow you to prompt the user if they really want to overwrite the existing recording. If the event returns false, the new recording is aborted.</p>
                <p> This event does not have any arguments. This event is available for only the [AudioRecorderAndPlayer] control.</p>
                <example code="js"><![CDATA[var msg = 'The existing recording has not been saved. Are you sure you want to overwrite the existing recording? Click OK to continue.';
return confirm(msg);]]></example>
            </description>
        </section>
        <section>
            <title>onChange</title>
            <description>
                <p>This event can be used to create a custom progress display while an audio is playing back.</p>
                <p>The following arguments are passed to the onChange event:</p>
            </description>
        </section>
        <section>
            <pages>
                <page>
                    <arguments>
                        <argument>
                            <name>obj</name>
                            <types>
                                <type>Object</type>
                            </types>
                            <description>An object that contains information about the control and the state it is in. *[js:obj]* has the following properties:</description>
                            <properties>
                                <property readonly="true">
                                    <name>id</name>
                                    <types>
                                        <type>string</type>
                                    </types>
                                    <description>The control's id.</description>
                                </property>
                                <property readonly="true">
                                    <name>tEle</name>
                                    <types>
                                        <type>object</type>
                                    </types>
                                    <description>A pointer to the element where the amount of time the audio has been playing is displayed.</description>
                                </property>
                                <property readonly="true">
                                    <name>tbEle</name>
                                    <types>
                                        <type>object</type>
                                    </types>
                                    <description>A pointer to the element that displays progress.</description>
                                </property>
                                <property readonly="true">
                                    <name>state</name>
                                    <types>
                                        <type>object</type>
                                    </types>
                                    <description>An object that contains state information about the audio player. *[xb:state]* has the following properties:</description>
                                    <properties>
                                        <property readonly="true">
                                            <name>src</name>
                                            <types>
                                                <type>string</type>
                                            </types>
                                            <description>The name of the audio file that has been loaded.</description>
                                        </property>
                                        <property readonly="true">
                                            <name>stream</name>
                                            <types>
                                                <type>boolean</type>
                                            </types>
                                            <description>Indicates if the player is in streaming mode (true) or not (false).</description>
                                        </property>
                                        <property readonly="true">
                                            <name>playing</name>
                                            <types>
                                                <type>boolean</type>
                                            </types>
                                            <description>Indicates if the player is currently playing audio (true) or not (false).</description>
                                        </property>
                                        <property readonly="true">
                                            <name>current</name>
                                            <types>
                                                <type>number</type>
                                            </types>
                                            <description>The length of time the audio has been playing.</description>
                                        </property>
                                        <property readonly="true">
                                            <name>duration</name>
                                            <types>
                                                <type>number</type>
                                            </types>
                                            <description>The total audio length.</description>
                                        </property>
                                    </properties>
                                </property>
                            </properties>
                        </argument>
                        <argument>
                            <name>e</name>
                            <types>
                                <type>object</type>
                            </types>
                            <description>An object that contains the following properties:</description>
                            <properties>
                                <property readonly="true">
                                    <name>type</name>
                                    <types>
                                        <type>string</type>
                                    </types>
                                    <description>Defines the type of onChange event. Can be one of the following:</description>
                                    <section>
                                        <list>
                                            <item>
                                                <name>buffer</name>
                                                <description>Audio is buffering.</description>
                                            </item>
                                            <item>
                                                <name>durationchange</name>
                                                <description>Triggered after an audio file has loaded. The element that displays the duration is *[js:'{dialog.ComponentName}.'+obj.id+'.PLAYDURATION']*.</description>
                                            </item>
                                            <item>
                                                <name>timeupdate</name>
                                                <description>Triggered after an audio file has been loaded and the duration of the audio file is known. *[js:obj.state.duration]* and *[js:obj.state.current]* will contain additional information about the current state of total length of the audio file and the current point in the audio playback.</description>
                                            </item>
                                        </list>
                                    </section>
                                </property>
                            </properties>
                        </argument>
                    </arguments>
                </page>
            </pages>
        </section>
        <section>
            <title>onDone</title>
            <description>
                <p>Fires when the playback is complete. This event does not have any arguments.</p>
            </description>
        </section>
        <section>
            <title>onError</title>
            <description>
                <p>The onError event fires when an audio file does not load. This event does not have any arguments.</p>
            </description>
        </section>
        <section>
            <title>onLoaded</title>
            <description>
                <p>Fires when the audio file is loaded. This event does not have any arguments.</p>
            </description>
        </section>
        <section>
            <title>onPause</title>
            <description>
                <p>Fires when the playback is paused. This event does not have any arguments.</p>
            </description>
        </section>
        <section>
            <title>onPauseRecording</title>
            <description>
                <p>Fires when recording is paused. This event does not have any arguments. This event is available for only the [AudioRecorderAndPlayer] control.</p>
            </description>
        </section>
        <section>
            <title>onPlay</title>
            <description>
                <p>Fires when audio playback begins. This event does not have any arguments.</p>
            </description>
        </section>
        <section>
            <title>onResumeRecording</title>
            <description>
                <p>Fires when recording resumes. This event does not have any arguments. This event is available for only the [AudioRecorderAndPlayer] control.</p>
            </description>
        </section>
        <section>
            <title>onSaveRecording</title>
            <description>
                <p>Fires when the recording is saved. This event does not have any arguments. This event is available for only the [AudioRecorderAndPlayer] control.</p>
            </description>
        </section>
        <section>
            <title>onStartRecording</title>
            <description>
                <p>Fires when recording starts. This event does not have any arguments. This event is available for only the [AudioRecorderAndPlayer] control.</p>
            </description>
        </section>
    </sections>
    <links>
        <link link="ux controls data controls more audio recorder and player control">AudioRecorderAndPlayer</link>
        <link link="ux controls data controls more audioplayer">AudioPlayer</link>
        <link link="ux component getControl Method">{dialog.object}.getControl()</link>
    </links>
    <see>
        <ref link="ux controls data controls more audioplayer">Audio Player Control</ref>
        <ref link="ux controls data controls more audio recorder and player control">Audio Recorder/Player Control</ref>
        <ref link="api client api a5 audio player class">Audio Player Methods</ref>
        <ref link="api client api a5 audio recorder class">Audio Recorder Methods</ref>
    </see>
    <terms>audioplayer,audiorecorderandplayer,audio capture,audio recording,mobile app,phonegap,cordova</terms>
</page>