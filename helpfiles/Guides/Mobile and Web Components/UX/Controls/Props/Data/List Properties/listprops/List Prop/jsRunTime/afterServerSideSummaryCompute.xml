<page>
    <shortlink>ux list clientside event afterserversidesummarycompute</shortlink>
    <topic>afterServerSideSummaryCompute Event</topic>
    <description>Fires after the server-side summary values have been computed.</description>
    <arguments>
        <argument>
            <name>summary</name>
            <type>object</type>
            <description>An object that contains the summary values for all fields for which summary values were calculated. Summary values for each field can be referenced using array notation. For example, *[js:summary['QTY'].total]*. Each field in the *[js:summary]* object has the following properties:</description>
            <note>Fields in *[js:summary]* are always referenced using uppercase.</note>
            <properties>
                <property>
                    <name>total</name>
                    <type>number</type>
                    <description>The total computed for the field.</description>
                </property>
                <property>
                    <name>count</name>
                    <type>number</type>
                    <description>The count computed for the field.</description>
                </property>
                <property>
                    <name>avg</name>
                    <type>number</type>
                    <description>The average computed for the field.</description>
                </property>
                <property>
                    <name>min</name>
                    <type>number</type>
                    <description>The minimum value for the field.</description>
                </property>
                <property>
                    <name>max</name>
                    <type>number</type>
                    <description>The maximum value for the field.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:afterServerSideSummaryCompute]* event is triggered after the summary values for fields in the List control have been computed on the server.</p>
        <p>A common use case for this event is to display the summary values in a control or DIV in the UX Component. For example:</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[// Get the total count for QTY and total cost:
var itemsOrdered = summary['QTY'].total;
var invoiceCost = summary['TOTAL'].total;

// Display values in two labels in the UX:
{dialog.object}.setValue('INVOICE_TOTAL',invoiceCost);
{dialog.object}.setValue('TOTAL_ITEMS_ORDERED',itemsOrdered);]]></example>
        </section>
        <section>
            <description>
                <p>Server side summary calculations are only available for lists based on SQL data.</p>
                <p>The summary value will only be available for a field if you specified that it should be computed. Summary values can be enabled on the List Builder Fields pane in the [Server-side section].</p>
            </description>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Server-side Summary Values</title>
                <description>
                    <p>For List controls that are based on SQL data, you can specify that summary data (e.g. total, avg, count, min and max) should be computed for certain columns in the List control. The summary computations are based on the List query (not on the rows actually visible in the List). In the case of a paginated List, there may be more rows in the query than are visible in the List. For example, the query might have 1,000,000 rows, but the list might show 20 rows at a time.</p>
                    <p>This video shows how a List control is configured to compute summary values, and then how the afterServerSideSummaryCompute event in the List is used to update a label on the UX component showing the summary values.</p>
                </description>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/a0132bf8</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link link="ux list fields server side properties compute summary values">Server-side section</link>
    </links>
    <see>
        <ref link="ux list fields server side properties compute summary values">Compute summary values property</ref>
        <ref link="ux component getlistserversidesummaryvalue method">{dialog.object}.getListServerSideSummaryValue() Method</ref>
        <ref link="list control ux api">List Control JavaScript Methods</ref>
            <ref link="ux%20list%20events">List Control Client-side Events</ref>
        <ref link="ux%20list%20csevent">Detail View Client-side Events</ref>
        <ref link="ux%20list%20builder%20jsruntime%20properties">Javascript - Run Time</ref>
        <ref link="ux%20list%20builder%20jsrendertime%20properties">Javascript - Render Time</ref>
    </see>
</page>