<page build="">
    <shortlink></shortlink>
    <topic>CSV file</topic>
    <description>The CSV file option lets you to populate a List control with data from a CSV file.</description>
    <discussion>
        <p>You can set the data source of a List control to an CSV file. At run-time, the file is downloaded and the data extracted from the file. The List is then populated with the data. When the List is refreshed, the remote file will be fetched again to repopulate the List control.</p>
    </discussion>
    <sections>
        <section>
            <title>CSV file Data Source Properties</title>
            <description>
                <p>The following properties are available to configure the CSV data source.</p>
            </description>
            <cases>
                <case>
                    <title nested="2">Arguments</title>
                    <description>
                        <p>Arguments are variables that can be referenced when filtering or ordering the CSV data. An Argument can be populated from a session variable, page variable, or cookie. Arguments can also be statically assigned at design time or populated at run-time using the value of a control in the UX Component.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Filename</title>
                    <description>
                        <p>A URL that defines where the remote CSV file is located. At run-time, the CSV file will be downloaded. Data from the file will be extracted and used to populate the List control.</p>
                        <p>An example URL is shown below.</p>
                    </description>
                    <example caption="The CSV filename is specified as a URL."><![CDATA[http://aadocuments.s3.amazonaws.com/misc/northwindCustomers.csv]]></example>
                </case>
                <case>
                    <title nested="2">Filter</title>
                    <description>
                        <p>An optional filter expression. The filter expression can be used to pre-filter the data shown in the List. The syntax for the filter is same as a WHERE clause for a SQL database. The filter can use arguments, as shown in the image below.</p>
                    </description>
                    <figure>
                        <link>images/filterExpr.png</link>
                    </figure>
                </case>
                <case>
                    <title nested="2">Order</title>
                    <description>
                        <p>An optional order expression. The order expression sorts the data retrieved from the CSV file before it is rendered in the List control. The syntax for the order is same as an ORDER BY clause for a SQL database.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Return field</title>
                    <description>
                        <p>The name of the field in the List data that contains the List's return value. This is the value that is used by the [{dialog.object}.getValue()] and [{dialog.object}.setValue()] methods.</p>
                    </description>
                </case>
            </cases>
        </section>
    </sections>
    <links>
        <link link="ux component getvalue method">{dialog.object}.getValue()</link>
        <link link="ux component setvalue method">{dialog.object}.setValue()</link>
    </links>
</page>