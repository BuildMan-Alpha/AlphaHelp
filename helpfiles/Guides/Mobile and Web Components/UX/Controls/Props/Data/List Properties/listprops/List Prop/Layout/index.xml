<page build="1">
    <shortlink>ux list builder layoutprop properties</shortlink>
    <topic>Layout Properties</topic>
    <description>Configures the look and feel of the List layout, including defining the layout type and optional CSS class overrides.</description>
    <!--list:.-->
    <sections>
        <section>
            <title>Layout type</title>
            <description>
                <p>Defines the type of layout for the List control. The *[ui:Layout type]* can be a *[ui:Column]*, *[ui:Freeform]*, or *[ui:Kanban]* layout as described below:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Type</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>Column</name>
                            <description>The layout is divided into multiple columns.</description>
                        </item>
                        <item>
                            <name>Freeform</name>
                            <description>A Freeform layout is a completely customized layout defined using HTML and Client-side template syntax. A Freeform layout supports 'snaking' layouts.</description>
                        </item>
                        <item build="5374">
                            <name>Kanban</name>
                            <description>A special List type to display a 'Kanban' style List. A Kanban list allows you to drag and drop list rows into various categories.</description>
                        </item>
                    </list>
                </p>
            </description>
        </section>
        <section build="5374">
            <title>Kanban settings</title>
            <description>The *[ui:Kanban settings]* are used to configure a 'Kanban' layout:</description>
            <cases>
                <case>
                    <title nested="2">Category field</title>
                    <description>Specify the name of the field for the Category data</description>
                </case>
                <case>
                    <title nested="2">Category display</title>
                    <description>Should the category groups be displayed horizontally or vertically? (For a phone, a vertical display is more appropriate. For web and tablet, horizontal is more common.) Choices include *[ui:Horizontal]*, *[ui:Vertical]*.</description>
                </case>
                <case>
                    <title nested="2">Order field</title>
                    <description>Specify which field specifies the order of the rows within a category</description>
                </case>
                <case>
                    <title nested="2">Default category names</title>
                    <description>Specify the category names that should always appear in the Kanban list, regardless of whether any data is the List is in the category.</description>
                </case>
                <case>
                    <title nested="2">Sort fields</title>
                    <description>Specify the order of the List rows within a category.</description>
                </case>
                <case>
                    <title nested="2">Category header html</title>
                    <description>Specify the expression that returns the HTML for the category header.</description>
                </case>
                <case>
                    <title nested="2">Category class name</title>
                    <description>Specify the class name for the category header.</description>
                </case>
                <case>
                    <title nested="2">Move icon</title>
                    <description>Specify the icon to use for the image that the user will click on to move a row in the the KanBan List. If you leave this blank, a default icon will be used.</description>
                </case>
                <case>
                    <title nested="2">Color Javascript</title>
                    <description>(Optional) You can specify Javascript code that will return a color to show for each row in the KanBan List.</description>
                </case>
                <case>
                    <title nested="2">onMove function</title>
                    <description>Specify Javascript code to execute when a List row is moved (either to a different position within a category, or from one category to another).</description>
                </case>
                <case>
                    <title nested="2">Has category footer</title>
                    <description>Should a footer be displayed at the bottom of each category column?</description>
                </case>
                <case>
                    <title nested="2">Category footer HTML expression</title>
                    <description>Specify the expression that returns the HTML for the category footer.</description>
                </case>
                <case>
                    <title nested="2">Category footer class name</title>
                    <description>Specify the class name for the category footer.</description>
                </case>
                <case>
                    <title nested="2">Group class name</title>
                    <description>Specify the class name for the entire category.</description>
                    <tip>If you set to 'KanbanColumn' or a blank value Alpha Anywhere will generate the appropriate CSS definition.</tip>
                </case>
                <case>
                    <title nested="2">HTML for empty categories</title>
                    <description>Specify the Javascript to compute the HTML to display in empty categories.</description>
                </case>
                <case>
                    <title nested="2">Classname for empty categories</title>
                    <description>Specify the class name for empty categories.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Show column titles</title>
            <description>If enabled, column titles will be shown for each field in the layout. Only applies to a list with a 'Column' *[ui:Layout type]*.</description>
        </section>
        <section>
            <title>Freeform type</title>
            <description>Specify how the data in the list is laid out. Choices include *[ui:Vertical]*, *[ui:Horizontal]*, *[ui:Snaking]*.  Only applies to a list with a 'Freeform' *[ui:Layout type]*.</description>
        </section>
        <section>
            <title>Item width</title>
            <description>
                <p>The *[ui:Item width]* defines the width for each 'data row'. You can specify an explicit dimension for the item width (e.g. 300px, 1in, etc.), or you use the keyword *[css:fill]*, followed by an optional modifier.</p>
                <p>If the *[css:fill]* keyword is used, the List item will fill the entire width of the List.</p>
                <p>The modifier is used to indicate that the List item should not quite fill the entire width of the List. You specify an explicit value (e.g. 40px, .5in) by which the List item is less than the List width.</p>
                <p>For example, if you set the width to *[css:fill-10px]*, the List item will be 10px less than the width of the List.</p>
                <p>If you leave *[ui:Item width]* blank, each List item (i.e. 'row' of data) is automatically sized based on the row's contents.</p>
            </description>
        </section>
        <section>
            <title>Item height</title>
            <description>Specify the height of each item. If you leave this blank, each item (i.e. 'row' of data) is automatically sized based on the contents of the row being rendered. You can also use the *[css:fill]* keyword. See the [Item width] property above for more information about the *[css:fill]* keyword.</description>
        </section>
        <section>
            <title>List item class name</title>
            <description>Specify one or more classes to apply to each 'item' (e.g. row of data) in the List. If no class name is specified, the default class in the UX Component's style is used.</description>
        </section>
        <section>
            <title>List item hover class name</title>
            <description>Specify one or more classes to apply when the mouse hovers over an 'item' (e.g. row of data) in the List. If no class name is specified, the default class in the UX Component's style is used.</description>
            <tip>To prevent row highlighting when an item is "hovered", specify a class name that does not exist.</tip>
        </section>
        <section>
            <title>List item selected class name</title>
            <description>Specify an optional class to apply when an 'item' (e.g. row of data) is selected. If no class name is specified, the default class in the UX Component's style is used.</description>
        </section>
        <section>
            <title>List item in-line style</title>
            <description>List item in-line style property.</description>
        </section>
        <section>
            <title>Group Break class name</title>
            <description>Specify an optional class to apply to Group Headers. (Only applies if List has Group Breaks.)</description>
        </section>
        <section>
            <title>Has list item footer</title>
            <description>Specify if each item (row) in the list has a free-form footer section</description>
        </section>
        <section>
            <title>List item footer</title>
            <description>Specify the HTML for the footer that appears under each List Item (i.e. each row in the list).</description>
            <tip>You can use the [&lt;listObject&gt;.rowExpander()] method to toggle the open state of the List item footer, or to explicitly open or close it.</tip>
        </section>
        <section>
            <title>List item footer initial state</title>
            <description>Specify the initial state of the List Item footer. Choices include *[ui:Open]*, *[ui:Closed]*.</description>
        </section>
        <section>
            <title>Content class name</title>
            <description>CSS Class for container of all List items.</description>
        </section>
    </sections>
    <links>
        <link link="list%20object%20rowexpander%20method">&lt;listObject&gt;.rowExpander()</link>
        <link href="#section1_Item width">Item width</link>
    </links>
</page>