<page>
    <shortlink>ux list data source parent list properties</shortlink>
    <topic>Parent List</topic>
    <description>The Parent List properties help in binding one list a the child of a second list. This can be particularly useful in creating cascading lists where the selection in one list will determine the available options for a second list.</description>
    <discussion>
        <p>The *[ui:Parent List]* properties are used to add a parent-child (or master-detail) relationship between two List controls. The parent-child relationship is configured in the child List control. The child List is automatically filtered whenever the selected row in the parent List changes.</p>
        <p>*[ui:Parent-List]* options are only available in Lists based on a SQL, Static, or Custom data source.</p>
    </discussion>
    <sections>
        <section>
            <title>Has parent list</title>
            <description>
                <p>Specifies if the data in this List is filtered based on the selection in the parent list.</p>
            </description>
        </section>
        <section>
            <title>Parent list id</title>
            <description>
                <p>Specifies the id of this List's parent list. For example, a UX contains two List controls, one named 'parent' the other 'child'.</p>
            </description>
            <figure>
                <title>UX with two lists</title>
                <alt>UX with two lists</alt>
                <link>images/id.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>To assign the 'parent' List as the parent of the 'child' List, the child's parent List information needs to be configured. Select the child List control and open the *[ui:List properties]* property for the list.</p>
            </description>
            <figure>
                <title>List properties</title>
                <alt>List properties</alt>
                <link>images/id2.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>On the Data Source tab, check *[ui:Has parent list]*. To set the 'parent' List control as the parent of this List control, expand the dropdown for *[ui:Parent List]*. This dropdown will show all of the Lists in the component. Choose the List that is the parent of this control.</p>
            </description>
            <figure>
                <title>Parent list id</title>
                <alt>Parent list id</alt>
                <link>images/id3.png</link>
            </figure>
        </section>
        <section>
            <title>Pre-load data</title>
            <description>
                <p>This property is only shown when the in List is based on a SQL data source. *[ui:Pre-load data]* specifies if the data for this List should be pre-loaded when the data for this List's parent List is loaded. This option is typically used when you are loading data so that the UX can be used while disconnected. If the child List data are pre-fetched, then no Ajax callback is necessary to populate a child List when the selected row in the parent List is changed.</p>
            </description>
            <cases>
                <case>
                    <title nested="2">Parent/Child Data and the Detail View</title>
                    <description>
                        <p>You can use an IN clause with an argument array in the SQL query for a Data Series or List Control.</p>
                        <p>In disconnected applications, when you define parent-child relationships between List controls you must set the child List's 'Pre-load data' property to true. Even when building connected applications you might still want to define a parent-child relationship between Lists and define a Detail View for each List. This could allow editing of the List data without the hassle of pre-loading the child data (since Alpha Anywhere can easily fetch the child data as needed as you have a connection).</p>
                        <p>You can edit data in the child List(s) (using the child List's Detail View) without checking the pre-load option, but you must specify linking values in the optional Linking fields section. The data you fill into these properties is used to ensure that the values in the linking fields are automatically set to the corresponding values in the parent List record when insert or updates are performed.</p>
                    </description>
                    <figure>
                        <title>Configuring Pre-load Data and Linking Fields</title>
                        <alt>Configuring Pre-load Data and Linking Fields</alt>
                        <link>images/listdetailview.png</link>
                    </figure>
                </case>
            </cases>
        </section>
        <section>
            <title>Parent-Child Linking Fields</title>
            <description>
                <p>If the List is based on a SQL data source, the Linking field properties will be shown. The Linking field for the parent and child List control are used to filter the child List's data when the selected row in the parent list is changed. Alpha Anywhere retrieves all records in the child List whose Linking field's value matches the value of the parent List's Linking field.</p>
            </description>
            <cases>
                <case>
                    <title nested="2">Linking field - parent List</title>
                    <description>
                        <p>The field(s) in the Parent List control that contain the key value used to match records with the Child list.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Linking field - this List</title>
                    <description>
                        <p>The field(s) in the Child List (the List currently being edited) that store the key value used to match records with the Parent List.</p>
                    </description>
                </case>
            </cases>
        </section>
        <section>
            <title>Empty list when parent record is changed</title>
            <description>
                <p>If checked, the data in the child List is removed, rendering the List blank until the data to populate the child List has been retrieved for the current parent record. This option is often used when populating the child list takes a while to prevent users from selecting and editing records that are not related to the parent record.</p>
            </description>
        </section>
        <section>
            <title>Object name in parent List for this List's data</title>
            <description>
                <p>This property is shown when the List's data source is Static or Custom.</p>
                <p>The data for this List will be read from the data in the current row of the parent List. You need to specify the name of the object in the parent List's data object that contains the data for this row.</p>
                <p>If this List is based on a SQL query and has a 'Detail View' that is updateable, the object name *[MUST]* start with _LIST_ (e.g. _LIST_Orders)</p>
                <p>While relying on SQL data is perhaps more practical for creating cascading lists, it is still possible to make cascading lists from static data. Here is how:</p>
            </description>
            <steps>
                <step>
                    <description>Open the UX Builder and go to the UX Controls page. Scroll through the Data Controls list until you come to the 
                    List Control. Click List to add a list control to your component. Give this control the name 'parent'.
                    </description>
                    <figure>
                        <title>Adding a new List</title>
                        <alt>Adding a new List</alt>
                        <link>images/oname.png</link>
                    </figure>
                </step>
                <step>
                    <description>Highlight the 'parent' list control and scroll down the control's properties list on the right until you come to the List Properties. 
                     Click the [...] button next to the List properties property. The List Builder will open. 
                    </description>
                    <cases>
                        <case>
                            <figure>
                                <title>Parent List control</title>
                                <alt>Parent List control</alt>
                                <link>images/oname1.png</link>
                            </figure>
                        </case>
                        <case>
                            <figure>
                                <title>List properties</title>
                                <alt>List properties</alt>
                                <link>images/oname2.png</link>
                            </figure>
                        </case>
                    </cases>
                </step>
                <step>
                    <description>Open the Data Source tab. Select Static as the 'Data Source Type:'.</description>
                    <figure>
                        <title>Select Static Data Source</title>
                        <alt>Select Static Data Source</alt>
                        <link>images/oname3.png</link>
                    </figure>
                </step>
                <step>
                    <description>Still on the Data Source tab, click the [...] button next to the Static data property</description>
                    <figure>
                        <title>Define Static data</title>
                        <alt>Define Static data</alt>
                        <link>images/oname4.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the Static Choices box add the following JSON data and then click OK.</description>
                    <example code="json"><![CDATA[[
    {"Firstname": "John", "Lastname" : "Smith", "City" : "Boston", "State" : "MA", "Children": [
            {"Name" : "Callie", "Age" : 5},
            {"Name" : "Griffin", "Age" :3},
            {"Name" : "Luke", "Age" : 1}
        ]
    }, 
    {"Firstname": "Henry", "Lastname" : "Rhodes", "City" : "New York", "State" : "NY", "Children": [
            {"Name" : "Howard", "Age" : 15},
            {"Name" : "Robert", "Age" : 11}
        ]
    }, 
    {"Firstname": "Allison", "Lastname" : "Berman", "City" : "Los Angeles", "State" : "CA", "Children": [
            {"Name" : "Jeff", "Age" : 35},
            {"Name" : "Roxanne", "Age" :33},
            {"Name" : "Claudia", "Age" : 31},
            {"Name" : "Denzel", "Age" : 11}
        ]
    }
]]]></example>
                    <figure>
                        <title>Static Choices</title>
                        <alt>Static Choices</alt>
                        <link>images/oname5.png</link>
                    </figure>
                </step>
                <step>
                    <description>Go to the List Layout tab. Use the blue > arrow to move the 'Firstname' and 'Lastname' fields from the 'available fields' list into the 'columns in list'. Click OK to close the list builder.</description>
                    <figure>
                        <title>List Layout</title>
                        <alt>List Layout</alt>
                        <link>images/oname6.png</link>
                    </figure>
                </step>
                <step>
                    <description>On the UX Controls page, go back to the Data Controls menu and add a second List control to the component. Give this control the name 'child'.</description>
                    <figure>
                        <title>Child List</title>
                        <alt>Child List</alt>
                        <link>images/oname7.png</link>
                    </figure>
                </step>
                <step>
                    <description>Highlight the 'child' list control and open it's List Builder; by clicking [...] button next to the List properties property on the right or by double clicking on the control itself.</description>
                </step>
                <step>
                    <description>On the Data Source tab select 'Static' in the Data Source Type menu.</description>
                    <figure>
                        <title>Select Static Data Source for Child List</title>
                        <alt>Select Static Data Source for Child List</alt>
                        <link>images/oname8.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the [...] button next to the Static data property. </description>
                    <figure>
                        <title>Define Static data for Child List</title>
                        <alt>Define Static data for Child List</alt>
                        <link>images/oname9.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the Static Choices dialog add the following and click OK</description>
                    <example><![CDATA[Name|Age]]></example>
                    <figure>
                        <title>Static data definition for Child List</title>
                        <alt>Static data definition for Child List</alt>
                        <link>images/oname10.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the Parent List section check the Has parent list checkbox.</description>
                    <figure>
                        <title>Enable Has parent list</title>
                        <alt>Enable Has parent list</alt>
                        <link>images/oname11.png</link>
                    </figure>
                </step>
                <step>
                    <description>Set the 'Parent list id' property to 'parent', the name of the first list control</description>
                    <figure>
                        <title>Set Parent list id</title>
                        <alt>Set Parent list id</alt>
                        <link>images/oname12.png</link>
                    </figure>
                </step>
                <step>
                    <description>Now set the *[ui:Object name in parent List for this List's data]* to 'Children'. 
                    </description>
                    <figure>
                        <title>Object name in parent List for this List's data</title>
                        <alt>Object name in parent List for this List's data</alt>
                        <link>images/oname13.png</link>
                    </figure>
                    <note>Here 'Children' references the 'Children' array object that is stored in the 
                    JSON data in the 'parent' control. The Name|Age that we already defined as static data for the 'child' list
                    control will draw their value from the Name and Age properties inside the Children array object,.</note>
                </step>
                <step>
                    <description>Go to the List Layout tab and use the blue > arrow to move the 'Name' and 'Age' fields from the Available Fields list 
                    to the Columns in List.</description>
                    <figure>
                        <title>Child List Layout</title>
                        <alt>Child List Layout</alt>
                        <link>images/oname14.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click OK to close the List Builder. Run the Component in Live Preview.</description>
                    <figure>
                        <title>Preview of Parent/Child List</title>
                        <alt>Preview of Parent/Child List</alt>
                        <link>images/oname15.png</link>
                    </figure>
                </step>
                <step>
                    <description>Try clicking on any given row in the 'Parent' list. You should see the 'Child' list change to match.</description>
                    <figure>
                        <title>Child List displaying related data for selected Parent List row</title>
                        <alt>Child List displaying related data for selected Parent List row</alt>
                        <link>images/oname16.png</link>
                    </figure>
                </step>
            </steps>
        </section>
        <section>
            <title>Videos</title>
            <description>For a video demonstration on how to create cascading lists using the 'Parent List' property watch the video below:</description>
            <videos>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/fe249165</link>
                </video>
            </videos>
        </section>
        <section>
            <description>
                <p>You can read the transcripts for this video here: [Transcript Part 1], [Transcript Part 2].</p>
            </description>
        </section>
    </sections>
    <links>
        <link href="/images/tools/ellipsesButton.png">...</link>
        <link href="http://downloads.alphasoftware.com/VideoTranscripts/ListControlCascadingListsPart1/transcript.htm">Transcript Part 1</link>
        <link href="http://downloads.alphasoftware.com/VideoTranscripts/ListControlCascadingListsPart2/transcript.htm">Transcript Part 2</link>
    </links>
    <see>
        <ref link="buildingdisconnectedapplications#section1_Hierarchical%20Data">List Control Overview - Hierarchical Data</ref>
    </see>
</page>