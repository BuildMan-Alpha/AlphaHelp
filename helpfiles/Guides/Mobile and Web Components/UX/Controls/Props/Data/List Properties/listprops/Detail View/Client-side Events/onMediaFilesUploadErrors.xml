<page>
    <shortlink>ux list csevent onMediaFilesUploadErrors</shortlink>
    <topic>onMediaFilesUploadErrors</topic>
    <description>
        <p>Fires if there were any errors when uploading media files.</p>
    </description>
    <arguments>
        <argument>
            <name>e</name>
            <types>
                <type>object</type>
            </types>
            <description>An object with the following properties:</description>
            <properties>
                <property>
                    <name>array</name>
                    <types>
                        <type>array</type>
                    </types>
                    <description>An array containing information about the media files that were uploaded. Check the array entry's succeeded property to determine which files had errors.</description>
                </property>
                <property>
                    <name>errorCount</name>
                    <types>
                        <type>number</type>
                    </types>
                    <description>A count of the number of records with errors.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <discussion>
        <p>The *[ui:onMediaFilesUploadErrors]* event is triggered if there were any errors encountered while uploading media files. If a record contains a media file that could not be uploaded successfully, the record will not be synched.</p>
        <p>The *[js:e.array]* is an array of objects that contain information about the media files that were uploaded. If an error was encoutered for an entry in this array, the object's *[js:succeeded]* property will be false.</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[for (var i=0; i < e.array.length; i++) {
    if (e.array[i].succeeded == false) {
        alert("e.array["+i+"] did not succeed.");
    }
}]]></example>
        </section>
        <section>
            <description>
                <p>You can use *[js:JSON.stringify]* to display the content in the *[e.array]* object:</p>
            </description>
            <example code="js"><![CDATA[alert(JSON.stringify(e.array));]]></example>
        </section>
    </sections>
    <see>
        <ref link="howto%20download%20files%20to%20a%20mobile%20device">How To Download Files to a Mobile Device</ref>
        <ref link="ux list csevent beforeMediaFilesUploaded">beforeMediaFilesUploaded</ref>
        <ref link="ux list csevent afterMediaFilesUploaded">afterMediaFilesUploaded</ref>
        <ref link="ux list csevent beforeMediaFilesDownloaded">beforeMediaFilesDownloaded</ref>
        <ref link="ux list csevent afterMediaFilesDownloaded">afterMediaFilesDownloaded</ref>
        <ref link="ux list csevent beforeDeleteOrphanMediaFiles">beforeDeleteOrphanMediaFiles</ref>
        <ref link="ux list csevent afterDeleteOrphanMediaFiles">afterDeleteOrphanMediaFiles</ref>
        <ref link="ux list csevent onnomediafilestofetch">onNoMediaFilesToFetch</ref>
        <ref link="ux%20list%20events">List Control Client-side Events</ref>
        <ref link="ux%20list%20csevent">Detail View Client-side Events</ref>
        <ref link="ux%20list%20builder%20jsruntime%20properties">Javascript - Run Time</ref>
        <ref link="ux%20list%20builder%20jsrendertime%20properties">Javascript - Render Time</ref>
    </see>


</page>