<page>
    <topic>Synchronization batch size</topic>
    <description>Defines the batch size for synchronizing data to the server. A batch size of '0' indicates that all edits should be synchronized in a single batch.</description>
    <discussion>
        <p>In an offline application, a user might have been disconnected for a long time. During this time, they may have made a number of local edits on the device. When the connection becomes available, the user may choose to synchronize their edits back to the server. However, because a large number of edits were made, the server might take a while to process the uploaded changes. While the server is processing information, the device waits for a response. If the server takes to long, the client-side device could time out before receiving the response.</p>
        <p>In order to avoid this problem, the user's edits can be sent to the server in batches. As each batch is processed, feedback is sent to the client-side device.</p>
        <p>The 'Synchronization batch size' defines the the number of edits to include in one batch of rows. If the batch size is 0, all edited (i.e. 'dirty') rows in the List are sent simultaneously.</p>
    </discussion>
    <sections>
        <section>
            <figure>
                <description>Synchronization batch size property on the Detail View pane</description>
                <link>images/batch.png</link>
            </figure>
        </section>
        <section>
            <description>To learn more, check out the videos below.</description>
            <videos>
                <title>Batch Data Synchronization</title>
                <description>In a disconnected application, a user may make a large number of edits before they reestablish a connection with the server. When changes are synchronized with the server, the application waits for a response from the server. Synchronizing large amounts of data can take a long time on the server, and the application may time out while waiting for a response. Sending data to the server in batches helps prevent the application from timing out while waiting for synchronization to complete.</description>
                <date></date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/84171164</link>
                </video>
                <resources>
                    <resource>
                        <link>https://www.ajaxvideotutorials.com/V12Videos/ux_synch_in_batches.zip</link>
                    </resource>
                </resources>
            </videos>
        </section>
    </sections>
    <see>
        <ref link="buildingdisconnectedapplications#section1_Synchronizing%20Data">Building Disconnected Applications: Synchronizing Data</ref>
    </see>
</page>