<page build="0">
    <shortlink>ux control properties switch properties</shortlink>
    <topic>Switch Properties</topic>
    <description>Switch controls are ideal for toggling between two states, such as 'Yes' or 'No, in which repeated entry into a field might become onerous.</description>
    <sections>
        <section>
            <figure>
                <title>A Switch Control</title>
                <link>images/switch.png</link>
            </figure>
        </section>
        <section>
            <title>Sub-theme</title>
            <description>Sub-themes allow you to tweak the styling on control types within a component without having to change the main theme of the component. This approach is often preferable to manually changing the styling on individual controls by changing individual style settings. If you leave this property blank the default ('base') sub-theme is used.</description>
        </section>
        <section>
            <description>A sub-theme is a variation on the main theme or 'style' of a component. This main style is defined in the [Style name] property in the [UX Properties] section. Once a style for the component is selected, this will determine the available sub-themes for a given control type. You can create your own sub-themes. For information on how to do this visit the '[Local sub-theme definitions - Javascript]' property page in the [UX Properties] section.</description>
        </section>
        <section build="5771">
            <title>Control container Width</title>
            <description>
                <p>The Control container Width property specifies the width of the container that contains the switch control.</p>
            </description>
            <note>
                <p>This property was previously named the "Width" property in Alpha Anywhere 4.5.5.0 and prior.</p>
            </note>
        </section>
        <section build="5771">
            <title>Switch Width</title>
            <description>
                <p>The width of the Switch control within the control's container. The Switch Width is defined using CSS syntax. Default is 100px.</p>
            </description>
        </section>
        <section>
            <figure>
                <title>Switch width set to .75in</title>
                <link>images/length.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Switch width set to 12cm</title>
                <link>images/length1.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Switch width set to 300px</title>
                <link>images/length2.png</link>
            </figure>
        </section>
        <section>
            <title>Flow</title>
            <description>
                <p>Flow specifies the control's 'flow' direction. This can be left-to-right (LRT) or right-to-left (RTL).</p>
            </description>
        </section>
        <section>
            <figure>
                The Flow control
                <link>images/flow.png</link>
            </figure>
        </section>
        <section>
            <title>Left to Right (LTR)</title>
            <description>If LTR is selected, when the switch control is 'off' the button will be on the left.</description>
            <figure>
                <title>LTR in 'On' position</title>
                <link>images/ltr.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>LTR in 'Off' position</title>
                <link>images/ltr2.png</link>
            </figure>
        </section>
        <section>
            <title>Right to Left (RTL)</title>
            <description>If RTL is used, when the switch is off then the button will be on the right.</description>
            <figure>
                <title>RTL in 'On' position</title>
                <link>images/ltr2.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>RTL in 'Off' position</title>
                <link>images/ltr.png</link>
            </figure>
        </section>
        <section>
            <title>Text for 'on' state</title>
            <description>
                <p>This optional property causes text to be displayed when the switch is in the 'on' state. Because the text is often centered in the middle of the control it might be necessary to increase the width  of the switch control in order to see it.</p>
            </description>
        </section>
        <section>
            <figure>
                <title>Setting the text to read 'True'</title>
                <link>images/text.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>The text for the on state set to read 'True'</title>
                <link>images/text1.png</link>
            </figure>
        </section>
        <section>
            <title>Text for 'off' state</title>
            <description>
                <p>This optional property causes text to be displayed when the switch is in the 'off' state. Because the text is often centered in the middle of the control it might be necessary to increase the width of the switch control in order to see it.</p>
            </description>
        </section>
        <section>
            <figure>
                <title>Setting the text to read 'False'</title>
                <link>images/text3.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Text for the 'off' state now reads 'False'</title>
                <link>images/text4.png</link>
            </figure>
        </section>
        <section>
            <title>'On' value</title>
            <description>
                <p>The stored value for the on state for a character type Switch control.</p>
                <p>If a Switch control's underlying data a "Character" [Type], the *[ui:'On' value]* property can be used to specify the Switch control's value when it is in the 'On' state.</p>
            </description>
        </section>
        <section>
            <title>OnSelect event</title>
            <description>
                <p>Specify JavaScript to run when the Switch control's state changes.</p>
                <p>The Switch builder allows you to specify an OnSelect event which is fired when the state of the switch is changed. The JavaScript in the OnSelect event can reference the value of the switch using the *[js:this]* variable. For example:</p>
            </description>
        </section>
        <section>
            <example code="js"><![CDATA[var state = this.value;
// test the value for a Switch control bound to a Logical data type:
if (state == true) {
    alert("Switch is on!");
} else {
    alert("Switch is off!");
}]]></example>
        </section>
    </sections>
    <links>
        <link link="ux properties local subtheme definitions javascript">Local sub-theme definitions - Javascript</link>
        <link link="ux properties">UX Properties</link>
        <link link="ux properties style name">Style name</link>
        <link link="UX Control Field Properties Type">Type</link>
    </links>
    <!--order:
Sub-theme
Width
Flow
Text for 'on' state
Text for 'off' state
'On' value
'Off' value
OnSelect event
-->
</page>