<page build="8245">
    <shortlink>radiobutton jscontrol</shortlink>
    <topic parent="RadioButton Properties" parentType="guide" elementName="Javascript control">RadioButton Properties | Javascript control</topic>
    <description>Enables rendering the control as a "Javascript control", which allows full customization of the look of the radio button options and gives access to JavaScript methods to manipulate the choices in the control.</description>
    <discussion>
        <p>By default, the radio button control is rendered using the HTML input control (e.g. &lt;input type="radiobutton"). The default HTML input control is difficult to customize the look and feel. It also lacks JavaScript methods for repopulating the radio button options easily.</p>
        <p>The *[ui:Javascript control]* option converts the radio button control into a JavaScript radio button control. As a JavaScript control, Alpha Anywhere creates a JavaScript object you can use in client-side scripts to manipulate the options in the control. You also gain more options to customize how the radio button markers are rendered.</p>
        <p>For example, in the images below, the radio button control has been rendered with custom SVG icons for the on and off state.</p>
    </discussion>
    <sections>
        <section>
            <figure>
                <link>images/radioJS1.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <link>images/radioJS2.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>To turn on the Javascript control option, check the Javascript control property in the Property Sheet.</p>
            </description>
            <figure>
                <link>images/jscontrol3.gif</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The Settings property will then be revealed. To define control settings, click the smart field.</p>
            </description>
            <figure>
                <link>images/jscontrol4.jpg</link>
            </figure>
        </section>
        <section>
            <title>Configuring Control Settings</title>
            <description>
                <p></p>
            </description>
            <cases>
                <case>
                    <title nested="2">Class name</title>
                    <description>
                        <p>Optional classes to apply to the control.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Disabled class name</title>
                    <description>
                        <p>Optional classes to apply to the control when it's disabled.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">In-line style</title>
                    <description>
                        <p>Optional in-line styles to apply to the control.</p>
                    </description>
                </case>
            </cases>
        </section>
        <section>
            <title>Configuring Marker Options</title>
            <description>
                <p>You can specify the Marker style. The option are:</p>
            </description>
            <cases>
                <case>
                    <title nested="2">Style</title>
                    <description>
                        <p>The control style.</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Style</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>input</name>
                                    <description>Radio button is rendered using the standard HTML input control.</description>
                                </item>
                                <item>
                                    <name>icon</name>
                                    <description>Radio button is rendered using SVG icons to represent the on and off state.</description>
                                </item>
                                <item>
                                    <name>html</name>
                                    <description>Radio button is rendered using HTML text to represent the on and off state.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </case>
                <case>
                    <title nested="2">Icon type</title>
                    <description>
                        <p>Shown when *[ui:Style]* is *[icon]*.</p>
                        <p>The *[ui:Icon type]* defines how the marker for the radio button control is rendered. It can use the HTML input control, SVG Icons, or custom HTML.</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Icon type</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>Default</name>
                                    <description>Use the default icon in a default size.</description>
                                </item>
                                <item>
                                    <name>Large</name>
                                    <description>Use the default icon in a large size.</description>
                                </item>
                                <item>
                                    <name>Custom</name>
                                    <description>Specify the icons and sizes to use.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </case>
                <case>
                    <title nested="2">Icon - on</title>
                    <description>
                        <p>Shown when *[ui:Style]* is *[icon]* and *[ui:Icon type]* is *[Custom]*.</p>
                        <p>The icon to use when the radio button is checked.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Icon - off</title>
                    <description>
                        <p>Shown when *[ui:Style]* is *[icon]* and *[ui:Icon type]* is *[Custom]*.</p>
                        <p>The icon to use when the radio button is unchecked.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">HTML - on</title>
                    <description>
                        <p>Shown when *[ui:Style]* is *[html]*.</p>
                        <p>The HTML to render when the radio button is checked.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">HTML - off</title>
                    <description>
                        <p>Shown when *[ui:Style]* is *[html]*.</p>
                        <p>The HTML to render when the radio button is unchecked.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Class name</title>
                    <description>
                        <p>Optional class names to apply to the radio button marker.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Disabled class name</title>
                    <description>
                        <p>Optional class names to apply to the radio button marker when it's disabled.</p>
                    </description>
                </case>
                <case>
                    <title nested="2">In-line style</title>
                    <description>
                        <p>Optional in-line styles to apply to the radio button marker.</p>
                    </description>
                </case>
            </cases>
        </section>
        <section>
            <title>Getting the Control's JavaScript Object</title>
            <description>
                <p>To get a pointer to the radio button's JavaScript object, use the [{dialog.object}.getControl()] method. For example:</p>
                <p>
                    <example code="js"><![CDATA[var radioObj = {dialog.object}.getControl("RADIOBUTTON_1");
if (radioObj) {
    ' Object exists! Can call methods on it.
}]]></example>
                </p>
                <p>Once you have a pointer to the object, you can call methods on the object, such as the populate() method to repopulate the choices in the control.</p>
                <p>The following methods are available:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Method</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>*[js:populate()]*</name>
                            <description>
                                <p>Updates the control's choices. This method can be used to replace or add the control's options.</p>
                                <p>
                                    <example code="js"><![CDATA[var obj = {dialog.object}.getControl('RADIOBUTTON2');
if (obj) {
	var arr = [];
	arr.push({"html":"Mon","value":"1"});
	arr.push({"html":"Tue","value":"2"});
	arr.push({"html":"Wed","value":"3"});
	arr.push({"html":"Thu","value":"4"});
	arr.push({"html":"Fri","value":"5"});
	arr.push({"html":"Sat","value":"6"});
	arr.push({"html":"Sun","value":"7"});
	
	var keep = false;
	var animate = true;
	
	obj.populate(arr,keep,animate);
	obj.refresh();
}]]></example>
                                </p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:refresh()]*</name>
                            <description>
                                <p>Redraws the control. The *[js:refresh()]* method is usually called after repopulating the control's choices using the *[js:populate()]* method.</p>
                                <p>
                                    <example code="js"><![CDATA[var obj = {dialog.object}.getControl('RADIOBUTTON2');
if (obj) {
    obj.refresh();
}]]></example>
                                </p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:setDisabled()]*</name>
                            <description>
                                <p>Enables or disables the control. The control can also be enabled or disabled using the [{dialog.object}.setDisabled()] method.</p>
                                <p>
                                    <example code="js"><![CDATA[var obj = {dialog.object}.getControl('RADIOBUTTON2');
if (obj) {
    if (Reflect.has({dialog.object}._myvars, 'radioEnabled') == false) {
        {dialog.object}._myvars.radioEnabled = true;
    }
    obj.setDisabled({dialog.object}._myvars.radioEnabled);
    {dialog.object}._myvars.radioEnabled = !{dialog.object}._myvars.radioEnabled;
}]]></example>
                                </p>
                            </description>
                            <tip>
                                <p>See *[extlink:Reflect (MDN)@https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect]* to learn more about this native built-in JavaScript object.</p>
                            </tip>
                        </item>
                        <item>
                            <name>*[js:setValue()]*</name>
                            <description>
                                <p>Sets the control's value. The value can also be set using the [{dialog.object}.setValue()] method.</p>
                                <p>
                                    <example code="js"><![CDATA[var obj = {dialog.object}.getControl('RADIOBUTTON2');
if (obj) {
    var value = parseInt({dialog.object}.getValue('RADIOBUTTON2'),10);
    value += 1;
    value = (value > 7)? 1:value;
    obj.setValue(value+"");
}]]></example>
                                </p>
                            </description>
                        </item>
                    </list>
                </p>
            </description>
            <note>
                <p>A radio button only has a JavaScript object when *[ui:Javascript control]* is enabled.</p>
            </note>
        </section>
        <section>
            <title>Videos</title>
        </section>
        <section>
            <videos>
                <title>Rendering RadioButton, CheckBox and DropDownBox as a Javascript Control</title>
                <description>
                    <p>By default, the RadioButton, CheckBox and DropDownBox controls are not Javascript controls (like the List control, for example) and as such, you can't call methods on the control to repopulate the choices shown in the control. You can however specify that these controls should be rendered as Javascript controls (which will then allow the choices in the control to be set using the control's .populate() method).</p>
                    <p>In this video, we show how a RadioButton control can be rendered as a Javascript control.</p>
                </description>
                <date></date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.youtube.com/watch?v=R5EFFRKJ6hE</link>
                </video>
                <resources>
                    <resource>
                        <link>http://alphamediacapture.s3.amazonaws.com/videos/radiobutton_javascriptControl.zip</link>
                    </resource>
                </resources>
            </videos>
        </section>
    </sections>
    <links>
        <link link="ux%20component%20setdisabled%20method">{dialog.object}.setDisabled()</link>
        <link link="ux%20component%20setvalue%20method">{dialog.object}.setValue()</link>
    </links>
</page>