<page>
    <shortlink>uxembedded component definition</shortlink>
    <topic>Component Definition</topic>
    <description>Properties for a component embedded in a UX Component.</description>
    <sections>
        <section>
            <figure>
                <link>images/props.png</link>
            </figure>
        </section>
        <section>
            <title>Component name</title>
            <description>The name of the component embedded in the UX. E.g., if a Grid called "Customers.a5wcmp" is embedded in the UX, the *[ui:Component name]* would be "Customers".</description>
        </section>
        <section>
            <title>Component type</title>
            <description>The embedded component type. E.g. "Grid", "UX".</description>
        </section>
        <section>
            <title>Component alias</title>
            <description>
                <p>The embedded component's alias. If you specify &lt;DefaultAlias&gt; a default alias will be used. If you specify an explicit alias, that value (prefixed with the alias of this component) will be used.</p>
                <p>It is recommended to give the embedded component an explicit alias. This allows you to use methods such as {dialog.object}.getChildComponent() to get a pointer to the embedded component.</p>
            </description>
        </section>
        <section>
            <title>Base Filter</title>
            <description>An optional base filter for the component. The Base filter cannot be removed by the user. The Grid is filtered on both the Base filter and the User filter.</description>
            <note>
                <p>Base Filter only applies to an embedded Grid component.</p>
            </note>
        </section>
        <section>
            <title>User Filter</title>
            <description>An optional user filter. The User filter can be removed if the user executes a  'Show All' command. The Grid is filtered on both the Base filter and the User filter.</description>
            <note>
                <p>User Filter only applies to an embedded Grid component.</p>
            </note>
        </section>
        <section>
            <title>Link</title>
            <description>
                <p>When you link a Grid, the records in the target Grid are filtered on the linking fields.</p>
                <p>In addition, when the user enters new records into the target Grid, the linking field(s)  are automatically filled in with the linking value(s) from the current row in the source Grid. This means that any new records that are entered are automatically 'linked' to the current record in the Grid.</p>
                <p>It is possible for Grid components to be linked on multiple fields (e.g. Firstname and Lastname).</p>
                <p>It is possible to define a Link and also a Filter. The Filter will further restrict the records shown in the target Grid.</p>
                <p>For example, you might link a Grid on a common 'CustomerId' field and then specify a filter of 'OrderAmount &gt; 1000'. The records shown in the target grid will be all those for which the 'CustomerId' matches the 'CustomerId' in the current record AND those records with an OrderAmount &gt; 1000.</p>
            </description>
        </section>
        <section>
            <title>Live link</title>
            <description>If checked, the Grid will be refreshed if the value in any Linked controls changes.</description>
        </section>
        <section>
            <title>Order</title>
            <description>An optional order.</description>
        </section>
        <section>
            <title>Argument bindings</title>
            <description>Defines the value for arguments in the embedded object. Arguments can be populated from fields in the UX Component.</description>
        </section>
        <section>
            <title>Use master style</title>
            <description>Use the style specified in the 'Additional Grid Styles' property.</description>
            <important>
                <p>The style used by the target component must be specified in the 'Additional Grid Styles' property, or else the CSS for the target component will not be loaded.</p>
            </important>
        </section>
        <section>
            <title>Override settings</title>
            <description>You can define override settings in the component. You may need to specify additional "flags" if the settings being overridden require recomputing the component. See [How to Override Grid Component Settings in an .a5w page or OnGridExecute event] for more information about flags.</description>
        </section>
        <section>
            <title>Working message</title>
            <description>Specify the message to display while the server computes the Grid before it is displayed for the first time.</description>
        </section>
        <section>
            <title>onLoadComplete Javascript</title>
            <description>Specify the Javascript to run when this embedded component has finished loading.</description>
            <note>
                <p>This code runs in the context of the embedded UX (so, for example, {dialog.object} refers to the embedded UX object, not the component in which the UX has been embedded).</p>
            </note>
        </section>
    </sections>
    <links>
        <link link="how to override certain settings in the a5w page or in the ongridexecute event">How to Override Grid Component Settings in an .a5w page or OnGridExecute event</link>
    </links>
</page>