<page>
    <shortlink>formviewbuilder twostateswitch settings</shortlink>
    <topic>FormView Two-state Switch Settings</topic>
    <description>If you select 'Two-State' in the Switch Properties section of the Form View Builders Form Layout control, you then have the option of defining the Two-state switch. These settings let you customize switches as well.
    </description>
    <sections>
        <section>
            <title>Custom switch type</title>
            <description>
                <p>If you have defined the Switch type as Custom, then you have the option of using either an icon or HTML as the 'Custom switch type'.</p>
            </description>
            <figure>
                <title>A 'Custom switch type using' 'on' and 'off' icons</title>
                <link>images/custom2.png</link>
            </figure>
        </section>
        <section>
            <title>Off HTML</title>
            <description>
                <p>Specify the HTML to show when the switch is 'off'.</p>
            </description>
        </section>
        <section>
            <title>On HTML</title>
            <description>
                <p>Specify the HTML to show when the switch is 'on'.</p>
            </description>
        </section>
        <section>
            <title>On icon</title>
            <description>
                <p>Specify the icon to show when the switch is 'On'</p>
            </description>
            <figure>
                <title>The On icon property</title>
                <link>images/onicon.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Custom On icon updating a list</title>
                <link>images/custom3.png</link>
            </figure>
        </section>
        <section>
            <description>If you select 'Icon' for the 'Custom Switch type' property, after choosing 'Custom' in the 'Switch type' property, you can then specify your own icon. There are several types of icons that you can use. These include: SVG icons, CSS icons, Images in the Web Project or Style folder, Built-in Images, and URLs to external images.</description>
        </section>
        <section>
            <title nested="2">Adding images from the Web Project or Style Folder</title>
            <description>This is one of the easier ways to add png, bitmap, jpg, etc... images from a desktop. </description>
            <steps>
                <step>
                    <description>Define the custom 'on' image you want to use</description>
                    <figure>
                        <link>images/customon.png</link>
                    </figure>
                </step>
                <step>
                    <description>Next click the [...] button next to the 'On icon' property to load the Specify image dialog. By default the icon is set to a small green circle defined in Alpha Anywhere's built-in icons folder. </description>
                    <figure>
                        <link>images/onicon2.png</link>
                    </figure>
                </step>
                <step>
                    <description>Select the Image in Web Project or Style radio button, then click 'Select'. Choose "Select from Web Project Folder".</description>
                    <figure>
                        <link>images/imageblank.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the "Add Image to Project" button</description>
                    <figure>
                        <link>images/onicon3.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the up button to specify a Source filename.</description>
                    <figure>
                        <link>images/onicon4.png</link>
                    </figure>
                </step>
                <step>
                    <description>Navigate to the icon you want to use and click 'Open'. Then click Ok and Ok again.</description>
                    <figure>
                        <link>images/onicon5.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click OK Again to close the Specify Image dialog.</description>
                    <figure>
                        <link>images/custom.png</link>
                    </figure>
                </step>
                <step>
                    <description>Run the component in Live Preview.</description>
                    <figure>
                        <link>images/custom5.png</link>
                    </figure>
                </step>
            </steps>
        </section>
        <section>
            <title>Switch type</title>
            <description>
                <p>Switch type specifies how the switch should be rendered. The 'Default' setting uses the standard 'switch' control. This generally takes the form of whatever Style name is defined for the project in the UX Properties sections of the UX Properties page. The 'Custom' setting allows you to specify icons and or text to show for the 'on' and 'off' states.</p>
            </description>
        </section>
        <section>
            <title>Switch width</title>
            <description>
                <p>If you are using a default switch, then this specifies the switch width using CSS syntax, e.g. 200px, 2in, etc.</p>
            </description>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Switch Control</title>
                <description>
                    <p>Most fields in a FormView control are edited in an associated 'editor'. When the user taps on the field in the Form, the associated editor is opened, the user edits the form field value and then saves the edited value back to the form. This is called 'indirect editing'. </p>
                    <p>There are cases, however, where 'immediate' editing of a value would be more convenient than having to go to a separate editor to edit the value. A good use case for an 'immediate' editor is a toggle field that has two states, such as 'Yes' or 'No' for a 'Married' field. A 'switch' control is ideal for this use case. </p>
                    <p>In this video we show how you can add a switch control to a FormView. The switch control acts as an 'immediate' editor.</p>
                </description>
                <date>2015-08-10</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/593c1828</link>
                </video>
                <resources>
                    <resource>
                        <link>www.ajaxvideotutorials.com/V12Videos/FormViewSwitch.zip</link>
                    </resource>
                </resources>
            </videos>
        </section>
    </sections>
    <links>
        <link href="/images/tools/ellipsesButton.png">...</link>
    </links>
</page>