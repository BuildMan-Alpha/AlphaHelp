<page build="4152">
   <shortlink>formview fields lookup properties</shortlink>
   <topic>Lookup Properties</topic>
   <description>Lookup Properties</description>
   <!--order:
haslookupvalue.xml
lookuptype.xml
listname.xml
keyfield.xml
returnfield.xml
javascriptfunction.xml
-->   <!--list:.-->
    <sections>
        <section>
            <description>
                <p>You can define lookup fields in the FormView. This allows you to display 'friendly' values in the Form (e.g. product name, rather than product id).</p>
                <p>To define a Lookup field, go to the Fields tab in the FormView builder and check the *[ui:Has Lookup value]* property.</p>
                <p>You can then define the Lookup. The lookup data source can be a List control or a Javascript function.</p>
            </description>
            <figure>
                <link>images/formviewlookup.jpg</link>
            </figure>
        </section>
        <section>
            <title>Using the Client-Side Data Cache or SQLite in a Lookup</title>
            <description>You may want to use the client-side data cache or a query against a SQLite database (in a Cordova application) as the data source for your Lookup. This requires a two-step process because reading data from the client-side data cache, or from a SQLite database can only be done asynchronously. Therefore you must first execute some code that reads the client-side data cache or executes a SQLite query and puts the data in a variable in memory. You can then define the Lookup in the FormView builder to use the Javascript Function option, performing the lookup against the data you have loaded into memory.</description>
        </section>
    </sections>
</page>
