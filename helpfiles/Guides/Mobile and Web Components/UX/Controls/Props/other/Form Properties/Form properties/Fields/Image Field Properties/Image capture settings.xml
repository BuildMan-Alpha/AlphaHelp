<page>
    <shortlink>ux formview builder Image capture settings</shortlink>
    <topic>Image capture settings</topic>
    <description>Clicking on the Image capture settings property will open the Image Capture Properties Genie.
        This Genie allows you to capture an image. On a device that has a camera, the image is captured using the camera.
        For devices that do not support a camera, you can choose an image from the filesystem. Camera access is either 
        done using Cordova or HTML5. Once the image has been captured a Javascript event is fired.
    </description>
    <sections>
        <section>
            <figure>
                <title>The Image Capture Properties genie</title>
                <link>images/capturegenie.png</link>
            </figure>
        </section>
        <section>
            <title>Image Capture Properties</title>
        </section>
        <section>
            <title>Javascript to execute when image has been captured</title>
            <description>
                <p>JavaScript to call once the image has been captured. Several JavaScript variables are available for use in your script:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Variable</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>*[js:e.data]*</name>
                            <description>
                                <p>The base64 encoded image data with the correct prefix. For example, *[js:data:image/jpeg;base64,]*</p>
                                <p></p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:e.fileSystemURL]*</name>
                            <description>The URL on the file system where the image is stored. This option is only available in a Cordova app and the *[ui:PhoneGap]* or *[ui:PhoneGapPreferred]* method has been specified for the image capture method. In the case where you select a Video from the Photo Library, only e.fileSystemURL is available.</description>
                        </item>
                        <item>
                            <name>*[js:options.EXIF.latitude]*</name>
                            <description>
                                <p>The latitude where the image was captured.</p>
                                <p>Only available if the *[ui:Camera with Exif]* 3rd party plugin has been included in your Cordova app. EXIF information is not provided for Videos selected from the Photo Library.</p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:options.EXIF.longitude]*</name>
                            <description>
                                <p>The longitude where the image was captured.</p>
                                <p>Only available if the *[ui:Camera with Exif]* 3rd party plugin has been included in your Cordova app. EXIF information is not provided for Videos selected from the Photo Library.</p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:options.EXIF.altitude]*</name>
                            <description>
                                <p>The altitude at which the image was captured.</p>
                                <p>Only available if the *[ui:Camera with Exif]* 3rd party plugin has been included in your Cordova app. EXIF information is not provided for Videos selected from the Photo Library.</p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:options.EXIF.dateTime]*</name>
                            <description>
                                <p>The date and time the image was captured.</p>
                                <p>Only available if the *[ui:Camera with Exif]* 3rd party plugin has been included in your Cordova app. EXIF information is not provided for Videos selected from the Photo Library.</p>
                            </description>
                        </item>
                        <item>
                            <name>*[js:options.EXIF.ExifJSON]*</name>
                            <description>
                                <p>A JSON string with all of the EXIF data returned by the camera.</p>
                                <p>Only available if the *[ui:Camera with Exif]* 3rd party plugin has been included in your Cordova app. EXIF information is not provided for Videos selected from the Photo Library.</p>
                            </description>
                        </item>
                    </list>
                </p>
                <p>You can use this function to, for example, set the 'src' attribute of an image element to display the image:</p>
                <p>
                    <example code="js"><![CDATA[$('image1').src = e.data;]]></example>
                </p>
                <p>If the app is a Cordova application and *[ui:PhoneGap]* or *[ui:PhoneGapPreferred]* has been selected for the *[ui:Image capture method]*, you can reference the URL where the file was stored on the device to display the image in your app:</p>
                <p>
                    <example code="js"><![CDATA[$('image1').src = {dialog.object}.addCustomSchemeForAlphaWkWebView(e.fileSystemURL);]]></example>
                </p>
            </description>
            <note>
                <p>The .addCustomSchemeForAlphaWkWebView() method adds a custom URL scheme to the file URL so that the image can be displayed in HTML.</p>
            </note>
        </section>
        <section>
            <title>Image capture method</title>
            <description>The method for obtaining the image. If the component is running in a mobile application built with Cordova CLI or Ionic Appflow, then you can access the device camera if this setting is set to *[ui:PhoneGap]* or *[ui:PhoneGapPreferred]*. If the app is not a Cordova application, the *[ui:HTML5]* method should be used. *[ui:PhoenGapPreferred]* will default to *[ui:HTML5]* if the application is not running as a Cordova app.</description>
        </section>
        <section>
            <title>HTML5 Options</title>
        </section>
        <section>
            <title>Resize image</title>
            <description>The policy for resizing the image. *[ui:Always]* means that the image will always be resized, regardless of its raw size. *[ui:Only if Image Exceeds Max Size]* will only resize the raw image if the maximum size is exceeded. </description>
        </section>
        <section>
            <title>Image compression</title>
            <description>The image compression factor to use when capturing an image using HTML5. *[ui:1]* means no compression and *[ui:0]* is maximum compression. Using maximum compression may result in artifacts depending on the size of the image.</description>
        </section>
        <section>
            <title>Max image height</title>
            <description>THe Maximum height of the image in pixels</description>
        </section>
        <section>
            <title>Max image width</title>
            <description>The Maximum width of the image in pixels. Below are a series of form view controls with the Max image width altered for a picture field.</description>
            <cases>
                <case>
                    <figure>
                        <title>The default 512px width with .25 compression</title>
                        <link>images/maxw.png</link>
                    </figure>
                </case>
                <case>
                    <figure>
                        <title>206px max width with .25 compression</title>
                        <link>images/maxw2.png</link>
                    </figure>
                </case>
                <case>
                    <figure>
                        <title>100px max width with .25 compression</title>
                        <link>images/maxw3.png</link>
                    </figure>
                </case>
            </cases>
        </section>
        <section>
            <title>Client-side events</title>
        </section>
        <section>
            <title>Before image capture</title>
            <description>
                <p>JavaScript to run before the image is captured. If your code returns *[js:false]*, the image capture is cancelled.</p>
                <p>
                    <example code="js"><![CDATA[// cancel image capture
return false;]]></example>
                </p>
            </description>
        </section>
    </sections>
    <see>
        <ref link="ux form view control displaying captured images using a form view">Displaying Captured Images Using a Form View</ref>
    </see>
</page>