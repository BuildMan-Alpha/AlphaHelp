<page build="5324">
    <shortlink>ux advancedlistsearch control</shortlink>
    <topic>AdvancedListSearch</topic>
    <description>Adds the ability to search a List control with a highly-configurable interface that lets the user add and remove fields from the search criteria.</description>
    <discussion>
        <p>The AdvancedListSearch control can be used to search a List control based on a SQL database. Search fields are added on-demand with options to customize the of control -- e.g. textbox, dropdown list, radio buttons, date range, etc -- shown to the user. Searches can also be saved and loaded by enabling the application Repository in the Web Project Properties.</p>
    </discussion>
    <sections>
        <section>
            <title>Configuring the AdvancedListSearch Control</title>
            <description>
                <p>The configuration dialog for the AdvancedListSearch control is shown below. The left hand list shows the fields that the user can select from when adding a new field to the search at run-time. You can add new fields to this list by clicking on the *[ui:Add new search field...]* button. The properties for the selected item will be shown to the right.</p>
            </description>
        </section>
        <section>
            <figure>
                <link>images/advsearch_configure.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When you click on the the Add Field button a dialog is shown that allows you to pick one of the available fields in the List control.</p>
                <p>For each field you select, you must also select the corresponding control type for that field.</p>
                <p>For example, if you pick a logical field, you will likely want to select the switch control for that field. On the other hand, say you pick a field called Lastname, you might want to select the suggest control for that field. This will display an auto-suggest list as the user starts typing values into the search field.</p>
            </description>
            <figure>
                <link>images/advsearchaddfield.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>You can customize all of the icons and prompts shown in the Auto Suggest control. To do so, click the Customize Buttons and Strings for the Advanced Search Control button. This will display the dialog shown below. You can use language and text dictionary tags in the strings (e.g. &lt;a5:r&gt;...&lt;/a5:r&gt; or &lt;a5:t&gt;..&lt;/a5:t&gt; )</p>
            </description>
            <figure>
                <link>images/advsearchcustomizestrings.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>You can customize certain aspects of the Advanced Search control by clicking the Customize Search Options button. This will display the dialog shown below:</p>
            </description>
            <figure>
                <link>images/advsearch_searchoptions.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>You can enable/disable the ability to save and load previously defined advance searches. You can also specify if debugging information should be shown. If you turn on debugging information, the WHERE clause computed from the search definition is shown, as well as the argument values for the arguments referenced in the WHERE clause.</p>
                <p>If you turn on debugging information, you must specify where this information should be shown. In the case of a UX component, place a Placeholder control on the UX. The dialog will prompt for the name of the placeholder.</p>
                <p>The Unique key property is shown if either the load or save query options is enabled. This property is added to the name of the saved query in the Repository table where queries are saved (see below for more information on Loading and Saving queries). This property allows you to ensure that when you click the Load Query button, only saved queries that match the Unique key are shown.</p>
            </description>
        </section>
        <section>
            <title>Loading and Saving Queries</title>
            <description>
                <p>In order to save queries you must define a *[ui:Repository]* table in the Project Properties dialog. To open the Project Properties dialog, click the Project Properties button in the Web Control Panel.</p>
            </description>
            <figure>
                <link>images/configurerepotable.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>You can define the connection string to the database where the *[ui:Repository]* table will be stored. You can link to an existing table or create a new table. Click the smart field for any of the properties to open a builder.</p>
            </description>
        </section>
        <section>
            <title>Configuring the UX to Show Debugging Information</title>
            <description>
                <p>When you run a query in the Advanced Search control you can display the WHERE clause that Alpha Anywhere computed from your query definition.</p>
                <p>To turn on debugging information check the *[ui:Display debugging information]* property in the Customize Search Options dialog.</p>
                <p>You can specify a Placeholder control in the UX Component where the debugging information will be shown.</p>
            </description>
        </section>
        <section>
            <title>Properties</title>
            <description>
                <p>You can configure the label and control type for the fields added to the AdvancedListSearch. Additional properties for configuring each item depends on the *[ui:Control type]*. The control type is the control shown for the search field:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Type</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>textbox</name>
                            <description>A textbox. The user types the search criteria into the textbox.</description>
                        </item>
                        <item>
                            <name>datepicker</name>
                            <description>A textbox with a calendar that can be used to select a date.</description>
                        </item>
                        <item>
                            <name>daterangepicker</name>
                            <description>Similar to the datepicker. Used for selecting a date range. User is shown two calendars to select the start and end dates.</description>
                        </item>
                        <item>
                            <name>step</name>
                            <description>A textbox control with increment and decrement buttons. The value can be entered manually or modified by clicking the buttons.</description>
                        </item>
                        <item>
                            <name>switch</name>
                            <description>A switch control. Commonly used with logical fields or fields that only have two states (such as "on" and "off".)</description>
                        </item>
                        <item>
                            <name>combolist</name>
                            <description>A textbox with a dropdown picklist of choices. The user can either type to select a value or choose one from the picklist.</description>
                        </item>
                        <item>
                            <name>buttonlist</name>
                            <description>Displays a set of choices as a button list.</description>
                        </item>
                        <item>
                            <name>suggest</name>
                            <description>A textbox that displays an auto-suggest list as the user types into the search field.</description>
                        </item>
                    </list>
                </p>
                <p>The combolist, buttonlist, and suggest control types can be statically or dynamically populated. If the control will be dynamically populated, a callback to the server is made at run-time to retrieve the list of options from the SQL data source.</p>
                <p></p>
            </description>
        </section>
        <annotations>/Guides/Mobile and Web Components/UX/Controls/More/inserting.xml</annotations>
        <section>
            <title>Methods</title>
            <description>
                <p>The AdvancedListSearch control is a Data control and can be used with the same methods as other [Data controls], including the [getValue()] and [setValue()] methods. These methods can be used to get or set the query definition for the control.</p>
            </description>
            <example code="js"><![CDATA[var search = {dialog.object}.getValue('ADVANCEDSEARCH1');
alert(search);]]></example>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Using the AdvancedListSearch Control to Search in a List Based on SQL Database</title>
                <description>
                    <p>For UX Components that contain List controls that are based on SQL databases,  the Advanced Search control exposes powerful features for users to search for specific records in a List. The Advanced Search Control allows users to define complex queries and to save these queries to a repository for future reuse.</p>
                    <p>In this video we show how the Advanced Search Control is added to a UX component and how it is configured.</p>
                </description>
                <date>2018-09-08</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/4a2b0717</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link link="ux controls data controls">Data controls</link>
        <link link="ux component getvalue method">getValue()</link>
        <link link="ux component setvalue method">setValue()</link>
    </links>
    <see>
        <ref link="grid advanced search">Grid Component Advanced Search</ref>
    </see>
</page>