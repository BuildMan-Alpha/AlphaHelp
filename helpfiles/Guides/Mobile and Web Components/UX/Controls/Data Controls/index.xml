<page>
    <shortlink>UX Controls Data Controls</shortlink>
    <topic>Data Controls</topic>
    <description>Data Controls are controls used to create interfaces for manipulating and editing data from a data source (e.g. SQL database, web service, static data, etc.)</description>
    <!--list:.-->
    <discussion>
        <p>A Data Control is an interface, such as a TextBox or DropdownBox, that can be used to display and/or edit data from a data source (database, web service, etc.) The control in the UX Component is either generated as an HTML input control or as a more complex control - such as the List control - that contains multiple elements (toolbars, buttons, a custom client-side layout, etc) that can be used to interact with the data.</p>
    </discussion>
    <sections>
        <section>
            <title>Working with Data Controls in Javascript</title>
            <description>
                <p>Javascript can be written to interact with a Data Control programmatically. This is done by calling methods on the UX Component object, which is represented in your javascript code using the [{dialog.object}] placeholder object. The following methods can be used to interact with Data Controls (click the method name for additional information):</p>
            </description>
            <list>
                <item>
                    <name-title>UX Method</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>[getValue]</name>
                    <description>Get the current value of the Data Control. Works with all Data Controls.</description>
                </item>
                <item>
                    <name>[setValue]</name>
                    <description>Set the current value of the Data Control. Works with all Data Controls.</description>
                </item>
                <item>
                    <name>[setValueFrom]</name>
                    <description>Sets the value in a target control with the value from a source control. This is the equivallent of calling getValue to get the value from one Data Control and then calling setValue to set the value in another Data Control. Works with all Data Controls.</description>
                </item>
                <item>
                    <name>[setControlDisplay]</name>
                    <description>Show or hide the Data Control.</description>
                </item>
                <item>
                    <name>[setDisabled]</name>
                    <description>Enable or disable the Data Control.</description>
                </item>
                <item>
                    <name>[setFocus]</name>
                    <description>Set the focus to the Data Control.</description>
                </item>
                <item>
                    <name>[getPointer]</name>
                    <description>Get a pointer to the DOM element for the Data Control.</description>
                </item>
                <item>
                    <name>[getControl]</name>
                    <description>Get a Javascript object for the Data Control that can be used to perform more complex operations or access/manipulate the Data Control's settings. This method is only available for more complex controls, such as a Slider, Date Picker, Map, List, ViewBox, etc. Basic controls, such as a TextBox or Label, do not have Javascript objects.</description>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>The methods above are not limited to Data Controls. Other controls can also be manipulated by these methods, however not every control is supported by all methods. For example, controls that do not have a value, such as a Container, cannot be used with the getValue or setValue methods.</p>
                <p>Alpha Anywhere's popup help for javascript functions includes access to menus and builders that can be used to help write javascript code. If you are unsure if a control can be used with a method, the popup help for some methods includes the ability to display a list of IDs for the supported controls available in the UX Component.</p>
            </description>
            <figure>
                <title>Right-clicking the popup help for getControl will display a list of the controls that can be used with the method.</title>
                <link>images/autoCompleteHelp.png</link>
            </figure>
        </section>
    </sections>
    <links>
        <link link="ux component methods">{dialog.object}</link>
        <link link="ux component getvalue method">getValue</link>
        <link link="ux component setvalue method">setValue</link>
        <link link="ux component setvaluefrom method">setValueFrom</link>
        <link link="ux component getcontrol method">getControl</link>
        <link link="ux component getpointer method">getPointer</link>
        <link link="ux component setdisabled method">setDisabled</link>
        <link link="ux component setcontroldisplay method">setControlDisplay</link>
        <link link="ux component setfocus method">setFocus</link>
    </links>
</page>