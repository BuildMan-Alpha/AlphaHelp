<page>
    <shortlink>ux ViewBox State guide</shortlink>
    <topic>ViewBox State</topic>
    <description>The term 'state' is used to describe state information. This information can be about data or it can be about other things, like portions of the view. It can be information about whether data is dirty, information that identifies data, or information that sets the background color of a view.</description>
    <sections>
        <section>
            <figure>
                <title>A button being used to set state data to replace existing values</title>
                <link>images/vs15.png</link>
            </figure>
        </section>
        <section>
            <description>This can be very useful in displaying temporary data where you don't want to make any alterations to the actual data. For example, say you have data coming out of a record that includes 'firstname', 'lastname', 'city', and 'zip'. When the 'firstname' changes, i.e. is updated on the client, that change needs to be synched with the server. Having a state object, like {firstnameIsDirty:true}, will make the html that is spit out by the viewbox template show the dirty state information about the 'firstname' change, without passing this information on to the server. To sum things up, the state variable gets information into the template html without having to place this information in the data on the server.State information is generated using javascript functions such as getState(), setState(), and clearState(). For more information on the ViewBox state watch [this video] or follow the guide below.</description>
        </section>
        <section>
            <title>Create a Button that Sets the ViewBox State</title>
            <steps>
                <step>
                    <description>In the UX Builder on the UX Controls page open the 'Data Controls'. Click on the [ViewBox] option to add a viewbox control to the component.</description>
                    <figure>
                        <link>images/vs2.png</link>
                    </figure>
                </step>
                <step>
                    <description>Highlight the viewbox control. In the properties list click the [...] button next to the 'ViewBox properties' property in the ViewBox Properties section. </description>
                    <figure>
                        <link>images/vs3.png</link>
                    </figure>
                </step>
                <step>
                    <description>Open the ViewBox Builder's 'Data Source' pane. Click the [...] button next to the 'ViewBox type' property and select the 'Data' option. </description>
                    <figure>
                        <link>images/vs4.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the 'ViewBox Data' section set the 'Datasource type' property to 'Static JSON'.</description>
                    <figure>
                        <link>images/vs5.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the [...] button next to the 'Static JSON' property.</description>
                    <figure>
                        <link>images/vs6.png</link>
                    </figure>
                </step>
                <step>
                    <description>Add a pair of curly brackets for to the Static JSON Data dialog.</description>
                    <example code="json"><![CDATA[{}]]></example>
                    <figure>
                        <link>images/vs7.png</link>
                    </figure>
                </step>
                <step>
                    <description>Open the ViewBox Layout pane. Select the 'Freeform editor' option.</description>
                    <figure>
                        <link>images/vs8.png</link>
                    </figure>
                </step>
                <step>
                    <description>Add the following HTML to the freeform layout the click OK to close the ViewBox Builder:</description>
                    <example code="cst"><![CDATA[Value of [temp].state.var1: <b>{[temp].state.var1||No value set}</b>]]></example>
                    <figure>
                        <link>images/vs9.png</link>
                    </figure>
                </step>
                <step>
                    <description>On the UX Controls page open the 'Other Controls' menu. Click on the [Button] option to add a button control to the component.</description>
                    <figure>
                        <link>images/vs10.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the properties list under the Button Properties set the 'Button text' to read "Set value in ViewBox 'State' object".</description>
                    <figure>
                        <link>images/vs11.png</link>
                    </figure>
                </step>
                <step>
                    <description>Scroll down the properties list to the 'Javascript - (Touch, Mouse, Pointer Events) section and click the [...] button next to the 'click' property.</description>
                    <figure>
                        <link>images/vs12.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the 'Edit Click Event' dialog select the 'Text mode' radio button. Add the following javascript to the dialog and click 'Save'.</description>
                    <example code="js"><![CDATA[var vb = {dialog.object}.getControl('viewbox1');
vb.setState({'var1': 'ViewBox is awesome'});
vb.refresh();]]></example>
                    <figure>
                        <link>images/vs13.png</link>
                    </figure>
                </step>
                <step>
                    <description>Run the component in Live Preview.</description>
                    <figure>
                        <link>images/vs14.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click on the button control and you should see the new state.</description>
                    <figure>
                        <link>images/vs15.png</link>
                    </figure>
                </step>
            </steps>
        </section>
    </sections>
    <links>
        <link href="/images/tools/ellipsesButton.png">...</link>
        <link href="https://share.vidyard.com/watch/GKvtUaic3BB6z6Shra1q4p">this video</link>
    </links>
</page>