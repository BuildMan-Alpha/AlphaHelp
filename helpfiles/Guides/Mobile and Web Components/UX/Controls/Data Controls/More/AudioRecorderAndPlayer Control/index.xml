<page>
    <shortlink>ux controls data controls more audio recorder and player control</shortlink>
    <topic>AudioRecorderAndPlayer Control</topic>
    <description>The AudioRecorderAndPlayer control allows you to add a control to the UX component to play audio files and to record audio files in PhoneGap applications. Rich Data Capture.</description>
    <sections>
        <section>
            <important>
                <p>The recent iOS 12.2 update changed the way media files are handled in the PhoneGap web view. In order for the UX Audio Player and Audio Player/Recorder controls to work with iOS 12.2, the iOS *[ui:Media Playback Requires User Action]* property must be disabled in the PhoneGap configuration. This is the default value for new PhoneGap projects using Alpha Anywhere build 5771 and newer.</p>
                <p>To change this setting in existing projects, check the *[ui:Show Advanced Options]* property in the PhoneGap App Builder Genie and uncheck the *[ui:Media Playback Requires User Action]* option.</p>
            </important>
        </section>
        <section>
            <note>A separate [AudioPlayer control] is also available. The AudioPlayer control and can be used in web and mobile applications.</note>
        </section>
        <section>
            <description>To add a new AudioRecorderAndPlayer control to the UX, select the [More...] entry in the controls toolbox (in the 'Data Controls' section) and then select the 'AudioRecorderAndPlayer' control.</description>
            <figure>
                <link>images/selectaudioplayerfrommore.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The AudioRecorderAndPlayer controls is a dual purpose control. It can be used to play audio files (or streams) and it can also be used to record audio files.</p>
                <p>You can only record audio files if you are using PhoneGap.</p>
                <p>When you build your PhoneGap application you must must ensure that the Media plugin has *[not been]* selected:</p>
            </description>
            <figure>
                <link>images/pgMedia.gif</link>
            </figure>
        </section>
        <section>
            <description>and that the Media With Compression plugin has been selected.</description>
            <figure>
                <link>images/pgMediawithCompression.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>In addition, you are likely to need to upload the captured audio files to a server so the following PhoneGap plugins should also be loaded: *[ui:Device]*, *[ui:File]*, *[ui:File transfer]*.</p>
                <p>When you add an AudioRecorderAndPlayer control to your UX you customize the control properties by clickin the smart field for the *[ui:Control properties]*.</p>
                <p>The customization genie allows you to set customize text and also set the maximum recording duration (in seconds).</p>
                <p>When the component is run, the AudioRecorderAndPlayer control will look like this (if not audio file has been loaded for playback):</p>
            </description>
            <figure>
                <link>images/audiorecorderplayer1.gif</link>
            </figure>
        </section>
        <section>
            <description>The red circle button will put the control into record mode. When the control is in record mode, it will appear as follows:</description>
            <figure>
                <link>images/audiorecorderplayer2.gif</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The Done button (text on this button is customizable -- you can use language, or text dictionary tags for International applications- 
                    <![CDATA[<a5:r> or <a5:t>]]>) becomes enabled. This button indicates that you want to end the recording. The record button changes to a Pause button. You can use this button to pause the recording.
                </p>
                <p>The horizontal line at the top of the control indicates the recording level. The color of the line will be orange, green or red to indicate if the recording level is too low, ok or too high.</p>
                <p>The number on the right indicates the duration of the recording.</p>
                <p>If you set the value of the control to an audio stream or an audio file ( using the *[js:{dialog.object}.setValue()]* method ),  the control's appearance will change as shown below.</p>
                <p>The control is now in 'Player' mode. The play button in the center of the control will start playback. The small record button at the left of the control will allow you to switch the control from 'Player' mode to 'Record' mode.</p>
            </description>
            <figure>
                <link>images/audiorecordplayerinplaymode.gif</link>
            </figure>
        </section>
        <section>
            <title>JavaScript Methods</title>
            <description>
                <p>JavaScript methods are available for the AudioRecorderAndPlayer control. Methods can be used for recording and playback. To call the methods, you must first get a reference to the JavaScript object for the AudioRecorderAndPlayer control using the [{dialog.object}.getControl()] method:</p>
            </description>
            <example code="js">
                <![CDATA[//Get a pointer to the AudioRecorderAndPlayer control with the ID 'AUDIO_CONTROL':
var audioObj = {dialog.object}.getControl('AUDIO_CONTROL');

if (audioObj) {
    // Pause the recording
    audioObj.pause();
}]]>
            </example>
        </section>
        <section>
            <description>The AudioRecorderAndPlayer has methods for both [playback] and [recording]. See the [A5.audio Namespace] for more information on the methods and properties available for the AudioRecorderAndPlayer JavaScript object.</description>
        </section>
    </sections>
    <links>
        <link link="ux controls data controls more audioplayer">AudioPlayer control</link>
        <link link="ux component setValue Method">{dialog.object}.setValue()</link>
        <link link="ux component getValue Method">{dialog.object}.getValue()</link>
        <link link="ux component getControl Method">{dialog.object}.getControl()</link>
        <link link="api client api a5 audio player class">playback</link>
        <link link="api client api a5 audio recorder class">recording</link>
        <link link="api client api a5 audio namespace">A5.audio Namespace</link>
    </links>
    <see>
        <ref link="ux control properties custom control data bound control properties audio player">Audio Recorder/Player Control properties</ref>
        <ref link="ux controls data controls more audioplayer">AudioPlayer Control</ref>
        <ref link="api client api a5 audio player class">Audio Player Methods</ref>
        <ref link="api client api a5 audio recorder class">Audio Recorder Methods</ref>
    </see>
    <limitations>PhoneGap Applications Only</limitations>
    <terms>audioplayer,audio capture,audio recording,mobile app,phonegap</terms>
</page>