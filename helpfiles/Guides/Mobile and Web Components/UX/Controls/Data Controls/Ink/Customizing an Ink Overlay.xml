<page>
    <shortlink>ux data controls ink control customizing an ink overlay</shortlink>
    <topic>Customizing an Ink Overlay</topic>
    <description>The Ink Overlay is defined using an html template. As a result it is easy to add new 
        buttons to an overlay and then define new actions to execute when these custom buttons are used..</description>


<sections>
    
    <section>
        <description>For a visual explanation on how to customize and ink overlay watch [this video] or follow the guide below.</description>
        
    </section>
    <section>
        <title>Set the Project Style</title>
        <description>Not all project styles have the css classes necessary to run an ink overlay. 
            Use either the iOS7, Android, or Alpha style in the 'Style name' property.
        </description>
        <steps>
         <step>
                <description>In the UX Builder open the UX Properties page. In the 'UX Properties' 
                    section click the [...] button next to the 'Style name' property.
                </description>
                <figure><link>images/ci2.png</link></figure>
            </step>
            <step>
                <description>In the 'Location' menu select the 'System' option. Select the 
                    iOS7, AndroidLight, AndroidDark, or Alpha style in the style list. 
                    Click OK.
                </description>
                <figure><link>images/ci3.png</link></figure>
            </step>
          </steps>
    </section>
    <section>
        <title>Create an Ink Control with an Overlay</title>
        <steps>
         <step>
                <description>In the UX Builder on the UX Controls page open the 'Data Controls' menu. 
                    Click on the [Ink] option to add an ink control to the component.
                </description>
                <figure><link>images/ci4.png</link></figure>
            </step>
             <step>
                <description>Highlight the ink control in the controls tree. In the properties 
                    list on the right, scroll down to the 'Ink Properties' section. Click the 
                    [...] button next to the 'Ink properties' property.
                </description>
                <figure><link>images/ci5.png</link></figure>
            </step>
             <step>
                <description>In the 'Ink Control' dialog click the big 'Ink Control Genie...' button 
                    at the top of the dialog.
                </description>
                <figure><link>images/ci6.png</link></figure>
            </step>
             <step>
                <description>On the 'Layout' tab menu select the 'Note taking - default' option on the 
                    right. Click OK and OK again. 
                </description>
                <figure><link>images/ci7.png</link></figure>
            </step>
             <step>
                <description>Run the component in 'Live Preview'. The Overlay should be visible.</description>
                <figure><link>images/ci8.png</link></figure>
            </step>
          </steps> 
            
    </section>
    <section>
        <title>Add a Button to the Overlay</title>
        <steps>
         <step>
                <description>Return to the UX Controls pag, highlight the ink control in the controls tree, 
                    and click the [...] button next to the 'Ink properties' property to open the 
                    ink properties dialog again.
                </description>
                <figure><link>images/ci9.png</link></figure>
            </step>
              <step>
                <description>Scroll down to the 'Ink Editor' properties section. The 'Has overlay' property 
                    should already be checked. Click the [...] button next to the 'Overlay' property.
                </description>
                <figure><link>images/ci10.png</link></figure>
            </step>
             <step>
                <description>The 'Editor Overlay' dialog should appear. Open the 'Overlay' tab. This tab 
                    contains the html for the overlay that was generated when we used the ink genie. Add the 
                    following <![CDATA[<div>]]> to the overlay under the existing button definitions. Click OK.
                </description>
                <example><![CDATA[<div style="position: absolute; left: 60px;">button</div>]]></example>
                <figure><link>images/ci11.png</link></figure>
               
            </step>
             <step>
                <description>Run the component in Live Preview. The new button should now appear in the 
                    Ink Overlay. However, it is only labeled as 'button' and doesn't' actually 
                    do anything.</description>
                <figure><link>images/ci12.png</link></figure>
            </step>
            </steps>
    </section>
      <section>
          <title>Add an Action to the Button</title>
          <steps>
             <step>
                <description>Highlight the ink control in the controls tree a click on the 'Ink properties' 
                    property to reopen the Ink Control dialog.</description>
                <figure><link>images/ci13.png</link></figure>
            </step>
             <step>
                <description>Click the [...] button next to the 'Overlay' property to open the 'Editor Overlay' 
                    dialog again.
                </description>
                <figure><link>images/ci14.png</link></figure>
            </step>
            <step>
                <description>On the 'Overlay' tab locate the <![CDATA[<div>]]> that contains the button you defined. Inside 
                    the <![CDATA[<div>]]> tag assign the button to an a5-item named 'button1': 
                    a5-item = "button1". Like this:</description>
                <example><![CDATA[<div style="position: absolute; left: 60px;" a5-item = "button1">button</div>]]></example>
                <figure><link>images/ci15.png</link></figure>
            </step>
           
            <step>
                <description>Click on the 'Editor Overlay' dialog's 'Items' tab to open it.</description>
                <figure><link>images/ci16.png</link></figure>
            </step>
            <step>
                <description>Click the 'Add' button on the items tab.</description>
                <figure><link>images/ci17.png</link></figure>
            </step>
            <step>
                <description>Next to the new item's 'Name' property type 'button1'.</description>
                <figure><link>images/ci18.png</link></figure>
            </step>
            <step>
                <description>Click the [...] button next to the 'onClick' property.
                </description>
                <figure><link>images/ci19.png</link></figure>
            </step>
            <step>
                <description>Define the following onClick event definition. Click OK, OK, and OK again.</description>
                <example><![CDATA[alert('New overlay tool');]]></example>
                <figure><link>images/ci20.png</link></figure>
            </step>
             <step>
                <description>Run the component in Live Preview. When you click on the custom button now you should see 
                    the javascript alert fire.
                </description>
                <figure><link>images/ci21.png</link></figure>
            </step>
            </steps>
    </section>
    
    
    
    <section>
        <title>Use an Icon for the Button</title>
        <steps>
         <step>
                <description>Open the UX Properties page. Scroll down to the 'CSS/SCG' section. Click 
                    the [...] button next to the 'Local SVG definitions' property.
                </description>
                <figure><link>images/ci22.png</link></figure>
            </step>
             <step>
                <description>Click the 'Import SVG definition' hyperlink at the bottom of the 'SVG Text' dialog.</description>
                <figure><link>images/ci23.png</link></figure>
            </step>
             <step>
                <description>Click the 'Insert sample' hyperlink and give the sample the icon name 'svg_'. Click OK and OK again.</description>
                <figure><link>images/ci24.png</link></figure>
            </step>
             <step>
                <description>On the UX Controls page open the 'Other Controls' menu. Click on the [Image] option to add an image to the component. 
                </description>
                <figure><link>images/ci25.png</link></figure>
            </step>
             <step>
                <description>Highlight the image in the controls tree. In the properties list on the right click the 
                    [...] button next to the 'Image name' property in the 'Image Properties' section.
                </description>
                <figure><link>images/ci26.png</link></figure>
            </step>
             <step>
                <description>Select the 'SVG Icon' radio button option in the Specify Image dialog and click 'Select'.</description>
                <figure><link>images/ci27.png</link></figure>
            </step>
             <step>
                <description>The sample SVG icon that was generated from the 'Local SVG definitions' property should 
                    appear under the 'Local SVG Icons' heading. Highlight the icon.
                </description>
                <figure><link>images/ci28.png</link></figure>
            </step>
             <step>
                <description>Click the up arrow on the 'Fill color' control in the top right corner of the 
                    'SVG Icon' dialog. Pick a color from the color picker to change the color of the icon.
                </description>
                <figure><link>images/ci29.png</link></figure>
                <note>The fill color control will change the color of all of the icons in the dialog. This should 
                    not change the appearance of icons in your project that are defined elsewhere. Changing the color 
                    here only impacts the current instance of the selected icon.
                </note>
            </step>
             <step>
                <description>Click OK once. In the 'Specify Image' dialog copy the generated path for your icon that 
                    appears next to the 'Image name' control, then click OK.
                </description>
                <example><![CDATA[svgIcon=#svg_:24{ fill: #3589ce;}]]></example>
                <figure><link>images/ci30.png</link></figure>
            </step>
             <step>
                <description>Highlight the [Image] control in the controls tree and click the red 'X' icon in the Controls 
                    page toolbar to delete the image control.
                </description>
                <figure><link>images/ci31.png</link></figure>
            </step>
             <step>
                <description>Highlight the ink control in the controls tree.</description>
                <figure><link>images/ci32.png</link></figure>
            </step>
             <step>
                <description>In the properties list click on the 'Ink properties' property to open the Ink Control dialog.</description>
                <figure><link>images/ci33.png</link></figure>
            </step>
             <step>
                <description>Click the [...] button next to the 'Overlay' property in the Ink Editor section.</description>
                <figure><link>images/ci34.png</link></figure>
            </step>
              <step>
                <description>Find the button that was defined previously and replace the text definition with the svg 
                    icon that you copied from the 'Image name' property. The svg icon should be placed inside an 
                    <![CDATA[<img>]]> tag as its source 'src'. The resulting image tag should look like this: 
                </description>
                <example><![CDATA[<img src="svgIcon=#svg_:24{ fill: #3589ce;}">]]></example>
                <figure><link>images/ci35.png</link></figure>
            </step>
              <step>
                <description>Click OK and OK again. Run the component in Live Preview. The custom button that was added to the overlay 
                    should now appear as an icon.
                </description>
                <figure><link>images/ci36.png</link></figure>
            </step>

            </steps>
    </section>

</sections>

<links>
    <link href="https://share.vidyard.com/watch/4Yaj2GgfggCWBX3qcYLg4W">this video</link>
    
    
</links>


<see>
    <ref link="ink properties">Ink Properties</ref>
    <ref link="ux data control properties ink builder">Ink Builder</ref>
</see>

</page>