<page>
    <shortlink>ux populate tree using js</shortlink>
    <topic>Populate a Tree Control Using Javascript</topic>
    <description>You can popluate a tree in a UX component using javascript. This example uses javascript to populate a
         node on a tree control and then to repopulate the entire tree.
    </description>
    <sections>
 <section>
     <description>This guide is watchable through [this video]. </description>
     
 </section>       
 
 
 
 
 
 
 <section>
     <title>Using Javascript to Populate a Node on a Tree</title>
     <steps>
         <step>
             <description>Open the UX Builder. Open the UX Controls page in the Design tab and look at the Data Controls
                 menu. Add a Tree control to the component.</description>
             <figure><title></title><link>images/jspop.png</link></figure>
         </step>
         <step>
             <description>Highlight the tree control and view its control properties list. 
                 Scroll down the list to the Tree Properties section and find the Tree data type property, set this 
                 to the JSON option.
             </description>
             <figure><title></title><link>images/jspop2.png</link></figure>
         </step>
         <step>
             <description>The Tree data (JSON) property should appear underneath "Tree data type". Click the [...] button next to the Tree data (JSON) property.</description>
             <figure><title></title><link>images/jspop3.png</link></figure>
         </step>
         <step>
             <description>In the Tree Control - JSON Data dialog click the Insert sample JSON button in the lower left corner. Then click OK.</description>
             <figure><title></title><link>images/jspop4.png</link></figure>
         </step>
         <step>
             <description>Run the tree control in the Live Preview tab to see what it looks like.</description>
       <figure><title></title><link>images/jspop5.png</link></figure>
         </step>
         <step>
             <description>On the UX Controls page again go to the Other Controls menu, lower left, and add a Button control to the 
                  component. Give it the name "Populate node on tree" in the 'Button text' property.</description>
             <figure><title></title><link>images/jspop6.png</link></figure>
         </step>
         <step>
             <description>Highlight the button. Scroll down the control properties list to the "Javascript (Touch, Mouse, Pointer Events)" section.
                 Click the [...] button next to the click property.
             </description>
             <figure><title></title><link>images/jspop7.png</link></figure>
         </step>
           <step>
             <description>In the Edit Click Event dialog click 'Text mode' and enter the following and click Save.</description>
             <example><![CDATA[populateNode();]]></example>
             <figure><title></title><link>images/jspop8.png</link></figure>
         </step>
           <step>
             <description>Open the Code > Javascript functions page add the following code.</description>
             <example><![CDATA[function populateNode() {
var t = {dialog.object}.getControl('tree1');
                 
var _dc = [
{ html: 'sub dynamic 1'},
{ html: 'sub dynamic_2', onClick: function() { alert('you clicked on sub-dynamic_2'); }}
                 
]
                 
var _d = [
{ html: 'dynamic'},
{ html: 'dynamic_2', children: _dc }
                 
]
                 
t.populateNode([1], _d);
                 
}]]></example>
             <figure><title>The Javascript functions page</title><link>images/jspop9.png</link></figure>
             <note>In t.populateNode([1], _d); the [1] is the address of the node to populate (the second node in the tree). The _d is the data.</note>
         </step>
           <step>
             <description>Save and run the component in Live Preview, you should see the dynamically added nodes when you expand the tree.</description>
             <figure><link>images/jspop10.png</link></figure>
         </step>
        
          <step>
             <description>On the UX Controls page go tp the Other Controls menu and add a second button to the component.
                 Give this button the name "Repopulate entire tree".
             </description>
             <figure><title></title><link>images/jspop11.png</link></figure>
         </step>
         <step>
             <description>Highlight this button control and view the control's properties list. Find the "Javascript (Touch, Mouse, Pointer Events)"" section and click the 
                 [...] button next to the "click" property.
             </description>
             <figure><title></title><link>images/jspop12.png</link></figure>
         </step>
         <step>
             <description>Click the 'Text mode" option and add the following code to the Edit Click Event dialog.</description>
             <example><![CDATA[var t = {dialog.object}.getControl('tree1');
var _d = t.data;
_d.push({ html: 'new mode'});
t.populate(_d)                 
              ]]></example>
             <figure><title></title><link>images/jspop13.png</link></figure>
             <note>This code gets a pointer to the tree control, gathers existing nodes on the tree control, pushes a new node onto the tree control, and then repopulates the tree.</note>
         </step>
         <step>
             <description>Go to Live Preview. Every time you click the "Repopulate entire tree" button a new node should appear.</description>
             <figure><title></title><link>images/jspop14.png</link></figure>
         </step>
    
      
     </steps>
     
     
     
 </section>
        
    </sections>
    <links>
        <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_treecontrol_populatingusingJavascript.swf">this video</link>
        <link href="/images/tools/ellipsesButton.png">...</link>
        
    </links>
    
    
</page>