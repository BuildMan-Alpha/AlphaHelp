<page build="5581">
    <shortlink>list columns showhide control</shortlink>
    <topic>List columns show/hide</topic>
    <description>
        <p>A control that can be used to change the columns shown in a List control.</p>
    </description>
    <discussion>
        <p>You can control the visibility of columns in a List control.</p>
    </discussion>
    <sections>
        <section>
            <description>
                <p>For example, in the image below, a column selector is shown. You can toggle the visibility of any column by clicking on the column name in the menu that is shown when the column selector button is clicked.</p>
            </description>
            <figure>
                <link>images/SHOWHIDELISTCOLUMNS.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>To add a *[ui:List Column Selector]* button to an application, select the *[ui:List columns show/hide]* item from the *[ui:Defined Controls]* section of the UX Builder toolbox.</p>
            </description>
            <figure>
                <link>images/listcolumnselector2.jpg</link>
            </figure>
        </section>
        <section>
            <title>Setting Initial Show/Hide State of Columns</title>
            <description>
                <p>The *[ui:List columns show/hide]* control lists the columns in the List's layout. If you want to include columns in the list of choices but don't want to display the columns when the List control is first rendered, check the column's [Initial state is hidden] property. This will hide the column when the List control is first rendered but include the column in the *[ui:List columns show/hide]* control's choices.</p>
            </description>
            <figure>
                <link>images/setFieldHidden.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Columns that are not in the List's layout will not be listed in the *[ui:List columns show/hide]* control choices.</p>
            </description>
        </section>
        <section build="5663">
            <title>Reordering Columns</title>
            <description>
                <p>In addition to specifying the columns to show, you can also use the *[ui:List column show/hide]* control to reorder columns in the List control. Click- or tap-hold the hamburger icon next to the column you would like to move and drag it to the new location. This will reorder the List's columns.</p>
            </description>
            <figure>
                <link>images/listColumnsDrag.png</link>
            </figure>
        </section>
        <section build="5663">
            <title>onListColumnSelectorChanged Event</title>
            <description>
                <p>When the user makes a selection the show/hide menu, the client-side [onListColumnSelectorChanged] event in the List control is triggered. This event could be used to persist the state of the List control or perform other events in the component.</p>
            </description>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Setting the order and visibility of columns in a List Layout</title>
                <description>
                    <p>You can allows users to dynamically show/hide List columns at run-time and also to change the order in which the columns appear in the List by adding a List column show/hide button to a UX component.</p>
                    <p>In this video we show how a List column show/hide button can be added to a UX and we show how it can be used to change the columns in the List are run-time.</p>
                    <p>In the video, we also show how an event is fired when the List layout is changed. This event is defined in the List builder [onListColumnSelectorChanged] event.</p>
                </description>
                <date>2018-02-13</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://share.vidyard.com/watch/7pxUnfbVw856NxXfDgZceP</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Saving and Restoring the List's Column Layout</title>
                <description>
                    <p>The Show/hide list columns Defined Control can be used to give the user the ability to show, hide, and reorder columns in a List's layout. The layout can be saved, allowing you to later restore the layout the user created when they return to the application.</p>
                    <p>When the user changes the layout of the List columns, the onListColumnSelectorChanged event is triggered. This event can be used to persist the List's modified layout.</p>
                    <p>In this video, we show how to use the UX component's .persistListColumnLayout() and .restoreListColumnLayout() methods to save and restore the Column layout for a List control.</p>
                </description>
                <video>
                    <name>Watch Video</name>
                    <link>https://share.vidyard.com/watch/GUB96b2MWn1EQhZRKcdGSB</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link link="uxlist initialstatehidden">Initial state is hidden</link>
        <link link="ux list clientside event onListColumnSelectorChanged">onListColumnSelectorChanged</link>
    </links>
    <see>
        <ref link="ux component listcolumnselector method">{dialog.object}.listColumnSelector Method</ref>
        <ref link="list%20object%20persisttostorage%20method">listObj.persistToStorage Method</ref>
    </see>
</page>