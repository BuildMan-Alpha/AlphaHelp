<page>
    <shortlink>ux controls other controls button control advanced button styling</shortlink>
    <topic>Advanced Button Styling</topic>
    <description>When they are initially added to a component most buttons are somewhat 
        bland. Changing the text and images on a button control, however, is easy.
    </description>

<sections>
    <section>
        <description>For an illustration of styling options follow the guide below or watch 
            [this video].
        </description>
        
    </section>
    <section>
        <title>The Advanced Styling Section</title>
        <steps>
            <step>
                <description>In the UX Builder on the UX Controls page open the 'Other Controls' menu. 
                    Click on the [Button] option to add a button control to the component.
                </description>
                <figure><link>images/abs10.png</link></figure>
            </step>
             <step>
                <description>Highlight the button control in the controls tree. In the properties list, in the 
                    Button Properties section, set the 'Advanced button control type' property dropdown to 'Button', 
                    'Hyperlink', or 'Image'. 
                </description>
              
                 <figure><link>images/abs12.png</link></figure>
                 <note>Selecting Image here means that the button will only be the image. As such, the button 
                     will have no border around it. 
                 </note>
            </step>
             <step>
                <description>View the 'Button Appearance' section of the properties list. The property settings 
                    in this section will change depending on the advanced button control type selected.
                </description>
                 <figure><link>images/abs11.png</link></figure>
            </step>
         
            
        </steps>
        
    </section>
    
    
       <section>
        <title>Specifying an Image</title>
        <description>You can use system images, imported images, svg images, an external url, or css images 
            on a button control.</description>
        <steps>
             <step>
                <description>Create an image to use for the button.</description>
                <figure><link>images/saturn.png</link></figure>
            </step>
            <step>
                <description>After creating a button control, go to the properties list and 
                    set the 'Advanced button control type' property to 'Image'.</description>
                <figure><link>images/si3.png</link></figure>
                <note>Selecting 'Image' here will create a button with no generated borders.</note>
            </step>
            <step>
                <description>Scroll down to the 
                    'Button Appearance' section and click the [...] button next to the 'Image name' property.</description>
                <figure><link>images/si4.png</link></figure>
            </step>
            <step>
                <description>In the Specify Image dialog use the radio buttons to select 
                    the "Image in Web Project or Style" option. Click the 'Select' button and 
                    choose the 'Select from Web Project Folder' option.
                </description>
                <figure><link>images/si5.png</link></figure>
            </step>
            <step>
                <description>Click the "Add Image to Project" button.</description>
             <figure><link>images/si6.png</link></figure>
            </step>
            <step>
                <description>In the "Add Image to Project" dialog click the up arrow next to the 'Source filename' textbox.</description>
            <figure><link>images/si7.png</link></figure>
            </step>
            <step>
                <description>Select the images file extension from the dropdown in the lower-right hand corner. 
                    Then select the image you want to use and click Open. Click OK, OK, and OK again.
                </description>
              <figure><link>images/si8.png</link></figure>
            </step>
            <step>
                
                <description>Scroll down the button's properties list to the 'Javascript' section and click on the 
                    [...] button next to the "onClick" property.
                </description>
                <figure><link>images/si9.png</link></figure>
            </step>
            <step>
                
                <description>In the 'Edit onClick Event' dialog select the 'Text mode' radio button option. Add a simple 
                    javascript alert to the button.
                </description>
                <figure><link>images/si10.png</link></figure>
            </step>
            
            <step>
                <description>Run the component in Live Preview. Click on the button.</description>
                <figure><link>images/si11.png</link></figure>
            </step>
            
        </steps>
        
    </section>
    
    
    
    <section>
        <title>Adding Different Images for Different Button States</title>
        <description>A common design feature used with buttons in an application is to change 
            a button's styling when the state of the button changes. For example, when the button 
            is hovered over the color of the text or image on the button might change. Similar changes can 
            also occur when the button is pressed or disabled. 
        </description>
        <steps>
             <step>
                <description>In the UX Builder open the UX Properties page. In the UX Properties section 
                    find the 'Style name' property. Click the [...] button next to the property.
                </description>
                <figure><link>images/adi2.png</link></figure>
            </step>
             <step>
                <description>In the 'Select Style' dialog set the 'Location' to be 'System' and 
                    select the 'Alpha' style. Selecting this style will make it easy to access a 
                    number of pre-defined SVG icons.
                </description>
                <figure><link>images/adi3.png</link></figure>
            </step>
            <step>
                <description>Open the UX Controls page and go to the 'Other Controls' menu. Click on the 
                    [Button] option to add a button control to the component. Highlight the button control in 
                    the controls tree and go to the properties list. Click the dropdown next to the 
                    'Advanced button control type' and select 'Button'.
                </description>
                <figure><link>images/adi4.png</link></figure>
            </step>
              <step>
                <description>Click the [...] button next to the 'Button layout' property and select the 
                    'Image above text' option.
                </description>
                <figure><link>images/adi5.png</link></figure>
            </step>
              <step>
                <description>Click the [...] button next to the "Image name" property.</description>
                <figure><link>images/adi6.png</link></figure>
            </step>
              <step>
                <description>In the 'Specify Image' dialog select the "SVG Icon" radio button option. Click the 
                    'Select' button.
                </description>
                <figure><link>images/adi7.png</link></figure>
            </step>
              <step>
                <description>On the SVG Icon page a number of default system icons should be displayed. Select 
                    an icon and click 'OK' and 'OK' again.
                </description>
                <figure><link>images/adi8.png</link></figure>
            </step>
            <step>
                <description>In the Button Appearance section click the [...] button next to the 
                    'Hover image name' property
                </description>
                <figure><link>images/adi9.png</link></figure>
            </step>
            <step>
                <description>In the 'Specify Image' dialog again select the 'SVG Icon' radio button 
                    option. Click the 'Select' button again.
                </description>
                <figure><link>images/adi7.png</link></figure>
            </step>
            <step>
                <description>Highlight the same icon that you did before. Click the 'up' arrow next to the 
                    'Fill color' textbox.
                </description>
                <figure><link>images/adi10.png</link></figure>
            </step>
            <step>
                <description>Select a color from the 'Color Picker' and click OK. All of the icons in the 'SVG Icon' 
                    dialog should now be filled with the color that was selected. You can also change the 'Stroke Color' 
                    of icons using a color picker; in the upper right-hand corner. Changing the color fill or stroke of 
                    the icons here only impacts this particular instance of that icon. Click 'OK' and 'OK' again. 
                </description>
                <figure><link>images/adi11.png</link></figure>
            </step>
            <step>
                <description>In the 'Button Appearance' properties section click the [...] button next to the 
                    'Pressed image name' property.
                </description>
                <figure><link>images/adi12.png</link></figure>
            </step>
            <step>
                <description>Again select the SVG radio button icon and click 'Select'.</description>
           
            </step>
            <step>
                <description>Choose the same icon that was used with the 'Image name' and 'Hover image name' properties. 
                    Change the fill color to a new color and click OK and OK again.
                </description>
                <figure><link>images/adi13.png</link></figure>
            </step>
            <step>
                <description>Run the component in Live Preview</description>
                <figure><link>images/adi14.png</link></figure>
            </step>
            <step>
                <description>Now hover over the button with the mouse, the icon should change to the color 
                    specified in the 'Hover image name' property.
                </description>
                <figure><link>images/adi15.png</link></figure>
            </step>
            <step>
                <description>Click on the icon and you should see the style change again.</description>
                <figure><link>images/adi16.png</link></figure>
            </step>
        </steps>
        
    </section>
    
    
    
    
    
     <section>
        <title>Using an Abstract Image Name</title>
        <description>In addition to selecting a specific image name, you can also select an abstract image name. 
            An abstract image name is the name of the image that is used with a given style such as the 'Alpha' style or 
            'iOS7', or 'MobBlue'. As shown earlier, these styles are defined in the [Style name] property on the UX Properties 
            page. 
        </description>
      
        
    </section>
    <section>
        <description>In many cases different styles have the same abstract image name for a particular images, only 
                    the images are different to meet the style. For example, the abstract image {images.GridRow.SaveRecord} 
                    will produce a one image when the 'Style name' is 'Alpha' and a different image when the 'Style name' 
                    is set to 'iOS7'.</description>
        <figure><title>{images.GridRow.SaveRecord} run in the 'Alpha Style'.</title><link>images/ain2.png</link></figure>
          <figure><title>{images.GridRow.SaveRecord} run in the 'iOS7 Style'.</title><link>images/ain3.png</link></figure>
    </section>
    <section>
        <description>The same abstract image can be assigned to different button states in the same style. In many cases 
            only one abstract image is needed to define the 'Image name', 'Hover image name', 'Pressed image name', and 
            'Disabled image name'. When the application is run, the style of the image will be still change in response to 
            any state changes.
        </description>
        <figure><title>'Image name' set to {images.GridRow.SaveRecord} in 'Alpha Style'.</title><link>images/ain4.png</link></figure>
        <figure><title>'Hover image name'  set to {images.GridRow.SaveRecord} in 'Alpha Style'.</title><link>images/ain5.png</link></figure>
         <figure><title>'Pressed image name' set to {images.GridRow.SaveRecord} in 'Alpha Style'.</title><link>images/ain6.png</link></figure>
        
        
    </section>
    <section>
       
        <description>In order to select an abstract style do the following.</description>
        <steps>
            
            <step>
                <description>Click the [...] button next to the property where you want to define the style.</description>
                   <figure><link>images/ain7.png</link></figure>
            </step>
            <step>
                <description>Select the 'Image in Web Project or Style' radio button. Click the 'Select' button 
                    and choose the 'Select from the Style' option. 
                </description>
                   <figure><link>images/ain8.png</link></figure>
            </step>
            <step>
                <description>Choose an image from the list and click OK.</description>
                   <figure><link>images/ain9.png</link></figure>
            </step>
            
            
        </steps>
        
        
    </section>
    
    
    
     <section>
        <title>Button Layout</title>
        <description>If you select 'Button' from the 'Advanced button control type' property dropdown, then you 
            can add both an image and text to the button. You can also add just an image or some text. 
            The placement of the image and text on the button can be specified using the 'Button layout' property. 
            Selecting the 'Image only' option here is different from selecting 'Image' in the 'Advanced button control type' property. 
            The 'Image only' setting here will also only show an image, but this image will usually have an automatic border placed 
            around it. 
        </description>
      <cases>
          <case>
              <figure><title>Text only</title><link>images/abs2.png</link></figure>
              <figure><title>Image only</title><link>images/abs3.png</link></figure>
             
          </case>
         
            <case>
              <figure><title>Text followed by Image</title><link>images/abs4.png</link></figure>
                 <figure><title>Image followed by text</title><link>images/abs5.png</link></figure>
          </case>
         
          <case>
              <figure><title>Image above text</title><link>images/abs6.png</link></figure>
              <figure><title>Text above image</title><link>images/abs7.png</link></figure>
          </case>
            <case>
              <figure><title>Text left <![CDATA[&]]> image right</title><link>images/abs8.png</link></figure>
              <figure><title>Text right <![CDATA[&]]> image left</title><link>images/abs9.png</link></figure>
          </case>
          
          
      </cases>
    </section>
  
  
   
    
     
    
    
</sections>

<links>
    <link href="https://www.viddler.com/v/80e6cd06">this video</link>
    
    <link link="ux properties style name">Style name</link>
    
</links>
    
    <see>
        <ref link="ux control properties other properties button properties">Button Properties</ref>
        <ref link="ux control properties other properties button appearance index">Button Appearance</ref>
    </see>
    
</page>