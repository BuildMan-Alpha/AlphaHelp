<page>
    <shortlink>ux controls other controls placeholder</shortlink>
    <topic>Placeholder</topic>
    <description>Placeholder controls can be used to dynamically insert things into a component in a designated location.</description>
    <discussion>
        <p>The *[ui:Placeholder control]* is used to dynamically insert messages - such as an update indicating that a process completed or injecting debugging information for the List control - into the layout of the UX Component. They do not take any space in the layout until content is added to them. They are used when configuring Action Javascript, properties for controls such as the List or FormView, UX Component properties, and more.</p>
    </discussion>
    <sections>
        <section>
            <title>Properties that use a Placeholder Control</title>
            <description>
                <p>This is a list of some properties that use the Placeholder control. This list is not exhaustive but highlights where Placeholder controls are commonly used in Alpha Anywhere applications.</p>
            </description>
            <list bullet="true">
                <item>
                    <name>[Placeholder for UX Component validation error messages] (UX Component)</name>
                </item>
                <item>
                    <name>[Placeholder for login errors] (UX Component)</name>
                </item>
                <item>
                    <name>[Placeholder for progress display] (List Control)</name>
                </item>
                <item>
                    <name>[Placeholder for debugging info] (List Control - Search Part)</name>
                </item>
                <item>
                    <name>[Div id for Fade Out Message] (Action Javascript)</name>
                </item>
                <item>
                    <name>[Placeholder for progress indicator for File Upload] (Action Javascript)</name>
                </item>
            </list>
        </section>
        <section>
            <title>Using Javascript with the Placeholder Control</title>
            <description>
                <p>The Placeholder control is not a data control, but it's content can be manipulated using the  [{dialog.object}.getValue()] and [{dialog.object}.setValue()] methods. Many {dialog.object} methods that take a UX Control ID as a parameter can be used with the Placeholder control.</p>
                <p>There is no Javascript object that represents the Placeholder control, so the [{dialog.object}.getControl()] method will not return anything if passed an ID for a Placeholder. If you want to get a pointer to the DOM element for the Placeholder, use [{dialog.object}.getPointer()].</p>
            </description>
            <example code="js"><![CDATA[// Get the content of PLACEHOLDER_1
var content = {dialog.object}.getValue('PLACEHOLDER_1');

// Set the content of PLACEHOLDER_1
var html = "<p><strong>A Bold Statement!</strong></p>";
{dialog.object}.setValue('PLACEHOLDER_1',html);

// Hide PLACEHOLDER_1
{dialog.object}.setControlDisplay("PLACEHOLDER_1",false);

// Get a pointer to the DOM element for PLACEHOLDER_1
// and manipulate it directly:
var ele = {dialog.object}.getPointer('PLACEHOLDER_1');
if (ele) {
    ele.style.border = "2px solid black";
    alert(ele.innerHTML);
}
]]></example>
        </section>
    </sections>
    <!--list:.-->
    <links>
        <link link="ux properties placeholder for ux component validation error messages">Placeholder for UX Component validation error messages</link>
        <link link="list builder properties search part#section1_Placeholder for debugging info">Placeholder for debugging info</link>
        <link link="placeholder for login errors">Placeholder for login errors</link>
        <link link="placeholder for progress display">Placeholder for progress display</link>
        <link link="fade out message">Div id for Fade Out Message</link>
        <link link="file upload">Placeholder for progress indicator for File Upload</link>
        <link link="ux component getvalue method">{dialog.object}.getValue()</link>
        <link link="ux component setvalue method">{dialog.object}.setValue()</link>
        <link link="ux component getcontrol method">{dialog.object}.getControl()</link>
        <link link="ux component getpointer method">{dialog.object}.getPointer()</link>
    </links>
    <see>
        <ref link="ux control properties placeholder properties">Placeholder Properties</ref>
    </see>
    
</page>