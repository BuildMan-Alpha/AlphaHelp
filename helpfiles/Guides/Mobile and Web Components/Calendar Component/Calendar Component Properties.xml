<page>
	<shortlink>server ref Calendar Component Properties</shortlink>
	<topic>Calendar Component Properties</topic>
	<description>A list of calender component properties.</description>
    <sections>
        <section>
            <title>Calendar Views Displayed Properties</title>
            <cases>
                <case>
                    <title nested="2">Show Day View</title>
                    <description>The Day view shows events for a specific date.</description>
                </case>
                <case>
                    <title nested="2">Show Week View</title>
                    <description>The Week view displays events for a certain week.  Events are displayed within vertical timelines. If you have an "All Day" event, it will be displayed at the top of the "Week" view.</description>
                </case>
                <case>
                    <title nested="2">Show Month View</title>
                    <description>Month view displays events for a particular month. Only a few events for a given date are displayed. Other events are hidden and are shown when a "View All" link is clicked.</description>
                </case>
                <case>
                    <title nested="2">Show Custom View</title>
                    <description>Month view displays events for a particular month. Only a few events for a given date are displayed. Other events are hidden and are shown when a "View All" link is clicked.</description>
                </case>
                <case>
                    <title nested="2">Show Agenda View</title>
                    <description>Agenda view displays events in a list view. They are grouped by a day. You can scroll backwards and forwards to view your list of events.</description>
                </case>
                <case>
                    <title nested="2">Show Work Week View</title>
                    <description>The Work-Week View displays events for the working days in a particular week (monday thru friday)</description>
                </case>
                <case>
                    <title nested="2">Show Workshift View</title>
                    <description>Workshift view displays events / task for a person. Persons can be grouped. For example: they can be grouped by departments like Managers, Sales, Trainers, etc.</description>
                </case>
                <case>
                    <title nested="2">Show Groups/Events View</title>
                    <description>The Groups / Events view displays groups on x axis and events on vertical timelines. Groups could represent Persons or a Resource like Conference Rooms.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Calendar Options Properties</title>
            <cases>
                <case>
                    <title nested="2">Start time</title>
                    <description>Specify the start time for the calendar. Enter a value between 0 and 24. Must be less than the 'End time'.</description>
                </case>
                <case>
                    <title nested="2">End time</title>
                    <description>Specify the end time for the calendar. Enter a value between 0 and 24. Must be greater than the 'Start time'.</description>
                </case>
                <case>
                    <title nested="2">Date to show on initial display</title>
                    <description>Specify what date to show on the calendar when it is initially displayed. Enter 'Today' for today's date. To enter an explicit date use yyyy/mm/dd format.</description>
                </case>
                <case>
                    <title nested="2">Calendars to show</title>
                    <description>Specify the calendars to show. The calendar component can show events from multiple 'logical' calendars. E.g. the calendar for 'Dr. Smith', 'Dr. Jones' etc. You can specify here which calendars to how. Specify 'All' to show all calendars. Otherwise, enter a comma delimited list of calendar ids.</description>
                </case>
                <case>
                    <title nested="2">Readonly calendars</title>
                    <description>You can specify an explicit list of calendars that should be read only. Enter a comma delimited list of calendar ids. Contrast with the 'Set calendar to readonly' property which sets all calendars shown to be readonly.</description>
                </case>
                <case>
                    <title nested="2">Slot height</title>
                    <description>Specify the height of each hour slot shown on the calendar. The slot will be sub-divided into a number of areas, depending on the setting for 'interval'. Specify a value in pixels.</description>
                </case>
                <case>
                    <title nested="2">Interval</title>
                    <description>Specify how many intervals to divide the slot into. Enter a value between 1 and 4. For example, if you enter 4, the slot will show four 15 minute intervals.</description>
                </case>
                <case>
                    <title nested="2">Show left navigation bar</title>
                    <description>Specify if the left navigation bar (contains a mini calendar for picking date range and checkboxes to select which calendars are shown) should be shown.</description>
                </case>
                <case>
                    <title nested="2">Show quick filter</title>
                    <description>Specify if the QuickFilter links should be shown. Only relevant if the left navigation bar is not shown. If you don't display this then you will not be able to show/hide appointments for different calendars.</description>
                </case>
                <case>
                    <title nested="2">Show all day events</title>
                    <description>Indicates if all-day events should be displayed in week/day view.</description>
                </case>
                <case>
                    <title nested="2">Set calendar to read only</title>
                    <description>If the calendar is set to read only, the user cannot add new events or drag and drop to change events. The grids may still be used to modify events unless they are also set to read only. Contrast with the 'Readonly calendars' property which allows you to set an explicit list of calendar Ids to readonly.</description>
                </case>
                <case>
                    <title nested="2">Default view</title>
                    <description>Default view displayed when the calendar is initialized and loaded. Choices include.</description>
                </case>
                <case>
                    <title nested="2">First day of week</title>
                    <description>Defines the start day of the week, either Sunday or Monday. Choices include.</description>
                </case>
                <case>
                    <title nested="2">Time format</title>
                    <description>Specify if you want to display times using a 12 hour or 24 hour format Choices include *[ui:12]*, *[ui:24]*.</description>
                </case>
                <case>
                    <title nested="2">Default language</title>
                    <description>The calendar currently supports English, French, Italian and Spanish. Choices include.</description>
                </case>
                <case>
                    <title nested="2">Calendar height</title>
                    <description>Specify the height of the calendar control in pixels.</description>
                </case>
                <case>
                    <title nested="2">Calendar width</title>
                    <description>Specify the width of the calendar control. Value can be entered as pixels, or percentage. Include units in value. Examples: 500px, 99%. Typically, you will set this to 99% and adjust the 'Calendar IFrame container width' to control the width of the calendar.</description>
                </case>
                <case>
                    <title nested="2">Calendar IFrame container width</title>
                    <description>Specify the width of the IFrame in which the calendar is rendered. Use CSS syntax. e.g. 6in, 1200px, etc.</description>
                </case>
                <case>
                    <title nested="2">Calendar IFrame container height</title>
                    <description>Specify the height of the IFrame in which the calendar is rendered. Use CSS syntax. e.g. 6in; 1200px, etc.</description>
                </case>
                <case>
                    <title nested="2">Draw border around</title>
                    <description>Draw a border around the calendar Iframe container.</description>
                </case>
                <case>
                    <title nested="2">Container style</title>
                    <description>=Specify the inline style for the calendar IFrame container.</description>
                </case>
                <case>
                    <title nested="2">Container master template</title>
                    <description>You can typically leave this blank. It is for special situations only. The calendar runs inside an &lt;iframe&gt;. You can define an HTML template that contains a placeholder for the calendar &lt;iframe&gt;. Use {IframePlaceholder} in your HTML template as the placeholder for the calendar &lt;iframe&gt;.</description>
                </case>
                <case>
                    <title nested="2">Calendar master template</title>
                    <description>You can typically leave this blank. It is for special situations only. The calendar runs inside a &lt;div&gt;. You can define an HTML template that contains a placeholder for the calendar div. Use {calendar} as the placeholder in your HTML template.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Referenced Grids and Modal Dialog Size Properties</title>
            <cases>
                <case>
                    <title nested="2">New event grid name</title>
                    <description>Select a grid to display when adding a new event to the calendar. This grid will be displayed in a modal popup window when the user adds an event to the calendar by a click and drag event.</description>
                </case>
                <case>
                    <title nested="2">Update event grid name</title>
                    <description>Select a grid to display when updating an event. This grid will be displayed in a modal popup window when the user clicks on an existing event.</description>
                </case>
                <case>
                    <title nested="2">Popup grid window width</title>
                    <description>Specify the required width of the modal popup window that contains the new event and update event grids.</description>
                </case>
                <case>
                    <title nested="2">Popup grid window height</title>
                    <description>Specify the required height of the modal popup window that contains the new event and update event grids.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>License Information Properties</title>
            <cases>
                <case>
                    <title nested="2">Calendar license code</title>
                    <description>Enter a valid calendar license code, or a comma delimited list of licenses. The calendar is licensed per domain. If you want to read the license from the Web Project Settings, then set the license number here to: &lt;GetFromProjectSettings&gt;</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Data Binding - 'Calendars' table Properties</title>
            <cases>
                <case>
                    <title nested="2">Table type</title>
                    <description>Specify the table type of the 'Calendars' table. This is the table that contains information about the various types of calendars you wish to display.</description>
                </case>
                <case>
                    <title nested="2">Connection string</title>
                    <description>Specify the connection string to the Database</description>
                </case>
                <case>
                    <title nested="2">Table name</title>
                    <description>Specify the table name</description>
                </case>
                <case>
                    <title nested="2">Sequence name</title>
                    <description>Certain databases (e.g. Oracle, Postgres) use sequences for auto-increment values.</description>
                </case>
                <case>
                    <title nested="2">Field map</title>
                    <description>Specify the field map - how fields in your table map to the required fields. Leave blank if your table uses field names that match the default fields names for this table.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Data Binding - 'Events' table Properties</title>
            <cases>
                <case>
                    <title nested="2">Table type</title>
                    <description>Specify the table type of the 'Events' table. This is the table that contains information about each appointment.</description>
                </case>
                <case>
                    <title nested="2">Connection string</title>
                    <description>Specify the connection string to the Database</description>
                </case>
                <case>
                    <title nested="2">Table name</title>
                    <description>Specify the table name</description>
                </case>
                <case>
                    <title nested="2">Sequence name</title>
                    <description>Certain databases (e.g. Oracle, Postgres) use sequences for auto-increment values.</description>
                </case>
                <case>
                    <title nested="2">Field map</title>
                    <description>Specify the field map - how fields in your table map to the required fields. Leave blank if your table uses field names that match the default fields names for this table.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Component to use for Editing Events Properties</title>
            <cases>
                <case>
                    <title nested="2">Component name</title>
                    <description>Specify the name of the UX component that you want to use to enter information about an event when you create a new event, or edit the details of an existing event.</description>
                </case>
                <case>
                    <title nested="2">Additional fields in Events table</title>
                    <description>
                        <p>Specify the names of any additional fields you have added to the Events table.</p>
                        <p>If you have already created the UX Component to edit events, then you can edit the UX Component to specify additional fields. Add the fields to the UX component, and then register them in the following Xbasic function that are defined in the UX Component:</p>
                     </description>
                    <list bullet="true">
                        <item>
                            <name>*[xb:addAdditionalFieldsToEventsTableDef]*</name>
                        </item>
                        <item>
                            <name>*[xb:bindAdditionalFieldsToControls]*</name>
                        </item>
                        <item>
                            <name>*[xb:setAdditionalFieldsFromControls]*</name>
                        </item>
                    </list>
                </case>
                <case>
                    <title nested="2">Automatically create new calendar if not found</title>
                    <description>When the calendar is opened from a Javascript action, you can specify the Id of the calendar to show. If there are no calendars that match the specified Id, do you want to automatically create a new entry in the 'Calendars' table? When you define the action that opens the calendar, you will be able to set the value of the 'DescriptionForNewCalendar' argument, which will set the 'Description' field in the new calendar record that is created.</description>
                </case>
                <case>
                    <title nested="2">Use master style</title>
                    <description>Should the component that is used for editing use the same style as the Calendar component, or the style it was defined to use? If you uncheck this box, you need to include the style name for the component in the 'Additional component styles' property.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Pop-up Window Definition Properties</title>
            <cases>
                <case>
                    <title nested="2">Window title</title>
                    <description>Specify the title for the pop-up window where events information is edited.</description>
                </case>
                <case>
                    <title nested="2">Working message</title>
                    <description>Specify the working message that is displayed in the pop-up window while Alpha Anywhere is working.</description>
                </case>
                <case>
                    <title nested="2">Working icon</title>
                    <description>Specify the icon that is shown in the pop-up window while Alpha Anywhere is working.</description>
                </case>
                <case>
                    <title nested="2">Window height</title>
                    <description>Specify the size for the pop-up window where events information is edited. Use CSS syntax e.g. 300px, 3in, etc. If you leave this blank, the window will be automatically resized based on the size of the UX Component.</description>
                </case>
                <case>
                    <title nested="2">Window width</title>
                    <description>Specify the size for the pop-up window where events information is edited. Use CSS syntax e.g. 300px, 3in, etc. If you leave this blank, the window will be automatically resized based on the size of the UX Component.</description>
                </case>
                <case>
                    <title nested="2">Window is resizable</title>
                    <description>Specify if the pop-up window can be resized.</description>
                </case>
                <case>
                    <title nested="2">Window position</title>
                    <description>Specify where the window will be shown.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Window Animation Properties</title>
            <cases>
                <case>
                    <title nested="2">Animation</title>
                    <description>Specify if the window should be animated when it is shown or hidden.</description>
                    <note>If the window contains an IFrame, which in turn contains a PDF viewer, animation may not work well and should not be used.</note>
                </case>
                <case>
                    <title nested="2">Show animation style</title>
                    <description>Select the animation method to use when the window is shown. Fade and Slide use methods in jQuery core. Other options require jQueryUI.</description>
                </case>
                <case>
                    <title nested="2">Show animation speed</title>
                    <description>Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds), or you can enter an explicit value in milliseconds.</description>
                </case>
                <case>
                    <title nested="2">Hide animation style</title>
                    <description>Select the animation method to use when the window is closed. Fade and Slide use methods in jQuery core. Other options require jQueryUI.</description>
                </case>
                <case>
                    <title nested="2">Hide animation speed</title>
                    <description>Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds), or you can enter an explicit value in milliseconds.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Pop-up Window Javascript Events Properties</title>
            <cases>
                <case>
                    <title nested="2">onInitialize</title>
                    <description>Specify the Javascript code to execute the first time the window is shown.</description>
                </case>
                <case>
                    <title nested="2">onBeforeShow</title>
                    <description>Specify the Javascript code to execute before the window is shown.</description>
                </case>
                <case>
                    <title nested="2">onShow</title>
                    <description>Specify the Javascript code to execute when the window is shown.</description>
                </case>
                <case>
                    <title nested="2">onBeforeHide</title>
                    <description>Specify the Javascript code to execute before the window is hidden.</description>
                </case>
                <case>
                    <title nested="2">onHide</title>
                    <description>Specify the Javascript code to execute when the window is hidden.</description>
                </case>
                <case>
                    <title nested="2">onFocus</title>
                    <description>Specify the Javascript code to execute when the window gets focus.</description>
                </case>
                <case>
                    <title nested="2">onMove</title>
                    <description>Specify the Javascript code to execute when the window is moved.</description>
                </case>
                <case>
                    <title nested="2">onResize</title>
                    <description>Specify the Javascript code to execute when the window is resized.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>More Component Properties Properties</title>
            <cases>
                <case>
                    <title nested="2">Style name</title>
                    <description>Click the button to select a new style, or edit the existing style.   You can also use &lt;ProjectStyle&gt; or &lt;Session:varname&gt;</description>
                </case>
                <case>
                    <title nested="2">Class map</title>
                    <description>Specify how the abstract CSS class names used in this component map to physical CSS class names in your style sheets.</description>
                </case>
                <case>
                    <title nested="2">Resolve abstract CSS class names</title>
                    <description>Replace abstract CSS class names with physical CSS class names. This should only be un-checked if you are in development mode and you want to determine what the abstract CSS class name is for a particular element in the component.</description>
                </case>
                <case>
                    <title nested="2">Style overrides</title>
                    <description>By default, the Tabs, Accordions, pop-up Windows, Lists (edit-combo, auto-suggest, etc.) are style using the selected component style. You can override the style for these elements. This might be necessary for certain styles where the default appearance for these elements do not work well.</description>
                </case>
                <case>
                    <title nested="2">Font size</title>
                    <description>Specify if the fonts in the Component should be scaled to make the component larger or smaller. Select 'Medium' for no scaling (i.e. the fonts shown will match those defined in the style sheet). Choices include.</description>
                </case>
                <case>
                    <title nested="2">Font scaling option</title>
                    <description>Specify which CSS classes should be scaled. If you choose All, the fonts in these classes will be scaled, in addition to the fonts in the CSS classes specific to the Style that you selected: BODY, TABLE, TH, TR, TD, UL, OL, LI, P, A, BLOCKQUOTE. Choices include *[ui:All]*, *[ui:GridStyleClassesOnly]*.</description>
                </case>
                <case>
                    <title nested="2">Master template</title>
                    <description>Specify an optional Master Template. This allows you to place arbitrary HTML surrounding the component.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>CSS Properties</title>
            <cases>
                <case>
                    <title nested="2">Local CSS definitions</title>
                    <description>Define any local CSS classes. You can include SASS syntax in your CSS definition. For more information on SASS syntax see *[extlink:http://sass-lang.com/]*</description>
                </case>
                <case>
                    <title nested="2">Additional component styles</title>
                    <description>Specify if any other styles (in addition to the primary style for the component) must be included. Enter a comma delimited list of style names. e.g., GlassOlive,Airport</description>
                </case>
                <case>
                    <title nested="2">CSS Linked files</title>
                    <description>Specify any CSS files that should be linked (in addition to the primary style for the Component). Enter a comma delimited list of filenames.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Arguments Properties</title>
            <cases>
                <case>
                    <title nested="2">Arguments</title>
                    <description>
                        <p>Define arguments. Arguments can be bound to page, session and cookie variables. Argument values are passed into all server-side Xbasic event handlers in the component.</p>
                        <p>The Calendar component requires the following arguments are defined:</p>
                    </description>
                    <list>
                        <item>
                            <name-title>Argument</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>CalendarsToShow</name>
                            <description>Defines what calendars should be shown. Can be 'All' or a comma delimited list of calendar IDs</description>
                        </item>
                        <item>
                            <name>ReadOnlyCalendars</name>
                            <description>Defines what calendards are read-only.</description>
                        </item>
                        <item>
                            <name>InitialDate</name>
                            <description>Defines the initial date to display in the Calendar. Can be 'Today' or a date in format 'yyyy/mm/dd'.</description>
                        </item>
                        <item>
                            <name>DescriptionForNewCalendar</name>
                            <description>Defines the default description when a new calendar is created. See [Automatically create new calendar if not found].</description>
                        </item>
                    </list>
                    <important>IF REQUIRED ARGUMENTS ARE MISSING, THEY WILL BE AUTOMATICALLY ADDED WHEN THE COMPONENT IS SAVED.</important>
                </case>
            </cases>
        </section>
        <section>
            <title>Javascript Properties</title>
            <cases>
                <case>
                    <title nested="2">Javascript Linked files</title>
                    <description>Specify any Javascript files that should be linked. Enter a comma delimited list of filenames.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Other Properties</title>
            <cases>
                <case>
                    <title nested="2">Language definitions</title>
                    <description>Define strings for different languages.</description>
                </case>
                <case>
                    <title nested="2">Active language</title>
                    <description>Specify the active language to use for translating strings tagged with &lt;a5:r&gt;..&lt;/a5:r&gt; tags. Setting the property here is useful for testing purposes. In a real application you can set the 'session.__protected__activeLanguage' variable to specify the active language. To select the default language, enter &lt;Default&gt; or leave this property blank.</description>
                </case>
                <case>
                    <title nested="2">Head section tags</title>
                    <description>Specify any tags you want to appear in the HEAD section of the page that hosts this component.</description>
                </case>
                <case>
                    <title nested="2">Component must run in IFrame</title>
                    <description>Specify if this component must run in its own IFrame.</description>
                </case>
                <case>
                    <title nested="2">IFrame inline style</title>
                    <description>Specify the in-line style for the IFrame. You should set a height and width for the IFrame. e.g. width: 6in; height 4in;</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Advanced Properties</title>
            <cases>
                <case>
                    <title nested="2">Capture debugging information</title>
                    <description>If you check this property, all SQL or DBF commands used to read and write data to the Calendars and Events tables, and the Javascript commands (generated by Server-side event handlers) sent to the Calendar object or logged to the Trace files. (See the Application Server control panel for the folder where the Trace files are written).</description>
                </case>
                <case>
                    <title nested="2">Other properties</title>
                    <description>Specify other properties of the component</description>
                </case>
                <case>
                    <title nested="2">Save component format</title>
                    <description>
                        <p>Specify if the component should be saved as a binary file or as formatted JSON.</p>
                        <p>Formatted JSON saves the properties in clear text. This is useful if you are using some type of source or version control system and the system has a method to show differences between versions. Choices include *[ui:Binary]*, *[ui:Formatted JSON]*.</p>
                    </description>
                </case>
            </cases>
        </section>
    </sections>
    <links>
        <link href="#section2_Automatically%20create%20new%20calendar%20if%20not%20found">Automatically create new calendar if not found</link>
    </links>
</page>