<page>
    <shortlink>guides calendar component events</shortlink>
    <topic>Calendar Component Events</topic>
    <description>Information about client-side and server-side events for the Calendar Component.</description>
    <discussion>
        <p>When the Calendar component is run initially, server and client-side events fire in the following order: *[ui:onComponentInitialize]* -> *[ui:onComponentExecute]* -> *[ui:onInitialRender]*</p>
        <p>When an Ajax callback is made, events fire in the following order: *[ui:canAjaxCallback]* -> *[ui:onComponentExecute]* -> *[ui:afterAjaxCallbackComplete]*</p>
    </discussion>
    <groups>
        <group>
            <title>Server-side Events</title>
            <sections>
                <section>
                    <figure>
                        <link>images/serversideevents.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>All server-side events have access to the following properties, available via the *[xb:e]* object, which is passed to both events.</p>
                    </description>
                    <list>
                        <item>
                            <name>e.tmpl</name>
                            <description>An object containing the Calendar component's definition (i.e. [properties].) You can modify the definition to change the Calendar component's behavior.</description>
                        </item>
                        <item>
                            <name>e.rtc</name>
                            <description>An object for storing runtime calculations. Placing data in *[xb:e.rtc]* makes it available to Xbasic in other server-side events.</description>
                        </item>
                        <item>
                            <name>e.arguments</name>
                            <description>[SQL::Arguments] object that contains the values assigned to arguments defined in the Calendar component. Arguments can be read using the *[xb:find()]* method. For example: *[xb:e.arguments.find("argumentName").data]*</description>
                        </item>
                    </list>
                </section>
                <section>
                    <description>
                        <p>Server-side events can also access Server objects to create or read session, request, and response variables. See the [Context Object] to learn more about methods available for these objects.</p>
                    </description>
                    <list>
                        <item>
                            <name>Request</name>
                            <description>The Request object. See [Request Object] for methods available for the *[xb:Request]* object on the Classic Application Server. *[IMPORTANT]* If you are running the Application Server for IIS, you must use *[xb:Context.Request]*, not *[xb:Request]* to access the request variable information. See [Context.Request] object for more information.</description>
                        </item>
                        <item>
                            <name>Session</name>
                            <description>The Session object. Can be used to create server-side session variables to store state information that can be accessed throughout a web application.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>onComponentInitialize Event</title>
                    <description>
                        <p>Fires the first time a component is run. The *[ui:onComponentInitialize]* does not fire more than once.</p>
                    </description>
                </section>
                <section>
                    <title>onComponentExecute Event</title>
                    <description>
                        <p>Fires every time the component is run, including on Ajax callbacks.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Client-side Events</title>
            <sections>
                <section>
                    <figure>
                        <link>images/clientsideevents.png</link>
                    </figure>
                </section>
                <section>
                    <title>canAjaxCallback Event</title>
                    <description>Fires before an Ajax callback. If the function returns *[js:false]*, the callback will be aborted.</description>
                    <cases>
                        <case>
                            <title nested="2">Parameters</title>
                            <description>JavaScript in the *[ui:canAjaxCallback]* event can reference the following parameters:</description>
                            <list>
                                <item>
                                    <name>e.xbasicFunctionName</name>
                                    <description>The name of the Xbasic function that will be called.</description>
                                </item>
                                <item>
                                    <name>e.ajaxEvent</name>
                                    <description>The Xbasic event that will be called.</description>
                                </item>
                            </list>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>afterAjaxCallbackComplete Event</title>
                    <description>Fire after an Ajax callback has completed.</description>
                    <cases>
                        <case>
                            <title nested="2">Parameters</title>
                            <description>JavaScript in the *[ui:afterAjaxCallbackComplete]* event can reference the following parameters:</description>
                            <list>
                                <item>
                                    <name>e.xbasicFunctionName</name>
                                    <description>The name of the Xbasic function that was executed in the callback.</description>
                                </item>
                                <item>
                                    <name>e.ajaxEvent</name>
                                    <description>The Xbasic event that was executed in the callback.</description>
                                </item>
                            </list>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>onInitializeComplete Event</title>
                    <description>
                        <p>Fires after the Calendar component is completely initialized and all HTML has been rendered. It fires once when the Calendar component is first rendered. *[ui:onInitializeComplete]* not fire on subsequent Ajax callbacks.</p>
                        <p>*[ui:onInitializeComplete]* does not have any parameters.</p>
                    </description>
                </section>
                <section>
                    <title>onEventsLoad Event</title>
                    <description>
                        <p>Fires when events are loaded.</p>
                        <p>*[ui:onEventsLoad]* does not have any parameters.</p>
                    </description>
                </section>
                <section>
                    <title>onRenderComplete Event</title>
                    <description>
                        <p>The last event to fire when the Calendar component is rendered.</p>
                        <p>*[ui:onRenderComplete]* does not have any parameters.</p>
                    </description>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <link link="api objects context object">Context Object</link>
        <link link="api objects request object">Request Object</link>
        <link link="api objects context request object">Context.Request</link>
        <link link="api sql namespace arguments class">SQL::Arguments</link>
        <link link="server ref Calendar Component Properties">properties</link>
    </links>
</page>