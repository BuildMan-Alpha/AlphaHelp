<page>
	  <topic>TextBox Properties</topic>
<description>The most important properties of a TextBox control are the Size and MaxLength properties. 
	The MaxLength should match the field definition in your table. The size can be large</description>

<sections>
	<section>
		<title>HTML5type</title>
		<description></description>
			</section>
	<section>
		<title>Size</title>
		<description>Sets the width of the field in characters. </description>
		<note>No matter what you specify for height and width of a control, if the content is larger, then your browser will expand the table cell for you. There is no way to avoid this from the design of your grid or HTML. You can trim your data if it is crucial that your cells never expand. And even then, you have no control over the fonts being used by your user's browser so they could have things set to be really large and still be larger than the table cell.  </note>

	</section>
	<section>
		<title>MaxLength 
</title>
		<description>Sets the maximum length of the user's input in characters.  
</description>
	</section>
	<section>
		<title>In-line style </title>
		<description>Specifies style attributes that override the settings inherited from the style sheet. Click to define the In-line style. Refer to the Style Editor for details.  </description>
	</section>
	<section>
		<title>Container in-line style </title>
		<description></description>
	</section>
	<section>
		<title>Is a password field </title>
		<description>If this is a password field, the characters will be replaced with bullets.  
</description>
	</section>
	<section>
		<title>Watermark </title>
		<description>Sometimes, the size of screen matters when a user is accessing an application you've created. So how do you build an effective application to be used when screen real estate is limited, such as an Ajax Web app that will run on an iPhone? 
</description>
<cases>
	<case>
		<description>That's why "liquid" forms are an increasingly popular platform for running Web applications today. Liquid forms automatically reconfigure themselves based on the screen size. That's necessary for something like a smart phone,ine- color: initial; "  This first video  we put together will show how the grid makes it easy to design liquid forms.  Watermark fields     are also an effective tool for dealing with small screen sizes. Watermark fields let you put the field label inside the field itself. This is a great way to save space when you don't have space to spare.  
</description>
	</case>
	
</cases>
	</section>
	<section>
		<title>Custom attributes </title>
		<description></description>
	</section>
	
	
	<section>
		<description>code reference:</description>
		<example><![CDATA['Size   
tmpl.Field_Info[N]         .Textbox.Size as N 
'MaxLength   
tmpl.Field_Info[N]         .Textbox.MaxLength as N 
'Date Picker  
'Specifies whether the control should have a pop-up calendar.  
tmpl.Field_Info[N]         .DatePicker.Display as L 
'In-line style  
tmpl.Field_Info[N]         .Textbox.InLineStyle as C 
'Is a password field  
tmpl.Field_Info[N]         .Textbox.IsPassword as L 
'Style control if error  
'Specifies whether to apply a second style to the field if a validation error occurs (V6 only).  
tmpl.Field_Info[N]         .Textbox.StyleFieldIfError as L 
'Control In-line error style  
'Specifies style attributes that are used when a validation error occurs. Click to define the In-line style. Refer to the Style Editor for details.  
tmpl.Field_Info[N]         .Textbox.ErrorInlineStyle as C 
]]></example>
		
	</section>
	
	
</sections>



</page>