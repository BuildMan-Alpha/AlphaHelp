<page>
	<shortlink>server ref Image Gallery Properties</shortlink>
	<topic>Image Gallery Properties</topic>
	<description>A list of image gallery properties with their descriptions.</description>
	<sections>
        <section>
            <title> Image Gallery Options Properties</title>
            <cases>
                <case>
                    <title nested="2">Default image directory</title>
                    <description>This value is normally bound by an argument to a field in an Alpha Anywhere data driven component. The default value is typically used for testing.</description>
                </case>
                <case>
                    <title nested="2">Image directory sort criteria</title>
                    <description>Specifies the sort order for the image directory. Choices include.</description>
                </case>
                <case>
                    <title nested="2">Default filter</title>
                    <description>Should you need to filter the images returned from the wildcard search of the images directory, a filter string may be applied. This can also be bound by an argument to a field in an Alpha Anywhere data driven component or to a JavaScript function.</description>
                </case>
                <case>
                    <title nested="2">Limit the number of images displayed</title>
                    <description>Limits the number of images displayed.</description>
                </case>
                <case>
                    <title nested="2">  * Maximum images to display</title>
                    <description>Image count threshold. This limits the number of thumbnails/images displayed in the gallery. Example, if set to 32 and the directory contains 100 images, only the first 32 will be displayed. Minimum value is 2.</description>
                </case>
                <case>
                    <title nested="2">Background color</title>
                    <description>Select a light or dark background for the image gallery. Choices include.</description>
                </case>
                <case>
                    <title nested="2">Display slideshow button</title>
                    <description>Show the slideshow control. Allows the user to turn on a slideshow.</description>
                </case>
                <case>
                    <title nested="2">  Slideshow delay</title>
                    <description>Set the time delay in milliseconds between slide transitions, default is 5000. Minimum is 3000. Maximum is 15000.</description>
                </case>
                <case>
                    <title nested="2">Display image filename</title>
                    <description>Display the image filename, within the image footer, center justified.</description>
                </case>
                <case>
                    <title nested="2">Display formatted EXIF information</title>
                    <description>Show the EXIF data (if available) contained in the jpg file. The EXIF data will follow the image description, if displayed.</description>
                    <important>You must have ImageMagick installed on your server in order to show EXIF data. The ImageMagick 'identify.exe' program is used to extract EXIF data. This program must be in the path. To get ImageMagick go to *[extlink:http://www.imagemagick.org/]*</important>
                </case>
                <case>
                    <title nested="2">Display Google Map and image marker</title>
                    <description>Show a Google Map, on the flip side of the Info Panel, if the photo has lat/lon data.</description>
                </case>
                <case>
                    <title nested="2">Google Maps API key</title>
                    <description>Specify your Google Maps API Key. You need to go to the Google Maps site to request your API key. The key you define here will override the project global API key that you can define in the Web Project Properties dialog.</description>
                    <tip>If you wish to use the key defined in Project Properties, leave this value blank.</tip>
                </case>
                <case>
                    <title nested="2">Display Text to speech button for supported browsers</title>
                    <description>Display a Play button that converts the Info Panel text to speech. Uses .NET TTS library and HTML5 audio. Only displays in supported webkit browsers.</description>
                </case>
                <case>
                    <title nested="2">Display image description in Info Panel</title>
                    <description>Show the description within the info panel, if available. The description field requires binding to a database table. The directory name and the image name are the primary keys. The field data may contain HTML markup.</description>
                </case>
            </cases>
        </section>
        <section>
            <title> Data Binding - Images table -> image description Properties</title>
            <description>Data Binding is used to provide descriptions for images. If an image folder + image name is found in the table along with a description, the description will appear in the Info panel.</description>
            <cases>
                <case>
                    <title nested="2">Database type</title>
                    <description>Specify the table type for the images table.</description>
                </case>
                <case>
                    <title nested="2">Connection string</title>
                    <description>Specify the connection string for the SQL images table.</description>
                </case>
                <case>
                    <title nested="2">Table name</title>
                    <description>Specify the table name for the images table.</description>
                </case>
                <case>
                    <title nested="2">Field map</title>
                    <description>Specify the field mapping, if required.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Other Component Properties Properties</title>
            <cases>
                <case>
                    <title nested="2">Style name</title>
                    <description>Click the button to select a new style, or edit the existing style.  You can also use &lt;ProjectStyle&gt; or &lt;Session:varname&gt;</description>
                </case>
                <case>
                    <title nested="2">Class map</title>
                    <description>Specify how the abstract CSS class names used in this component map to physical CSS class names in your style sheets.</description>
                </case>
                <case>
                    <title nested="2">Resolve abstract CSS class names</title>
                    <description>Replace abstract CSS class names with physical CSS class names. This should only be un-checked if you are in development mode and you want to determine what the abstract CSS class name is for a particular element in the component.</description>
                </case>
                <case>
                    <title nested="2">Font size</title>
                    <description>Specify if the fonts in the Component should be scaled to make the component larger or smaller. Select 'Medium' for no scaling (i.e. the fonts shown will match those defined in the style sheet). Choices include.</description>
                </case>
                <case>
                    <title nested="2">Font scaling option</title>
                    <description>Specify which CSS classes should be scaled. If you choose All, the fonts in these classes will be scaled, in addition to the fonts in the CSS classes specific to the Style that you selected: BODY, TABLE, TH, TR, TD, UL, OL, LI, P, A, BLOCKQUOTE. Choices include *[ui:All]*, *[ui:GridStyleClassesOnly]*.</description>
                </case>
                <case>
                    <title nested="2">Master template</title>
                    <description>Specify an optional Master Template. This allows you to place arbitrary HTML surrounding the component.</description>
                </case>
                <case>
                    <title nested="2">Page title</title>
                    <description>Specify the page title for the .a5w page that renders this component.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>CSS/SVG Properties</title>
            <cases>
                <case>
                    <title nested="2">Local CSS definitions</title>
                    <description>Define any local CSS classes. NOTE: You can include SASS syntax in your CSS definition. For more information on SASS syntax see *[extlink:http://sass-lang.com/]*</description>
                </case>
                <case>
                    <title nested="2">Additional component styles</title>
                    <description>Specify if any other styles (in addition to the primary style for the component) must be included. Enter a comma delimited list of style names. e.g., GlassOlive,Airport</description>
                </case>
                <case>
                    <title nested="2">CSS Linked files</title>
                    <description>Specify any CSS files that should be linked (in addition to the primary style for the Component). Enter a comma delimited list of filenames.</description>
                </case>
                <case>
                    <title nested="2">Local SVG definitions</title>
                    <description>Specify any local SVG  image definitions you want to include in this component.</description>
                </case>
                <case>
                    <title nested="2">SVG Linked files</title>
                    <description>Specify any SVG files that should be linked. Enter a comma delimited list of filenames. Only relative filenames can be specified. Files must be in a folder relative to the webroot.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Arguments Properties</title>
            <cases>
                <case>
                    <title nested="2">Arguments</title>
                    <description>Define arguments. Arguments can be bound to page, session and cookie variables. Argument values are passed into all server-side Xbasic event handlers in the component. The following arguments are available for defining the images shown in an Image Gallery component:</description>
                    <list>
                        <item>
                            <name>image_dir</name>
                            <description>The image directory to display</description>
                        </item>
                        <item>
                            <name>filter</name>
                            <description>A comma delimited file filter string, which supports the * and ? wildcard characters.</description>
                        </item>
                    </list>
                </case>
                <case>
                    <description>The *[ui:filter]* argument can be defined to filter the files shown in the Image Gallery. For example:</description>
                    <example><![CDATA[img_house.jpg,img_bathroom_*.jpg,img_kitchen_*.jpg1]]></example>
                </case>
                <case>
                    <description>
                        <p>This filter will select all of the .jpg files that start with 'img_bathroom_' or 'img_kitchen_' as well as the image called 'img_house.jpg'.</p>
                        <p>The default value for the filter is blank. If a blank filter is supplied, then all of the images in the specified folder are shown.</p>
                        <p>When you use Action Javascript to open an Image Gallery, you will be able to specify a value for the Filter argument.</p>
                        <p>The ability to specify a filter argument, combined with the ability to bind the filter at runtime to the result of an arbitrary JavaScript function, is extremely powerful, and gives you great flexibility in controlling exactly which images are shown in the Image Gallery.</p>
                    </description>
                </case>
            </cases>
        </section>
        <section>
            <title>Javascript Properties</title>
            <cases>
                <case>
                    <title nested="2">Javascript Linked files</title>
                    <description>Specify any Javascript files that should be linked. Enter a comma delimited list of filenames.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Xbasic Properties</title>
            <cases>
                <case>
                    <title nested="2">Xbasic Linked files</title>
                    <description>Specify any Xbasic Function Library files that should be linked. Enter a comma delimited list of filenames. Defining Xbasic functions in a Function Library (that can be shared among multiple components) is an alternative to defining your Xbasic functions in this component (see 'Xbasic functions' on the toolbox).</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Other Properties</title>
            <cases>
                <case>
                    <title nested="2">Language definitions</title>
                    <description>Define strings for different languages.</description>
                </case>
                <case>
                    <title nested="2">Text dictionary tags</title>
                    <description>Show Text Dictionary tags (&lt;a5:t&gt;...&lt;/a5:t7gt;) used in this component.</description>
                </case>
                <case>
                    <title nested="2">Active language</title>
                    <description>Specify the active language to use for translating strings tagged with &lt;a5:r&gt;..&lt;/a5:r&gt; tags. Setting the property here is useful for testing purposes. In a real application you can set the 'session.__protected__activeLanguage' variable to specify the active language. To select the default language, enter &lt;Default&gt; or leave this property blank.</description>
                </case>
                <case>
                    <title nested="2">Remove un-consumed language tags</title>
                    <description>Should any language tags that were not replaced (because they were not defined in the Language Definition) be removed from any output sent to the browser?</description>
                </case>
                <case>
                    <title nested="2">Head section tags</title>
                    <description>Specify any tags you want to appear in the HEAD section of the page that hosts this component.</description>
                </case>
                <case>
                    <title nested="2">Component must run in IFrame</title>
                    <description>Specify if this component must run in its own IFrame.</description>
                </case>
                <case>
                    <title nested="2">IFrame inline style</title>
                    <description>Specify the in-line style for the IFrame. You should set a height and width for the IFrame. e.g. width: 6in; height 4in;</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Advanced Properties</title>
            <cases>
                <case>
                    <title nested="2">Other properties</title>
                    <description>Specify other properties of the component</description>
                </case>
                <case>
                    <title nested="2">Save component format</title>
                    <description>
                        <p>Specify if the Image Gallery component should be saved as a binary file or as formatted JSON.</p>
                        <p>Formatted JSON saves the properties in clear text. This is useful if you are using some type of source or version control system and the system has a method to show differences between versions. Choices include *[ui:Binary]*, *[ui:Formatted JSON]*.</p>
                    </description>
                </case>
            </cases>
        </section>
    </sections>
</page>