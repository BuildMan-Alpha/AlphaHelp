<page build="7743">
    <shortlink>login uxcomp</shortlink>
    <topic>Login UX Component</topic>
    <description>An interface for adding login functionality to an application that has the security framework enabled. Includes built-in support for reset password, account creation, two-factor authentication, and persistent login.</description>
    <discussion>
        <p>The Login UX is a newer component added in the release of Alpha Anywhere 4.6.3.2 and is the recommended Login component to use. The Login UX has numerous advantages over the Legacy Login component:</p>
        <p>
            <list bullet="true">
                <item>
                    <name>The Login UX is fully customizable</name>
                </item>
                <item>
                    <name>The Login UX supports two-factor authentication</name>
                </item>
                <item>
                    <name>The Login UX includes built-in support for password reset and new account creation</name>
                </item>
                <item>
                    <name>The Login UX includes built-in support for two different after login behaviors - redirect to a target page, or set focus to a Panel Card that represents the starting point of your application</name>
                </item>
                <item>
                    <name>The Login UX includes built-in support for 'persistent login' -- the user will be automatically logged in if they have previously logged in provided the login has not expired (you can customize the persistent login duration)</name>
                </item>
            </list>
        </p>
    </discussion>
    <sections>
        <section>
            <title>Creating a Login UX</title>
            <description>
                <p>To create a new Login UX, on the *[ui:Web Projects Control Panel]* with *[ui:Web Components]* selected in the left-hand list, click *[ui:New]*. Select *[ui:Web Component]* and click *[ui:Next]*. Then, select *[ui:Login]* and click *[ui:Next]*.</p>
            </description>
            <figure>
                <title>Creating a new Login UX component</title>
                <alt>Creating a new Login UX component</alt>
                <link>images/newLogin1.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>If you are running the full Alpha Anywhere Development Environment, you'll be asked what type of Login component to create. Click *[ui:UX - Create Login Component Using a UX Component]* to create a Login UX.</p>
            </description>
            <note>
                <p>If you are using Alpha Anywhere Community Edition, you can only create a Login UX component.</p>
            </note>
        </section>
        <section>
            <description>
                <p>Alpha Anywhere will prompt you for the following information before creating the Login UX:</p>
                <p>
                    <list bullet="true">
                        <item>
                            <name>The type of Login Component to create. Select *[ui:UI - </name>
                        </item>
                        <item>
                            <name>The Login Component Style.</name>
                        </item>
                        <item>
                            <name>The name of the Component.</name>
                        </item>
                    </list>
                </p>
                <p>Two layouts are available for the Login UX: Image on Left and Image Behind. Both of these layouts are shown in the images below.</p>
            </description>
            <figure>
                <title>Image on Left</title>
                <alt>Image on Left</alt>
                <link>images/imageleft.jpg</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Image Behind</title>
                <alt>Image Behind</alt>
                <link>images/imageright.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>After selecting the layout and specifying a name for the component, the Login UX will be generated and opened in the UX Builder.</p>
                <p>The Login component contains several Panel, depending on the type of layout chosen:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Panel</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>PANEL_LOGIN</name>
                            <description>This panel contains all of the Login controls.</description>
                        </item>
                        <item>
                            <name>PANELCARD_APPLICATION</name>
                            <description>If the *[ui:After login behavior]* is set to *[FocusPanelCard]*, the PANELCARD_APPLICATION is Panel shown. Here is where you can place the controls for your application.</description>
                        </item>
                        <item>
                            <name>PANEL_IMAGE</name>
                            <description>If you chose the layout with Image on Left, the PANEL_IMAGE is the Panel that displays the image.</description>
                        </item>
                    </list>
                </p>
            </description>
        </section>
        <section>
            <title nested="2">How to Change the Image</title>
            <description>
                <p>If you want to change the image that is used in the sample components, follow these steps:</p>
            </description>
            <cases>
                <case>
                    <title nested="3">Image on Left</title>
                    <steps>
                        <step>
                            <description>
                                <p>Select the PANEL_IMAGE Panel card.</p>
                            </description>
                        </step>
                        <step>
                            <description>
                                <p>Change the image name in the *[ui:Image name]* property.</p>
                            </description>
                            <figure>
                                <title>PANEL_IMAGE Panel Image name property</title>
                                <alt>PANEL_IMAGE Panel Image name property</alt>
                                <link>images/logincomponent-imageleft.jpg</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>To change the position of the image, select the PanelLayout that contains the PANEL_IMAGE and change the Layout flow direction property. For example, to put the image on the right, change the flow direction to RTL (right-to-left).</p>
                            </description>
                            <figure>
                                <title>The Panel Layout flow direction property</title>
                                <alt>The Panel Layout flow direction property</alt>
                                <link>images/PreRel19.jpg</link>
                            </figure>
                        </step>
                    </steps>
                </case>
                <case>
                    <title nested="3">Image Behind</title>
                    <steps>
                        <step>
                            <description>
                                <p>Select the PANEL_LOGIN Panel Card</p>
                            </description>
                        </step>
                        <step>
                            <description>
                                <p>Set the new image name in the Image name property.</p>
                            </description>
                            <figure>
                                <title>PANEL_LOGIN Panel Image name property</title>
                                <alt>PANEL_LOGIN Panel Image name property</alt>
                                <link>images/logincomponent_imagebehind.jpg</link>
                            </figure>
                        </step>
                    </steps>
                </case>
            </cases>
        </section>
        <section>
            <title>Configuring the Login UX</title>
            <description>
                <p>The *[ui:Login]* settings found in the UX Properties are used to configure the Login UX. Here you can configure the After login behavior, login messages, log out behavior, password reset, account creation, and more.</p>
                <p>
                    <list>
                        <item>
                            <name-title>Login Property</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>Persistent login</name>
                            <description>If checked, enables persistent login. Persistent login keeps the user logged in for an extended period of time, even if they close the app/browser. The Persistent login duration can be configured with *[ui:Login duration (seconds)]*.</description>
                        </item>
                        <item>
                            <name>After login behavior</name>
                            <description>Defines what happens after the user successfully logs in. By default, the *[ui:After login behavior]* is set to "RedirectToTargetPage". Other options include "FocusPanelCard", which is configured to give focus to the PANELCARD_APPLICATION panel, and "Nothing".</description>
                        </item>
                        <item>
                            <name>Customize login failure messages</name>
                            <description>
                                <p>This setting is used to customize the various login failure messages. You can use text dictionary or language tags to add support for multiple languages. Login failure messages include:</p>
                                <p>
                                    <example><![CDATA[MsgFailed=Login Information Incorrect
MsgIncomplete=Required data is missing
MsgLockedOut=Try Again Later
MsgNotSupported=Option is Not Supported
MsgPasswordExpired=Password has Expired
MsgPasswordFormatError=Invalid Data Supplied
MsgSecurityNotEnabled=Security is Not Enabled
MsgUnknownError=Invalid Data Supplied
MsgUserIdFormatError=Invalid Data Supplied]]></example>
                                </p>
                            </description>
                        </item>
                        <item>
                            <name>Logout does a full page reload</name>
                            <description>If checked, the .a5w page containing the Login UX is reloaded. If you've configured the Login UX to FocusPanelCard, doing a full page reload will clear out any existing data or loaded components that the user should no longer have access because they have logged out.</description>
                        </item>
                        <item>
                            <name>Allow password reset</name>
                            <description>
                                <p>Modern web applications typically never allow password recovery. However, if a user has forgotten their password, they do allow password reset. If you check the *[ui:Allow password reset]* property, the Login UX will display the HYPERLINK_FORGOTPASSWORD link control to reset the user's password. The default label is "Forgot Password?". You can customize the label by changing the *[ui:Hyperlink text]* for the HYPERLINK_FORGOTPASSWORD UX control.</p>
                                <p>For *[ui:Allow password reset]* to work, the reset password control must be named HYPERLINK_FORGOTPASSWORD.</p>
                            </description>
                        </item>
                        <item>
                            <name>Allow create account</name>
                            <description>
                                <p>Allows a user to create a new account. If the web project has enabled the extended user-information table, then when the user created their new account they will be able to set values for the fields in the extended user-information table including whether they want to enable two-factor authentication. See [How to Capture Extended User Information when a User Creates a New Account] for more info.</p>
                                <p>The default label for create account is "Create Account". You can customize the label by changing the *[ui:Hyperlink text]* for the HYPERLINK_CREATEACCOUNT UX control.</p>
                                <p>For *[ui:Allow create account]* to work, the reset password control must be named HYPERLINK_CREATEACCOUNT.</p>
                            </description>
                        </item>
                        <item>
                            <name>Additional features settings</name>
                            <description>
                                <p>The *[ui:Additional features settings]* contains properties for configuring other Login UX features including Password Reset, Password Reset email configuration, New Password configuration, and New Account creation. You can use text dictionary or language tags to add support for multiple languages.</p> 
                            </description>
                        </item>
                    </list>
                </p>
            </description>
        </section>
        <section>
            <title>Resetting Passwords</title>
            <description>
                <p>When a UX component is configured with integrated login, you can turn on a feature that allows a user to reset their password. The Password Reset feature requires a valid email address. This email address can either be the User ID or read from the Extended User Information Table.</p>
            </description>
            <cases>
                <case>
                    <title nested="2">Understanding Password Reset</title>
                    <description>
                        <p>When the user clicks the Forgot password? link on the Login dialog, the Login dialog changes to display the following. You can customize the wording on the dialog in the Login Features dialog. The Login Features dialog is opened when you click the smart field for the Additional features settings property in the Login section of the UX Builder.</p>
                    </description>
                </case>
                <case>
                    <description>
                        <p>The user will enter their email address and click the Reset Password button. an email will then be sent to the user's account.</p>
                        <p>The email will either be sent using your own email account or using an Alpha Software account. You can configure which email account is used to send the email in the Login Features dialog. The Login Features dialog is opened when you click the smart field for the Additional features settings property in the Login section of the UX Builder.</p>
                    </description>
                    <note>
                        <p>If you chose to use the &lt;System&gt; email account then you cannot set the from address of the email that is sent. The from address will automatically be set to noreply@alphasoftware.com.</p>
                    </note>
                </case>
                <case>
                    <description>
                        <p>The email that the user receives will contain a link (see image below).</p>
                    </description>
                    <figure>
                        <link>images/resetemail.jpg</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>When the user clicks the link the Login dialog is shown as follows:</p>
                    </description>
                    <figure>
                        <link>images/resetdialog.gif</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>The user will enter their new password and then click the Reset Password button.</p>
                        <p>The new password must satisfy the password validation rules specified in the Password validation rules property in the Security Settings dialog. In addition, you can also specify the name of a JavaScript function to validate the password that the user enters. To specify a custom Javascript function for the Password validation function property. This property applies both when the user is changing their password, or creating a new account.</p>
                        <p>Your JavaScript function should take a single argument, the password that the user entered, and it should return a string with an error message if the password is not valid, or it should return a blank value if the password is valid.</p>
                    </description>
                    <figure>
                        <link>images/logincustomization.gif</link>
                    </figure>
                </case>
                <case>
                    <figure>
                        <link>images/createaccount2.jpg</link>
                    </figure>
                </case>
                <case>
                    <title nested="2">Resetting Passwords Using a Stored Email</title>
                    <description>
                        <p>The password reset feature is implemented as follows: An email is sent to user requesting the the password reset. In the case where the userid is an email address, the email address where to send the password reset email is known. But in the case where the userid is a value, the email address where to send the password reset email is not known. Therefore, if you have set the userid type to value, then in order to support the password reset feature, your web project must have an extended user-information table. Furthermore, this table must have a field called email and there should be an entry in the table for each user in your application. When the user requests a password reset, they will enter their userid. Alpha Anywhere will then look up this userid value in the extended user information table to find the email address associated with the userid and it will send the password reset email to this email address. If there is no email address found, then the user requesting the password reset will not receive an email, but Alpha Anywhere does not report that there was no associated email found as that would be a hacking vector. (It would allow a hacker to enter random userid values and see which ones generate an error, in effect allowing the hacker to guess userid values).</p>
                    </description>
                </case>
                <case>
                    <title nested="2">Handling Mobile</title>
                    <description>
                        <p>In a Cordova mobile application, password reset operates differently.</p>
                        <p>At the login screen the user can click the Forgot Password? link to request a password reset. An email will be send to the user and the email will contain a password reset token as shown in the sample below (you can customize the text in this message):</p>
                    </description>
                    <figure>
                        <title>Example Reset Password Token Message</title>
                        <alt>Example Reset Password Token Message</alt>
                        <link>images/passwordresetemail.gif</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>The UX component will then automatically set focus to to a container that displays controls where the user can enter their password reset token and the new password.</p>
                    </description>
                    <figure>
                        <title>Reset Password Form</title>
                        <alt>Reset Password Form</alt>
                        <link>images/cordova_changepassword.jpg</link>
                    </figure>
                </case>
            </cases>
        </section>
        <section>
            <title>Creating Accounts</title>
            <description>
                <p>If you have enabled the Allow create account property in the UX Component, the Login dialog will have a Create account link.</p>
                <p>When the user clicks the link the Login dialog changes as follows:</p>
            </description>
            <figure>
                <link>images/createaccount3.gif</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The user will enter credentials for their new account and then press the Create Account button.</p>
                <p>The new password must satisfy the password validation rules specified in the Password validation rules property in the Security Settings dialog. You can optionally specify a Javascript function to perform additional validation on the password.</p>
                <p>If the new account is successfully created, then if the Web Project has specified an extended user-information table, the following screen will be shown:</p>
            </description>
            <figure>
                <link>images/extended_user_information_dialog.gif</link>
            </figure>
        </section>
        <section>
            <description>
                <p>At a minimum the dialog will allow the user to turn two-factor authentication on and if they turn it on, they will be able to select the two-factor authentication options: Email, SMS or Google Authenticator.</p>
                <p>In addition, the dialog can prompt for additional fields in the extended user-information table. See [How to Capture Extended User Information when a User Creates a New Account] for more details.</p>
            </description>
        </section>
        <section>
            <title>How to Capture Extended User Information when a User Creates a New Account</title>
            <description>
                <p>The layout of the dialog shown to capture extended user information is shown in the UX component in the CONTAINER_EXTENDEDUSERINFORMATION container (the container does not have to have this name. It can be named anything you want. The name is defined in the Login Features dialog).</p>
            </description>
            <figure>
                <link>images/extendeduserinfocontainer.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>You can add additional controls to this container to capture information for other fields in your extended user information table. For example, say that your extended user information table contains these fields:</p>
                <p>
                    <example><![CDATA[FIRSTNAME
LASTNAME
LANGUAGEPREFERENCE]]></example>
                </p>
                <p>You could add specially named controls to the CONTAINER_EXTENDEDUSERINFORMATION container to capture this additional information when the user creates a new account. Each control must be named the same as the corresponding field in the extended user information table, but with a prefix of EXTENDED_.</p>
                <p>In the above example, you would add controls to the CONTAINER_EXTENDEDUSERINFORMATION container with the following names:</p>
                <p>
                    <example><![CDATA[EXTENDED_FIRSTNAME
EXTENDED_LASTNAME
EXTENDED_LANGUAGEPREFERENCE]]></example>
                </p>
            </description>
        </section>
        <section>
            <title>Understanding the After login behavior property</title>
            <description>
                <p>If you are using a UX component as your Login component, the After login behavior property determines what happens after the user logs in. This property can be set to RedirectToTargetPage or, FocusPanelCard.</p>
                <p>If the property is set to  RedirectToTargetPage then the Redirect page property is shown. This is the name of the page that the application should redirect to after user user logs in. The redirect page can be set explicitly, or can be set to &lt;Default&gt;. If the redirect page is set to &lt;Default&gt;, the actual redirect page is specified in Security Settings (see the [Redirect page after login] property.)</p>
            </description>
            <note>
                <p>You can override the setting in the UX component's server-side onLogin event by setting the value of the e.url property. In the case where the After login behavior is set to FocusPanelCard, you can overwrite the setting for the target Panel by adding code to the client-side AfterLogin event (e.g. {dialog.object}.panelSetActive('target panel') )</p>
            </note>
        </section>
        <section>
            <description>
                <p>If this property is set to FocusPanelCard then after login, the UX will set focus to the specified Panel Card in the component. This option is typically used in Cordova mobile applications in conjunction with the Persistent login feature where there may be no internet connection when the application is launched, so redirecting to another page is not possible.</p>
            </description>
            <figure>
                <link>images/PreRel10.jpg</link>
            </figure>
        </section>
        <section>
            <title>How Persistent Login Works</title>
            <description>
                <p>If you turn on the Has Integrated login functionality property for the UX you can specify that once the user logs in the login should be 'persistent' (by checking the Persistent login property). If persistent login is turned on then when the user loads the login component again (even after their session has expired, which would normally log them out), the user will be automatically logged back in.</p>
                <p>You can specify the duration of the persistent login. If more time has passed than the specified duration, then when the user loads the login component again (after their session has expired), they will no longer be automatically logged in and they will have to log in again.</p>
            </description>
        </section>
        <section>
            <title>Videos</title>
        </section>
        <section>
            <videos>
                <title>Using a UX Component as your Login Dialog</title>
                <description>
                    <p>When you enable the Security Framework for your project you will need a login dialog where users will log into your application. A UX component can be used as the Login component and can be configured to allow password reset and new account creation.</p>
                    <p>In this video we show how to use a UX component as your Login dialog.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch video - Configuring a UX as a Login Component</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_uxlogincomponent.mp4</link>
                </video>
                <video>
                    <name>Watch video - Using a UX as a Login Component</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_uxlogincomponentinaction.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Reset Password</title>
                <description>
                    <p>A common requirement in any Security Framework is the ability for the user to reset their password if they have forgotten it. The typical pattern for this is to send an email to the user. The email has a link that the user can click to bring up a dialog where they can change their password.</p>
                    <p>In this video we show how this is done.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_forgotpassword.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Create new account</title>
                <description>
                    <p>A common requirement in any Security Framework is the ability for a user to create a new account.</p>
                    <p>In this video we show how the user can create a new account.</p>
                    <p>In addition, if the Web Project has defined an Extended User-information table, then at the same time that the user creates their new account, they can choose to enable two-factor authentication.</p>
                    <p>In this video we show how this is done.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_createaccount.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>After Login Behavior</title>
                <description>
                    <p>After the user has logged into your application using a UX component, configured as a Login dialog, the "after login behavior" can either redirect the user to another page in your application, or to another Panel in the UX component.</p>
                    <p>In this video we show how the "after login behavior" is configured.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_afterlogin.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Persistent Login</title>
                <description>
                    <p>	A common requirement when building an application with the Security Framework is to enable 'persistent login'. With 'persistent login' a user will not need to log into the app again after they have successfully logged in once.</p>
                    <p>In this video we show how 'persistent login' is enabled.</p>
                </description>
                <date>2021-06-22</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/security_persistentLogin.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Password reset when userid is a value (not an email address)</title>
                <description>
                    <p>The password reset feature can be used when the userid in the security framework is a value (rather than an email address).</p>
                    <p>This video shows how this is done and how the extended user-information table must be configured.</p>
                </description>
                <date>2021-07-08</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/passwordreset_useridisvalue.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Using the password reset feature in a Cordova mobile application</title>
                <description>
                    <p>The password reset feature can be used in Cordova applications running on mobile devices. The behavior of the component is slightly different than when running in a browser.</p>
                    <p>In this video we show how password reset work in a Cordova application.</p>
                </description>
                <date>2021-07-08</date>
                <video>
                    <name>Watch Video</name>
                    <link>http://alphamediacapture.s3.amazonaws.com/videos/resetpassword_cordova.mp4</link>
                </video>
            </videos>
        </section>
        <section>
            <videos>
                <title>Webinar: Intro to The New Alpha Anywhere Security Genie</title>
                <description>
                    <p>Dion McCormick presents an introduction to Alpha Anywhere's new Security Genie.</p>
                </description>
                <date>2021-10-20</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.youtube.com/watch?v=cXoB9Jy8Fqs</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link link="defining%20security%20settings#section3_Redirect%20Page%20After%20Login">Redirect page after login</link>
        <link href="#section1_How%20to%20Capture%20Extended%20User%20Information%20when%20a%20User%20Creates%20a%20New%20Account">How to Capture Extended User Information when a User Creates a New Account</link>
    </links>
</page>