<page>
	<shortlink>grid column properties</shortlink>
	<topic>Column Properties</topic>
	<description>There are situations where you will want to hide a column or row. This will be true if you are placing the field in a different column or row using a Freeform template. A freeform layout allows to insert any HTML code plus any combination of fields on the grid into a grid column. </description>
	<sections>
		<section>
			<description>For example, although your database had  firstname and  lastname fields, a freeform layout could display a single  name field that combined these two values.  In almost all cases you will want to define the column or row heading. If you want to control access to this field, you may set a minimum security level requirement (V7). A users with a too low security level will not be able to see the column.  The column's cell in-line style field defines additional HTML formatting that you want to apply to the cell of the grid. If you wanted to change the border or background of the cell, this is where you would do it.  The can sort property enables and disables the ability to click on the column heading and sort the current page based on the values in the selected column.  </description>
		</section>
		<section>
			<title>Hide column</title>
			<description>Hides the column or row that would contain this field. You might choose to hide the field if it was displayed in a free-form layout.  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.Hide as L </example>
		</section>
		<section>
			<title>Column heading</title>
			<description>The label that identifies the column o row.  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.Heading as C </example>
		</section>
		<section>
			<title>Column in-line style</title>
			<description>Specifies style attributes that override the settings inherited from the style sheet. Click to define the In-line style. Refer to the Style Editor for details.  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.LabelInLineStyle as C </example>
		</section>
		<section>
			<title>Heading prefix, Label prefix  </title>
			<description>Specify HTML text or the path to and name of an image to be displayed to the left of the row or above the column heading.</description>
			<example code="xb">tmpl.Field_Info[N] .Column.Heading_Left as C
</example>
		</section>
		<section>
			<title>Row label position</title>
			<description>The position of the label in relationship to the control. The options are:"Left", "Right", "Above", "Below"  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.LabelPosition as C </example>
		</section>
		<section>
			<title>Can sort</title>
			<description>Specifies whether the grid will be sorted when the user clicks on the column or row heading.  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.Sort as C
</example>
		</section>
		<section>
			<title>Sort field</title>
			<description>Specify the field(s) to sort on when user clicks on the column or row title. Put commas between field names.</description>
			<example code="xb">tmpl.Field_Info[N] .Column.Sort as C
</example>
		</section>
		<section>
			<title>Freeform layout</title>
			<description>Specify if this column or row should display just this field, or allow a free-form layout. The options are:  "Freeform"  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.Type as C
</example>
		</section>
		<section>
			<title>Freeform template</title>
			<description>Click [...] to display the Freeform Column Layoutdialog box to define the fields and formats to display in this grid cell.</description>
			<example code="xb">
				<![CDATA[tmpl.Field_Info[N] 
.Column.FreeFormTemplate = <<%html% 
' code here 
%html% ]]>
			</example>
		</section>
		<section>
			<title>Cell in-line style</title>
			<description>Specifies style attributes that override the settings inherited from the style sheet. Click [...] to define the In-line style. Refer to the Style Editor for details.  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.InLineStyle as C </example>
		</section>
		<section>
			<title>Security level</title>
			<description>If the user is logged in with a security level that is lower than the security level you specify here, the column or row will be hidden. Set the security level to 0 to always show this column or row.  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.SecurityLevel as N </example>
		</section>
		<section>
			<title>Style label if error  </title>
			<description>Specify if the label should be styled if a validation error occurs (V6 only).  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.StyleLabelIfFieldError as L </example>
		</section>
		<section>
			<title>Label in-line error style</title>
			<description>Specifies style attributes that override the settings inherited from the style sheet. Click to define the In-line style. Refer to the Style Editor for details (V6 only).  </description>
			<example code="xb">tmpl.Field_Info[N] .Column.ErrorLabelInLineStyle as C
</example>
		</section>
		<section>
			<title>Break Type</title>
			<description>Forces a new row either before or after a control. The options are: "None", "Break before", "Break after", "Break before and after"  </description>
			<example code="xb">tmpl.Variable_Info[N] .Breaktype as C
</example>
		</section>
		<section>
			<title>Column Span</title>
			<description>The number of columns to group together.</description>
			<example code="xb">tmpl.Variable_Info[N] .nCols as N
</example>
		</section>
		<section>
			<title>Formatting Grid Controls</title>
		</section>
		<section>
			<title>Opening a Grid Component   </title>
			<steps>
				<step>
					<description>Select "Web Components" in the left pane, so that you can see your new grid component.  </description>
				</step>
				<step>
					<description>Select "AlphaSports_Customer_Grid" and click Edit.  </description>
				</step>
			</steps>
		</section>
		<section>
			<description>At this point your new grid should look something like the following (using the default cascading style sheet).  </description>
			<figure>
				<link>images/WPT_First_Grid.gif</link>
			</figure>
		</section>
		<section>
			<title>Modifying Grid Controls   </title>
			<description>There are many formatting options available through the Grid Component Buildermenus. We will just make a few modifications to some of the (textbox) controls show you how easy it is.  </description>
			<steps>
				<step>
					<description>Display the Grid > Fieldspage.  </description>
				</step>
				<step>
					<description>Select "Customer_Id" in the Selected Fieldslist.  </description>
					<cases>
						<case>
							<description>1. Change its Column Properties > Column headingto "ID".  </description>
						</case>
						<case>
							<description>2. Change its Column Properties > Heading in-line style to "text-align: left;".  </description>
						</case>
					</cases>
				</step>
				<step>
					<description>Select "Firstname" in the Selected Fieldslist.  </description>
					<cases>
						<case>
							<description>1. Change its TextBox Properties > Sizeto 10.  </description>
						</case>
						<case>
							<description>2. Change its Column Properties > Column headingto "First Name".  </description>
						</case>
						<case>
							<description>3. Change its Column Properties > Heading in-line style to "text-align: left;".  </description>
						</case>
					</cases>
				</step>
				<step>
					<description>Select "Lastname" in the Selected Fieldslist.  </description>
					<cases>
						<case>
							<description>1. Change its TextBox Properties > Sizeto 10.  </description>
						</case>
						<case>
							<description>2. Change its Column Properties > Column headingto "Last Name".  </description>
						</case>
						<case>
							<description>3. Change its Column Properties > Heading in-line style to "text-align: left;".  </description>
						</case>
					</cases>
				</step>
				<step>
					<description>Select "Company" in the Selected Fieldslist.  </description>
					<cases>
						<case>
							<description>1. Change its TextBox Properties > Sizeto 20.  </description>
						</case>
						<case>
							<description>2. Change its Column Properties > Heading in-line style to "text-align: left;".  </description>
						</case>
					</cases>
				</step>
				<step>
					<description>Select "Phone" in the Selected Fieldslist.  </description>
					<cases>
						<case>
							<description>1. Change its TextBox Properties > Sizeto 17.  </description>
						</case>
						<case>
							<description>2. Change its Column Properties > Heading in-line style to "text-align: left;".  </description>
						</case>
					</cases>
				</step>
				<step>
					<description>Select "Fax" in the Selected Fieldslist.  </description>
					<cases>
						<case>
							<description>1. Change its TextBox Properties > Sizeto 17.  </description>
						</case>
						<case>
							<description>2. Change its Column Properties > Heading in-line style to "text-align: left;".  </description>
						</case>
					</cases>
				</step>
				<step>
					<description>Select the Live Previewtab. The grid should now look something like this.  </description>
					<figure>
						<link>images/New_Grid_with_Modified_Fields.gif</link>
					</figure>
				</step>
			</steps>
		</section>
		<section>
			<title>Dynamic Column and Row Grid Headings</title>
			<description>If you would like to be able to dynamically change the title of a grid column or row, the solution to creating conditional headings in grid components is to define a variable that contains the column or row heading that you want to display. Change "component_name" to the name of your component. Change "[1]" to reflect the index number of the column or row you wish to modify.
Add additional Xbasic code to set the value of var1.
</description>
			<example code="xb">
				<![CDATA[with tmpl_1
    componentName = "component_name"
    with field_info[1]
        .Column.Heading = var1
    end with
end with]]>
			</example>
		</section>
	</sections>
	<see>
		<ref>Column Properties</ref>
		<ref>Suppressing Blank Fields in an Address</ref>
		<ref>Creating a Grid that Looks Like a Dialog</ref>
	</see>
</page>