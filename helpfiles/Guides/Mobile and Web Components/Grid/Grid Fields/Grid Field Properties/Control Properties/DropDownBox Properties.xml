<page>
	<shortlink>grid dropdown box properties</shortlink>
	<topic>DropDownBox Properties</topic>
	<description>DropDownBoxes are appropriate when you want to select a value from a large list of alternatives. </description>
	<sections>
		<section>
			<description>The most important properties for a dropdownbox control is the definition of its choices and its height. A height of 1 produces a combo box. A height greater than 1 produces a list box. If you set the height to be more than 1 line, you can also set the multi-select allowed field to "Multiple". This allows the user to select more than one value to insert into the field. (Commas will separate the resulting selections) Note :DropDownBoxes do not allow the user to enter new values.  </description>
		</section>
		<section>
			<title>Choices</title>
			<description>Defines the choices the appear in the control. Click [...] to define the true and false Choices set by the check box. Refer to Defining Choices for Check Boxes, Radio Buttons, and Drop Down Lists for details.  </description>
			<cases>
				<case>
					<title>Dropdown Controls - Group Headings</title>
					<description>You can insert group headings in the data displayed in a Dropdown control.				The list is entered into the choices for the Dropdown control as follows:</description>
					<example>
						<![CDATA[[[[General Motors]]]
Camaro
Cadilac
GMC
[[[Ford]]]
Mustang
Lincoln
Focus
[[[BMW]]]
3 Series
5 Series
7 Series ]]>
					</example>
				</case>
			</cases>
		</section>
		<section>
			<title>Displaying Field1 While Storing Field2:</title>
			<description>The following grid component displays a valuable capability of choice lists used by drop down lists and radio buttons.
The sample grid below is based on the AlphaSports Invoice_Items table, which uses the Product_ID field to link to the Product table. The second column of the grid displays the Description field from the Product table, while it stores the Product_ID field from the Product table.
</description>
		</section>
		<section>
			<description>To implement this feature:</description>
			<steps>
				<step>
					<description>Create an updatable grid based on the AlphaSports Invoice_Items table.
</description>
				</step>
				<step>
					<description>Display the Grid > Fields menu of the Grid Component Builder.
</description>
				</step>
				<step>
					<description>Select the "Product_ID" field in the Available Fields list.
</description>
				</step>
				<step>
					<description>Change the Display Settings > Control type to "Dropdownbox".
</description>
				</step>
				<step>
					<description>Click the in the DropDownBox Properties > Choices field to display the Define Choices dialog.
</description>
				</step>
				<step>
					<description>Select "Dynamic" in the Define Choices > List Type field.
</description>
				</step>
				<step>
					<description>Select "product" in the Data Source > Table name field.
</description>
				</step>
				<step>
					<description>Select "Description" in the Data Source > Display value field / expression field.
</description>
				</step>
				<step>
					<description>Select "Product_ID" in the Data Source > Stored value field / expression field.
</description>
				</step>
			</steps>
		</section>
		<section>
			<figure>
				<link>images/WPT_Display_One_Field_Store_Another.gif</link>
			</figure>
		</section>
		<section>
			<description>When you allow the user to select multiple values, the control returns an array. To convert an array to a character value, you need to use an expression like the following.  </description>
			<example>
				<![CDATA[TargetVariable = crlf_to_comma(ControlName.dump()]]>
			</example>
		</section>
		<section>
			<title>Displaying Multiple Fields in a Drop Down List:</title>
			<description>Displaying multiple fields in a drop down list is a challenge because browsers automatically compress multiple white-space characters down to a single character. Thus, it is difficult to format columns.
This example uses the underscore character "_" to guarantee that fields and columns are aligned. This example is based on the Invoice_Items table of the AlphaSports sample database.
</description>
		</section>
		<section>
			<title>Creating the Drop Down List</title>
			<steps>
				<step>
					<description>Create a grid based on the Invoice_Items table of the AlphaSports sample database.
</description>
				</step>
				<step>
					<description>Display the Grid > Fields menu.
</description>
				</step>
				<step>
					<description>Move the "Invoice_Number" field to the Selected Fields list.
</description>
				</step>
				<step>
					<description>Select the "Invoice_Number" field in the Selected Fields list.
</description>
					<cases>
						<case>
							<description>Set its Display Settings > Control type property to "DropDownBox".
</description>
						</case>
						<case>
							<description>Set its DropDownBox Properties > Height property to 10.
</description>
						</case>
						<case>
							<description>Set its DropDownBox Properties > In-line style property to "font-family:Courier New; ".
</description>
						</case>
						<case>
							<description>Set its DropDownBox Properties > Not in list rule property to "Do Nothing".
</description>
						</case>
						<case>
							<description>Set its Column Properties > Column heading property to "Select Invoice Item".
</description>
						</case>
						<case>
							<description>Set its Column Properties > Heading in-line style property to "font-family: Courier New; text-align: left;".
</description>
						</case>
					</cases>
				</step>
				<step>
					<description>Click [...] in the DropDownBox Properties > Choices property to display the Define Choices dialog box.
</description>
					<cases>
						<case>
							<description>Set the Define Choices > List Type property to "Dynamic".
</description>
						</case>
						<case>
							<description>Set the Data Source > Data source type property to "DBF-Table".
</description>
						</case>
						<case>
							<description>Set the Data Source > Table name property to "invoice_items".
</description>
						</case>
						<case>
							<description>Click [...] in the Data Source > Display value field/expression property to display the Expression Builder.
</description>
						</case>
						<case>
							<description>Enter the following expression and click OK.
</description>
							<example>
								<![CDATA[Invoice_Number+" "+alltrim(Product_Id) + " " + padl(str(Price,250,2,"$("),10,"_") + " " + padl(alltrim(str(quantity,10) ),10,"_") + " " + padl(str(Extension,250,2,"$("),10,"_")
]]>
							</example>
						</case>
					</cases>
				</step>
				<step>
					<description>Display the Grid > Properties menu.
</description>
				</step>
				<step>
					<description>Set the Layout Options > Rows of data property to 1.
</description>
				</step>
				<step>
					<description>Set the Customization > Total records message position property to ""No Message.
</description>
				</step>
				<step>
					<description>Click [...] in the Freeform Edit Regions > Above grid property to display the HTML Editor.
</description>
				</step>
				<step>
					<description>Switch to the Source tab and enter the following text into the body of the page.
</description>
					<example>
						<![CDATA[[& ID& & & & PID&
& & & & & Price& & & Quantity 
& & & Extension
]]>
					</example>
				</step>
				<step>
					<description>Click Save in the HTML Editor and Save in the Grid Builder.
</description>
				</step>
				<step>
					<description>Click Browser to preview your work. It should look something like the following.
</description>
					<figure>
						<link>images/WPT_Drop_down_list_w_many_fields.gif</link>
					</figure>
				</step>
			</steps>
		</section>
		<section>
			<title>Properties</title>
			<cases>
				<case>
					<title>Choices</title>
                    <description>Specify the choices that appear in the DropDownBox.</description>
				</case>
				<case>
					<title>Maximum choices</title>
                    <description>Specify the maximum number of choices to show. Set to 0 to show all choices.</description>
				</case>
				<case>
					<title>Height</title>
					<description>Set the height of the label in lines. The default is 1, which produces a combo box. Values larger than 1 produce a list box.  </description>
					<example>
						<![CDATA[with tmpl.field_info[N]        
.DropdownBox.Size as N ]]>
					</example>
				</case>
				<case>
					<title>Multi-select allowed</title>
					<description>Defines whether the user can select more than one value from the list. The options are: "Single"  and "Multiple"  </description>
					<example>
						<![CDATA[with tmpl.field_info[N]          
.DropdownBox.selectStyle as C ]]>
					</example>
				</case>
				<case>
					<title>In-line style</title>
					<description>Specifies style attributes that override the settings inherited from the style sheet. Click to define the In-line style. Refer to the Style Editor for details.  </description>
					<example>
						<![CDATA[with tmpl.field_info[N]          
.DropdownBox.InLineStyle as C ]]>
					</example>
				</case>
				<case>
					<title>Not in list rule</title>
					<description>Specifies the value to display if the list contains a value not coded in the page. The options are:  "Add to list" - display the value  "Do Nothing" - show the first value in the list</description>
					<list>
						<item>
							<name>Add to list</name>
							<description>Display the value.</description>
						</item>
						<item>
							<name>Do Nothing</name>
							<description>Show the first value in the list.</description>
						</item>
					</list>
				</case>
				<case>
					<example>
						<![CDATA[with tmpl.field_info[N]            
.DropdownBox.NotInListRule as C ]]>
					</example>
				</case>
				<case>
					<title>In-line style for errors  </title>
					<description>Specifies style attributes that are used when a validation error occurs. Click to define the In-line style.</description>
					<example>
						<![CDATA[with tmpl.field_info[N]            
.DropdownBox.ErrorInLineStyle as C ]]>
					</example>
				</case>
				<case>
					<title>Style control if error</title>
					<obsolete>This property is obsolete and no longer available in Alpha Anywhere.</obsolete>
					<description>Specifies whether to apply a second style to the field if a validation error occurs.</description>
					<example>
						<![CDATA[with tmpl.field_info[N]            
.DropdownBox.StyleFieldIfError as L ]]>
					</example>
				</case>
			</cases>
		</section>
	</sections>
	<links>
		<link href="/images/tools/ellipsesButton.png">...</link>
	</links>
</page>