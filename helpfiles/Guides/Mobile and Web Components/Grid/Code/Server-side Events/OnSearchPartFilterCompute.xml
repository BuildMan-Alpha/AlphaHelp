<page>
    <shortlink>grid OnSearchPartFilterCompute event</shortlink>
    <topic>OnSearchPartFilterCompute Event</topic>
    <description>
        <p>This event fires after user has clicked Submit to submit the Search part, and after the Search Filter has been computed, but before the Search is executed. It allows you to modify the Search Filter.</p>
    </description>
    <arguments>
        <argument>
            <name>e</name>
            <type>P</type>
            <description>A dot variable with the following properties:</description>
            <properties>
                <property>
                    <name>tmpl</name>
                    <type>P</type>
                    <description>The grid component definition</description>
                </property>
                <property>
                    <name>rtc</name>
                    <type>P</type>
                    <description>Run-time calculations (allows you to pass data to other event handlers). The *[xb:e.rtc]* variable has the following properties:</description>
                    <properties>
                        <property>
                            <name>Filter_SearchPart</name>
                            <type>C</type>
                            <description>The filter computed from submitted data in the Search Part</description>
                        </property>
                        <property>
                            <name>Parameters_SearchPart</name>
                            <type>C</type>
                            <description>The parameter value for arguments in the filter</description>
                        </property>
                    </properties>
                </property>
                <property>
                    <name>SearchDataSubmitted</name>
                    <type>P</type>
                    <description>Search data submitted.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <discussion>
        <p>The *[xb:OnSearchPartFilterCompute]* event can be used to modify the search filter before it is executed. You can modify the value of *[xb:e.rtc.filter_SearchPart]* and *[xb:e.rtc.Parameters_SearchPart]*</p>
        <p>For example:</p>
    </discussion>
    <sections>
        <section>
            <example code="xb"><![CDATA[e.rtc.filter_searchPart = "lastname = :whatLastName"
e.rtc.parameters_searchPart = e.SearchDataSubmitted.Lastname+"|||C|whatLastName"]]></example>
        </section>
        <section>
            <description>
                <p>The *[xb:.parameters_searchPart]* variable is only needed if the  *[xb:.filter_SearchPart]* variable uses arguments. *[xb:.parameters_searchPart]* is a CR-LF delimited string with one entry for each argument used in the filter. It is of the form:</p>
            </description>
            <example code="xb">parameterValue|||Type|argumentName</example>
        </section>
        <section>
            <description>
                <p>Where Type is a one character Xbasic data type (e.g. C,N,E,D,T,S, or L) of the field you are searching.</p>
                <p>If your data source is DBF, then your *[xb:.filter_searchPart]* must use Xbasic syntax.</p>
                <p>If your data source is SQL, then your *[xb:.filter_searchPart]* must use SQL syntax.</p>
            </description>
        </section>
        <section>
            <description>
                <p>The *[xb:OnSearchPartFilterCompute]* event is often used in conjunction with putting variables into the Search Part form.</p>
                <p>To put a variable in the Search Part, configure one of the search fields to use a '[Freeform layout]'. In the [Freeform template], enter HTML similar to example below which creates a variable called 'myvar1' in the Search Part:</p>
            </description>
            <example code="html"><![CDATA[<input id="{grid.componentname}.S.MYVAR1" size="40" maxlength="200" class="GlassOliveInput" type="text" name="S.MYVAR1" value="" />]]></example>
        </section>
        <section>
            <description>
                <p>In your event handler, you can refer to this value in myvar1 as:</p>
            </description>
            <example code="xb"><![CDATA[dim myvar1 as c = e.searchDataSubmitted.myvar1]]></example>
        </section>
        <section>
            <title>Sending Javascript to the Client</title>
            <description>The *[xb:e]* object also contains a pointer to the AjaxResponses array, which can be used to send Javascript to the client. For example:</description>
            <example code="xb"><![CDATA[if e.searchDataSubmitted.Company = "" then
    e.cancel = .t.
    dim aa as p
    aa = e.rtc.A_AjaxResponses
    i = aa.append()
    aa[i].text = "alert('Search Expression was recomputed.');"
    aa[i].id = 100  'the order in which the Ajax responses are sent to the browser
end if]]></example>
        </section>
        <section>
            <title>Setting State Variables</title>
            <description>
                <p>You can also set state variables in this event. The value of any state variables will be available in all subsequent ajax callbacks (in the e.__si2 object).</p>
                <p>To set a state variable:</p>
            </description>
            <example code="xb"><![CDATA[e._state.myvar1 = "value1"
e._state.myvar2 = "value2"]]></example>
        </section>
    </sections>
    <links>
        <link link="grid fieldrowprops freeformtemplalte">Freeform template</link>
        <link link="grid fieldrowprops freeformlayout">Freeform layout</link>
    </links>
</page>