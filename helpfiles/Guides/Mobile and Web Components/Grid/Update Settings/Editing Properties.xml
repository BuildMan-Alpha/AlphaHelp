<page>
	<topic>Editing Properties</topic>
	<description>The behavior of new record rows, display of validation error messages, submission rules, and other update settings can be configured in the Grid component's Editing Properties.</description>
	<sections>
		<section>
			<title>Field validation setting</title>
			<description>
				<p>The *[ui:Field validation setting]* defines how validation should be applied to records when they're updated. Field validation can be applied in one of two ways:</p>
			</description>
			<list>
				<item>
					<name>All Fields</name>
					<description>Every field is validated when the record is saved.</description>
				</item>
				<item>
					<name>Dirty Fields Only</name>
					<description>Only the fields that have been modified are validated.</description>
				</item>
			</list>
		</section>
		<section>
			<description>To learn more about validating fields in the Grid, watch the video below:</description>
			<videos>
				<title>Data Validation</title>
				<description>
					<p>The Grid component has exceptionally strong data validation features. This video demonstrates the validation features available, including Data validation rules, Data validation using custom Xbasic at the field level, Data validation events, and automatically honoring Field Rules for DBF tables.</p>
				</description>
				<video>
					<name>Watch Video</name>
					<link>https://www.viddler.com/v/c7406ad1</link>
				</video>
			</videos>
		</section>
		<section>
			<title>Row Edit Style</title>
			<description>The Row edit style  property comes with two options, AllRows  and RowOnDemand . Selecting the 'AllRows' option will cause an updatable grid to open with all rows in edit mode. Selecting the 'RowOnDemand' option will open the grid in view mode. A row can then be placed into edit mode either by clicking the 'Edit row' icon, or by double clicking on a field. If you double click on a field, initial focus will be on the field.  </description>
			<figure>
				<title>AllRows in Edit Mode</title>
				<link>images/01_aupdate.png</link>
			</figure>
		</section>
		<section>
			<figure>
				<title>RowOnDemand in View Mode</title>
				<link>images/01_aupdate2.png</link>
			</figure>
		</section>
		<section>
			<description>With the 'Edit On Demand' option, the Grid is shown as using labels for each control. You can then double click on a field, or click the Edit icon, to turn that row into edit mode. You can specify if more than one row at a time can be in edit mode. If only one row is allowed in edit mode at a time, then when you put another row into edit mode, the row that is currently in edit mode is turned back into view mode.</description>
			<cases>
				<case>
					<figure>
						<title>All rows are editable (V9 and older style)</title>
						<link>images/allrowseditable.jpg</link>
					</figure>
				</case>
				<case>
					<figure>
						<title>Grid rows are editable on demand</title>
						<link>images/EditonDemand.jpg</link>
					</figure>
				</case>
				<case>
					<figure>
						<title>Row 1 of the Grid has been put into edit mode</title>
						<link>images/OneRowInEditMode.jpg</link>
					</figure>
				</case>
			</cases>
		</section>
		<section>
			<title>New Records Edit Style</title>
			<description>The New records edit style property has two options: *[ui:AlwaysShown]* and *[ui:ShowOnDemand]*. The first, AlwaysShown, always shows a row for entering a new record in an updatable grid. The second, ShowOnDemand, creates a link that replaces the edit row. Clicking the link will reveal or hide the new record row on demand. </description>
			<figure>
				<title>AlwaysShown setting</title>
				<link>images/01_Alwaysshow.png</link>
			</figure>
		</section>
		<section>
			<figure>
				<title>ShowOnDemand creates a New Records link</title>
				<link>images/01_Alwaysshow2.png</link>
			</figure>
		</section>
		<section>
			<title>Hide new record row after insert</title>
			<description>
				<p>If checked, the new record rows will be hidden after inserting new records. To add another new record after submitting the new records back to the server, they will need to click the 'Edit new record' link.</p>
				<p>This option is only available if *[ui:New records edit style]* is set to "ShowOnDemand".</p>
			</description>
		</section>
		<section>
			<title>New records button label</title>
			<description>
				<p>Defines the text shown for the 'Edit new record' link. Clicking the link toggles the display of the new record rows.</p>
				<p>This option is only available if *[ui:New records edit style]* is set to "ShowOnDemand".</p>
			</description>
		</section>
		<section>
			<title>One edit row at a time</title>
			<description>The One edit row at a time  property appears when the *[ui:Row edit style]* property is set to "RowOnDemand". If this is checked, it will allow only one row at a time to be in edit mode. Multiple rows can be placed in edit mode if this is not selected. </description>
			<figure>
				<title>RowOnDemand. Only one row can be edited at a time.</title>
				<link>images/01_aupdate3.png</link>
			</figure>
		</section>
		<section>
			<title>Lazy edits</title>
			<description>
				<p>If *[ui:Lazy edits]* is enabled, an Ajax callback will not be made when a row is put into edit mode. This makes it quicker to switch to edit mode. If *[ui:Refresh data on row dirty]* is checked, however, an Ajax Callback will be made when the user starts editing a row to refresh the data.</p>
				<p>This option is only available if *[ui:Row edit style]* is set to "RowOnDemand".</p>
			</description>
		</section>
		<section>
			<title>Allow individual rows to be saved</title>
			<description>
				<p>If this option is checked, a the "Row Status" column will be added. The Row Status column contains icons that can be used to save and undo changes to individual rows.</p>
			</description>
		</section>
		<section>
			<title>Allow update if any row has error</title>
			<description>
				<p>If any row has a validation error (determined by executing the [CanUpdateRecord] or [CanDeleteRecord] event), the update will not be executed if *[ui:Allow update if any row has error]* is not checked. If it is ok to commit records, even if some records have errors, check this option. The records with errors will not be submitted to the system of record, however rows without errors will be saved back to the data source.</p>
			</description>
		</section>
		<section>
			<title>Error style</title>
			<description>
				<p>The *[ui:Error style]* defines how field validation errors are displayed.</p>
			</description>
			<cases>
				<case>
					<list>
						<item>
							<name>Block</name>
							<description>Under the field</description>
						</item>
						<item>
							<name>Inline</name>
							<description>Next to the field</description>
						</item>
						<item>
							<name>Tip</name>
							<description>Popup error when hovering over the field with the mouse.</description>
						</item>
						<item>
							<name>Icon</name>
							<description>Display an error icon showing the error when the mouse is hovered over the icon.</description>
						</item>
						<item>
							<name>Global</name>
							<description>Display all errors in a single location.</description>
						</item>
					</list>
				</case>
				<case>
					<title nested="2">Classname - field with error</title>
					<description>The class name of the control that contains the error. Leave blank to use the default class.</description>
				</case>
				<case>
					<title nested="2">Classname - error message</title>
					<description>The class name of the element that contains the error message. Leave blank to use the default class.</description>
				</case>
				<case>
					<title nested="2">Classname - field with error message when hovering over error message</title>
					<description>
						<p>Defines the class name to apply to the *[control]* corresponding to an error message when the mouse is hovered over the error message or over the control with the error.</p>
						<p>This option is only available when the *[ui:Error style]* is set to "Global".</p>
					</description>
				</case>
				<case>
					<title nested="2">Classname - error message (on hover over error message)</title>
					<description>
						<p>Defines the class name to apply to an *[error message]* when the mouse is hovered over the error message or the corresponding control.</p>
						<p>This option is only available when the *[ui:Error style]* is set to "Global".</p>
					</description>
				</case>
			</cases>
		</section>
		<section>
			<title>Error icon</title>
			<description>
				<p>Defines the icon to show next to a field if it has a validation error. To use a built-in image, use the syntax:</p>
			</description>
			<example><![CDATA[images/BuiltInImageName.png.a5image]]></example>
		</section>
		<section>
			<description>
				<p>The *[ui:Error icon]* setting is only available when the *[ui:Error style]* is set to 'Icon'.</p>
			</description>
		</section>
		<section>
			<title>Video</title>
			<videos>
				<title>Show Row Errors in a Pop-up Window</title>
				<description>
					<p>By default, when you submit a Grid and the server determines that there are errors in the data, the errors are either shown next to the field(s) that have errors, or in the case of 'row-level' errors, the errors are shown by turning on an error icon in the row selector, which the user can then hover over with the mouse to see the actual error text.</p>
					<p>This works well if the Grid has a tabular display. But in the case where the Grid is formatted as a Form, if the form has a large number of fields, the error icon can be too subtle and is easily overlooked. A new option allows you to display 'row-level' errors in a pop-up window.</p>
				</description>
				<video>
					<name>Watch Video</name>
					<link>https://share.vidyard.com/watch/Au3T9byTwC6gWVCyeRCrZt</link>
				</video>
			</videos>
		</section>
		<section>
			<title>Error messages popup-window title</title>
			<description>
				<p>The title for the error message popup window. This option is only available if *[ui:Show row errors in popup-window]* is checked.</p>
			</description>
		</section>
		<section>
			<title>Error messages popup-window style</title>
			<description>
				<p>In-line styles for the error message popup window. This option is only available if *[ui:Show row errors in popup-window]* is checked.</p>
			</description>
		</section>
		<section>
			<title>Row refresh method after edits</title>
			<description>
				<p>When data is updated, deleted, or inserted, the Grid component must be refreshed to reflect the changes. The *[ui:Row refresh method after edits]* property configures what is refreshed. The following options are available:</p>
			</description>
			<list>
				<item>
					<name>AutoSelect</name>
					<description>Let Alpha Anywhere choose how to refresh the Grid.</description>
				</item>
				<item>
					<name>FullPage</name>
					<description>Refresh all records in the Grid. This method is the slowest, but guarantees that summary fields and linked records are refreshed.</description>
				</item>
				<item>
					<name>SingleRow</name>
					<description>Only refresh the data for the row that was edited.</description>
				</item>
				<item>
					<name>Minimal</name>
					<description>This is the fastest option. Use this option if you do not have any summary or calculated fields. If you have summary fields, use a different method as "Minimal" will not update summary fields.</description>
				</item>
			</list>
		</section>
		<section>
			<title>Refresh data on row dirty</title>
			<description>
				<p>If checked, an Ajax Callback will be made to the server to refresh the row data when the user starts to edit a record.</p>
			</description>
		</section>
	</sections>
	<links>
		<link link="grid canupdaterecord event">CanUpdateRecord</link>
		<link link="grid candeleterecord event">CanDeleteRecord</link>
	</links>
</page>