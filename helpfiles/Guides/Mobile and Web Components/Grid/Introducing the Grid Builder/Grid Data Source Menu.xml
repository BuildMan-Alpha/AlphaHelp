<page>
	<topic>Grid Data Source Menu</topic>
<description>The Grid > Data Source Menuprovides two options that select the type of database connection that will be used: .dbf Tables or an SQL database accessed via AlphaDAO (Alpha Data Access Objects). Selecting one or the other will open either the Grid > Query(DBF) menu or the Grid > Query(AlphaDAO) menu.</description>	

<groups>
	<group background="true">
	<sections>
		<section>
			<title>Grid Query (DBF) Menu</title>
			<description>This menu defines the grid's data source. Depending on what you select from the ' Display data from' option this source data will be derived from either an Alpha Anywhere table or a view. Choosing Table will specify that the grid will come from a single table name and table alias fields. The table to be used is entered in the ' Table name ' textbox. Simply click on the dropdown to the right of the textbox and select one of the existing Alpha Anywhere tables saved in your workspace.  The 'Table alias', or the name used by Alpha Anywhere to refer to the table internally, is filled in automatically when you select a table name. The ' Calculated fields ' option lets you input new fields into your grid based on existing data in your grid. This is only really possible in the Grid Builder for work with read-only files. If you click on 'Calculated fields', the Calculated Values Dialog will open. To create new fields from existing ones simply type in the name of the new field and specify which existing fields will supply data to the new one. The Calculated Values dialog has drop down lists of functions and existing fields to make this task simple. It also contains a number of additional tools as well as connections to the Expression builder dialog, Fields dialog, and the Function Finder.  
</description>
			
		</section>
		<section>
			<description>A new fullnamefield being generated from first and last names.  
</description>
			<figure><link>images/A_Calculated Values.png</link></figure>
			
		</section>
		<section>
			<description>The Calculate Values Dialog has additional tools  
</description>
			<figure><link>images/A_Calculated Values2.png</link></figure>
			
		</section>
		
		<section>
			<description>The Define Arguments button in the Table query loads the Define Arguments dialog which lets you specify arguments to be used in filter and order expressions. The Filter option lets you filter  
 existing records for records containing certain characteristics. To create a filter click the to the right of the 'Filter' textbox. 
</description>
			<figure><link>images/A_expression builder.png</link></figure>
			
		</section>
		<section>
			<description>This will load the Expression Builder . If you want help creating a filter in the Expression Builder just click on the Filter Genie button to load the Filter Builder dialog. This will make it easy to choose which fields you want to filter and how you want to filter them.  
Creating a filter for all first names containing 's':</description>
			<figure><link>images/A_Filterbuilder.png</link></figure>
			
		</section>
		<section>
			<description>The Order option in the Table query lets you choose which field you will use to order you records by.  If you want, you can actually order your grid using multiple fields, first sorting by one field, then another, and another. To do this, click the  button to the right of the Order option. This will open an Order Builder dialog that has dropdowns for all of your fields and an A...Z or Z...A sort option. Below the Order option, Sort Direction lets you decide whether the records are sorted in an ascending or descending direction. The Define Primary Key(s) button at the bottom of the table query lets you define whether to use record number or an expression for the tables primary key. Using an expression here is recommended, as a record's record number can change after a table is packed.  


</description>
		</section>
		<section>
			<description>See also Define a Table Query</description>
		</section>
		
	</sections>
	
</group>	


<group>
	<sections>
		<section>
			
			<description>Alpha Anywhere Table Query</description>
			<figure><link>images/A_QueryChoice.png</link></figure>
			
			
			
		</section>
		<section>
			<title>Table Query Options</title>
			<cases>
				<case>
					<title>Display data from: Table</title>
					<description>Specifies that the grid will come from a single table. Displays the Table name and Table alias fields.  </description>
				</case>
				<case>
					<title>Display data from: View</title>
					<description>Specifies that the grid will contain fields from 2 or more tables. Displays the Tables in Viewand Fields in Viewbuttons.</description>
				</case>
				<case>
					<title>Table name</title>
					<description>Displays a list of tables in the current database.  </description>
				</case>
				<case>
					<title>Refresh</title>
					<description>Refreshes the contents of the Table namelist.</description>
					<figure><link>images/Refresh_Field_List_Button.gif</link></figure>
				</case>
				<case>
					<title>Table alias  </title>
					<description>This is the name that is used internally to refer to the table.  </description>
				</case>
				<case>
					<title>Tables in View</title>
					<description></description>
				</case>
				<case>
					<title>Fields in View</title>
					<description>Displays the Select Fields in Viewdialog, where you select the fields to display and define calculated fields.  
</description>
				</case>
				
				
				
			</cases>
			
			
			
			
		</section>
		
		
	</sections>
	
	
</group>

<group background="true">
	
<sections>
	<section>
		<description>If you choose Display data from: View rather than table, you will specify that the grid will come from a view that contains fields from 2 or more tables. It will also change the options on the Grid Query (DBF) Menu by displaying the Tables in View and Fields in View buttons. The other options that you saw in the 'Display data from: Table' explanation above will remain the same. Clicking the Tables in View: button will load the Add Table dialog which will ask you to select a table to use from a list. Unless you specify otherwise the Add Table dialog will also add an alias to the selected table. Click OK and the Define Join dialog will load. Add another table or simply click OK again and the table will be added to 'Tables in View'. If click the Tables in View button after adding a table you will be taken directly to the Define Join dialog. If you add a second table to Define Join you will be asked to define the link properties between the new and existing tables.  
</description>
		<figure><link>images/A_Linkproperties.png</link></figure>
		
	</section>
	<section>
		<description><![CDATA[Clicking the Fields in View button will load the Select Fields in View Dialog. Here you can create a list of fields and calculated field definitions. The fields that you see in Fields in View will be the fields contained in the tables you selected using Tables in View. The Select Fields in View dialog allows you to select the fields from a table that you want to work with in your View. To add an individual field, simply highlight it using the list of the left and then click the single arrow button > to bring it into the view. To move all the fields in your tables into the view select a field in the list and click the double arrows >> to bring them into the view. Similarly, select a field in the view list on the right and click the single < or double << arrows pointing the opposite direction to remove one or all of the fields from the view. Once a field is in the view, you can place an = sign after the field to gain access to the Expression Builder. The Expression Builder button will appear at the bottom of the dialog as soon as you do this.  
]]></description>
		<figure><link>images/A_Expressionbuilderaccess.png</link></figure>
		
	</section>
	
	<section>
		<description>See also  
Define a View Query.  
Expression Builder.   </description>
		
	</section>
</sections>			
</group>

<group>
<sections>
	
	<section>
		
		<description>Alpha Anywhere View Query
</description>
		<figure><link>images/WPT_Grid_Builder_Alpha_View_query.png</link></figure>
		
	</section>
	
	<section>
		<title>View Query Options</title>
		<cases>
			<case>
				<title>Arguments</title>
				<description>Displays the Define Arguments dialog, where you specify arguments to be used in filter and order expressions.</description>
			</case>
			<case>
				<title>Filter</title>
				<description>Specifies the expression that selects the records that will be included in the grid.  
</description>
			</case>
			<case>
				<title>Order  </title>
				<description>Specifies the expression that orders selected records.</description>
			</case>
			<case>
				<title>Sort Direction  </title>
				<description>Specifies whether the order of records will be ascending or descending.</description>
			</case>
			<case>
				<title>Unique records only</title>
				<description>Specifies that the grid will display unique records only.</description>
			</case>
			<case>
				<title>Read only</title>
				<description>Specifies that the grid's fields will be displayed in label controls.  </description>
			</case>
			<case>
				<title>Define Primary Key(s)</title>
				<description>Specifies the field(s) that uniquely identify each record.  </description>
			</case>
			
			
			
		</cases>
		
		
		
	</section>
	
	
	
	
</sections>	
	
	
	
</group>


<group background="true">
	<sections>
<section>
	
	<description>The Grid > Query(AlphaDAO) menu defines the grid's data source, which is a SQL SELECT statement directed to a SQL back-end database. SQL or Structured Query Language is used to manage data within many databases. To access and manipulate this data you will need to first establish a connection string. Fortunately, Alpha Anywhere makes this as easy as selecting the file to connect to. When you first open the Grid > Query(AlphaDAO) menu it will ask you for a Connection Type: at the top of the screen. If you don't want to give your connection a name select Specify Connection String from the Connection Type dropdown and click the Build button. This will load the Create SQL Connection String Dialog . At the top of the Create SQL Connection String Dialog you will notice another Connection Type dropdown. Here you can choose the database software that contains the data which you want to access and where you will ultimately store your data. Most of these Connection Types will prompt you to select the File Name: you wish to connect to under the Options menu. Click OK and the connection string should appear on the Grid > Query(AlphaDAO) page.  
The Create SQL Connection String Dialog  
</description>
	<figure><link>images/A_ConnectionString.png</link></figure>
	
</section>		
<section>
	
	<description>If you are creating a lot of connection strings and storing data in different databases you might want to give your connection strings a name for ease of use.  On the Grid > Query(AlphaDAO) page go to the Connection Type: option and select Use Named Connection String . Next click Add/Edit Saved Connections to add a new named string. This will load the AlphaDAO Connections dialog box. Click New , this will load the New AlphaDAO Connection dialog. Enter the Connection Name: of your new connection in the textbox at the top of the dialog. Then place the connection string path in textbox entitled ' Connection String: '. If you do not know the path you can click Build, which will bring you back to the Create SQL Connection String Dialog and help you create a new path.  
Creating a New Connection Name  </description>
	<figure><link>images/A_AlphaDAOpath.png</link></figure>
	
</section>
<section>
	
	<description>Once a connection string name is defined you can connect to it by going to the Grid > Query(AlphaDAO) page and clicking the Select... button next to the Connection Name textbox. This will open the AlphaDAO Connection Strings dialog and will show you a list of all your named connections. Select the connection you want to use and click OK . Your connection will now appear on the Grid > Query(AlphaDAO) page. Click Connect to connect to it.  
</description>
	
</section>		
	<section>
		<description>Also see  
Create SQL Connection String Dialog.   
</description>
		
		
	</section>
		
	</sections>
	
</group>

<group>
	
<sections>
	
<section>
	<description>Connecting with a SQL Database Using a Named Connection String
</description>
	<figure><link>images/WPT_Grid_Builder_AlphaDAO_connection.png</link></figure>
</section>	
	<section>
	<description>Connecting with a SQL Database By Building a Connection String
</description>
	<figure><link>images/01_SQL1.png</link></figure>
</section>	
<section>
	<title>Building a Connection String Options</title>
	<cases>
		<case>
			<title>Connection type</title>
			<description>Specifies the type of connection to the database.  </description>
			<cases>
				<case>
					<description>"Use Named Connection String" - allows you to select from the Connection Namelist  
</description>
				</case>
				<case>
					<description>"Specify Connection String" - click the Zoomor Buildbuttons to define a connection string.  
</description>
				</case>
				
			</cases>
		</case>
		<case>
			<title>Build</title>
			<description>Displays the Create SQL Connection String dialog, where you can create a connection string.  </description>
		</case>
		<case>
			<title>Zoom  </title>
			<description>Displays the Edit Connection Stringdialog, where you can enter a connection string.  </description>
		</case>
		<case>
			<title>Connection Name</title>
			<description>Specifies the saved connection that you will use to connect to the database.  </description>
		</case>
		<case>
			<title>Add/Edit Saved Connections  </title>
			<description>Displays the Connectionsdialog, where you can select, create, or edit a connection string.  </description>
		</case>
		
		
	</cases>
	
	
	
</section>
<section>
	
	<description>AlphaDAO Table Query
</description>
	<figure><link>images/WPT_Grid_Builder_AlphaDAO_Table_query.png</link></figure>
	
</section>	
<section>
	
	<description>AlphaDAO SQL Query
</description>
	<figure><link>images/WPT_Grid_Builder_AlphaDAO_SQL_query.png</link></figure>
	
</section>	
<section>
	
	<description>Stored Procedure Query
</description>
	<figure><link>images/A_Stored Procedure.png</link></figure>
	
</section>	
<section>
	<title>Key Functions</title>
<cases>
	<case>
		<title>Base on: Table or View</title>
		<description>Displays the Table/View name, Table/View alias, Filter, and Order byfields.  </description>
	</case>
	<case>
		<title>Base on: SQL Select Statement</title>
		<description>Displays the Edit SQLbutton, SQL Select Statementwindow, and Select Primary Key(s)button.  </description>
	</case>
	<case>
		<title>Table/View name</title>
		<description>Displays a list of tables in the current database.  </description>
	</case>
	<case>
		<title>Refresh</title>
		<description>Refreshes the contents of the Table/View namelist.  </description>
		<figure><link>images/Refresh_Field_List_Button.gif</link></figure>
	</case>
	<case>
		<title>Table/View alias</title>
		<description>This is the name that is used internally to refer to the table.  </description>
	</case>
	<case>
		<title>Arguments</title>
		<description>Displays the Define Arguments dialog, where you specifies arguments to be used in filter and order expressions.</description>
	</case>
	<case>
		<title>Filter  </title>
		<description>Specifies the expression that selects the records that will be included in the grid.  </description>
	</case>
	<case>
		<title>Order by</title>
		<description>Specifies the expression that orders selected records.</description>
	</case>
	<case>
		<title>Read only</title>
		<description>Specifies that the grid's fields will be displayed in label controls.</description>
	</case>
	<case>
		<title>Edit SQL</title>
		<description>Displays the SQL Builderdialog, where you can define a SQL SELECT statement.</description>
	</case>
	<case>
		<title>Select</title>
		<description>Specifies the field(s) that uniquely identify each record. </description>
	</case>
	
	
	
</cases>	
</section>
</sections>	
</group>

</groups>	

	
</page>