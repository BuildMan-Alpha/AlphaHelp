<page>
	  <topic>Define a Table Query</topic>

   <description>When building components in the Grid Builder it is often necessary to pull specific data and records from a given table, be it .dbf or SQL. To do this it is necessary to create a Table Query.    
</description>
<sections>
	
	<section>
		<title>Step 1. To Start With:</title>
		<steps>
			<step>
				<description>Select Grid > Query (DBF).</description>
			</step>
			<step>
				<description>Select the data source table from the Table Name list.</description>
			</step>

		</steps>
		
		
	</section>
	<section>
		<title>Step 2. Creating Table Aliases </title>
		<description>A table alias can make your grid portable, by separating it from direct reference to a table name. as long as a table has the same structure and the same alias, it can use a grid originally built for another table.
</description>
		<steps>
			<step>
				<description>Optionally, enter an alias for the table. If you do not enter an alias, it will default to the name of the table.
</description>
			</step>
			
		</steps>
		
	</section>
	<section>
		<title>Step 3. Creating Calculated Fields </title>
		<note>Alpha Anywhere documentation and software has traditionally referred the values that you calculate and place on a layout as "calculated fields". However, these values are not fields, because they are not stored in a table record. They are temporary variables that are created and calculated on demand.</note>
		
	</section>
	<section>
		<description>A calculated value may be displayed, but not edited. Typically, you compute a calculated value based on the values of several other fields in each record. To create a calculated value to place on the grid:
</description>
	</section>
	<section>
		
		<steps>
			<step>
				<description>Optionally, click Calculated fieldsto display the Define Calculated Fields dialog box.
</description>
<cases>
	<case>
		<description>a. Enter calculated value expressions, one per line, in the format = . For example:
</description>
		<example><![CDATA[<fullname> = <alltrim(lastname) + ", " + alltrim(firstname)>]]></example>
	</case>
	<case>
		<description>b. Optionally, click Expression Builder to use the Expression Builder to help you define the calculated value.
</description>
	</case>
	<case>
		<description>c. Optionally, click F2 - Fieldsto display a list of table fields to insert into the expression.
</description>
	</case>
	<case>
		<description>d. Optionally, click F4 - Functionsto display a list of functions to insert into the expression.
</description>
	</case>
	<case>
		<description>e. Optionally, use the [az_img] and [za_img] buttons to sort the list of calculated values.
</description>
	</case>
	<case>
		<description>f. Optionally, use the [upbar_img], [up_img], [down_img] and [downbar_img] buttons to reorganize the sequence of calculated values.
</description>
	</case>
	<case>
		<description>g. Click OKto continue or Cancelto discard your inputs.
</description>
	</case>
	
</cases>

			</step>
			
		</steps>
		
	</section>
	<section>
		<title>Step 4. Define Arguments 
</title>
		<steps>
			<step>
				<description>Optionally, if you want to provide a value for use in the grid's filter expression, click Define Argumentsto display the Define Arguments dialog box.
</description>
			</step>
			
		</steps>
		
	</section>
	<section>
		<title>Step 5. Enter a Filter Expression 
</title>
		<steps>
			<step>
				<description>Optionally, enter a logical expression that selects records from the table into the Filter field. You may click [xy_img] to use the Expression Builder to help you define the expression. A blank filter expression retrieves all records in the table.
</description>
			</step>
			<step>
				<description>Optionally, check Unique records onlyto eliminate records with duplicate values.
</description>
			</step>
			
		</steps>
		
	</section>
	<section>
		<title>Step 6. Enter an Order Expression 
</title>
		<steps>
			<step>
				<description>Optionally, enter a character expression that orders selected records into the Order field. You may click [updown_img] to use the Order Builder to help you define the expression. A blank order expression retrieves records in record number order.
</description>
			</step>
			<step>
				<description>Optionally, click Ascendingor Descendingto change the sequence of records.
</description>
			</step>
			
		</steps>
		
	</section>
	<section>
		<title>Step 7. Enable Editing of Records 
</title>
		<steps>
			<step>
				<description>Optionally, check Read onlyto indicate that you do not need to define a primary key.
</description>
			</step>
			<step>
				<description>Click Define Primary Key(s)to define the field or character expression that will uniquely identify records.
</description>
			</step>
			
		</steps>
		
	</section>
	<section>
		<note>Since record locking is not possible in a web environment, it is highly desirable to have a way to uniquely identify each record. The default identification for a record is its number, which in some circumstances can change.</note>
	</section>
	
</sections>
<links>
	<link href="images/Sort_Ascending_button.gif">az_img</link>
	<link href="images/Sort_Descending_button.gif">za_img</link>
	<link href="images/Move_First_button.gif">upbar_img</link>
	<link href="images/Move_Up_Button.gif">up_img</link>
	<link href="images/Move_Down_Button.gif">down_img</link>
	<link href="images/Move_Last_button.gif">downbar_img</link>
	<link href="images/Espression_Button_black.gif">xy_img</link>
	<link href="images/Order_button.gif">updown_img</link>
</links>


<see>
	<ref>Selecting the Fields to Display 
</ref>
</see>
	
</page>