<page>
	<shortlink>grid using defined arguments</shortlink>
	<topic>Using Defined Arguments</topic>
	<description>A common design practice is to filter a grid based on the value of an argument. A common design pattern is to print out the value of that argument in a freeform region that you place above or below the grid. </description>
<groups>
	<group>
		<sections>
			<section>
				<description>This example will show how this can be accomplished in Alpha Anywhere, using a freeform region above a filtered grid. First it will define two arguments and look at how to place those arguments in a filter expression. Next it will cover how to print the value from this expression to your grid. Finally it will cover how to put this information in a Client-side event.  </description>
			</section>
<section>
	<title>To Start With:</title>
	<steps>
		<step>
			<description>Open Alphasports and the Grid Builder</description>
		</step>
		<step>
			<description>Select DBF under Data Source and in Query select the Customer Table.</description>
		</step>
		
	</steps>
	
	
</section>	
<section>
	<title>Define an Argument: </title>
<steps>
	<step>
		<description>In the Define Arguments dialog click Insert Argument .</description>
	</step>
	<step>
		<description>In the New Argument dialog give this argument the Argument Name 'st' and set its Data Type to Character . Click OK  </description>
		<figure><link>images/A_st.png</link></figure>
	</step>
	<step>
		<description>Under Argument Definition set the ' Get Argument Value from ' setting to ' Get value from variable '.</description>
	</step>
	<step>
		<description>Under Variable click the Variable button [...] and open the New Variable dialog.</description>
	</step>
	<step>
		<description>Click Add New Variable . Next to Variable Name type pgstate. Click the Scope dropdown set the scope to ' Page Variable '. Click OK to close the new variable dialog.</description>
	<figure><link>images/A_pgstate.png</link></figure>
	</step>
	<step>
		<description>Now back in the Default Arguments Dialog, Go to the Variable settings and set the Default value to ma.
</description>
<figure><link>images/A_ma.png</link></figure>
	</step>
	
	
</steps>	
	
	
</section>
<section>
	<title>Define a Second Argument: </title>
	<steps>
		<step>
			<description>Click Insert Argument again to insert a second argument into the Default Arguments dialog's Existing Arguments list.</description>
		</step>
		<step>
			<description>In the New Argument dialog, give this argument the Argument Name 'ln'. Set its Data Type to Character . Click OK  </description>
		</step>
	    <step>
			<description>Under Argument Definition set the ' Get Argument Value from ' setting to ' Get value from variable '.</description>
		</step>
		 <step>
			<description>Under Variable click the Variable button [...] and open the New Variable dialog.</description>
		</step>
		 <step>
			<description>Click Add New Variable . In Variable Name type 'varin'. Set the Scope drop-down  to ' Page Variable '. Click OK to close the new variable dialog.</description>
			<figure><link>images/A_varin.png</link></figure>
		</step>
		 <step>
			<description>In the Default Arguments Dialog, Set the Variable settings Default value to 'a'.</description>
		</step>
		 <step>
			<description>Click OK to exit the Define Arguments Dialog.</description>
			<note>If these arguments had been bound to session variables the techniques used here could still be used but would not be necessary. Because they are bound to page variables the problem becomes more difficult.  </note>
		</step>
	
		
	
	
	
	
	</steps>
	
</section>
<section>
	<title>Place the Arguments in a Filter Expression </title>
	<steps>
		<step>
			<description>On the Filter shown in the Design > Grid >  Query page of your Grid Builder click the button [xy_img] to open the Expression Builder .</description>
		<figure><link>images/A_xyselectfield.png</link></figure>
		</step>
		 <step>
			<description>Next double click on ' Argument ' in the Expression Builder menu, or hit F10 .</description>
		<figure><link>images/A_xyarg.png</link></figure>
		</step>
		 <step>
			<description>From Insert Arguments dialog select 'st', click on it so that it is highlighted in blue. Then click OK  </description>
			<figure><link>images/A_xyargst.png</link></figure>
		</step>
		 <step>
			<description>Click the .AND. button in the Expression Builder to add this to your expression.</description>
			<figure><link>images/A_xyand.png</link></figure>
		</step>
		 <step>
			<description>Hit F2 and add a second field, this time select ' Lastname'.</description>
		</step>
		 <step>
			<description>Place a greater than sign in the Expression , either via the keyboard or by clicking the greater than button.</description>
		<figure><link>images/A_xygreater.png</link></figure>
		</step>
				 <step>
			<description>Finally, add you second Argument. Hit F10 opening the Insert Arguments dialog, and select 'ln' then click Insert . The Expression should look like this.</description>
			<figure><link>images/A_xyresult.png</link></figure>
		</step>
				 <step>
			<description>Click OK to close the Expression Builder and add the Expression to your Query page.</description>
		</step>
				 
	</steps>
	
</section>
<section>
	<title>Print the Value to the Grid. </title>
	<steps>
		<step>
			<description>On the Grid Builder's Design page menu click on Grid > Properties and open the Properties page.</description>
		</step>
				 <step>
			<description>Scroll down to the Freeform Edit Regions properties and select the Above Grid Property. Click the button [...] on the Above Grid row.
</description>
<figure><link>images/A_abovegrid.png</link></figure>
		</step>
				 <step>
			<description> This will open the Freeform Edit Region dialog. Copy and paste the following HTML into the edit region.</description>
			<example><![CDATA[Showing records in state:
]]></example>
<note>This html will show some text on the grid. Inside of the text there is also a a span with id of statename. This span will hold the value of the 'state' argument.  
</note>
		</step>
		<step>
			<description>Go to the Grid > Fields page in the Design menu. Open the page.</description>
		</step>
				 <step>
			<description>Click the Insert... written below the Available Fields list to open the Insert Special Control dialog.</description>
		</step>
				 <step>
			<description>Click [Button] control and then click OK .</description>
		</step>
		<step>
			<description>In the Field Properties list on the right side of the Grid > Fields page scroll down until you reach the Javascript Properties.</description>
		</step>
				 <step>
			<description>Select the onClick property and click the [...] button next to it.</description>
			<figure><link>images/A_onClick.png</link></figure>
		</step>
				 <step>
			<description>The Edit onClick Event Editor will appear. From the radio buttons at the top of the editor select Text mode .</description>
		</step>
		<step>
			<description>Copy and Paste the following code into the edit area. Click Save.</description>
			<example><![CDATA[var x = {Grid.object}.argumentValue('st');  
alert(x);  
$('statename').innerHTML = x; ]]></example>
<cases>
	<case>
		<description>When the button is clicked it will call a method called argumentValue(). This method gets the value of an argument that was passed into the Grid, i.e. an argument that you want to retrieve. You can see the argumentValue() method by first clicking the ' Insert grid method... ' at the bottom of the Edit onClick Event Editor. Start typing the name of the method into the filter and it should appear from the list of methods. In this example we are converting our argument into a javascript variable called x and then alerting it. We then set the innerHtml of the span (that had an id of 'statename') equal to x. Ultimately will put this into a client-side event.  </description>
		
	</case>
	
</cases>
		</step>
				 <step>
			<description>Now go to Working Preview. Notice the text 'Showing Records in State' at the top of the grid. Click on the Button that you created. A message with 'ma' will appear. Click OK .</description>
			<figure><link>images/A_buttonma.png</link></figure>
		</step>
				 <step>
			<description>Now the  Javascript fires, retrieves the value of the argument 'ma', and then sets the value of the span tag. You should see a 'ma' next to the Showing records in state text.</description>
			<figure><link>images/A_buttonmacomplete.png</link></figure>
		</step>
		
		
	</steps>
	
</section>

<section>
	<title>Put the Value of an Argument in a Client-side Event. </title>
	<steps>
		<step>
			<description>Go back to the Design tab and return to the Grid > Fields page. Go to the Field Properties > Javascript section and click on the button  next to the onClick Event.</description>
		</step>
		
		<step>
			<description>Erase the code that you placed in the Edit onClick Event Editor and click Save.</description>
		</step>
		<step>
			<description>In the Design page menu, under Code , click on Client-side Events and open the Client-side Events page.</description>
		</step>
		<step>
			<description>Scroll down the list of Client-side Events until you find the onGridRenderComplete event near the bottom of the page. Highlight it.</description>
			<figure><link>images/A_rendercomplete.png</link></figure>
		</step>
		<step>
			<description>In the Javascript Event Handlers work area  Paste the same code that you placed in the Edit onClick Event Editor. Delete the alert(x); so the code looks like this...</description>
			<figure><link>images/A_Eventhandlers.png</link></figure><example><![CDATA[var x = {Grid.object}.argumentValue('st');  
$('statename').innerHTML = x; 
]]></example>
			
		</step>
		<step>
			<description>Click Save and run the Grid in Working Preview . You should see the value of the argument, 'ma' at the top of the screen.</description>
		<figure><link>images/A_Argumentvalue.png</link></figure>
		<note>This shows how you can use a method of the grid object to retreive the value of any argument that was passed into the grid and has been used in the grid filter.</note>
		</step>
		
	</steps>
	
</section>
			
		</sections>
		
		
		
	</group>
	
	
</groups>	

<links>
	<link href="images/A_expandchoices.png">...</link>
	<link href="images/Espression_Button_black.gif">xy_img</link>
</links>

<see>
	<ref>Define an Alpha Anywhere Table Query</ref>
	<ref>Define an Alpha Anywhere View Query</ref>
	<ref>Video on grid arguments </ref>
</see>

	
</page>