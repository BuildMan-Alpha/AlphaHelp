<page>
	<topic>Working with Oracle</topic>
	<description>A guide to using auto-increment in Oracle.</description>
	<sections>
		<section>
			<title>Support for Auto-Increment</title>
			<description>To support auto-increment in Oracle, the Oracle syntax handlers and APIs now behave as follows:</description>
			<steps>
				<step>
					<description>The Oracle connection dialog allows a choice of Portable SQL or Java as the language of choice for generated triggers.</description>
					<cases>
						<case>
							<description>Sets the A5ProcedureLanguage keyword in the connection string.</description>
						</case>
						
					</cases>
				</step>
				<step>
					<description>The OracleLite connection dialog allows a choice of "AutoIncrement" or "Sequence" as the implementation of choice for auto-increment columns.</description>
					<cases>
						<case>
							<description>Sets the A5AutoIncrementImplementation in the connection string.</description>
						</case>
						
					</cases>
				</step>
				<step>
					<description>The Oracle syntax handler now generates either a Portable SQL or Java trigger to manage insertions for sequences imported by Alpha Anywhere from auto-increment columns in other databases.</description>
					
				</step>
				<step>
					<description>The Oracle Lite syntax handler now generates a Java trigger to manage sequences or creates an auto-increment column.</description>
					
				</step>
				<step>
					<description>Two new methods are available to the SQL::Connection object. Both of these functions return the valid list for the current syntax and assume that you have set the syntax for the connection before making the call.</description>
					<cases>
						<case>
							<description>ListProcedureLanguages()</description>
						</case>
						<case>
							<description>ListAutoIncrementImplementations()</description>
						</case>
					</cases>
				</step>
				
			</steps>
			
		</section>
		<section>
			<description>In general, auto-increment columns are mapped to Oracle sequences.  SQL::Connection::GetTableInfo() will only return the correct information if Alpha Anywhere creates the tables. There is no way to connect a sequence to a table otherwise.</description>
		</section>
		
	</sections>
	<see>
		<ref href="/documentation/index?search=Working with SQL Databases">Working with SQL Databases</ref>
		<ref href="/documentation/index?search=SQL::Connection Object">SQL::Connection Object</ref>
	</see>
</page>