<page>
	<topic>Supported Portable SQL Syntax</topic>
		<description>The SQL syntax that the Alpha Anywhere Enterprise Edition and Application Server supports is first constrained by the SQL syntax supported by the target database. The Application Server has additional requirements.
The following is a simplified SQL grammar syntax as supported by the Alpha Anywhere Portable SQL parser. Support for these constructs depends on the target database and its implementation of SQL.
The grammar that follows shows the components of the grammar in the general format:
</description>
	
	<sections>
		<section>
		
		<list>
			<item>
				<name-title>Argument</name-title>
				<description-title>Syntax</description-title>
			</item>
			<item>
				<name>Argument
</name>
				<description>Alternative | Alternative [ Optional_Value ]
</description>
			</item>
			
		</list>
		
		
		</section>
		<section>
			<title>Notes on Syntax</title>
			<steps>
				<step>
					<description>Words beginning with lower case are rules.</description>	
				</step>
				<step>
					<description>Words in all capital letters are literals or key words and appear as typed. The actual select statement is case insensitive.</description>	
				</step>
				<step>
					<description>The vertical bar ( | ) indicates that any of the alternatives are valid. Commas are part of the input stream.</description>	
				</step>
				<step>
					<description>Items in square brackets [] are optional.</description>	
				</step>
				<step>
					<description>With some exceptions, parentheses shown are a required part of the input stream.</description>	
				</step>
				<step>
					<description>The FROM clause of a SELECT statement contains both TableName and AliasName, as in the following statement:</description>	
					<example><![CDATA[SELECT Customers.CompanyName, Customers.ContactName, Customers.ContactTitle FROM Customers Cust
]]></example>
				</step>
				<step>
					<description>The Application Server does not support the "SELECT *" syntax to select all fields from a table. You must reference the table name, as in "SELECT TableName.*".</description>	
				</step>
				
				
				
			</steps>
			
		</section>
		
		<section>
			<title>Select Statement</title>
			<description>Select Statement Components and Syntax</description>
			<cases>
				<case>
					<title>SELECT</title>
					<description>SELECT [ DISTINCT | ALL ROWS ] | FIRST integer ] Column_Item [, Column_Item ... ]
</description>
				</case>
				<case>
					<title>FROM</title>
					<description>FROM Select_Table_Reference [, Select_Table_Reference ... ]</description>
				</case>
				<case>
					<title>WHERE </title>
					<description>[ WHERE Logical_Expression  ]
</description>
				</case>
				<case>
					<title>[ GROUP BY  HAVING ]
</title>
					<description>[ GROUP BY Value_Expr [, Value_Expr ... ] [ HAVING Logical_Expression ] ]
</description>
				</case>
				<case>
					<title>ORDER BY </title>
					<description>[ ORDER BY Column_Item [  ASC | DESC] [, Column_Item [ ASC | DESC ]  ... 
</description>
				</case>
				<case>
					<title>UNION </title>
					<description>[ UNION Select_Statement [ UNION Select_Statement ... ]]
</description>
				</case>
				<case>
					<title>ORDER BY </title>
					<description>[ ORDER BY Column_Item [  ASC | DESC ] [, Column_Item [ ASC | DESC ]  ... </description>
				</case>
				
				
			</cases>
			
			
		</section>
		
		
<section>
	<topic>Select Statement Arguments</topic>
	<cases>
		<case>
			<title>Column_Item</title>
			<description>Value_Expr [ AS Identifier ]
Identifier = Value_Expr</description>
		</case>
		<case>
			<title>Column_Reference</title>
			<description>[  Identifier.] Identifier
[  Identifier.]*</description>
		</case>
		<case>
			<title>Select_Table_Reference</title>
			<description>[  Identifier.] Identifier [ LEFT | FULL | RIGHT  OUTER  |  INNER ] JOIN Select_Table_Reference [ ON Logical_Expression ] ... ]  as  Identifier ]
</description>
		</case>
		<case>
			<title>Logical_Expression</title>
			<description>AND_Expression [ OR AND_Expression ... ]</description>
		</case>
		<case>
			<title>AND_Expression</title>
			
			<cases>
				<case>
					<description>NOT  Logical_Expression [ AND Logical_Expression ... ] |</description>
				</case>
				<case>
					<description>EXISTS  Select_Statement |</description>
				</case>
				<case>
					<description>Value_Expr Comparison_Operator [ ALL | SOME | ANY ]</description>
				</case>
				<case>
					<description>( Select_Statement )</description>
				</case>
				<case>
					<description>Value_Expr Comparison_Operator Value_Expr</description>
				</case>
				<case>
					<description>Value_Expr IS  NOT  NULL</description>
				</case>
				<case>
					<description>Value_Expr CONTAINS ( Column_Reference, String_Literal )</description>
				</case>
				<case>
					<description>Value_Expr  NOT  LIKE Value_Expr</description>
				</case>
				<case>
					<description>Value_Expr  NOT  BETWEEN Value_Expr AND Value_Expr |</description>
				</case>
				<case>
					<description>Value_Expr  NOT  IN Select_Statement |</description>
				</case>
				<case>
					<description>Value_Expr  NOT  IN ( Value_Expr [ Value_Expr ... ] )
</description>
				</case>
				
			</cases>
		</case>
		<case>
			<title>Value_Expr</title>
			<description>Constant [ Operator Value_Expr ]</description>
		</case>
		<case>
			<title>Value_Expr</title>
			<description>Multi_Expr [ Additive_Operator Value_Expr ... ]</description>
		</case>
		<case>
			<title>Multi_Expr</title>
			<description>Unary_Expression [ Multi_Operator Multi_Expr ... ]</description>
		</case>
		<case>
			<title>Unary_Expression</title>
			<description>[ Unary_Operator ] Sub_Expression2</description>
		</case>
		<case>
			<title>Sub_Expression2</title>
			<description>Function | Constant | NULL | Column_Reference | (  Select_Statement ) | Case | Cast</description>
		</case>
		<case>
			<title>Function</title>
			<cases>
				<case>
					<description>Identifier ( [ ALL | DISTINCT ] Value_Expr | * ] ) |</description>
				</case>
				<case>
					<description>Identifier ( Value_Expr [, Value_Expr ... ] ) |</description>
				</case>
				<case>
					<description>"current_timestamp" | "current_user" | "session_user" | "system_user" | "user"
</description>
				</case>
			</cases>
		</case>
		<case>
			<title>String_Literal</title>
			<description>Unicode_String_Literal | ASCII_String_Literal</description>
		</case>
		<case>
			<title>Identifier</title>
			<description>Non_Quoted_Identifier | Quoted_Identifier</description>
		</case>
		<case>
			<title>Constant</title>
			<description>Integer, Real, String_Literal, Hex_Literal, Currency,
ODBC_Date_Time, Access_Date_Time</description>
		</case>
		<case>
			<title>Unary_Operator</title>
			<description>+ | - | ~</description>
		</case>
		<case>
			<title>Additive_Operator</title>
			<description><![CDATA[+ | - | &]]></description>
		</case>
		<case>
			<title>Multi_Operator</title>
			<description>* | / | MOD</description>
		</case>
		<case>
			<title>Comparison_Operator</title>
			<description><![CDATA[= | != | <> | <= | !> | < | >= | !< | >]]></description>
		</case>
		
	</cases>
	
	
</section>		
		
		
<section>
	<title></title>
	<description></description>
	<list>
		<item>
			<name-title>Object to Delete</name-title>
			<description-title>Syntax</description-title>
		</item>
		<item>
			<name>Record(s)</name>
			<description>DELETE FROM Table_Name WHERE Column_Name = Value_Expression</description>
		</item>
		
	</list>
	<note>The Application Server does not support DELETE statements.</note>
</section>		
		
		
<section>
	<title>Update Syntax</title>
	<description>The Portable SQL UPDATE statement modifies one or more records in the specified table.</description>
	<list>
		<item>
			<name-title>Object to Update
</name-title>
			<description-title>Syntax
</description-title>
		</item>
		<item>
			<name>Record(s)
</name>
			<description>UPDATE Table_Name SET Column_Name = Value_Expression_1 WHERE Column_Name = Value_Expression_2
</description>
		</item>
	</list>
	
<note>The Application Server does not support UPDATE statements.</note>
	
</section>	
		
<section>
	<title>Insert Syntax</title>
	<description>The Portable SQL INSERT statement adds a record to the specified table.</description>
	<list>
		<item>
			<name-title>Object to Insert</name-title>
			<description-title>Syntax</description-title>
		</item>
		<item>
			<name>Record</name>
			<description>INSERT INTO Table_Name ( Column_Name_1, Column_Name_2, ... , Column_Name_N ) VALUES ( Value_Expression_1, Value_Expression_2, ... Value_Expression_N )
</description>
		</item>
	</list>
	
	<note>The Application Server does not support INSERT statements.</note>
</section>	
		
		
	</sections>
	
<see>
	<ref>Portable SQL</ref>
	<ref>Portability Functions</ref>
</see>	
	
	
</page>