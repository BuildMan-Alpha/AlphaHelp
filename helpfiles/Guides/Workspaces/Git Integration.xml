<page build="5850">
    <shortlink>webproject git integration</shortlink>
    <topic>Git Integration</topic>
    <description>
        <p>Change any Project to a Git Repository with a click of a button.</p>
    </description>
    <discussion>
        <p>Git and GitHub support is integrated into the Web Projects Control Panel. When the Web Projects Control Panel is displayed, you will see a Git icon on the far right-hand side of the toolbar in the Control Panel.</p>
    </discussion>
    <sections>
        <section>
            <figure>
                <link>images/git9.png</link>
            </figure>
        </section>
        <section>
            <important>
                <p>You must install Git on your machine to use this feature. Git is a free install. You can find the installer at: *[extlink:git-scm.com/downloads@https://git-scm.com/downloads]*. When you install Git be sure to select the option that adds Git to your path. See [Installing Git] below for detailed installation instructions.</p>
            </important>
        </section>
        <section>
            <title>Converting an Existing Project to a Git Repository</title>
            <description>
                <p>You can make an existing project into a Git repository by clicking the Git icon.</p>
                <p>This will display the Git Menu dialog as shown in the image below.</p>
                <p>You can make the current project into a Git Repository by clicking on the Yes - Make a Git Repository button, or you can clone an existing GitHub repository.</p>
            </description>
            <figure>
                <link>images/git1.png</link>
            </figure>
        </section>
        <section>
            <warning>
                <p>If you convert a large Web project into a Git repository, (and you check the Add all files checkbox prompt shown in the image above) Git may take a significant amount of time to add all of the files to the Repository.</p>
            </warning>
        </section>
        <section>
            <title>Adding and Committing Files</title>
            <description>
                <p>Once you have made your Web project into a Git repository the Web Control Panel will show a Git toolbar under the main toolbar shown in the Window.</p>
                <p>Once you have made your Web project into a Git repository the Web Control Panel will show a Git toolbar under the main toolbar shown in the Window.</p>
                <p>The Git toolbar shows you the number of Untracked and Modified files in your project.</p>
            </description>
            <figure>
                <link>images/git2.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Untracked files are files that are not included in the Git repository. This includes new files or files that have been renamed.</p>
                <p>Modified files are files that are included in the Git repository. Modified files include files that have been changed or missing. A file can become missing if it has been deleted or renamed.</p>
                <p>To commit any modified files, or to add untracked files to your repository, click the Git button on the toolbar, or click directly on the Untracked files or Modified files message on the Git toolbar.</p>
            </description>
            <figure>
                <link>images/git3.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When you click the Git button you will see the Git Commit window where you can select which files you want to commit and which currently untracked files you wish to start tracking. You must enter a commit message before you can click the Commit button.</p>
                <p>Once you have committed files, the modified files and untracked files count in the Git toolbar will update.</p>
            </description>
            <figure>
                <link>images/git4.png</link>
            </figure>
        </section>
        <section>
            <title>Connecting your Git Repository to GitHub</title>
            <description>
                <p>You can connect your local Git repository to a remote GitHub repository. Once you have done this you will be able to push and pull to and from the GitHub repository using the Push to GitHub and Pull from GitHub hyperlinks on the Git toolbar.</p>
                <p>In order to connect your repository to a remote Git repository, click the Git Settings hyperlink in the Git toolbar.</p>
                <p>First, select the Save User ID and password for GitHub to enter your credentials for your GitHub account.</p>
                <p>Next, select the Register/change remote GitHub repository command. This will open a dialog (shown below) where you can enter the URL for your remote GitHub repository.</p>
            </description>
            <important>
                <p>You must have your own GitHub account to push and pull changes to a repository on GitHub. Visit *[extlink:GitHub@https://www.github.com]* to sign-up.</p>
            </important>
            <figure>
                <link>images/git5.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Enter the URL for the GitHub repository in the text box.</title>
                <link>images/git6.png</link>
            </figure>
        </section>
        <section>
            <title>Editing the .gitignore File</title>
            <description>
                <p>Your web project may have certain files that you do not wish to be part of your Git repository. The list of files and file types that you want to ignore is defined in the .gitignore file. You can edit the .gitignore file by selecting the Edit the .gitignore file from the Git Settings menu.</p>
            </description>
            <figure>
                <link>images/git7.png</link>
            </figure>
        </section>
        <section>
            <title>Adding a New Project as a Git or GitHub Repository</title>
            <description>
                <p>When you create a new Web Project (by clicking the New Project button in the Web Control Panel), you can specify if the new project should be a Git repository.</p>
                <p>You can also create a new project from a remote GitHub repository.</p>
            </description>
            <figure>
                <link>images/git8.png</link>
            </figure>
        </section>
        <section>
            <title>Installing Git</title>
            <steps>
                <step>
                    <description>
                        <p>Before you can use Git with Alpha Anywhere, you must first Install Git. Go to *[extlink:git-scm.com@https://git-scm.com]*.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Click "Downloads".</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Select "Windows" to download the Git installer for Windows. Your download should begin automatically.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>When the download completes, run the Git installer.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>On the *[ui:Select Components]*, keep the default settings.</p>
                    </description>
                    <figure>
                        <link>images/gitInstall1.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>On *[ui:Choosing the default editor used by Git]*, you can optionally select a different editor. The editor is used from the Command Line primarily when resolving merge conflicts and entering commit messages with Git. The default, Vim, is a difficult editor to use. If you plan to use Git outside of Alpha Anywhere, it's recommended that you install a text editor such as Notepad++ or Visual Studio Code.</p>
                        <p>If you only plan to use Alpha Anywhere with Git, you can leave the default here as Alpha Anywhere will provide its own interface for working with Git. You can always change this setting later.</p>
                    </description>
                    <figure>
                        <link>images/gitInstall2.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>On *[ui:Adjusting your PATH environment]* select "Git from the command line and also from 3rd-party software". This will add Git to the PATH environment variable, which is required to use Git with Alpha Anywhere.</p>
                    </description>
                    <figure>
                        <link>images/gitInstall4.png</link>
                    </figure>
                    <note>
                        <p>If you plan to use Git in windows Command Prompt, you can optionally select instead "Use Git and optional Unix tools from the Command Prompt". This will add Unix tools to the PATH variable in addition to Git, allowing you to use Unix tools such as "" and "" in Windows Command Prompt. Visit "" to learn more. *[Do not select the first option.]*</p>
                    </note>
                </step>
                <step>
                    <description>
                        <p>Use the default setting on *[ui:Choosing the SSH executable]*.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>On *[ui:Choosing HTTPS transport backend]*, select "Use the native Windows Security Channel library".</p>
                    </description>
                    <figure>
                        <link>images/gitInstall5.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>On *[ui:Configuring the line ending conversions]* select "Checkout as-is, commit as-is".</p>
                    </description>
                    <figure>
                        <link>images/gitInstall6.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Use the default setting on *[ui:Configuring the terminal emulator to use with Git Bash]*.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>On *[ui:Configuring extra options]* uncheck all three options.</p>
                    </description>
                    <figure>
                        <link>images/gitInstall8.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Click *[ui:Install]*. When installation completes, Git can now be used in Alpha Anywhere.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Close and restart Alpha Anywhere if it was running while your were installing Git. You need to do this because the Git installation modified the PATH environment variables, which are cached when Alpha Anywhere launches.</p>
                    </description>
                </step>
            </steps>
        </section>
        <section>
            <title>How to Clone an Alpha Anywhere Sample Application from GitHub</title>
            <description>
                <p></p>
            </description>
            <steps>
                <step>
                    <description>
                        <p>Go to *[extlink:https://github.com/alphaanywhere@https://github.com/alphaanywhere]*</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Click on "Repositories"</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Select a Repository that is labelled as "Works with Git in Alpha Anywhere".</p>
                    </description>
                    <figure>
                        <link>images/gitHub3.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Copy the repository URL from the Address bar</p>
                    </description>
                    <figure>
                        <link>images/gitHub1.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>In your Alpha Anywhere workspace, create a new project on the Web Projects Control Panel (*[ui:File]* > *[ui:New Project]*).</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Select the *[ui:Create Project from a GitHub Repository]* radio button.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Enter a name for your new project.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Paste the URL you copied in the *[ui:URL]* box.</p>
                    </description>
                    <figure>
                        <link>images/gitHub2.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Click *[ui:OK]* to create your project.</p>
                    </description>
                    <note>
                        <p>Depending on your network connection and the size of the repository, it may take some time to clone the project locally.</p>
                    </note>
                </step>
            </steps>
        </section>
    </sections>
    <limitations>Web Projects Only</limitations>
    <links>
        <link href="#section1_Installing%20Git">Installing Git</link>
        <link link=""></link>
    </links>
</page>