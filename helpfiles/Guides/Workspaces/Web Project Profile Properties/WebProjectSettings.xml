<page>
    <shortlink>server ref Web Project Settings</shortlink>
    <topic>Web Project Settings</topic>
    <description>Different web project settings available in Alpha Anywhere</description>
    <groups>
        <group>
            <title>Run-time Properties</title>
            <sections>
                <section>
                    <title>Project style</title>
                    <cases>
                        <case>
                            <title nested="2">Project style</title>
                            <description>Specify the name of the style for all components in the project.</description>
                            <note>
                                <p>In each individual component, you must specify the style name as &lt;ProjectStyle&gt;</p>
                            </note>
                            <tip>
                                <p>You can perform a global update of your components to change the style name to &lt;ProjectStyle&gt; by selecting Edit, Bulk operations from the menu when the Web Projects Control Panel has focus.</p>
                            </tip>
                        </case>
                        <case>
                            <tip>
                                <p>If you select a style that has a 'compact' option (e.g. the 'Alpha' style), you can specify the project style as 'Alpha:compact'.</p>
                            </tip>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Web site defaults</title>
                    <cases>
                        <case>
                            <title nested="2">Default page</title>
                            <description>Select the default page to be returned when no page is specified in the request. This value is only used when publishing to an IIS server. See the Xbasic server settings for its list of default page names.</description>
                        </case>
                        <case>
                            <title nested="2">Session lifetime (minutes)</title>
                            <description>Enter the number of minutes a session will remain active on the server without any requests from the user. A session will automatically end on the server if no requests are received from the user in this amount of time. This value is only used when publishing to an IIS server.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Aex files</title>
                    <cases>
                        <case>
                            <title nested="2">File list</title>
                            <description>Property name: aexFiles.fileNames Specify the name of any .aex files that you want to load when this project is run. AEX Files specified here are loaded automatically when the application is run. It is not necessary to use the a5w_load_aex() function.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>File Download</title>
                    <cases>
                        <case>
                            <title nested="2">Allowed filenames</title>
                            <description>Enter a comma delimited list of allowed files that can be downloaded from the server. Enter filename patterns using wildcard characters (* and ?). To allow any type of file, enter *.* For example, if you enter: a5*.xls,a5*.pdf - Only .xls files and .pdf files that start with 'a5' can be downloaded. If you only want to specify a list of blocked filename patterns, leave this property blank, or enter *.*.</description>
                        </case>
                        <case>
                            <title nested="2">Disallowed filename</title>
                            <description>Enter a comma delimited list of files that can not be downloaded from the server. Enter filename patterns using wildcard characters (* and ?).</description>
                        </case>
                        <case>
                            <title nested="2">Allowed folders</title>
                            <description>Enter a comma delimited list of folder names from which files can be downloaded. You can use wildcard characters (* and ?) in the name. Example: *\images,*\pdf - would allow user to download from a folder called 'images' or 'pdf' on any drive. d:\images would only allow download from the 'images' folder on drive D on the server.</description>
                            <obsolete>
                                <p>&lt;UserSessionFolder&gt; is not supported in Alpha Anywhere.</p>
                            </obsolete>
                            <note>
                                <p>If you leave this blank (not recommended) then files can be downloaded from any folder.</p>
                            </note>
                            <note>
                                <p>You can use the &lt;ApplicationRoot&gt; placeholder in the folder name you specify. e.g. &lt;ApplicationRoot&gt;\DownloadFolder</p>
                            </note>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Javascript Libraries</title>
                    <cases>
                        <case>
                            <title nested="2">jQuery Core</title>
                            <description>Load jQuery core Javascript Library. You can choose where the library is loaded from. Alpha Anywhere has a built-in version of this library, or you can load it from the Google Content Delivery Network, or the jQuery Content Delivery Network. When you load from Google, you must specify the version you want to load. When you load from the jQuery CDN, the latest stable release is automatically loaded.</description>
                        </case>
                        <case>
                            <title nested="2">jQuery Core Version</title>
                            <description>Specify the version number you want to load</description>
                        </case>
                        <case>
                            <title nested="2">jQuery UI</title>
                            <description>Load jQuery UI Javascript Library. Requires jQuery Core. You can choose where the library is loaded from. Alpha Anywhere has a built-in version of this library, or you can load it from the Google Content Delivery Network.</description>
                        </case>
                        <case>
                            <title nested="2">jQuery UI Version</title>
                            <description>Specify the version number you want to load</description>
                        </case>
                        <case>
                            <title nested="2">Links</title>
                            <description>Specify a list of Javascript libraries to link</description>
                        </case>
                        <case>
                            <title nested="2">Include Image Gallery</title>
                            <description>Specify if the Image Gallery Javascript libraries should be loaded. If you use the Image Gallery anywhere in your application you must check this option. NOTE: If this option is checked, then you must also check the options to load jQuery core.</description>
                        </case>
                        <case>
                            <title nested="2">Include Google JSAPI library</title>
                            <description>Specify if the Google Javascript API library should be loaded. This is needed if you use the Google visualization library in the UX component.</description>
                        </case>
                        <case>
                            <title nested="2">Cordova/PhoneGap libraries</title>
                            <description>If you are building a hybrid mobile application that requires a Cordova/PhoneGap Javascript library, specify where the Javascript should be loaded from. Javascript can be loaded from one of the following locations:</description>
                            <list>
                                <item>
                                    <name>BuiltIn</name>
                                    <description>Use the built-in version of either the iOS or Android library</description>
                                </item>
                                <item>
                                    <name>Local</name>
                                    <description>Use a version that is loaded from a file in the web root</description>
                                </item>
                            </list>
                        </case>
                        <case>
                            <description>
                                <p>If the file is loaded from a "Local" folder, it must be loaded from a folder that follows the required naming convention:</p>
                            </description>
                            <example><![CDATA[Javascript\Cordova\IOS\currentVersion\cordova.js, Javascript\Cordova\IOS\2.8.0\cordova.js, Javascript\Cordova\Android\currentVersion\cordova.js, Javascript\Cordova\Android\2.8.0\cordova.js]]></example>
                        </case>
                        <case>
                            <title nested="2">Include CKEdit HTML Editor Javascript library</title>
                            <description>If your component uses the CKEdit HTML editor you must check this box to load the necessary Javascript and CSS libraries.</description>
                        </case>
                    </cases>
                </section>
                <section build="5581">
                    <title>Dates</title>
                    <cases>
                        <case>
                            <title nested="2">Switch year</title>
                            <description>
                                <p>The *[ui:Switch year]* defines how to interpret two-digit years in a date. If the year is greater than the switch year, it will be interpreted as being in the 1900s. For example, "12/25/22" will be interpreted as December 25, 2022 while "03/17/59" is interpreted as March 17, 1959.</p>
                                <p>Leave this property blank to use the default switch year. The current default switch year is "30".</p>
                            </description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>CSS Libraries</title>
                    <cases>
                        <case>
                            <title nested="2">jQuery CSS</title>
                            <description>Specify which jQuery UI CSS library should be loaded. These libraries are loaded from the Google Content Delivery Network.</description>
                        </case>
                        <case>
                            <title nested="2">Links</title>
                            <description>Specify a list of CSS libraries to link in the application.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Resource Providers</title>
                    <cases>
                        <case>
                            <title nested="2">Named Providers</title>
                            <description>
                                <p>A Named Provider is used to connect to an external service that can be used for user authentication and access to other resources such as social media.  Resource providers such as Google and Facebook can be used for user authentication or access services available from the provider, such as calendars and documents.</p>
                                <p>A user can log onto a system using their credentials from the provider in place of the user name and password in the web security system.</p>
                                <p>Named Resources can be created for the following providers in Alpha Anywhere:</p>
                                <p>
                                    <list bullet="true">
                                        <item>
                                            <name>Box (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Dropbox (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Facebook (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Google (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>LinkedIn (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Live Connect (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Salesforce (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Spotify (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Twitter (OAuth)</name>
                                        </item>
                                        <item>
                                            <name>Googleservice (API)</name>
                                        </item>
                                        <item>
                                            <name>SalesforceService (API)</name>
                                        </item>
                                        <item>
                                            <name>Twillio (API)</name>
                                        </item>
                                    </list>
                                </p>
                              </description>
                        </case>
                        <case>
                            <title nested="3">Videos</title>
                            <videos>
                                <title>Creating a Named Resource for Salesforce</title>
                                <description></description>
                                <video>
                                    <name>Watch Video - Part 1</name>
                                    <link>https://www.viddler.com/v/9333abd7</link>
                                </video>
                                <video>
                                    <name>Watch Video - Part 2</name>
                                    <link>https://www.viddler.com/v/110062a4</link>
                                </video>
                            </videos>
                        </case>
                        <case>
                            <videos>
                                <title>Alternative Login - Creating a Named Provider</title>
                                <description>See [Alternative Logins] for more information.</description>
                                <date></date>
                                <video>
                                    <name>Watch Video</name>
                                    <link>https://www.viddler.com/v/c09bbb08</link>
                                </video>
                            </videos>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Webkit (Chrome/Safari) Specific</title>
                    <cases>
                        <case>
                            <title nested="2">Allow static text selection</title>
                            <description>Defines whether or not static text can be selected in a mobile or web application. For mobile applications, this property should be set to *[xb:.f.]*. This will prevent static-text on a page from being selected. For desktop applications you might want to set this property to *[xb:.t.]* so that users can select static-text.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Stripe Checkout</title>
                    <description>
                        <p>Settings for configuring Stripe. See the [Stripe Genie...] to learn how to integrate Stripe into your applications.</p>
                    </description>
                    <cases>
                        <case>
                            <title nested="2">Define keys</title>
                            <description>If your application uses Stripe Checkout, you can specify your Stripe API key here.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>E-mail Settings</title>
                    <cases>
                        <case>
                            <title nested="2">SMTP Server</title>
                            <description>The URL or IP Address for the SMTP server for sending e-mail.</description>
                        </case>
                        <case>
                            <title nested="2">SMTP server port</title>
                            <description>The port used by the SMTP server.</description>
                        </case>
                        <case>
                            <title nested="2">SSL Option</title>
                            <description>Defines the SSL option to use when sending Email. If SSL is not used, leave this property blank. Example settings: SSL, TLS.</description>
                        </case>
                        <case>
                            <title nested="2">E-mail account user name</title>
                            <description>The user name for the e-mail account used to send e-mail.</description>
                        </case>
                        <case>
                            <title nested="2">E-mail account password</title>
                            <description>The password for the e-mail account used to send e-mail.</description>
                        </case>
                        <case>
                            <title nested="2">From address</title>
                            <description>The default from address for e-mails sent from the application.</description>
                        </case>
                        <case>
                            <title nested="2">From alias</title>
                            <description>The default friendly name for the from address for e-mails sent from the application.</description>
                        </case>
                        <case>
                            <title nested="2">Mandrill key</title>
                            <description>If you use the Mandrill web service to send email, you can set the key value here. If you set the value here you will not need to set the value each time you call the Mandrill web service (using the email_send_mandrill() Xbasic function).</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>E-mail Outbox</title>
                    <cases>
                        <case>
                            <title nested="2">Table type</title>
                            <description>Specify if the e-mail outbox is a .DBF or SQL table. The e-mail outbox stores a copy of e-mail messages sent from this application.</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>Sent e-mail can optionally be stored in an outbox. Specify the connection string to the SQL database where the outbox is stored.</description>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>Specify the outbox table name where sent emails will be stored.</description>
                        </case>
                        <case>
                            <title nested="2">Sequence name</title>
                            <description>Specify the sequence name for the table. The Sequence name is only needed for databases such as Oracle and PostgresSQL that use sequences for auto-increment fields.</description>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>Specify how the fields in the outbox table are mapped to the required fields. You only need to specify mappings for fields that do not match the corresponding 'system' value shown in the map.</description>
                        </case>
                    </cases>
                </section>
                <section build="5022">
                    <title>Audit table (for SQL tables)</title>
                    <description>
                        <p>Auditing can be enabled to keep track of edits made to SQL tables in an application. Information about each Insert, Update and Delete is kept in the Audit table. This table keeps track of the type of edit, the user id of the person making the edit, the name of table that was edited, and the old and new value of each field that was edited.</p>
                    </description>
                    <cases>
                        <case>
                            <videos>
                                <title>Video: Auditing Table Edits</title>
                                <description>
                                    <p> In many applications it is desirable to keep track of every edit made to a SQL table so you can know what fields were changed, who made the edit and when the edit was made. This is often achieved by added update, insert and delete triggers to the SQL database. But in cases where it is not possible to modify the database, you can use the built-in auditing feature in Alpha Anywhere.</p>
                                    <p>In the first video we show how the auditing feature is set up and used.</p>
                                    <p>In cases where updates to SQL tables are made in your own Xbasic code (as opposed to from UX and Grid components), it is necessary to manually update the audit log. In the second video we show how this is done.</p>
                                </description>
                                <date>2018-15-06</date>
                                <video>
                                    <name>Watch Video Part 1</name>
                                    <link>https://www.viddler.com/v/9f4b4693</link>
                                </video>
                                <video>
                                    <name>Watch Video Part 2</name>
                                    <link>https://www.viddler.com/v/5e9f39a9</link>
                                </video>
                            </videos>
                        </case>
                    </cases>
                </section>
                <section>
                    <description>
                        <p>To turn on the Auditing feature, check the *[ui:Keep track of edits to tables made through Grid and UX components]* property.</p>
                    </description>
                    <figure>
                        <link>images/audit1.gif</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>Once you do this, you will be able to specify the connection string to the database where the Audit table is stored. You can either map an existing table, or create a new table.</p>
                    </description>
                    <figure>
                        <link>images/audit2.gif</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>By default, the User Id of the user who made the edit to a table is obtained from the Alpha Anywhere security framework (by evaluating the context.security.currentUser expression). However, if you are not using the Alpha Anywhere security framework, you can define a custom expression to get the user id of the person who made the edit.</p>
                        <p>In the case where you are making updates to SQL tables in your own Xbasic code, you will need to manually update the audit log table. There are two helper function in Xbasic to make this easy:</p>
                    </description>
                    <list bullet="true">
                        <item>
                            <name>[a5Helper_getAuditInfoFromSQLStatement()] - Called before the SQL is executed to capture the new and old values for each field being edited.</name>
                        </item>
                        <item>
                            <name>[a5Helper_writeToAuditingLog()] - Writes to the Audit table after the SQL has been executed.</name>
                        </item>
                    </list>
                </section>
                <section>
                    <description>
                        <p>For example, the following code updates a table and also updates the audit log:</p>
                    </description>
                    <example code="xb"><![CDATA[dim cn as sql::Connection
cn.open("::Name::AADemo-Northwind")
dim args as sql::arguments
args.add("primaryKey","ALFKI")
args.add("title","Manager")


dim sql as c
sql = "update Customers set ContactTitle = :title where CustomerID = :primaryKey"

'capture the BEFORE update values
dim dataJson as c
dataJson = a5Helper_getAuditInfoFromSQLStatement(cn,sql,args.xml)

flag = cn.Execute(sql,args)

'write to the auditing table
a5Helper_writeToAuditingLog(cn,"Update",dataJson,"CustomerID","ALFKI")]]></example>
                    <tip>The Audit table can grow to be very large in a large application used by many people. You might want to implement a strategy to purge old records from the audit table from time to time.</tip>
                </section>
                <section>
                    <description>
                        <p>A complete list of properties for configuring table auditing are listed below:</p>
                    </description>
                    <cases>
                        <case>
                            <title nested="2">Keep track of edits to tables made through Grid and UX Components</title>
                            <description>If checked, enables table auditing in Grid and UX Components.</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>The *[ui:Connection string]* property defines the connection to the SQL database where the audit table is defined. If the audit table doesn't exist, you can create one using  the *[ui:Create Audit Table]* link at the bottom of the *[ui:Define Audit Table]* dialog.</description>
                            <figure>
                                <link>images/auditTable1.png</link>
                            </figure>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>
                                <p>The *[ui:Table name]* property defines the table in the database where the audits are written. If no table exists in your database, you can create the table from within Alpha Anywhere using the *[ui:]* link. Using this link will both create the table and populate the *[ui:Field map]*, as well.</p>
                                <p>If you manually create the audit table, the table must contain the following fields:</p>
                            </description>
                            <example><![CDATA[Field name: id, Type: Numeric(10), Primary key: True, Allow Nulls: False, Is Auto-increment: True
Field name: operation, Type: Character(20), Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: UserId, Type: Character(100), Primary key: False, Allow Nulls: True, Is Auto-increment: False
Field name: dateStamp, Type: DateTime, Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: data, Type: Memo, Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: databaseTableName, Type: Character(100), Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: primaryKeyFields, Type: Character(200), Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: primaryKeyValue, Type: Character(200), Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: connectionStringToDatabases, Type: Memo, Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: comment, Type: Character(100), Primary key: False, Allow Nulls: True, Is Auto-increment: False]]></example>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>
                                <p>The *[ui:Field map]* defines a mapping between columns in the audit table and the data collected and written to the table by Alpha Anywhere. The *[ui:Auto map fields]* link can be used to automatically map fields in the table to the audit fields.</p>
                            </description>
                        </case>
                        <case>
                            <title nested="2">Expression for User Id</title>
                            <description>
                                <p>Defines the user Id to log in the audit table. If you use the Alpha Anywhere Security Framework, *[xb:Context.Security.CurrentUser]* will be used to retrieve the user Id.</p>
                            </description>
                            <figure>
                                <link>images/auditTable2.png</link>
                            </figure>
                        </case>
                        <case>
                            <description>
                                <p>If you are not using the Alpha Anywhere Security Framework, you can define a custom expression for the user Id. In many cases, the user Id is stored in a session variable that is set when a user logs into the system. For example, *[xb:Context.session.userid]*. To set the *[ui:Expression for User Id]* to use this session variable, you would uncheck the *[ui:Use security framework to get User Id?]* and enter the following in the *[ui:Expression to evaluate to get User Id]* text box:</p>
                            </description>
                            <example><![CDATA[Context.session.userid]]></example>
                        </case>
                    </cases>
                </section>
                <section build="5137">
                    <title nested="2">User Defined Fields</title>
                    <description>
                        <p>You can add a user defined field to the audit table to capture any additional information that you want at the time the audit table is updated. If you set the value in a special session variable called *[xb:session.__audit_userfield1]*, the value in this variable will be written to the user defined field when the audit table is updated. If you want to store a significant amount of information in this field, consider creating a string of JSON data. The JSON data can have a large number of properties.</p>
                    </description>
                </section>
                <section>
                    <title>Repository Settings</title>
                    <figure>
                        <link>images/repositorySettingsProperties.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>A repository is a table (either .dbf or SQL) where a web application can read or write data. The data are typically items such as email templates, or saved queries, or other settings. For the most part, the repository is for internal use by components, but developers can also make use of it using the following functions:</p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>[a5w_SaveToWebAppRepository Function] - Saves some data to the repository. Returns .t. if the data was saved, or .f. if it was not saved.</name>
                                </item>
                                <item>
                                    <name>[a5w_GetFromWebAppRepository Function] - Retrieves a piece of data from the repository.</name>
                                </item>
                                <item>
                                    <name>[a5w_enumerateWebAppRepository Function] - Enumerates the key values of the objects stores in the repository and returns them in a CR/LF-delimited list. You can optionally filter the objects by objectType, componentGuid, and/or userId.</name>
                                </item>
                            </list>
                        </p>
                        <p>For an example of how you can use these functions with the repository table, see the [UX_Ad_Hoc_SQL_QueryBuilder UX template].</p>
                        <p>The following properties are available for configuring the *[ui:Repository Settings]*:</p>
                    </description>
                    <figure>
                        <title>The *[ui:Define Repository Table]* is shown when the [...] smart field button is clicked for any of the Repository Settings properties.</title>
                        <link>images/repositorySettingsProperties2.png</link>
                    </figure>
                    <cases>
                        <case>
                            <title nested="2">Table type</title>
                            <description>Defines the table type. This can be DBF or SQL (recommended).</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>If the *[ui:Table type]* is SQL, the *[ui:Connection string]* property must be defined. This property specifies what connection string should be used to connect to the database that contains the repository table.</description>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>
                                <p>The *[ui:Table name]* defines what table in the data source is the repository table. You can use the *[ui:Create Repository Table]* link in the *[ui:Define Repository Table]* dialog to generate a table in the destination database if one doesn't exist.</p>
                                <p>Alternatively, you can create the table yourself. The repository table must have the following structure:</p>
                            </description>
                            <example><![CDATA[Field name: key, Type: Character(100), Primary key: True, Allow Nulls: False, Is Auto-increment: False
Field name: objectType, Type: Character(40), Primary key: False, Allow Nulls: True, Is Auto-increment: False
Field name: dateStamp, Type: DateTime, Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: componentGUID, Type: Character(40), Primary key: False, Allow Nulls: True, Is Auto-increment: False
Field name: userId, Type: Character(40), Primary key: False, Allow Nulls: True, Is Auto-increment: False
Field name: data, Type: Memo, Primary key: False, Allow Nulls: False, Is Auto-increment: False
Field name: securityGroups, Type: Memo, Primary key: False, Allow Nulls: False, Is Auto-increment: False]]></example>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>
                                <p>The field map defines how the fields in the table map to the required repository fields. Use the *[ui:Auto map fields]* link to automatically map the fields. Any fields that don't use the same name as the ones shown below need to be manually mapped:</p>
                                <p>
                                    <list>
                                        <item>
                                            <name-title>Field Name</name-title>
                                            <description-title>Field Map Property</description-title>
                                        </item>
                                        <item>
                                            <name>key</name>
                                            <description>Repository Key field</description>
                                        </item>
                                        <item>
                                            <name>objectType</name>
                                            <description>Object Type field</description>
                                        </item>
                                        <item>
                                            <name>dateStamp</name>
                                            <description>DateStamp field</description>
                                        </item>
                                        <item>
                                            <name>componentGUID</name>
                                            <description>ComponentGUID field</description>
                                        </item>
                                        <item>
                                            <name>userId</name>
                                            <description>UserId field</description>
                                        </item>
                                        <item>
                                            <name>data</name>
                                            <description>Data</description>
                                        </item>
                                        <item>
                                            <name>securityGroups</name>
                                            <description>Security Groups</description>
                                        </item>
                                    </list>
                                </p>
                            </description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Work Queue Table Settings</title>
                    <cases>
                        <case>
                            <title nested="2">Table type</title>
                            <description>Specify the table type for the Work Queue.</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>Specify the connection string to the database for the Work Queue.</description>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>Specify the name of the table for the Work Queue.</description>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>Specify how the fields in the Work Queue table are mapped to the required fields. Only fields that are different from their 'system' value are shown in the map.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Help Table Settings</title>
                    <cases>
                        <case>
                            <title nested="2">Table type</title>
                            <description>Specify if the Help Table is a .DBF or SQL table.</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>Specify the connection string to the SQL database.</description>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>Specify the table name.</description>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>Specify how the fields in the Help Table table are mapped to the required fields. Only fields that are different from their 'system' value are shown in the map.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Text Dictionary Table Settings</title>
                    <cases>
                        <case>
                            <title nested="2">Table type</title>
                            <description>Specify if the Text Dictionary Table is a .DBF or SQL table.</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>Specify the connection string to the SQL database.</description>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>Specify the table name.</description>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>Specify how the fields in the Text Dictionary Table table are mapped to the required fields. Only fields that are different from their 'system' value are shown in the map.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Offline Data Synchronization Log Table Settings</title>
                    <cases>
                        <case>
                            <title nested="2">Table type</title>
                            <description>ALWAYS SET TO SQL</description>
                        </case>
                        <case>
                            <title nested="2">Connection string</title>
                            <description>Specify the connection string to the SQL database.</description>
                        </case>
                        <case>
                            <title nested="2">Table name</title>
                            <description>Specify the table name.</description>
                        </case>
                        <case>
                            <title nested="2">Field map</title>
                            <description>Specify how the fields in the Data Synchronization Log table are mapped to the required fields. Only fields that are different from their 'system' value are shown in the map.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Application Global Variables</title>
                    <cases>
                        <case>
                            <title nested="2">Define application variables</title>
                            <description>Specify any application global variables. These variables can be seen by every page and component in this application.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Calendar Component</title>
                    <cases>
                        <case>
                            <title nested="2">License number</title>
                            <description>Specify the license number for your Calendar component. The license number in the Calendar component itself should be set to: &lt;GetFromProjectSetings&gt;</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>PDF Printing Options</title>
                    <cases>
                        <case>
                            <title nested="2">Use Microsoft XPS printer to generate PDF files</title>
                            <description>Specify if the Microsoft XPS printer should be used instead of the Amyuni PDF printer driver to generate PDF files. When you use this option, you can specify if the resulting XPS files should be converted to PDF files before being sent to the browser, or if they should be sent to the browser as XPS files.</description>
                        </case>
                        <case>
                            <title nested="2">Convert XPS files to PDF before sending to client</title>
                            <description>Defines whether or not XPS files should be converted to a PDF format before being sent to the client.</description>
                            <important>
                                <p>If you choose to send the resulting XPS files to the browser without first converting them to PDF, only Microsoft Internet Explorer will be able to display the file directly in the browser. All other browsers will download the file and you will have to use the local XPS viewer application to see the file.</p>
                            </important>
                        </case>
                        <case>
                            <title nested="2">Print timeout (seconds)</title>
                            <description>Large PDF reports may take a long time to build and you may want to cancel reports that take too long to create. The print timeout setting will cancel any report that has not completed in the allowed time (in seconds). Set the timeout to 0 to allow all reports to run to completion. An error will be reported back to the user if a report is cancelled because it exceeded the allowed time.</description>
                        </case>
                        <case>
                            <title nested="2">Print timeout message (optional)</title>
                            <description>The system will generate an error message if a PDF report times out. Any optional message entered here will replace the system error message if the report times out.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Report Server</title>
                    <cases>
                        <case>
                            <title nested="2">Disable</title>
                            <description>Specify if the Report Server (used for printing PDF Reports in Web Applications) should be disabled. By default (in V12 and above) a 4 core Report Server is automatically enabled. (To license a Report Server that uses more than 4 cores, contact Alpha Software).</description>
                        </case>
                        <case>
                            <title nested="2">Use For HTML Reports</title>
                            <description>Offload HTML reports to the report server. This option should be used under conditions where your HTML reports are very large or complex.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Web-socket Applications</title>
                    <cases>
                        <case>
                            <title nested="2">Enable web-socket application</title>
                            <description>Specify if web-socket applications are enabled.</description>
                        </case>
                        <case>
                            <title nested="2">Web-socket server port</title>
                            <description>Specify the port that the web-socket server runs on. This must be a different port than the Alpha Anywhere server</description>
                        </case>
                    </cases>
                </section>
            </sections>
        </group>
        <group>
            <title>Design-time Properties</title>
            <sections>
                <section>
                    <title>Automatic Backups</title>
                    <cases>
                        <case>
                            <title nested="2">Backup folder</title>
                            <description>When you edit your Components an automatic backup is created. If you leave this property blank, the backups are stored in a subfolder in your web project. You can specify a folder where you would like the backups to be stored.</description>
                        </case>
                        <case build="5581">
                            <title nested="2">Delete old backups</title>
                            <description>
                                <p>If enabled, allows you to configure when backup files should be cleaned up.</p>
                                <p>When you edit a component (i.e. Grid, UX, etc.) a backup copy is automatically made. The folder where the backups are stored can become quite large over time. You can specify that backups more than a certain number of days old should be purged. When purging old backups you can also specify the maximum number of backups to retain and the minimum number of backups to retain.</p>
                            </description>
                        </case>
                        <case build="5581">
                            <title nested="2">Number of days</title>
                            <description>
                                <p>The number of days to keep a backup. If the backup is older than the specified number of days, it will be automatically deleted unless the number of existing backups is less than the specified *[ui:Minimum number of backups]*. Leave this value blank to keep all backups.</p>
                                <p>This property is only available when *[ui:Delete old backups]* has been enabled.</p>
                            </description>
                        </case>
                        <case build="5581">
                            <title nested="2">Maximum number of backups</title>
                            <description>
                                <p>The maximum number of backup files to keep. Leave blank to specify no limit.</p>
                                <p>This property is only available when *[ui:Delete old backups]* has been enabled.</p>
                            </description>
                        </case>
                        <case build="5581">
                            <title nested="2">Minimum number of backups</title>
                            <description>
                                <p>The minimum number of backups to retain. When deleting old backup files, you can use this property to guarantee that a number of backups are retained. Leave blank to set the minimum to 1.</p>
                                <p>This property is only available when *[ui:Delete old backups]* has been enabled.</p>
                            </description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Create AEX for Live Preview</title>
                    <cases>
                        <case>
                            <title nested="2">Auto-create AEX for Live Preview</title>
                            <description>When doing a Live Preview from a component builder, should all functions and classes defined in the Code tab of the Control Panel be compiled into an AEX file and automatically be published to the LivePreview folder? If you components do not reference any global UDFs, then this property can be turned off.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Live Preview</title>
                    <cases>
                        <case>
                            <title nested="2">Prompt to start server for Live Preview</title>
                            <description>When you select Live Preview while working in a Component Builder, if the server is not started, Alpha Anywhere will prompt if you want to start the server. In some cases you might have a server started in another Alpha Anywhere instance, so it would not be necessary to start the server in the current Alpha Anywhere instance. If you check this property, the prompt to start the server will be suppressed.</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>A5_Application.A5I File</title>
                    <cases>
                        <case>
                            <title nested="2">Encrypt connection strings</title>
                            <description>Specify if connection strings in the a5_application.a5i file should be encrypted. Encryption is recommended. Turn encryption off if you are trying to debug a connection problem and want to see what connection strings are getting published.</description>
                        </case>
                    </cases>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <link link="Using the Stripe API From Xbasic">Stripe Genie...</link>
        <link link="api a5helper writetoauditinglog function">a5Helper_writeToAuditingLog()</link>
        <link link="api a5helper getauditinfofromsqlstatement function">a5Helper_getAuditInfoFromSQLStatement()</link>
        <link link="alpha%20anywhere%20alternative%20login%20-%20authentication%20and%20authorization%20using%20social%20network%20credentials">Alternative Login</link>
        <link link="api%20a5w%20save%20to%20web%20app%20repository%20function">a5w_SaveToWebAppRepository Function</link>
        <link link="api%20a5w%20get%20frm%20web%20app%20repository%20function">a5w_GetFromWebAppRepository Function</link>
        <link link="api%20a5w%20enumerate%20web%20app%20repository%20function">a5w_enumerateWebAppRepository Function</link>
        <link link="uxadhocsqlquerybuilder template">UX_Ad_Hoc_SQL_QueryBuilder UX template</link>
        <link href="/images/tools/ellipsesButton.png">...</link>
    </links>
</page>