<page build="0">
    <shortlink>tf onsubmit userfield</shortlink>
    <topic parent="TransForm onSubmit Event Builder" parentType="guide" elementName="Set Values in 'User' Fields">TransForm onSubmit Event: Set Values in 'User' Fields</topic>
    <description>
        <p>Sets the value of the submitted Form's 'User' or 'Userlabel' fields.</p>
    </description>
    <discussion>
        <p>The *[ui:Set Values in 'User' Fields]* action can be used to set the value in one or more of the submitted Form's 'User' or 'Userlabel' fields. The 'User' and 'Userlabel' fields are top-level Form fields stored with the Form's metadata that can be used to quickly query the Forms in a TransForm account. There are five User fields (user1, user2, user3, user4, user5) and five Userlabel fields (userlabel1, userlabel2, userlabel3, userlabel4, userlabel5). These fields can be populated with Form data using this action.</p>
    </discussion>
    <sections>
        <section>
            <title>Configuring the Send SMS Message Action</title>
            <figure>
                <title>The Set Values in 'User' Fields Action Editor</title>
                <alt>The Set Values in 'User' Fields Action Editor</alt>
                <link>images/setUserFields1.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The following properties are used to configure the *[ui:Set Values in 'User' Fields]* action.</p>
            </description>
        </section>
        <section>
            <cases>
                <case>
                    <title nested="2">General Properties</title>
                    <list>
                        <item>
                            <name-title>Property</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>TransForm Form Name</name>
                            <description>The Form Type for which the 'user' or 'userlabel' fields should be set.</description>
                        </item>
                        <item>
                            <name>Condition</name>
                            <description>
                                <p>Determines when the onSubmit action should be run.</p>
                                <p>Your code must set the value of a variable called *[js:result]* to *[js:true]* or *[js:false]*. For example:</p>
                                <p>
                                    <example code="js" caption="Setting the result variable"><![CDATA[var result =  true;]]></example>
                                </p>
                                <p>If *[js:true]*, the 'user' or 'userlabel' fields will be set. If *[js:false]*, the fields are not set. The next example demonstrates setting the fields only when the metadata *[status]* field is set to 'closed':</p>
                                <p>
                                    <example code="js" caption="Checking the metadata status field to determine if '
                                    user' or 'userlabel' fields should be set"><![CDATA[if (metadata.status.toLowerCase() == 'closed') {
    var result = true;
} else {
    var result = false;
}]]></example>
                                </p>
                                <p>The code you define for the *[ui:Condition]* can reference data in the submitted Form using the *[js:formdata]* and *[js:metadata]* variables.</p>
                                <p>
                                    <list>
                                        <item>
                                            <name-title>Prefix</name-title>
                                            <description-title>Description</description-title>
                                        </item>
                                        <item>
                                            <name>*[js:formdata]*</name>
                                            <description>A JavaScript object that contains the Form data submitted. You can use the *[ui:Insert TransForm form field]* tool to insert a Form data field into your code if you have loaded sample Form data.</description>
                                        </item>
                                        <item>
                                            <name>*[js:metadata]*</name>
                                            <description>
                                                <p>A JavaScript object that contains the meta data for the submitted Form. You can use the *[ui:Insert TransForm form field]* tool to insert one of the following metadata variables into your code if you have loaded sample Form data:</p>
                                            </description>
                                            <list>
                                                <item>
                                                    <name>*[js:accountid]*</name>
                                                    <description>The TransForm account ID associated with the Form.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:formid]*</name>
                                                    <description>The Form Type ID of the Form.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:forminstanceid]*</name>
                                                    <description>The unique instance ID of the Form.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:status]*</name>
                                                    <description>The current status of the Form.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:person]*</name>
                                                    <description>The User ID of the person assigned the Form instance.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:created]*</name>
                                                    <description>The date/time the Form was created.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:completed]*</name>
                                                    <description>The date/time when the Form's status was last changed.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:timestamp]*</name>
                                                    <description>The date/time of when the Form was last inserted or updated in the server database.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:comments]*</name>
                                                    <description>The representation of the JSON for the comments associated with the Form instance.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:nofiller]*</name>
                                                    <description>Whether or not the Form should be downloaded to the filler application.</description>
                                                </item>
                                                <item>
                                                    <name>*[js:duedate]*</name>
                                                    <description>The value of the field in a Form instance that may be used to specify a date. It will either be blank or contain a date formatted as "yyyy-mm-dd". For example, "2024-04-16".</description>
                                                </item>
                                                <item>
                                                    <name>*[js:user1]*, *[js:user2]*, *[js:user3]*, *[js:user4]*, *[js:user5]*, *[js:userlabel1]*, *[js:userlabel2]*, *[js:userlabel3]*, *[js:userlabel4]*, *[js:userlabel5]*</name>
                                                    <description>The value of the extra fields in a Form instance reserved for use by the TransForm account's administrator.</description>
                                                </item>
                                            </list>
                                        </item>
                                    </list>
                                </p>
                            </description>
                        </item>
                    </list>
                </case>
                <case>
                    <title nested="2">'User' fields</title>
                    <list>
                        <item>
                            <name-title>Property</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>'User1', 'User2', 'User3', 'User4', 'User5'</name>
                            <description>
                                <p>JavaScript that specifies what value to set in the *[ui:User*]* (*[ui:User1]*, *[ui:User2]*, *[ui:User3]*, *[ui:User4]*, or *[ui:User5]*) Form field. Your code must set the value of a variable called *[js:result]* to value to set in the *[ui:User*]* field. For example:</p>
                                <p>
                                    <example code="js"><![CDATA[var result = "My Value";]]></example>
                                </p>
                                <p>The code you define for the *[ui:User*]* property can reference data in the submitted Form using the *[js:formdata]* and *[js:metadata]* variables. For example:</p>
                                <p>
                                    <example code="js"><![CDATA[if(metadata.status.toLowerCase() == 'closed') {
    var result = formdata.field1
} else { 
    var result = formdata.field2
}]]></example>
                                </p>
                                <p>See *[ui:Condition]* above for more information about the *[ui:formdata]* and *[ui:metadata]* objects.</p>
                            </description>
                        </item>
                    </list>
                </case>
                <case>
                    <title nested="2">'User label' fields</title>
                    <list>
                        <item>
                            <name-title>Property</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>'Userlabel1', 'Userlabel2', 'Userlabel3', 'Userlabel4', 'Userlabel5'</name>
                            <description>
                                <p>JavaScript that specifies what value to set in the *[ui:Userlabel*]* (*[ui:Userlabel1]*, *[ui:Userlabel2]*, *[ui:Userlabel3]*, *[ui:Userlabel4]*, or *[ui:Userlabel5]*) Form field. Your code must set the value of a variable called *[js:result]* to value to set in the *[ui:Userlabel*]* field. For example:</p>
                                <p>
                                    <example code="js"><![CDATA[var result = "My Value";]]></example>
                                </p>
                                <p>The code you define for the *[ui:Userlabel*]* property can reference data in the submitted Form using the *[js:formdata]* and *[js:metadata]* variables. For example:</p>
                                <p>
                                    <example code="js"><![CDATA[if(metadata.status.toLowerCase() == 'closed') {
    var result = formdata.field1
} else { 
    var result = formdata.field2
}]]></example>
                                </p>
                                <p>See *[ui:Condition]* above for more information about the *[ui:formdata]* and *[ui:metadata]* objects.</p>
                            </description>
                        </item>
                    </list>
                </case>
            </cases>
        </section>
    </sections>
</page>