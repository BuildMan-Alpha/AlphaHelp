<page build="5364">
    <shortlink>transform reports</shortlink>
    <topic>Reporting with TransForm</topic>
    <description>
        <p>Build reports using Alpha Anywhere's banded Report Writer for your TransForm data.</p>
    </description>
    <discussion>
        <p>TransForm is a first-class data source for reports in Alpha Anywhere.</p>
        <p>The data in a TransForm form can be quite complex. For example, you may have multiple one-to-many relationships in the data (these are nested arrays in the JSON data) and each child may in turn have its own children (i.e. parent-child-grandchild relationships).</p>
        <p>Data in this form is not suitable for the report writer, which needs a "flat" table of records. Therefore, when the data are retrieved from a TransForm form, it is "flattened" (search in documentation for [json_flatten()] for a description of what "flattening" means)</p>
    </discussion>
    <sections>
        <section>
            <description>
                <p>When you create a new report, the menu includes &lt;TransForm&gt; as an option.</p>
            </description>
            <figure>
                <link>images/transform_reports.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>If you select the &lt;TransForm&gt; option, a dialog where you can configure the data source is shown:</p>
            </description>
            <figure>
                <link>images/transformreportsconfigure.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Properties of note in the dialog include:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Property</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>API key</name>
                            <description>You must specify an API key that has sufficient permissions to retrieve data from your TransForm account.</description>
                        </item>
                        <item>
                            <name>FormID</name>
                            <description>The form id of the form you wish to retrieve data from.</description>
                        </item>
                        <item>
                            <name>All fields?</name>
                            <description>You can specify a subset of the fields in the form to retrieve.</description>
                        </item>
                        <item>
                            <name>Arguments</name>
                            <description>You can specify arguments that can be used in the filters that are applied to the data that are retrieved. The benefit of using arguments is that you can set the value of the arguments at run-time.</description>
                        </item>
                    </list>
                </p>
                <p>You can filter on meta data fields. The meta data fields are different than the actual form data. The meta data fields include the id of the person who submitted the form, the form status, the timestamp (time on the server when the form was submitted) and the Forminstanceid (the primary key for the form instance)</p>
                <p>You can filter on the following meta data fields:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Metadata Field</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>Person</name>
                            <description>The userid of the person who submitted the form.</description>
                        </item>
                        <item>
                            <name>Status</name>
                            <description>The form status.</description>
                        </item>
                        <item>
                            <name>Timestamp</name>
                            <description>The server time when the form was submitted (different from the time on the user's device).</description>
                        </item>
                        <item>
                            <name>FormInstanceId</name>
                            <description>The primary key of the form instance.</description>
                        </item>
                    </list>
                </p>
                <p>For the Person, Status and FormInstanceId properties, you can enter a comma delimited list of values, or you can use arguments. For example, you might set the Person filter to: :name_of_person</p>
                <p>You can also filter and sort on the actual data in the form.</p>
                <p>
                    <list>
                        <item>
                            <name-title>Expression</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>Filter</name>
                            <description>A filter expression using simple SQL syntax that allows you to retrieve forms with data in the form fields. All form data when the query is performed is character data.</description>
                        </item>
                        <item>
                            <name>Order</name>
                            <description>An order expression using SQL syntax that allows you to order the data based on data in form fields.</description>
                        </item>
                    </list>
                </p>
            </description>
        </section>
        <section>
            <title>Field Data Type Overrides</title>
            <description>
                <p>By default, all data that is retrieved from TransForm is character data. You might want to explicitly change certain fields to be other types so that the report writer can do calculations and summaries with the data. For example, the form might have a field called Quantity which you would like to convert to a numeric field. The Overrides property allows you to set data type overrides.</p>
                <p>Photo fields are an exception. Alpha Anywhere automatically sets photo fields to Image File Reference fields (so that the report writer will recognize these fields as images). You do not need to define overrides for photo fields.</p>
                <p>You will need to define overrides for signature fields (use the *[ui:Ink]* data type).</p>
            </description>
        </section>
    </sections>
    <links>
        <link link="json_flatten function">json_flatten()</link>
    </links>
    <see>
        <ref link="Reports">Reports</ref>
    </see>
</page>