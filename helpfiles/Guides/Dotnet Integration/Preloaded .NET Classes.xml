<page>
    <shortlink>server Preloaded dotNET Classes</shortlink>
    <topic>Preloaded .NET Classes</topic>
    <description>The following .NET assemblies are loaded automatically, and all exported types are registered under either the System or Microsoft namespace. Click on any of the links to see the Microsoft documentation for the namespace that corresponds most closely with each assembly. See the [full list of preloaded .NET Classes] for more detail, and use the listed class names as search terms for the documentation at *[extlink:http://msdn.microsoft.com]*.</description>
    <sections>
        <section>
            <description>
                <p>In addition to checking the full list of preloaded .NET Classes, you can determine whether a given class you would like to use is preloaded simply by DIMming the class in the Alpha Anywhere interactive window. If it is not preloaded, then you can register it yourself using the RegisterClass Method.</p>
                <p>mscorlib (The most common classes in the System and Microsoft namespaces)</p>
                <p>PresentationCore (*[extlink:WPF@http://msdn.microsoft.com/en-us/library/ms754130.aspx]*, *[extlink:Windows.Media@http://msdn.microsoft.com/en-us/library/system.windows.media.aspx]*, etc.)</p>
            </description>
        </section>
        <section>
            <list bullet="true">
                <item>
                    <name>*[extlink:System@http://msdn.microsoft.com/en-us/library/system.aspx]*</name>
                </item>
                <item>
                    <name>System.Core (More common classes in the System and Microsoft namespaces)</name>
                </item>
                <item>
                    <name>*[extlink:System.Data@http://msdn.microsoft.com/en-us/library/gg145028.aspx]*</name>
                </item>
                <item>
                    <name>*[extlink:System.Data.DataSetExtensions@http://msdn.microsoft.com/en-us/library/gg145028.aspx]*</name>
                </item>
                <item>
                    <name>*[extlink:System.Net@http://msdn.microsoft.com/en-us/library/gg145039.aspx]*</name>
                </item>
                <item>
                    <name>*[extlink:System.Web@http://msdn.microsoft.com/en-us/library/gg145018.aspx]*</name>
                </item>
                <item>
                    <name>*[extlink:System.Xaml (and System.Windows.Markup)@http://msdn.microsoft.com/en-us/library/gg145048.aspx]*</name>
                </item>
                <item>
                    <name>*[extlink:System.XML@http://msdn.microsoft.com/en-us/library/gg145036.aspx]*</name>
                </item>
                <item>
                    <name>*[extlink:System.XML.Linq@http://msdn.microsoft.com/en-us/library/system.xml.linq.aspx]*</name>
                </item>
                <item>
                    <name>windowsbase (Basic wrappers for Windows APIs)</name>
                </item>
            </list>
        </section>
        <section>
            <description>You can DIM preloaded classes without registering them, for example:</description>
            <example><![CDATA[dim s as System::Text::Stringbuilder]]></example>
        </section>
        <section>
            <description>
                <p>At this point all the methods and properties of the *[extlink:System.Text.Stringbuilder class@http://msdn.microsoft.com/en-us/library/system.text.stringbuilder.aspx]* are instantiated and belong to the variable s.</p>
                <p>You can also call preloaded static methods without even DIMming them, for example</p>
            </description>
            <example><![CDATA[System::GC::Collect()]]></example>
        </section>
    </sections>
    <see>
        <ref link="full list of preloaded dotnet classes">Full List of Preloaded .NET Classes</ref>
    </see>
</page>