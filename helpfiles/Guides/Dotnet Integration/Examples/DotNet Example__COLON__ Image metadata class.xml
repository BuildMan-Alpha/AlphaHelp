<page>
    <shortlink>server DotNet Example Image metadata class</shortlink>
    <topic>DotNet Example: Image metadata class</topic>
    <description>
        When writing an Xbasic function that uses the .NET Framework, you always have the option of writing or using a custom .NET class that gives you a simplified interface compared to using the .NET Framework classes directly. In [DotNet Example: Image metadata function] we tackled the problem of extracting EXIF metadata from a JPEG file using the .NET Framework classes directly. In this article we'll use a freely available .NET library, *[extlink:Exifacto@http://code.google.com/p/exifacto/]*.
    </description>
    <sections>
        <section>
            <description>
                <p>It is interesting to note that while [DotNet Example: Image metadata function] used the *[extlink:System.Windows.Media.Imaging namespace@http://msdn.microsoft.com/en-us/library/system.windows.media.imaging.aspx]* (WPF), *[extlink:Exifacto@http://code.google.com/p/exifacto/]* uses the *[extlink:System.Drawing.Imaging namespace@http://msdn.microsoft.com/en-us/library/system.drawing.imaging.aspx]* (Windows Forms). Windows Presentation Foundation and the older Windows Forms system have a large amount of duplication, so this is not really too surprising.</p>
                <p>The following script assumes that you have either checked out the project from googlecode.com using Subversion as described in the project pages, or [downloaded the DLL].</p>
            </description>
            <example>
                <![CDATA[dim sv as dotnet::services
dim assy as dotnet::assemblyreference
 
'edit the path to the DLL in the next line
assy.FileName = "C:\path\to\Exifacto.dll" 
sv.RegisterAssembly("exif",assy)
 
'edit the path to the image in the next line
filename="C:\full\path\to\image\file"
 
ex = new exif::Exifacto::exifdata(filename)
 
CameraMake=ex.CameraMake
CameraModel=ex.CameraModel
Copyright=ex.Copyright
DateTimeOriginal=ex.DateTimeOriginal
ImageDescription=ex.ImageDescription
Orientation=ex.Orientation.value__
ExposureProgram=ex.ExposureProgram.value__
Software=ex.Software
 
'show selected properties
exif_data = filename + \
    crlf()+"Camera: "+CameraMake+" "+CameraModel+" taken "+DateTimeOriginal+ \
    crlf()+"Description: "+ImageDescription+crlf()+"Copyright: "+Copyright+ \
    crlf()+"Orientation: "+Orientation+" ExposureProgram: "+ExposureProgram+ \
    crlf()+"Software: "+Software

ui_msg_box("exif",exif_data)
 
showvar(ex) 'show all properties]]>
            </example>
        </section>
    </sections>
    <links>
        <link link="server DotNet Example Image metadata function">DotNet Example: Image metadata function</link>
        <link href="components/Exifacto.zip">downloaded the DLL</link>
    </links>
    <see>
        <ref link="api namespace dotnet namespace">Xbasic DotNet Namespace</ref>
        <ref link="server DotNet Example Image metadata function">DotNet Example: Image metadata function</ref>
    </see>
</page>