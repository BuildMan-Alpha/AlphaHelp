<page>
 <topic>UX Component - Buttons - How to Programmatically Enable and Disable Buttons</topic>
 <description>In V12 all buttons on the UX component are 'Adanced Buttons'. (In V11 buttons could either be 'standard' or 'advanced'). Advanced buttons are implemented as Javascript objects and so in order to enable or disable them programmatically, you need to get a pointer to the object and then call the object's .setDisabled() method.</description>
<sections>
    <section>
     
      <note>All Javascript controls, not just buttons, in the UX (List, ButtonList, SpinList, Tree, etc.) support the .setDisabled() method.</note>
    </section>
    <section>
        <description>For example:
</description>
        <example><![CDATA[var bObj = {dialog.object}.getControl('BUTTON_1');
//set the button disabled
bObj.setDisabled(true);
//now enable the button
bObj.setDiabled(false);]]></example>
        
    </section>
    <section>
        <description>If the button is in a Repeating Section, and you want to call the .setDisabled() method for a specific button instance (say the button in row 3), then you can pass in an optional parameter to the .setDisabled() method. For example:
</description>
        <example><![CDATA[//get a pointer the button element in row 3
var eles = $('{dialog.componentname}.V.R1.BUTTON_2_A5INSTANCE3');
//pass in eles as an optional argument to the .setDisabled() method
{dialog.object}.getControl('BUTTON_2').setDisabled(true,eles);]]></example>
        <note>In the above example, if you did not pass in the optional second argument to the .setDisabled() method, the button in every row of the Repeating Section would have been disabled.</note>
    </section>
    
    
    
</sections>



</page>