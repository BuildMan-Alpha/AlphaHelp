<page>
    <shortlink>UX Properties Style name</shortlink>
    <topic>Style name</topic>
<description>Click the button to select a new style, or edit the existing style. You can also use 
    <![CDATA[<ProjectStyle> or <Session:varname>]]>
</description>  
  
<sections>
    <section>
        <figure><link>images/sn.png</link></figure>
        
    </section>
    
    
    <section>
        <description>The 'Style name' property in the UX Builder is the same as the [Grid Component's 'Style name' property]. 
Existing styles are mostly defined using CSS. The 'Alpha' style is built using SASS, a scripting
 language that outputs code which looks like CSS and that is parsed as such. In the top right corner of the 
 Select Style dialog the Location menu lets you set where the CSS styles for your UX components are stored.


        </description>
         <figure><link>images/sn2.png</link></figure>
    </section>
    
<section>
<description>'Local' styles are stored in the same folder as a web project and can only be seen by components
in that project. In contrast, 'Global' files are stored in a folder that contains all of the web
 projects in the current open Alpha Anywhere Workspace (.abd file).
  Components in any web project inside the current workspace can see global styles. The Select Style dialog
</description>
        
    </section>
    
    <section>
        <description>With the 'System' option, the styles are stored in a CSS folder contained in the executable folder. During publishing 
this CSS is sent from the executable folder to a root folder that outputs the final stylized controls. 
Every web project you create has access to System styles. You can edit some, though not all, of the system files 
using the 'Customize style colors and fonts' property on the UX Properties page.</description>
        
    </section>
  <section>
      <description></description>
      
      
  </section>
    <section>
      <description>Once you have selected a style you can assign [sub-themes] based on that style to individual controls. 
          This can be done by setting the sub-theme property in a highlighted control's properties list on the UX Controls page. 
          You can also define custom sub-themes by taking the javascript that calls the CSS classes for 
          the sub-theme for a given control and creating a new sub-theme name and new CSS class names. This can 
          be done using the [Local sub-theme definitions - Javascript] and the [Local sub-theme definitions - CSS] 
          properties.
          
      </description>
  </section>
  
  
  
</sections>
  <links>
      <link link="style name">Grid Component's 'Style name' property</link>
      <link link="subthemes in alpha">sub-themes</link>
      <link link="ux properties local subtheme definitions javascript">Local sub-theme definitions - Javascript</link>
      <link link="ux properties local subtheme definitions css">Local sub-theme definitions - CSS</link>
  </links>
  
</page>