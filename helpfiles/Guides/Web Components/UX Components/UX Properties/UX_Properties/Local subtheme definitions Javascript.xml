<page>
    <shortlink>UX Properties Local subtheme definitions Javascript</shortlink>
    <topic>Local sub-theme definitions - Javascript</topic>
<description>Define the Javascript for any locally defined sub-themes. Sub-themes are used to create custom 
    appearance of certain control types such as windows, buttons, tabs, accordions, sliders. switches, etc.
</description>  
  
<sections>
    <section>
        <description>Sub-themes are just what their name implies, variations on a larger theme. The larger theme 
            in this case is the Style name of a component, for example 'iOS7', 'Alpha', or 'MobBlue'. This
            main theme can be set using the [Style name] property on the UX Properties page. 
            Once a style has been choosen, the sub-theme property for a given javascript-based control can
             be used to alter the appearance of that control. 
        
           
        </description>
        
    </section>
    <section>
        <description> You can change a control's sub-theme by clicking on the sub-theme property in the control's properties list, on the UX Controls page, 
            and selecting the desired sub-theme from a menu. Most styles have multiple existing sub-theme options that 
            are available for most controls. If you add a button control to a component using the iOS7 style,
             for instance, you will then be able to select a 'base', 'confirm', 'deny', 'left', or 'right' sub-theme for that button. 
            This will change the appearance of the button while still maintaining the overall look and feel of the iOS7 style. 
            </description>
        
    </section>
    <section>
        <description>You can also define your own sub-themes. Doing this requires defining both the javascript and css for the sub-theme. 
            The javascript definition can be created in the 'Local sub-theme definitions - Javascript' property's code editor. 
            The javascript itself can be pulled from an existing style, using the hyperlinks in the editor, 
            and copied and pasted into the editor. The names of any new custom CSS classes that you want to add, as part of the 
            sub-theme, should be included in the javascript code. These CSS classes can then be defined using the
             '[Local sub-theme definitions - CSS' property]'. For a video explanation on how this is done, watch this two-part 
             video: [Part 1], [Part 2]. Or read the guide below.
        </description>
        
        
    </section>
    
    
    
    
</sections>
  <links>
      <link link="ux properties style name">Style name</link>
      <link link="ux properties local subtheme definitions css">Local sub-theme definitions - CSS' property</link>
      <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_understanding_subthemes_1.swf">Part 1</link>
      <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_understanding_subthemes_2.swf">Part 2</link>
      
      
  </links>
  
</page>