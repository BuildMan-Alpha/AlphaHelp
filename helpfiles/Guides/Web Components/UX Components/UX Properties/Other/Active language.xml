<page>
    <shortlink>UX Properties Active language</shortlink>
    <topic>Active language</topic>
    <description><![CDATA[Specify the active language to use for translating strings tagged with 
        <a5:r>...</a5:r> or <a5:t>...</a5:t> tags. Setting the property here is useful for testing purposes. 
        In a real application you can set the 'session._protected_activeLanguage' variable to specify the 
        active language. To select the default language, enter <Default> or leave this property blank.
    ]]></description>
 
<groups>
    <group>
        <sections>
            <section>
                <figure><title>A dropdown to select the active language in a component</title><link>images/lang.png</link></figure>
            </section>
        </sections>
    </group>
<group>
 <title>Create a Drop-Down that Sets the Active Language in a Component</title>
 <sections>
     <section>
         <description>A common feature on a number of websites and applications is to have a dropdown 
             list where the user can select the language that information is displayed in. This example 
             will show how to do this.
         </description>
         
     </section>
        <section>
         <title>Create a Text Dictionary Table</title>
         
         <steps>
             <step>
                 <description>In the Web Projects Control Panel click on the Project Properties button in the panel toolbar.</description>
                 <figure><link>images/ctd.png</link></figure>
             </step>
             <step>
                 <description>Scroll down to and expand the 'Text Dictionary Table Settings' section. Click on the [...] button next to the Connection string property.</description>
                 <figure><link>images/ctd2.png</link></figure>
             </step>
             <step>
                 <description>Set the Table Type to SQL</description>
                 <figure><link>images/ctd3.png</link></figure>
             </step>
             <step>
                 <description>Click the [...] button next to the 'Connection string' property and form a connection string to the Northwind database.</description>
                 <figure><link>images/ctd4.png</link></figure>
             </step>
             <step>
                 <description>Type the name of the Table you wish to create in the 'Table name' property, in this can 'Language Dictionary'. As this is a new table you can simply 
                     type the table name into the textbox next to this property.
                 </description>
                 <figure><link>images/ctd5.png</link></figure>
             </step>
             <step>
                 <description>Click the 'Create Text Dictionary Table' button at the bottom of the 'Define Text Dictionary Table' dialog. A message should be displayed 
                     stating that the table was created. Click OK and OK again.</description>
                 <figure><link>images/ctd.png</link></figure>
             </step>

         </steps>
         
     </section>
     
     <section>
         <title>Create Controls that use Text Dictionary Tags from the Table</title>
         
         <steps>
             <step>
                 <description>Create a new UX Component. In the UX Builder on the UX Controls page open the 'Data Controls' 
                     menu. Click on the TextBox option to add a textbox control to the component. 
                     Give the text box control the name and label 'name'.
                 </description>
                 <figure><link>images/cc.png</link></figure>
             </step>
<step>
                 <description>Go back to the 'Data Controls' menu and click on the [TextArea] option to add a 
                     text area control to the component. Give this control the name and label of 'input'
                 </description>
                 <figure><link>images/cc2.png</link></figure>
             </step>
             <step>
                 <description>Open the 'Other Controls' menu and click on [Button] to add a button control to your component. </description>
                 <figure><link>images/cc3.png</link></figure>
             </step>
             <step>
                 <description>Highlight the button control. In the properties list on the right change the 'Button text' property 
                     to read 'submit'. 
                 </description>
                 <figure><link>images/cc4.png</link></figure>
             </step>
           
             
         </steps>
         
     </section>
      <section>
          <title>Add the Text Dictionary Tags</title>
          <steps>
                <step>
                 <description>In the UX Controls page click the 'Menu' dropdown in the toolbar to open the 
                     Additional Options Menu. Select the 'Internationalization Helper Utilities' option.
                 </description>
                 <figure><link>images/ihu.png</link></figure>
             </step>
             <step>
                 <description>In the helper dialog click the 'Select Option' button, choose 'Control Labels', and then 
                     click 'Add Text Dictionary tags to all control Labels'.
                 </description>
                 <figure><link>images/ihu2.png</link></figure>
             </step>
             <step>
                 <description><![CDATA[The control labels you defined should appear with <a5:t></a5:t> tags around them. 
                     Click the 'Execute Code' button. 
                 ]]></description>
                 <figure><link>images/ihu3.png</link></figure>
             </step>
           
               <step>
                 <description>Click the 'Select Option' button again, choose the 'Button Controls' option, and click 
                     add Text Dictionary tags to all control Labels'.
                 </description>
                 <figure><link>images/ihu4.png</link></figure>
             </step>
              <step>
                 <description>Click the 'Execute Code' button and close the 'Internationalization Helper Utilities' dialog.</description>
                 <figure><link>images/ihu5.png</link></figure>
             </step>
             
             
              
          </steps>
          
          
          
      </section>
      <section>
          <title>Add Language Definitions to Each Tag</title>
          <steps>
               <step>
                 <description>In the UX Builder on the UX Properties page scroll down to the 'Other' properties section. 
                     Click the [...] button next to the 'Text dictionary tags' property.
                 </description>
                 <figure><link>images/ald.png</link></figure>
             </step>
              <step>
                 <description>In the 'Text Dictionary Tags Used in this Component' list highlight the 'Name' tag. </description>
                 <figure><link>images/ald2.png</link></figure>
             </step>
               <step>
                 <description>Click the 'Create New Text Dictionary Entry' button define the language as 'English'</description>
                 <figure><link>images/ald3.png</link></figure>
             </step>
              <step>
                 <description>Enter some text into the 'Enter Text' dialog to define the value of the name control for the English language. 
                     Type something like the following and click OK
                 </description>
                 <example><![CDATA[Enter your name.]]></example>
                 <figure><link>images/ald4.png</link></figure>
             </step>
               <step>
                 <description>Click the 'Create New Text Dictionary Entry' button a second time. 
                     Enter the name of a second language entry that you want to define. Here we will put 'Japanese'</description>
                 <figure><link>images/ald5.png</link></figure>
             </step>
              <step>
                 <description>Define some text for the second language and click OK. This can be cut and pasted from some other 
                     text; for example, from [Google Translate].
                 </description>
                 <figure><link>images/ald6.png</link></figure>
             </step>
               <step>
                 <description>Click the 'Create New Text Dictionary Entry' button a third time. Add a third 
                     language to the 'name' tag, like French.
                 </description>
                 <figure><link>images/ald7.png</link></figure>
             </step>
              <step>
                 <description>Define the text for the third language.</description>
                 <figure><link>images/ald8.png</link></figure>
             </step>
             <step>
                 <description>Highlight the 'Input' tag in the Text Dictionary Tags Used in this component list. </description>
                 <figure><link>images/ald9.png</link></figure>
             </step>
             <step>
                 <description>Add the English, Japanese, and French languages to the 'Input' tag, defining new text for each language in the same way 
                     as you did for the name tag.</description>
           <figure><link>images/ald10.png</link></figure>
             </step>
             <step>
                 <description>Do the same for the 'submit' tag.</description>
                 <figure><link>images/ald11.png</link></figure>
             </step>
             
          </steps>

      </section>
      

     <section>
         <title>Create a Dropdown List With Options</title>
         <steps>
              <step>
                 <description>On the UX Controls page open the 'Data Controls' menu. Click on the [DropdownBox] 
                     option to add a drop-down control to the component. Give it the name and label 'language'.
                 </description>
                 <figure><link>images/cdl.png</link></figure>
             </step>
             <step>
                 <description>Highlight the drop-down box in the controls tree. In the properties list 
                     on the right click the [...] button next to the 'Choices' property in the 
                     DropDownBox Properties section.
                 </description>
                 <figure><link>images/cdl2.png</link></figure>
             </step>
            <step>
                 <description>Select the 'Choices are: Static' radio button.</description>
                 <figure><link>images/cdl3.png</link></figure>
             </step>
            <step>
                 <description>For the Static Choices definition list the language options that 
                     are present in the text dictionary you defined. Then click OK
                 </description>
                 <example><![CDATA[English
French
Japanese]]></example>
                 <figure><link>images/cdl4.png</link></figure>
             </step>
          
         </steps>
     </section>
     <section>
         <title>Use an Ajax Callback to Make the Dropdown Set the Active Language</title>
         
         <steps>
             
             <step>
                 <description>Highlight the dropdown box you defined on the UX Controls page's controls tree . 
                     In the properties list on the right scroll down the the 'Javascript' section. Click the [...] 
                     button next to the 'onChange' property.</description>
                 <figure><link>images/ac.png</link></figure>
             </step>
             <step>
                 <description>From the possible editing mode options select the 'Action Javascript' radio button. 
                     Click the 'Add New Action' button.
                 </description>
                 <figure><link>images/ac2.png</link></figure>
             </step>
             <step>
                 <description>Type 'ajax' into the 'Filter list' textbox control and select the 'Ajax Callback' 
                     action in the 'Actions' list. Click OK.
                 </description>
                 <figure><link>images/ac3.png</link></figure>
             </step>
             <step>
                 <description>In the Ajax Callback's properties list that opens set the 'Callback type' property 
                     to 'InternalXbasicFunction'.
                 </description>
                 <figure><link>images/ac4.png</link></figure>
             </step>
             <step>
                 <description>In the Ajax Callback section set the 'Function name' property to be 'xbGetLang'. In the 
                     following steps we will define this function. Click OK and Save.
                 </description>
                 <figure><link>images/ac5.png</link></figure>
             </step>
             <step>
                 <description>Open the 'Code Xbasic functions' page from the main menu and define the xbGetLang function as follows.</description>
         <example><![CDATA[function xbGetLang as c (e as p)
'Return a Javascript command
session.__protected__activeLanguage = e.rv.V.R1.LANGUAGE
xbGetLang = "window.location.reload(true);"
end function]]></example>

 <figure><link>images/ac6.png</link></figure>
 
 
<note>Here 'e' stands for 'event', 'rv' for run-time variable, r1 for 'row 1', and 'LANGUAGE' is the variable that points 
    to the 'language' field in the SQL table that you can create in Alpha Anywhere for text dicitonary tags. If you will remember. 
    this table has three fields: key, language, and data.</note>

             </step>
             
               <step>
                 <description>Run the component in Live Preview. Click the dropdown to change the active language.
                 </description>
                 <figure><link>images/ac7.png</link></figure>
             </step>
               <step>
                 <description>The language should change, make another selection...</description>
                 <figure><link>images/ac8.png</link></figure>
             </step>
               <step>
                 <description>Result:</description>
                 <figure><link>images/ac9.png</link></figure>
             </step>
             
             
             
         </steps>
     </section>
     
 </sections>
 
</group>
</groups>
 <links>
     <link href="https://translate.google.com/">Google Translate</link>
 </links>
 
 
</page>