<page>
    <shortlink>ux properties xbasic aex files</shortlink>
    <topic>Xbasic .aex files</topic>
    <description><![CDATA[Specify a comma delimited list of .aex files. These files contain compiled 
        Xbasic functions that can be used in any of the server-side event handlers.
    ]]>
    </description>
 
 
 <sections>
     <section>
         <note>You do not have to list .aex files here if you have specified the .aex files in the Project Properties 
             dialog. Concerning the 'Aex files property', if you specify .aex files here they will be automatically 
             added to the 'Aex files' property in the Project Properties. The Project Properties dialog is opened 
             from the toolbar of the Web Projects Control Panel.
         </note>
     </section>
     <section>
         <description>An .aex file is a library of functions. It lets you take all of the global functions that you have defined in a project 
             and put them into a single file, with the file extension .aex. 
             This enables you to use these functions in the Xbasic handlers of your components. These files are useful 
             if you have code that exists outside of a component that you want to include with that component when the component is published. 
             Otherwise, if you publish a component that requires certain function definitions that are not defined inside the scope of that 
             component, then the published application will not know where to find these functions and that part of the component might fail. 
         </description>

     </section>
     <section>
         <description>Before 'projects' or the 'Web Project Control Panel' existed in Alpha Anywhere, aex libraries were 
             usually loaded by hand, by using a load function. This approach presented some problems, though, particularly 
             with caching issues that happened during publishing. If an aex file had already been published with a component, this data was 
             then cached. This cached data would sometimes override any new function definitions that were added to an aex file, thus making it difficult 
             to publish updates to a component. This problem was eventually dealt with when creating a connection to aex files became something that was 
             done using a property setting, like the 'Xbasic aex files' property shown here; rather than by typing in some lines of code. 
             Internally, Alpha Anywhere makes use of a temporary folder and a fair amount of coding in order to get around caching issues, leaving less work for developers. 
             Using the property settings to add aex files is therefore highly recommended.</description>
     </section>
     <section>
         <description>The ability to automatically to include aex libraries using a property setting was added to Alpha Anywhere
             after the idea of 'projects' and the 'Web Project Control Panel' were fully implemented. You can add aex files at either the component
              or project level. To add aex files to a UX component you fill out the name of the aex file that you wish to include using this, 
              the 'Xbasic aex files', property. If you want to use an aex library with multiple components you can define the aex file(s) you wish to connect 
              to in the 'Aex files' section of the 'Web Project Properties'. Both of these methods are described below. If you define 
              a connection to an aex file at the project level, there is no need to define it at the component level as well; as the aex file information 
              in the project properties section will be published with the component.</description>
         
     </section>
     <section>
       <title>Defining Functions to Add to an .aex File</title>
         <steps>
             
             <step>
                 <description>From the Web Project Control Panel click the 'Interactive Window' button.</description>
                 <figure><link>images/xaf.png</link></figure>
             </step>
              <step>
                 <description>Click the 'New Function' button, the 'f()' icon in the Code Editor toolbar.</description>
                 <figure><link>images/xaf2.png</link></figure>
             </step>
               <step>
                 <description>Name the new function 'showDateTime' and click OK.</description>
                 <figure><link>images/xaf3.png</link></figure>
             </step>
              <step>
                 <description>Back in the Code Editor, define the new function as follows:</description>
                 <figure><link>images/xaf4.png</link></figure>
                 <example><![CDATA[function showDateTime as c ()
showDateTime = "<b>Current</b> date and time is: " + now()
end function]]></example>
             </step>
              <step>
                 <description>Click 'Save'</description>
                 <figure><link>images/xaf5.png</link></figure>
             </step>
              <step>
                 <description>To make sure the function works open the 'Interactive' pane a type '?showDateTime()', then hit the Enter key. The date and time should be displayed</description>
             <example><![CDATA[?showDateTime()]]></example>
                  <figure><link>images/xaf6.png</link></figure>
             </step>
            
             
             
         </steps>
         
         
         
     </section>
     <section>
         
         <steps>
             
               <step>
                 <description></description>
                 <figure><link></link></figure>
             </step>
              <step>
                 <description></description>
                 <figure><link></link></figure>
             </step>
              <step>
                 <description></description>
                 <figure><link></link></figure>
             </step>
              <step>
                 <description></description>
                 <figure><link></link></figure>
             </step>
             
             
             
         </steps>
         
         
     </section>
     
     
 </sections>
</page>