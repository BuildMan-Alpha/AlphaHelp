<page>
    <shortlink>ux container editor type create an editor with a dynamic dropdown box</shortlink>
    <topic>Create an Editor with a Dynamic Dropdown Box</topic>
    <description>You can use an editor to create a dynamic drop down box. The dropdown box can be called by multiple fields inside a form view,
         such as a 'State' and a 'City' field. It can then use javascript to filter the values of the one field based on the value of the other. 
    </description>
 
    
    <sections>
       <section>
           <title>Create a Simple List Control</title>
           <steps>
               <step>
                   <description>In the UX Builder on the UX Controls page, open the 'Data Controls' menu. Click on the [List] option to 
                       add a list control to the component.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Highlight the list control in the controls tree. In the properties list on the right click on the 
                       'List properties' property in the 'List Properties' section. The list builder will open.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>On the list builder's 'Data Source' pane set the 'Data Source Type' to 'Static'.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Click the [...] button next to the 'Static data' property.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Click the 'Sample data' hyperlink in the lower left-hand corner of the 'Static Choices' dialog .</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Select the 'Name and addresses' data set from among the 'Sample Data' options and click OK and OK again.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Open the 'List Layout' pane. Highlight the 'Firstname', 'Lastname', 'City', and 'State' fields in the 
                       'Available Fields' list. Use the blue > arrow icon to move the fields to the 'Columns in List' section. Click OK 
                       to close the list builder.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
               
           </steps>
           
           
           
       </section>
       
     
       
       
         <section>
           <title>Define JSON data to Filter</title>
           <steps>
               <step>
                   <description>In the UX Builder's main menu, open the 'Events' section and then the 'Client-side' page. </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>In the Client-Side Events list highlight the 'onRenderComplete' event. To quickly locate this event 
                       type 'render' into the filter underneath the list.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>Add the following JSON to the 'onRenderComplete' event definition.</description>
                   <example><![CDATA[{dialog.object}._cities = [
  {
     "City": "Boston",
     "State": "MA"
  },
  {
     "City": "Cambridge",
     "State": "MA"
  },   
  {
     "City": "New York",
     "State": "NY"
  },   
  {
     "City": "Los Angeles",
     "State": "CA"
  },   
  {
     "City": "Chicago",
     "State": "IL"
  },   
  {
     "City": "Springfield",
     "State": "IL"
  },   
  {
     "City": "Boulder",
     "State": "CO"
  },   
  {
     "City": "Ithaca",
     "State": "NY"
  }
];]]></example>
                   <figure><link>images/dd.png</link></figure>
               </step>
                
               
               
               
           </steps>
           
           
           
       </section>
       
         <section>
           <title>Define Javascript Functions</title>
           <steps>
               <step>
                   <description>In the UX Builders main menu open the 'Code' section and click on the 
                       'Javascript functions' page to open it. Define a getStates() function and 
                       getCities function using the following code:
                   </description>
                   <example><![CDATA[function getStates() {
   var _d = {dialog.object}._cities;
   var s = [];
   for(var i = 0; i < _d.length; i++) {
      if(s.indexOf(_d[i].State) < 0) {
         s.push(_d[i].State);
      }
   }

   s = s.sort();

   return s; 
};

function getCities(state) {
    var _d = {dialog.object}._cities;
    var c = [];
    for(var i = 0; i < _d.length; i++) {
       if(_d[i].State == state) {
           if(c.indexOf(_d[i].City) < 0) {
               c.push(_d[i].City);
           }
       }
    }
    c = c.sort();
    return c;

};]]></example>
                   <figure><link>images/dd.png</link></figure>
               </step>
             
               
               
           </steps>
           
           
           
       </section>
           <section>
           <title>Create Two Editors in an EditorSet</title>
           <steps>
               <step>
                   <description>Open the UX Controls page again and open the 'Containers' menu. 
                       Click on the [Container] option.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                  <step>
                   <description>From the 'Container Type' list select the 'EditorSet' option and 
                       click 'Insert After'. 
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>In the controls tree, highlight the opening tag of the EditorSet container. 
                       Open the 'Defined Controls' menu and select the 'Editor-TextBox' option. An initial editor
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Highlight the ending tag for the Editor-TextBox container,"Editor End:EDITOR_1]". 
                       In the Defined Conrols menu click on the 'Editor-TextBox' option a second time
                       
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>In the controls tree highlight the [TextBox] control inside the second editor that you just defined.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
               <step>
                   <description>In the properties list on the right click the [...] button next to the 
                       'Control type' property.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>In the 'Select Control Type' dialog choose 'DropDownBox' from the list and click OK.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                  <step>
                   <description>Highlight the opening tag of the second editor container, "{Editor: EDITOR_2]"</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                  <step>
                   <description>Click the [...] button next to the "Set value in editor" property. </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                  <step>
                   <description>Add the following code to the 'Set value in editor' definition.</description>
                   <example><![CDATA[if(settings['fieldName'] == 'State') {
     var choices = getStates();
} 

else if(settings['fieldName'] == 'City') {
    var state = settings.formView.data.State;
     choices = getCities(state);
}

if(typeof choices != 'undefined') {
    {dialog.object}.populateDropdownBox('EDITOR_2_TXTBOX',choices,true);
}



{dialog.object}.setValue('EDITOR_2_TXTBOX',value);]]></example>
                   <figure><link>images/dd.png</link></figure>
                   
                   
                   
                   <note>In the video the state variable is set to 'settings.data.State'. Due to changes in Alpha Anywhere this 
                       should now read 'var state = settings.formView.data.State;'.
                   </note>
               </step>
                  <step>
                   <description></description>
                   <figure><link>images/dd.png</link></figure>
               </step>
               
           </steps>
           
           
           
       </section>
       
         <section>
           <title>Create the Form View Control</title>
           <steps>
               <step>
                   <description>On the UX Controls page highlight the list control in the controls tree and open the 'Other Controls' menu.
                        Select the [Form View] option to add a form view control under the list control.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Highlight the form view control in the controls tree. In the properties list click 
                       on the [...] button next to the 'Form properties' property.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>On the Form Builder's 'Data Source' pane. Click the dropdown button 
                       next to the 'Datasource type' property. Select 'List'.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Click the [...] button next to the 'List name' property. Select the list that was defined in 
                       the first section of this guide, "list 1".
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>Open the fields pane. Highlight the Firstname field. In the properties list on the 
                       right click the [...] button next to the 'Editor set' property.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>In the 'Editor Set' list select 'EDITORSET_1'. In the 'Editor' list select 
                       EDITOR_1, the textbox editor. Click the 'Assign selection to multiple fields' hyperlink.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>Highlight the 'Firstname' and 'Lastname' fields in the 'Select Multiple Fields' 
                       dialog and click OK.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
          
                <step>
                   <description>Highlight the 'City' field. Click the [...] button next to the 
                       'Editor set' property.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                      <step>
                   <description>Set the 'Editor Set' to be 'EDITORSET_1' and the 'Editor' to EDITOR_2. Click the 
                       'Assign selection to multiple fields' hyperlink.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>Highlight the 'City' and the 'State' fields and click OK.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Click the [...] button next to the 'User defined editor and template settings' 
                       property in the Editor Settings section.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Click the 'Add setting' property button at the bottom of the User Defined Editor and Template 
                       Settings: Field - 'City' dialog
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>In the Setting dialog make the 'Setting name' to read 'fieldName'. Set the 'Value' 
                       to read 'City'. Click OK and OK again.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Highlight the 'State' field in the 'Fields in Data Source' list.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                 <step>
                   <description>Click the [...] button next to the 'User defined editor and template settings' 
                       property in the Editor Settings section.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Click the 'Add setting' button again. </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Give the setting the 'Setting name' of 'fieldName'. Set the value to read 'State'. 
                       Click OK and OK again.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                <step>
                   <description>Open the 'Form Layout' pane. Click the 'Add item' button at the bottom of the pane.</description>
                   <figure><link>images/dd.png</link></figure>
               </step>
               
                  <step>
                   <description>In the 'Select Control Type' dialog highlight the 'Data Controls' option in the 'Category' list, the [Label] 
                       option in the 'Control' list, and then highlight all of the fields on the right. Click OK and 
                       OK again to close the Form View Builder.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                  <step>
                   <description>Run the component in Live Preview. Click on the 'State' field and select a state from 
                       the dropdown.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
                  <step>
                   <description>Save the selected state. Click the 'City' field in the FormView. You should see a dropdown 
                       that only displays cities in the selected State.
                   </description>
                   <figure><link>images/dd.png</link></figure>
               </step>
               
           </steps>
           
           
           
       </section>
       
       
    </sections>
    
    
    
  
    
    
    <links>
       <link link="http://www.ajaxvideotutorials.com/V12Videos/ux_formview_dropdownbox_cascading_1.swf">Part 1</link>
         <link link="http://www.ajaxvideotutorials.com/V12Videos/ux_formview_dropdownbox_cascading_2.swf">Part 2</link>
    </links>
    
    <see>
        <ref link="ux container editorset container type">Editor Set</ref>
        <ref link="ux container editor properties">Editor Properties</ref>
          <ref link="ux form view control index">Form View Control</ref>
    
    </see>
    <terms>container,formview control</terms>
</page>