<page>
   
    <topic>Synchronize a UX Component with an Embedded UX Component</topic>
    <description></description>
   
<sections>
    <section>
        <description>For a video explanation of this subject watch this two part video: [Part 1], [Part 2].</description>
        
    </section>
    <section>
        <title>Creating a Child UX With Arguments</title>
        <description>This section will focus on creating the Component to be embedded in a parent UX Component. 
            A defined 'Argument' in the embedded component will be used to synchronize it with the parent.
        </description>
        <steps>
            <step>
                <description>In the UX Builder on the UX Controls page. Open the 'Data Controls' menu and click on [List] to add a list control to the component.
                </description>
                <figure><link>images/child.png</link></figure>
            </step>
      
             <step>
                <description>In the properties list click on the [...] button next to the 'List properties' property in the List Properties section.
                </description>
                <figure><link>images/child2.png</link></figure>
            </step>
             <step>
                <description>In the List Builder's Data Source pane set the 'Data Source Type' to be SQL.</description>
                <figure><link>images/child3.png</link></figure>
            </step>
             <step>
                <description>Set the 'Connection string' property in the SQL Data Source section to be the 'Northwind' database.</description>
                <figure><link>images/child4.png</link></figure>
            </step>
             <step>
                <description>Set the 'Table name' property to the 'Orders' table.</description>
                <figure><link>images/child5.png</link></figure>
            </step>
             <step>
                <description>Click the [...] button next to 'Field list' property. Select the OrderID, CustomerID, 
                    EmployeeID, and OrderDate fields.
                </description>
                <figure><link>images/child6.png</link></figure>
            </step>
             <step>
                <description>Click on the [...] button next to the 'Arguments' property in the Arguments section. </description>
                <figure><link>images/child7.png</link></figure>
            </step>
            <step>
                <description>Click the 'Insert New Argument' button. Create a new argument named 'whatcustomerId'.</description>
                <figure><link>images/child8.png</link></figure>
            </step>
              <step>
                <description>Set the 'Value' property to be alfki. This references the CustomerId field. 
                    You will need to type this isto the property textbox. Click OK.</description>
                <figure><link>images/child9.png</link></figure>
            </step>
            
            
             <step>
                <description>Click the [...] button next to the 'Filter' property in the SQL Data Source section..</description>
                <figure><link>images/child10.png</link></figure>
            </step>
             <step>
                <description>In the 'Target Fields' list double click on the 'CustomerID' field to add it to the filter.</description>
                <figure><link>images/child11.png</link></figure>
            </step>
             <step>
                <description>Click the '=' button. </description>
                <figure><link>images/child12.png</link></figure>
            </step>
             <step>
                <description>Click on the 'Insert Argument' button. Select the 'whatcustomerId' argument. Click OK</description>
                <figure><link>images/child13.png</link></figure>
            </step>
             <step>
                <description>Open the 'List Layout' pane. Use the blue > arrow to move the OrderID, CustomerID, 
                    EmployeeID, and OrderDate fields from the Available Fields list to the Columns in List. Click OK to close the List Builder.</description>
                <figure><link>images/child14.png</link></figure>
            </step>
             <step>
                <description>Open the 'Data Controls' menu. Click the [TextBox] option to add a text box control underneath the list control.</description>
                <figure><link>images/child15.png</link></figure>
            </step>
             <step>
                <description>Highlight the textbox control. In the properties list on the right find the 'Default value' property under the 
                    Field Properties section. Set this to the following:
                </description>
                <example><![CDATA[=:whatcustomerId]]></example>
                <figure><link>images/child16.png</link></figure>
            </step> <step>
                <description>Save the component as 'child_ux' and run it in Live Preview. You should only see 'ALFKI' 
                    displayed in the CustomerId field. Close the component.
                </description>
                <figure><link>images/child17.png</link></figure>
            </step> 
            
        </steps>
        
    </section>
    
    
    
    
    <section>
        <title>Embed the Child UX Component in a Parent Component</title>
        
        <steps>
            <step>
                <description>From the Web Projects Control Panel create a new blank  UX component.</description>
                <figure><link>images/embed.png</link></figure>
            </step>
              <step>
                <description>Open the 'Other Control' menu and click on the [Embedded Object] control.</description>
                <figure><link>images/embed2.png</link></figure>
            </step>
              <step>
                <description>From the Object Name list select 'child_ux' and click OK</description>
                <figure><link>images/embed3.png</link></figure>
            </step>
              <step>
                <description>Save the component as 'parent_ux'</description>
                <figure><link>images/embed4.png</link></figure>
            </step>
              <step>
                <description>Run the component in Live Preview, you should see the child ux displayed.</description>
                <figure><link>images/embed5.png</link></figure>
            </step>
              <step>
                <description>Return to the Design tab.</description>
                <figure><link>images/embed6.png</link></figure>
            </step>

        </steps>
        
    </section>
    
    
    
    <section>
        <title>Synchronize the Child List Control with the Parent.</title>
        <steps>
              <step>
                <description>In the 'parent_ux' component's UX Controls page open the 'Data Controls' menu. Click on 
                    the [DropdownBox] option to add a dropdown box to the component. Use the blue up arrow in the toolbar to position 
                    the dropbox above the embedded object.
                </description>
                <figure><link>images/synch.png</link></figure>
            </step>
               <step>
                <description>Highlight the Embedded Object. </description>
                <figure><link>images/synch2.png</link></figure>
            </step>
              
               <step>
                <description>Open the Containers menu and click on [Frame]. 
                    Select 'Insert Around' to place the Frame around the Embedded Object control.</description>
                <figure><link>images/synch3.png</link></figure>
            </step>
              
   
                <step>
                <description>Highlight the Embedded Object. In the properties list's Component Definition section set the 'Component alias' property 
                    to be 'UXCHILD'
                </description>
                <figure><link>images/synch4.png</link></figure>
            </step>
      
 
             <step>
                <description>Click on the [...] button next to the 'Argument bindings' property, also in the Component Definitions section.</description>
                <figure><link>images/synch5.png</link></figure>
            </step>
             <step>
                <description>Highlight 'whatcustomerId' and click the 'Set Argument Value' button.</description>
                <figure><link>images/synch6.png</link></figure>
            </step>
             <step>
                <description>Click 'Insert Fields Placeholder'. Set the argument value to be the drop-down box you defined, dropdownbox1. Click OK and OK again.</description>
                <figure><link>images/synch7.png</link></figure>
            </step>
             <step>
                <description>Highlight the dropdown box control.</description>
                <figure><link>images/synch8.png</link></figure>
            </step>
             <step>
                <description>In the properties list under 'DropDownBox' Properties click the [...] button next to 
                    the 'Choices' property.
                </description>
                <figure><link>images/synch9.png</link></figure>
            </step>
              <step>
                <description>Select 'Dynamic'.</description>
                 <figure><link>images/synch10.png</link></figure>
            </step>
             <step>
                <description>In the Define Choices dialog go to the 'Data Source' section. Set the Data source type to 'AlphaDAO'.</description>
                <figure><link>images/synch10.png</link></figure>
            </step>
          
             <step>
                <description>Set the 'AlphaDAO Connection string name' property to be the 'Northwind' database.</description>
                <figure><link>images/synch11.png</link></figure>
            </step>
             <step>
                <description>Click the [...] button next to the 'AlphaDAO SQL SELECT statement property.</description>
                <figure><link>images/synch12.png</link></figure>
            </step>
             <step>
                <description>In the SQL Select dialog click the 'Select' button and set the Table to be 'Orders'.</description>
                <figure><link>images/synch13.png</link></figure>
            </step>
             <step>
                <description>From the 'Field to display' dropdown select 'CustomerID'. Click OK and OK again to close the Choices dialog.</description>
                <figure><link>images/synch14.png</link></figure>
            </step>
             <step>
                <description>Scroll down the drop-down box's properties list to the 'Javascript' section. Click the [...] button next 
                    to the 'onChange' property.
                </description>
                <figure><link>images/synch15.png</link></figure>
            </step>
             <step>
                <description>Click the 'Add New Action' button.</description>
                <figure><link>images/synch16.png</link></figure>
            </step>
             <step>
                <description>In the Categories list of the 'Select an Action' dialog choose 'UX Component'.</description>
                <figure><link>images/synch17.png</link></figure>
            </step>
               <step>
                <description>Scroll down to the bottom of the Actions list and click on 'Refresh/synchronize embedded UX component. Click OK</description>
                <figure><link>images/synch18.png</link></figure>
            </step>
               <step>
                <description>This action should show an 'Embedded UX Component' property. From the dropdown for this property select 'UXCHILD'. Click OK.</description>
                <figure><link>images/synch19.png</link></figure>
            </step>
               <step>
                <description>Save the new action.</description>
                <figure><link>images/synch20.png</link></figure>
            </step>
               <step>
                <description>Run the parent_ux component in Live Preview. </description>
                <figure><link>images/synch21.png</link></figure>
            </step>
               <step>
                <description>Whenever the Dropdownbox is updated you should see the child_ux respond by updating 
                    the list control. The Child textbox control, however, is not yet synchronized.</description>
                <figure><link>images/synch22.png</link></figure>
            </step>
              
        </steps>
        
    </section>
    <section>
        <title>Synchronizing the Child's Textbox control.</title>
        <steps>
            <step>
                <description></description>
                <figure><link></link></figure>
            </step>
            
            
            
        </steps>
        
    </section>
    
</sections>




<links>
    <link href="http://www.ajaxvideotutorials.com/V12Videos/UX_embedded_refresh_1.swf">Part 1</link>
     <link href="http://www.ajaxvideotutorials.com/V12Videos/UX_embedded_refresh_2.swf">Part 2</link>
    <link href="images/open.png">...</link>
</links>

</page>