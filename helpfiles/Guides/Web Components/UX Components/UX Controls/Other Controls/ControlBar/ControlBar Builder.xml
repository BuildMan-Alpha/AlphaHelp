<page>
<topic>ControlBar Builder</topic>
<description>The ControlBar Builder is used to define a ControlBar control. </description>

<groups>
	<group>
		<title>Introduction</title>
		
	
<sections>
<section>
	<title>Finding the ControlBar Builder</title>
	<steps>
		<step>
			<description>In the UX Builder on the Controls page open the 'Other Controls' menu and click on 
				the [ControlBar] option to add a ControlBar control to the UX.
			</description>
			<figure><link>images/cb2.png</link></figure>
		</step>
		<step>
			<description>Highlight the ControlBar control in the tree. In the properties list under 'ControlBar Properties' 
				click on the ControlBar properties property. Alternatively double click on the [ControlBar] control itself.
			</description>
			<figure><link>images/cb3.png</link></figure>
		</step>
		<step>
			<description>The ControlBar builder will open.</description>
			<figure><link>images/cb4.png</link></figure>
		</step>
		
	</steps>
	
</section>	
	
	
<section>
	<title>ControlBar Panes</title>
<description>The ControlBar Builder contains the following panes.</description>
<list>
	<item>
		<name>Home</name>
		<description>Gives a general overview of the ControlBar builder</description>
	</item>
	<item>
		<name>Data</name>
		<description>The data pane is used to define ControlBar data.</description>
	</item>
	<item>
		<name>Items</name>
		<description>The Items pane allows developers to define items such as buttons, button-lists, and button-toggles.</description>
	</item>
	<item>
		<name>Actions</name>
		<description>The Actions pane allows you to define 'actions', i.e. bits of javascript, that are tied to items. </description>
	</item>
	<item>
		<name>Properties</name>
		<description>The 'Properties' pane contains a number of settings. Among these are settings to define Javascript events 
			for the ControlBar, specify animation times, and set docking preferences.
		</description>
	</item>
	<item>
		<name>ControlBar Layout</name>
		<description>This pane is where the visual appearance of the ControlBar is defined.</description>
	</item>
	<item>
		<name>Disclosures</name>
		<description>Optional. This pane defines disclosures. Disclosures are similar to pop-up windows.</description>
	</item>
	<item>
		<name>CSS</name>
		<description>Optional. The CSS pane can be used to define custom CSS to use with the ControlBar.</description>
	</item>
	<item>
		<name>Javascript</name>
		<description>Optional. The Javascript pane can be used to used by the ControlBar.</description>
	</item>
	
	
</list>
</section>



</sections>
</group>



<group>
	<title>Data</title>
	<sections>
		<section>
			<title>Adding Data</title>
			<steps>
				<step>
					<description>In the Control Bar Builder open the Data pane</description>
					<figure><link>images/cb5.png</link></figure>
				</step>
				<step>
					<description>Click the 'Add Data Item' button.</description>
					<figure><link>images/cb6.png</link></figure>
				</step>
				<step>
					<description>A dialog named 'Setting' will open. In the 'Setting name' textbox give the item a name, like 'setting1'.</description>
					<figure><link>images/cb7.png</link></figure>
				</step>
				<step>
					<description>In the 'Value' text area give the named item a value. Click OK</description>
					<figure><link>images/cb8.png</link></figure>
					<note>The value can be in the form of a string, a JSON object, or a function that returns a value. </note>
				</step>
				<step>
					<description>The new value should appear in the Data pane.</description>
					<figure><link>images/cb9.png</link></figure>
				</step>
				
				
			</steps>
			
		</section>
		
		
		<section>
			<title>Defining Data</title>
			<description>The Data pane allows you to define ControlBar data. 
You can define as many data items as you want. Each data time has a unique name and a value.
The value can be a string, a JSON object, or a function that returns a value.
For example
</description>
			<example><![CDATA[setting1 = 'value of setting 1'
setting2 = {address: '123 main st.', city: 'boston'}
]]></example>
		</section>
		<section>
<description>In the second example the data item's value is a JSON object.
	 To refer to one of the properties in the object you use the full path. For example:</description>			
<example><![CDATA[setting2.city]]></example>			
		</section>
		<section>
<description>The primary purpose (although by no means their only purpose) is to provide content to be displayed on the ControlBar, or to be used in Enable/Disable expressions for controls that are placed on the ControlBar.
For example, you might have an HTML ControlBar item whose html text is set to:
</description>			
<example><![CDATA[{setting1}]]></example>			
		</section>
		<section>
<description><p>A powerful option when defining Data items is to specify that the value of the data item should be updated automatically when a 'watch' event fires. When you define a watch event you can specify which controls you want to watch. For example, if you specify that you want to watch the FIRSTNAME and LASTNAME controls, then whenever the value in one of these controls changes, the watch event will fire.
</p><p>Watch events also fire when the state of the UX changes. For example, when the UX goes from a 'clean' state to a 'dirty' state.
</p><p>You can also manually fire watch events using this method:</p>
</description>			
			<example><![CDATA[{dialog.Object}.refreshClientSideComputations([flagSynchronous]);]]></example>
			
		</section>
		<section>
			<description>To specify that a data item should be updated automatically when a 'watch' event fires, click the checkbox on the above dialog. The dialog will change to this:</description>
			<figure><link>images/</link></figure>
		</section>
		
		<section>
			<description>You can specify which controls you want to watch. You can leave this blank if you only want the watch event to fire when the UX state changes or when watch events are manually fired.
You can also specify the initial value of the data item. This is the value that the data item will have before the watch event fires the first time.
In the Javascript section you define the code that runs when the watch event fires. Your code must return a value. This is the value that the data item will be set to.

</description>
<note>Your code can reference special 'system' fields  (such as dialog.isDirty). The full list of available system fields can be seen by clicking on the 'Insert Field' button.</note>			
		</section>
		
	</sections>
	
</group>
<group>
	<title>Items</title>
	<sections>
		
		
		<section>
			<title>Defining Items</title>
			<description>The Items pane is where you define the ControlBar's items. Items are the 'objects' that you place on the ControlBar layouts. There several different types of ControlBar items.
				 These are: html, button, button-toggle, button-list and button-disclosure.</description>
			
	</section>
	<section>
					<title>HTML ControlBar Item</title>
					
					
	</section>
	<section>
					<title>Button ControlBar Item </title>
					<description>The standard display types for a button are available. These are:</description>
					<cases>
						<case>
							<description>Text only</description>
						</case>
						<case>
							<description>Image only</description>
						</case>
						<case>
							<description>Text followed by Image</description>
						</case>
						<case>
							<description>Image followed by text</description>
						</case>
						<case>
							<description>Image above text</description>
						</case>
						<case>
							<description>Text above image</description>
						</case>
						
					</cases>
					<note>For buttons that include text, the text is any HTML that you want. You can reference ControlBar data properties in the text. For example {data1}.
</note>
							
	</section>
	<section>
					<title>Button-Toggle ControlBar Item </title>
					<description>Button-toggle items can be defined as two-state, or multi-state. If two-state, then each click toggles between the button's true and false states. If multi-state, each click switches to the button's next state.</description>
						
	</section>
	<section>
					<title>Button-List ControlBar Item</title>
					<description>Here is the Data definition that would be automatically added to the ControlBar's data for the above button-list button definition:</description>
					<example><![CDATA["myButtonList": {
     "value": [],
     "data": [
         {"html": "Button1","icon": "svgIcon=#alpha-icon-calendarWeek:icon,24","value": "1"},
         {"html": "Button2","icon": "svgIcon=#alpha-icon-cart:icon,24","value": "2"},
         {"html": "Button3","icon": "svgIcon=#alpha-icon-chartBar:icon,24","value": "3"} 
     ]
 }]]></example>
			
			
		</section>
		<section>
			<description>If you prefer to add the above data structure to the ControlBar data yourself (on the Data tab of the builder), then you can point the button-list to use your hand-coded button-list definition by selecting the Point to existing definition in ControlBar data property in the builder.</description>
			
		</section>
		<section>
			<description>A common pattern when using a button-list on a ControlBar is to use icons for each button and spread out the buttons so that they fill the width of the screen, as shown in the image below (in a vertical ControlBar, the buttons would fill the height of the screen).</description>
			<figure><link>images/</link></figure>
		</section>
		<section>
			<description>To achieve this look the  Fill width property is checked.</description>
			<figure><link>images/cb12.png</link></figure>
		</section>
		<section>
			<title>Button-Disclosure ControlBar Item</title>
			<description>The Button-Disclosure item opens a disclosure when clicked. 
				In the images below, the 'hamburger' button at the left edge of the ControlBar has been defined as a disclosure button.</description>
			<figure><link>images/</link></figure>
		</section>
		<section>
			<description>When the button is clicked, the disclosure is shown (as shown in the image below).</description>
			<figure><link>images/</link></figure>
		</section>


	</sections>
	
	
	
	
</group>

<group>
	<title>Actions</title>
	<sections><section>
	<description>The Actions pane is where you define the ControlBar's actions. Actions are simply named snippets of Javascript. Once you have defined an action, you can assign the action to an event on a ControlBar item.</description>
	</section></sections>
</group>
<group>
	<title>Properties</title>
	<sections>
		<section>
			<description>The ControlBar builder allows you to set several properties as shown in the image below:</description>
		</section>
		
	</sections>
	
</group>
<group>
	<title>Layouts</title>
	<sections>
		<section>
			<description>The ControlBar Layout pane is where you design the visual appearance of the ControlBar. The Layout pane is shown in the image below.

A ControlBar can contain multiple layouts and you can dynamically select which Layout to use at run-time.

The ControlBar Layout pane also includes a preview of the Layout design. You can change the edge for the Layout so you can easily see how the Layout would render in either horizontal or vertical mode. You can also adjust the size of the Layout so you can easily see how (for example) the ControlBar would render on a Phone or a Tablet.

Each ControlBar Layout can have one or more 'Lines'. Each 'line' is divided into three sections: Before, Middle and After. You add ControlBar items to any of the sections on a Line.
</description>
			
		</section>
		<section>
			<title>Adding a Layout</title>
			<steps>
				<step>
					<description></description>
					<figure><link></link></figure>
				</step>
				
				
			</steps>
			
		</section>
	</sections>
	
</group>
<group>
	<title>Disclosures</title>
	<sections>
		<section>
			<description>Disclosures are like pop-up windows that are displayed when a disclosure-button is clicked. You can either specify some explicit HTML to be shown as the disclosure, you can specify that a ControlBar Layout should be shown.
The Disclosure pane in the ControlBar builder (shown in the image below) is used to define Disclosures that display explicitly defined HTML.
</description>
			
			
		</section>
		<section>
			<description>When you want to display standard UX controls (such as input controls, Lists, buttons, ViewBoxes, etc.) in a disclosure, you define a new disclosure on the Disclosure pane and then, when defining the HTML for the disclosure, you can add the contents of a InjectibleContent container to the disclosure. See below for more details.</description>
			
			
		</section>
		
		
		
	</sections>
	
</group>
<group>
	<title>Videos</title>
	<sections>
		<section>
			<title>Introduction to Basic Concepts</title>
			<description>This video demonstrates basic concepts of the ControlBar control.</description>
			<videos>
				<video>
					<name>Watch Video - Part 1</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbarIntro_1.swf</link>
				</video>
				<video>
					<name>Watch Video - Part 2</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbarIntro_2.swf</link>
				</video>
				
			</videos>
		</section>
		
		<section>
			<title>Updating ControlBar Data - Dynamic Text</title>
			<description>This video demonstrates how you can update the data in the ControlBar's data. This allows you to put dynamic text in the Controlbar. We also show how the ControlBar can be animated when it is refreshed.
</description>
			<videos>
				<video>
					<name>Watch Video - Part 1</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlBar_updateData_1.swf</link>
				</video>
				<video>
					<name>Watch Video - Part 2</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlBar_updateData_2.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<title>Using Watch Events to Update ControlBar Data</title>
			<description>The ControlBar data can be updated automatically in response to certain events in the UX (such as the UX going dirty, a List going dirty, etc.) or by a change in the value of one or more controls.
 In this video we show how you can configure watch events to automatically update ControlBar data.
</description>
			<videos>
				<video>
					<name>Watch Video</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_updatingdatausingawatchevent.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<title>Adding a Button to a ControlBar</title>
			<description>In this video we show how you can add a button to a ControlBar and then associate an action (i.e. some Javascript code) to run when the button is tapped.

</description>
			<videos>
				<video>
					<name>Watch Video</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_control_button.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<description><p>Click on this link to [download component 1].</p>
				<p>Date added: 2016-09-14</p>
				</description>
			
		</section>
		
		
		<section>
			<title>Adding a Button-Toggle to a ControlBar</title>
			<description>In this video we show how you can add a Button-Toggle to a ControlBar. 
				Toggle buttons can either be two-state (switching between a true and a false state), 
				or multi-state (each click advances to the next button state).
 The video shows how the state of a Button-Toggle is used to control what action a button performs when clicked.
</description>
			<videos>
				<video>
					<name>Watch Video</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_control_buttonToggle.swf</link>
				</video>
				
			</videos>
		</section>
			<section>
			<description>Click on this link to [download component 2].</description>
			
		</section>
		
		<section>
			<title>Adding a Button-List to a ControlBar</title>
			<description>A common pattern in mobile apps is to have a button bar at the bottom of the screen with a series of buttons that allow you to select the active Panel that is shown on the device. Typically, these buttons are spread out so that they fill the width of the screen. 
 The button-list control is ideal for implementing this pattern.

 In this video we show how a Button-List can be configured to fill the width of the screen and to select a Panel Card in a Panel Layout when one of the buttons in the Button-List is tapped.
</description>
			<videos>
				<video>
					<name>Watch Video - Part 1</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_buttonList_1.swf</link>
				</video>
				<video>
					<name>Watch Video - Part 2</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_buttonList_2.swf</link>
				</video>
				<video>
					<name>Watch Video - Part 3</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_buttonList_3.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<description>Click on this link to [download component 3].</description>
			
		</section>
		
		<section>
			<title>Selecting the Active ControlBar Layout</title>
			<description>A ControlBar can have multiple Layouts. In this video we show how you can dynamically select the Layout to show.
</description>
			<videos>
				<video>
					<name>Watch Video - Part 1</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_selectLayout_1.swf</link>
				</video>
				<video>
					<name>Watch Video - Part 2</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_selectLayout_2.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<description>Click on this link to [download component 4].</description>
			
		</section>
		
		<section>
			<title>Showing a Disclosure</title>
			<description>A disclosure can be some explicitly defined HTML, or it can be another Layout. In this video we show how a disclosure, defined as a ControlBar layout, is shown.
</description>
			<videos>
				<video>
					<name>Watch Video - Part 1</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_disclosure.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<description>Click on this link to [download component 5].</description>
			
		</section>
		
		<section>
			<description>Addendum: One of the more unusual disclosure types is Outside-After (and Outside-Before) which display the disclosure perpendicular to the parent Layout. In this video we show how the disclosure is rendered when the Outside-After type is selected.
</description>
			<videos>
				<video>
					<name>Watch Video - Part 2</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_disclosure_2.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<title>Showing a List in a Disclosure</title>
			<description>You can display standard UX controls (such as Lists, Buttons, Input controls, etc.) in a disclosure. In this video we show how a list is displayed in a disclosure.
</description>
			<videos>
				<video>
					<name>Watch Video - Part 1</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_injectibleList_1.swf</link>
				</video>
				<video>
					<name>Watch Video - Part 2</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_injectibleList_2.swf</link>
				</video>
				
			</videos>
		</section>
				<section>
			<description>Click on this link to [download component 6].</description>
			
		</section>
		<section>
			<title>Setting the Selected Button in a Button List using Javascript</title>
			<description>The selected button(s) in a ControlBar Button List can be set programmatically using Javascript. It is also possible to completely change the buttons shown in a Button List programmatically.
 In this video we show how this is done.</description>
			<videos>
				<video>
					<name>Watch Video</name>
					<link>http://www.ajaxvideotutorials.com/V12Videos/ux_controlbar_settingSelectedButtonInButtonListUsingJavascript.swf</link>
				</video>
				
			</videos>
		</section>
		<section>
			<description>Click on this link to [download component 7].</description>
			
		</section>
	</sections>
	
	
</group>



</groups>



<links>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/uxControlBar_button.zip ">download component 1</link>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/uxControlBar_buttonToggle.zip">download component 2</link>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/uxControlBar_buttonList.zip">download component 3</link>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/uxControlBar_selectingActiveLayout.zip">download component 4</link>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/uxControlBar_disclosure.zip">download component 5</link>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/uxControlBar_disclosureList.zip">download component 6</link>
	<link href="http://www.ajaxvideotutorials.com/V12Videos/buttonListControlBars_Automation.zip">download component 7</link>
	
	
</links>
</page>
