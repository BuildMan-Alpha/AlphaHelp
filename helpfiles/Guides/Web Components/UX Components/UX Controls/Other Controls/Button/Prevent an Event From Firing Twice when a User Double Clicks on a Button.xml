<page>
    <shortlink>ux controls other controls button control prevent double firing</shortlink>
  <topic>Prevent an Event From Firing Twice when a User Double Clicks on a Button.xml</topic>
  <description>Buttons are frequently tied to a javascript action, such as an Ajax callback, that fires when a user clicks 
    on the button. As users might accidentally click on a button more than once, it is desirable to avoid causing 
   any event bound to the button from firing twice.
  </description>
  
  <sections>
    <section>
      <description>You can add the following code to a button's onClick event in order to prevent multiple clicks from 
        causing the action tied to the onClick event from firing multiple times. The last line of code is the actual callback.
      </description>
      <example><![CDATA[if(typeof {dialog.object}._locked == 'undefined') {
     {dialog.object}._locked = true;
     setTimeout(function(){ delete {dialog.object}._locked },1000);
     {grid.Object}.ajaxCallback('G','{Grid.RowNumber}:all','foo','',''); 
}]]></example>
    </section>
    <section>
      <description>First the 'if' statement in this example looks to see if there is a variable 
        named '_locked' defined in the dialog object and if that variable exists. 
        If the variable does not exist, i.e. it is 'undefined', then the variable will be set to 'true'. 
        A setTimeout() function is then called to delete the variable in one second (1000 ms), an arbitrary interval. 
        After the setTimeout() function is called the Ajax callback is finally executed.
        When a user double clicks on the button the first click they make will be interpreted. In this case, 
        the variable, '_locked', will be 'undefined', the setTimeout() function will fire, and the callback will take place.
        When the second click is received, however, the variable will no longer be 'undefined', it will be 
        'ture', and so the callback will not take place. This process is also described in [this video].</description>
      
    </section>
    
    
    
    <section>
      
      
      
      <steps>
        <step>
          <description></description>
          
        </step>
        
      </steps>
      
      
    </section>
    
    
  </sections>
  
  
<links>
  <link href="http://www.ajaxvideotutorials.com/V11Videos/hyperlink_preventingADoubleCallbackOnDoubleClick.swf">this video</link>
  
  
</links>
    
    <see>
        <ref link="ux control properties other properties button properties">Button Properties</ref>
        <ref link="ux control properties other properties button appearance index">Button Appearance</ref>

    </see>
    
</page>