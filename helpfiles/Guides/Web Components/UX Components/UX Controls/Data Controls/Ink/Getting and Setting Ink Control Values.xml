<page>
    <shortlink>ux data controls ink control gettingssetting</shortlink>
    <topic>Getting an Setting Ink Control Values</topic>
    <description>The Ink Control is a 'Data Control' and the getValue() and 
        setValue() functions, that are used with other data controls, will also work with the Ink Control. 
        The data generated from any given image defined in the Ink Control is stored as simple text. This 
        makes ink files lightweight and easy to store.
    </description>
<sections>
    <section>
        <description>Using the getValue() and setValue() functions with an Ink control is described in 
            [this video] and in the guide below.
        </description>
        
    </section>
   <section>
       <title>Use the getValue() Function with an Ink Control</title>
       <steps>
           <step>
               <description>In the UX Builder on the UX Controls page open the 'Data Controls ' menu. 
                   Select the [Ink] option to add an ink control to the component. Leave the name 
                   of the ink control set to be 'ink1'.
               </description>
               <figure><link>images/gv2.png</link></figure>
           </step>
           <step>
               <description>Highlight the ink control in the controls tree. In the properties list 
                   on the right click the [...] button next to the 'Ink properties' property in the 
                   'Ink Properties' section.
               </description>
               <figure><link>images/gv3.png</link></figure>
           </step>
           <step>
               <description>In the 'Ink Control' dialog click the big 'Ink Control Genie...' button 
                   at the top of the dialog.
               </description>
              <figure><link>images/gv4.png</link></figure>
           </step>
           <step>
               <description>On the Ink Genie's 'Layout' page highlight the 'Note taking - default' 
                   option in the layout menu and click OK and OK again.
               </description>
               <figure><link>images/gv5.png</link></figure>
           </step>
           <step>
               <description>Open the 'Other Controls' menu and click on the [Button] option.</description>
              <figure><link>images/gv6.png</link></figure>
           </step>
           <step>
               <description>Highlight the button in the controls tree. In the properties list on the 
                   right set the 'Button text' property to read 'Get Value'.
               </description>
               <figure><link>images/gv7.png</link></figure>
           </step>
           <step>
               <description>Scroll down to the 'Javascript' section of the properties list. Click the 
                   [...] button next to the onClick property.
               </description>
              <figure><link>images/gv8.png</link></figure>
           </step>
           <step>
               <description>In the 'Edit onClick Event' dialog select the 'Text mode' radio button 
                   option in the 'Editing mode' menu. Add the following code to the onClick event 
                   definition and click the 'Save' button.
               </description>
               <example><![CDATA[var val = {dialog.object}.getValue('ink1');
var ele = $('div1');
ele.innerHTML = val;]]></example>
              <figure><link>images/gv9.png</link></figure>
           </step>
           <step>
               <description>In the 'Other Controls' menu on the left click on the [Static Text] 
                   option to add a static text control to the component.
               </description>
              <figure><link>images/gv10.png</link></figure>
           </step>
           <step>
               <description>Highlight the static text control in the controls tree. In the properties 
                   list set the 'Static text' property to be the following 'div' with an id of 'div1'. 
               </description>
               <example><![CDATA[<div id="div1"></div>]]></example>
               <figure><link>images/gv11.png</link></figure>
           </step>
           <step>
               <description>Run the component in Live Preview. If you draw something in the ink control 
                   and click the 'Get Value' button then nothing should happen. 
                   This is because the Ink control does not automatically 
                   commit values when an ink image is completed. Two methods of forcing the ink control 
                   to commit a value are described in the sections below.
               </description>
             <figure><link>images/gv12.png</link></figure>
           </step>
         
           
           
       </steps>
       
   </section>
   <title>Adjust Settings to Make the Ink Control Commit Values</title>
     <section>
       <steps>
           <step>
               <description>Highlight the ink control in the controls tree. In the properties list 
                   on the right click the [...] button next to the 'Ink properties' property to open the 
                   'Ink Control' dialog.
               </description>
              <figure><link>images/gv13.png</link></figure>
           </step>
             <step>
               <description>On the properties tab of the 'Ink Control' dialog check the 'Auto Commit' 
                   checkbox in the 'Ink Control' properties section.
               </description>
             <figure><link>images/gv14.png</link></figure>
           </step>
           <step>
               <description>Run the component again in Live Preview. Draw something on the Ink control 
                   and click the 'Get Value' button. The 
                   value of the ink control should be returned in text format.
               </description>
              <figure><link>images/gv15.png</link></figure>
           </step>
         
       </steps>
       
   </section>
      <section>
          <title>Make the Ink Control Commit Values Programatically</title>
       <steps>
             <step>
               <description>First make sure that the 'Auto Commit' checkbox in the 'Ink Control' dialog is turned 
                   off. 
               </description>
              <figure><link>images/gv16.png</link></figure>
           </step>
           <step>
               <description>On the UX Controls page highlight the 'Get Value' button control.</description>
               <figure><link>images/gv17.png</link></figure>
           </step>
            <step>
               <description>Scroll down the properties list to the Javascript section. Click 
                   the [...] button next to the 'onClick' property.
               </description>
             <figure><link>images/gv18.png</link></figure>
           </step>
            <step>
               <description>In the 'Edit onClick Event' dialog the 'Text mode' option should be highlighted. 
                   Add the following two lines of code above the existing onClick definition
               </description>
               <example><![CDATA[var iObj = {dialog.object}.getControl('ink1');
iObj.commit();]]></example>
           <figure><link>images/gv19.png</link></figure>
           </step>
             <step>
               <description>The entire 'Edit onClick Event' should now look like the following. Click 'Save'</description>
               <example><![CDATA[var iObj = {dialog.object}.getControl('ink1');
iObj.commit();

var val = {dialog.object}.getValue('ink1');
var ele = $('div1');
ele.innerHTML = val;]]></example>
               <figure><link>images/gv20.png</link></figure>
           </step>
         <step>
             <description>Run the component in Live Preview. Draw something in the ink control and 
                 click the 'Get Value' button. You should see the value of the drawing displayed in text format.
             </description>
             <figure><link>images/gv21.png</link></figure>
         </step>
          
       </steps>
   </section>
   
</sections>



<links>
    <link href="https://www.viddler.com/v/53ba2ed">this video</link>
    
    
</links>


<see>
    <ref link="ink properties">Ink Properties</ref>
    <ref link="ux data control properties ink builder">Ink Builder</ref>
</see>

</page>