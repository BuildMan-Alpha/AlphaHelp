<page>
    <shortlink>ux data controls switch control</shortlink>
    <topic>Switch</topic>
    <description>Switch controls allow users to turn settings in an application on and off with the tap of a finger. </description>
    <discussion>
        <p>The switch control allows you to display a two state control. The switch can be in an 'on' or 'off' position.</p>
    </discussion>
    <sections>
        <section>
            <figure>
                <link>images/switchControl.png</link>
            </figure>
        </section>
        <section>
            <title>Character, Numeric, and Logical Switch Controls</title>
            <description>
                <p>The Switch control's stored value can be a Character, Numeric, or Logical type. The type is set using the [Type] property.</p>
                <p>When the switch is bound to a logical variable, the variable's value is either true or false. A switch that is bound to a logical variable is conceptually similar to a logical checkbox.</p>
            </description>
            <figure>
                <link>images/switchLogic.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When the switch is bound to a numeric variable, the variable's value is 0 when the switch is in the off state and 1 when it is in the on state.</p>
            </description>
            <figure>
                <link>images/switchNum.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When a switch is bound to a character variable, you can specify what value the variable should be set to when the switch is in the on and off state.</p>
            </description>
            <figure>
                <link>images/switchChar.png</link>
            </figure>
        </section>
        <section>
            <title>Getting and Setting the Value of a Switch Control</title>
            <description>
                <p>Switch control are bound to variables (just like other data controls, such as textbox, checkbox, etc). This means that the standard [{dialog.object}.setValue()] and [{dialog.object}.getValue()] methods can be used to set and read the control's value.</p>
            </description>
        </section>
        <section>
            <title>Changing the Switch Control's Appearance</title>
            <description>
                <p>The appearance of the switch is controlled by CSS classes in the style you have selected. The style can be changed in the style sheet used by the UX Component or overwritten using a Sub-theme.</p>
            </description>
            <important>The UX Component's '[Layout Type]' property must be set to '*[ui:Container Width]*' if you want to use the Switch control.</important>
            <figure>
                <link>images/switchSubthemes1.png</link>
            </figure>
        </section>
        <section>
            <description>[Click here] to download the UX Component that was used to create the sample Switch controls shown above.</description>
        </section>
    </sections>
    <links>
        <link link="UX Control Field Properties Type">Type</link>
        <link link="ux component setvalue method">{dialog.object}.setValue()</link>
        <link link="ux component getvalue method">{dialog.object}.getValue()</link>
        <link link="UX Properties Layout type">Layout Type</link>
        <link href="components/sampleSwitches.zip">Click here</link>
    </links>
    <see>
        <ref link="ux control properties switch properties">Switch Control Properties</ref>
    </see>
</page>