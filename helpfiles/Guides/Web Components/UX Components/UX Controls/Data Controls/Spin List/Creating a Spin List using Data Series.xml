<page>
    <shortlink>ux Creating a Spin List using Data Series</shortlink>
    <topic>Creating a Spin List using Data Series</topic>
    <description>A Spin List control can be based on Static Data or a Data Series. When a Spin List control is populated with Data Series, the values in the Spin List are dynamically populated at run-time.</description>
    <sections>
        <section>
            <title>Creating a Spin List Control with Data Series</title>
            <description>
                <p>To base the list of options in a Spin List control on a Data Series, the *[ui:Method for defining list]* property must be set to *[DataSeries]*. Before you can configure the Spin List control to use a Data Series, however, you must first [define the Data Series].</p>
            </description>
            <figure>
                <link>images/dataseries1.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Once the Data Series has been created, it can be used to populate the choices in the Spin List control. Click the [...] smart field for the *[ui:Data series mapping]* Spin List Property to open the "Data Series" dialog.</p>
            </description>
            <figure>
                <link>images/dataseries2.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>In the Data Series dialog, select the Data Series and sub-series to use for the *[ui:Displayed value]* in the Spin List. You can also choose a sub-series to use as the *[ui:Stored value]* for the Spin List control. Both the displayed value and stored value must be from the same Data Series.</p>
            </description>
            <figure>
                <link>images/dataseries3.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When the UX Component loads the Spin List, the Data Series is calculated and used to populate the Spin List control.</p>
            </description>
            <figure>
                <link>images/dataseries4.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>If a Data Series is used to create [cascading spin lists], you may need to refresh a child Spin List control when the value in the parent control changes. This is done by calling the *[js:{dialog.object}.refreshDataSeries]* method, which can be placed in the [OnSelect] property for the parent Spin List on which the child Spin List control is filtered:</p>
            </description>
            <example code="js"><![CDATA[{dialog.object}.refreshDataSeries('Series1');]]></example>
        </section>
    </sections>
    <links>
        <link href="/images/tools/ellipsesButton.png">...</link>
        <link link="data series builder">define the Data Series</link>
        <link link="ux cascading spin list">cascading spin lists</link>
        <link link="ux spin list properties OnSelect">OnSelect</link>
    </links>
    <see>
        <ref link="ux cascading spin list">Creating Cascading Spin Lists</ref>
        <ref link="ux Creating a Spin List using Static Data">Creating a Spin List Using Static Data</ref>
        <ref link="ux component refreshdataseries method">{dialog.object}.refreshDataSeries()</ref>
        <!--<ref link="ux client side cascading spin lists">Populating Cascading Spin List Using Client-Side Data</ref>-->
    </see>
</page>