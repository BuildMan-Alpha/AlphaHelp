<page>
    
    <topic>Editing Data in a ViewBox</topic>
    <description>You can connect a textbox editor to a ViewBox control so that you can update the data in the ViewBox.</description>
 
<sections>
    <section>
        <figure><title>A textbox editor can be linked to a ViewBox control to edit data.</title><link>images/ed34.png</link></figure>
        
        
        
    </section>
    <section>
        
        <figure><title>Edited data</title><link>images/ed35.png</link></figure>
    </section>
    

    <section>
        <title>Add a TextBox Control to Edit ViewBox data.</title>
        <steps>
            <step>
                <description>In the UX Builder's UX Controls page open the 'Containers' menu. Click the [Container] option.</description>
                 <figure><link>images/ed.png</link></figure>
            </step>
              <step>
                <description>From the Container Type list select the 'EditorSet' option and 'OK' to add an EditorSet to the component.</description>
                 <figure><link>images/ed2.png</link></figure>
            </step>
              <step>
                <description>Highlight the EditorSet. In the 'Containers' menu click on the [Container] option a second time.</description>
                 <figure><link>images/ed3.png</link></figure>
            </step>
              <step>
                <description>Select the 'Editor' option and click 'Insert After' to add it to the EditorSet.</description>
                 <figure><link>images/ed4.png</link></figure>
            </step>
            <step>
                <description>Highlight the Editor. In the Editor container's properties list on the right click the [...] 
                    button next to the 'Set value in editor' property. This should be in the Editor Properties section.</description>
                  <figure><link>images/ed5.png</link></figure>
            </step>
            <step>
                
                <description>Add the following javascript to the 'Set value in editor' dialog and click OK.</description>
                <example><![CDATA[{dialog.object}.setValue('editor_1_edit',value);]]></example>
                
                  <figure><link>images/ed6.png</link></figure>
            </step>
            <step>
                <description>Click the [...] button next to the 'Get value from editor' property, this is also in the Editor Properties section.</description>
                  <figure><link>images/ed7.png</link></figure>
            </step>
            
               <step>
                <description>In the 'Commit Editor' add the following code:</description>
                <example><![CDATA[return {dialog.object}.getValue('editor_1_edit');]]></example>
                  <figure><link>images/ed8.png</link></figure>
            </step>
            
              <step>
                <description>Highlight the Editor. Open the 'Data Controls' menu and click on the [TextBox] option. Give 
                    the textbox the name 'editor_1_edit'.
                </description>
                 <figure><link>images/ed9.png</link></figure>
            </step>
              <step>
                <description>Highlight the TextBox control. Open the 'Other Controls' menu and click on the [Button] option 
                    to add a button control underneath the textbox.
                </description>
                 <figure><link>images/ed10.png</link></figure>
            </step>
              <step>
                <description>In the properties list on the right change the 'Button text' property to read 'Done'. This property is in the Button Properties 
                    section.
                </description>
                 <figure><link>images/ed11.png</link></figure>
            </step>
              <step>
                <description>Scroll down the properties list to the 'Javascript - (Touch, Mouse, Pointer Events) section. Click the 
                    [...] button next to the 'click' property.
                </description>
                 <figure><link>images/ed12.png</link></figure>
            </step>
              <step>
                <description>In the 'Edit Click Event' dialog select 'Text mode', add the following code, and click 'Save':</description>
                <example><![CDATA[{dialog.object}.editorCommit('EDITORSET_1')]]></example>
                 <figure><link>images/ed13.png</link></figure>
            </step>
              <step>
                <description>Highlight the 'Done' button in the tree. In the Other Controls menu click on the [Button] option 
                    a second time to add another button to the component.
                </description>
                 <figure><link>images/ed14.png</link></figure>
            </step>
              <step>
                <description>In the properties list set the 'Button text' property for this button to read 'Cancel'.</description>
                 <figure><link>images/ed15.png</link></figure>
            </step>
              <step>
                <description>In the 'Javascript - (Touch, Mouse, Pointer Events) section click the [...] button next to the 'click' property</description>
                 <figure><link>images/ed16.png</link></figure>
            </step>
              <step>
                <description>In the 'Edit Click Event' dialog again select 'Text mode'. Add the following code and click 'Save'.</description>
                <example><![CDATA[{dialog.object}.editorCancel('EDITORSET_1');]]></example>
                 <figure><link>images/ed17.png</link></figure>
            </step>
              <step>
                <description>Highlight [EditorSet End: EDITORSET_1]. Open the 'Data Controls' menu and click on the [ViewBox] option to add a ViewBox control 
                    below the EditorSet. Give the ViewBox the name 'form'.
</description>
                 <figure><link>images/ed18.png</link></figure>
            </step>
            
              <step>
                <description>Highlight the ViewBox control. In the properties list click the [...] button next to the 'ViewBox properties' property 
                    in the ViewBox Properties section. The ViewBox Builder will open.
                </description>
                 <figure><link>images/ed19.png</link></figure>
            </step>
              <step>
                <description>In the Data Source pane click the [...] button next to the 'ViewBox type' property and change its setting to 'Data'.</description>
                 <figure><link>images/ed20.png</link></figure>
            </step>
              <step>
                <description>In the ViewBox Data section click the dropdown next to the 'Datasource type' property and select 'Static JSON'.</description>
                 <figure><link>images/ed21.png</link></figure>
            </step>
              <step>
                <description>Add the following JSON data and click OK.</description>
                <example><![CDATA[{
	firstname: 'Selwyn',
	lastname: 'Rabins',
	title: 'President'
}]]></example>
                 <figure><link>images/ed22.png</link></figure>
            </step>
              <step>
                <description>Open the ViewBox Layout pane and select the 'Freeform editor' option.</description>
                 <figure><link>images/ed23.png</link></figure>
            </step>
              <step>
                <description>Add the following HTML to the template.</description>
                <example><![CDATA[<div a5-item="edit" a5-value="firstname" class="item">
	<div class="title">First name</div>
	{firstname}
</div>
<div a5-item="edit" a5-value="lastname" class="item">
	<div class="title">Last name</div>
	{lastname}
</div>
<div a5-item="edit" a5-value="title" class="item">
	<div class="title">Title</div>
	{title}
</div>]]></example>
                 <figure><link>images/ed24.png</link></figure>
            </step>
              <step>
                <description>Open the CSS pane and add the following CSS classes.</description>
                <example><![CDATA[.item {
padding: 4px;
cursor: default;
}
.itemSelected {
background: #bbd0ff;
}
.title {
font-size: 75%;
color: #999;
}]]></example>
                 <figure><link>images/ed25.png</link></figure>
            </step>

              <step>
                <description>Open the Items pane and click the 'Add item' button. Give the item the name 'edit'</description>
                 <figure><link>images/ed26.png</link></figure>
            </step>
              <step>
                <description>In the properties list on the right check the 'Selectable' property in the Item Properties section.</description>
                 <figure><link>images/ed27.png</link></figure>
            </step>
              <step>
                <description>Set the 'Selected class name' property in the same section to be the 'itemSelected' class that you defined.</description>
                 <figure><link>images/ed28.png</link></figure>
            </step>
              <step>
                <description>Click the [...] button next to the 'onSelect' property in the Javascript section of the item properties list.</description>
                 <figure><link>images/ed29.png</link></figure>
            </step>
              <step>
                <description>Add the following Javascript and click OK.</description>
                <example><![CDATA[var val = this.data[v];
{dialog.object}.editorFromValue('EDITORSET_1','EDITOR_1',val,{
	field: v
},function(value,settings){
	var fObj = {dialog.object}.getControl('form');
	fObj.data[settings.field] = value;
	fObj.refresh(true);
});]]></example>
                 <figure><link>images/ed30.png</link></figure>
            </step>
              <step>
                <description>Close the ViewBox Builder and run the component in Live Preview.</description>
                 <figure><link>images/ed31.png</link></figure>
            </step>
              <step>
                <description>Highlight one of the fields and change the name of the field in the Textbox editor</description>
                 <figure><link>images/ed32.png</link></figure>
            </step>
              <step>
                <description>Click the 'Done' button and you should see the JSON data in the field change.</description>
                 <figure><link>images/ed33.png</link></figure>
            </step>
              
            
            
            
            
        </steps>
        
    </section>
    
</sections> 
 
 
</page>