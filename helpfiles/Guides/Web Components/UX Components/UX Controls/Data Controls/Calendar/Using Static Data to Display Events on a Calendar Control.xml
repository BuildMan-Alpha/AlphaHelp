<page>
    <shortlink>ux data controls calendar property using static data to display events on a calendar control</shortlink>
    <topic>Using Static Data to Display Events on a Calendar Control</topic>
    <description>You can use static data to populate the events on a calendar. </description>
  <sections>
    <section>
         <figure><title>A calendar control with events defined using static JSON.</title><link>images/sd14.png</link></figure>
      
    </section>
     <section>
     <description>For a visual explanation on how to build a calendar control that does this watch 
      this four part video: [Part 1], [Part 2], [Part 3], [Part 4], or follow the guide below.
     </description>
      </section>
<section>
  <title>UX Properties Settings</title>
    <steps>
          <step>
            <description>In the UX Builder's UX Properties page scroll down to the 'CSS/SVG' section. 
              Click the [...] button next to the 'Local CSS definitions' property.
            </description>
            <figure><link>images/de25.png</link></figure>
          </step>
      <step>
        <description>In the 'CSS Editor - []' open the 'Code' tab at the bottom of the editor.</description>
         <figure><link>images/de26.png</link></figure>
      </step>
       <step>
        <description>Add the following definition for a 'hiddenItems' css class and click OK.</description>
        <example><![CDATA[.hiddenItem {display: none;}]]></example>
         <figure><link>images/de27.png</link></figure>
         <note>This css class prevents the dates from previous or later months being displayed on the calendar. 
           For example, if you were looking at the month of August, then the last day of July and the first 
           day of September would not be displayed. This is different from the default setting, 
           which is to number the days of other months but have them appear disabled; using the disabled css class. 
           The .hiddenItem class is called in the calendar's 'Date item out of range class name' property. 
         </note>
      </step>
      
      
      
      
          <step>
           <description>Scroll down to the 'Other' section on the Properties list. 
             Find the 'Date format' property and set it to be 'MM/dd/yyyy'.
            </description>
               <figure><link>images/de2.png</link></figure>
          </step>
          
          
        </steps>
  
</section>
  
  
  <section>
    <title>Customize the Calendar Control</title>
    <steps>
      <step>
        <description>In the UX Builder on the UX Controls page open the 'Data Controls' menu. 
          Click on the [Calendar] option to add a calendar control to the component. Give the 
          control the name 'dt1'.
        </description>
        <figure><link>images/sd2.png</link></figure>
      </step>
      <step>
        <description>Highlight the calendar control. In the properties list on the right go to 
          the 'Field Properties' section. Set the 'Default value' to be 2-1-2017.
        </description>
        <figure><link>images/sd3.png</link></figure>
      </step>
      <step>
        <description>Scroll down to the 'Date/Time Picker Properties' section. Check the 
          'Draw boxes around dates' checkbox.
        </description>
        <figure><link>images/sd4.png</link></figure>
      </step>
      <step>
        <description>Set the 'Date item hover class name' property to 'None'.</description>
        <figure><link>images/sd5.png</link></figure>
      </step>
      <step>
        <description>Set the 'Date item selected class name' property to 'None'.</description>
        <figure><link>images/sd6.png</link></figure>
      </step>
      <step>
        <description>Set the 'Date item out of range class name' to the 'hiddenItem' class.</description>
        <figure><link>images/sd7.png</link></figure>
      </step>
      <step>
        <description>Click the [...] button next to the 'Date item style' property.</description>
        <figure><link>images/sd8.png</link></figure>
      </step>
      <step>
        <description>In the Style Editor scroll down to the 'Positioning and Size' section. 
          Set the 'Width' and 'Height' properties to be .5in. Click OK.
        </description>
        <figure><link>images/sd9.png</link></figure>
      </step>
      <step>
        <description>Check the 'Has events' property checkbox.</description>
        <figure><link>images/sd10.png</link></figure>
      </step>
      <step>
        <description>Click the '+' button next to the 'Has events' checkbox to expand the events dropdown. 
          Next to the 'onItemDraw' event type 'calendarDrawItem'.</description>
        <figure><link>images/sd11.png</link></figure>
      </step>

    </steps>
    
    
    
  </section>
  <section>
    <title>Definition the calendarDrawItem() and editEvent() Functions</title>
    <steps>
      <step>
        <description>Expand the 'Code' menu and click to open the 'Javascript functions' page.</description>
        <figure><link>images/sd12.png</link></figure>
      </step>
      <step>
        <description>Add the following definitions for the calendarDrawItem() and 
          the editEvent() functions.</description>
        <example><![CDATA[function calendarDrawItem(ele,date,type) {
var calData = {
    '2017-2-17' : [{id: 1, name: 'event1', detail: 'detail for event 2'}],
    '2017-2-20' : [
         {id: 2, name: 'event2', detail: 'detail for event 2'},
         {id: 3, name: 'event3', detail: 'detail for event 3'}
         ]
    }
    
    if(type == 'date') {
        if(typeof calData != 'undefined') {
             var dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();
             if(typeof calData[dateStr] != 'undefined') {
                  var tempData = calData[dateStr];
                  for(var i = 0; i < tempData.length; i++) {
                      ele.innerHTML = ele.innerHTML + '<br>' + '<a class="{dialog.style}Link" href="#" title="'+tempData[i].detail+'" onclick="editEvent(\''+tempData[i].id+'\');e.stopEvent(event); return false;">' +tempData[i].name + '</a>';
                  }
              }
          }
      }
  }
  
function editEvent(id) {
alert('edit event: ' + id); 
}]]></example>
        <figure><link>images/sd13.png</link></figure>
      </step>
      <step>
        <description>Run the component in Live Preview.</description>
         <figure><link>images/sd14.png</link></figure>
        
      </step>
      
      
    </steps>
    
    
    
    
  </section>
  
  
  
  
  
  </sections>

<links>
     <link href="http://www.ajaxvideotutorials.com/V11Videos/Dialog_onItemDraw1.swf">Part 1</link>
    <link href="http://www.ajaxvideotutorials.com/V11Videos/Dialog_onItemDraw2.swf">Part 2</link>
    <link href="http://www.ajaxvideotutorials.com/V11Videos/Dialog_onItemDraw3.swf">Part 3</link>
    <link href="http://www.ajaxvideotutorials.com/V11Videos/Dialog_onItemDraw4.swf">Part 4</link>
  
  
</links>

<see>
  <ref link="ux data controls calendar property">Calendar Control</ref>
  <ref link="ux data controls calendar property displaying events on a calendar control from an external database">Displaying Events on a Calendar Control from an External Database</ref>
</see>
</page>