<page>
    <topic>Displaying Driving Directions on a Map Control</topic>
    <description>When you place a map on a UX Component you can call any of the various methods that map object exposes.
        There are quite a few different methods exposed by the map object. In this example we show how the .plotRoute() method can be used topic
        display a route and driving directions for a starting and ending address. 
    </description>
  
<sections>
<section>
    <description>This example is based on [this video], FP11_DLGMAP2, which can also be found in 
        the video library.</description>
</section>
<section>
    <title>Creating a Component that Displays Driving Directions</title>
    <steps>
        <step>
            <description>Add a textbox control to the component. Give it the that starting_address</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>In Field properties, set the Default value property to the default address you want to start at.</description>
            <example>255 commonwealth ave, boston ma</example>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Create a second textbox control named ending_address.</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>In Field properties, set the Default value property to the default address that you want to end at.</description>
          <example>36 bigelow st, cambridge ma 02139</example>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Add a button control to the UX component and name it 'Get Directions'.</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Highlight the button control and, in the Javascript section of the properties list, click the [...]
                button next to the OnClick event. </description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Add the following code to the onClick event</description>
            <example><![CDATA[var a1 = {dialog.Object}.getValue('starting_address');
                var a2 = {dialog.Object}.getValue('ending_address');
                
                var m1 = {dialog.Object}.getControl('M1');
                m1.plotRoute(a1,a2);
            ]]></example>
            <cases>
                <case>
                    <figure><link></link></figure>
                </case>
                
  <case>
       <note>This first reads value out of starting address field and storing it in variable called a1.
                Then we are reading the ending address and putting it in a variable called a2. THen we are getting 
                a pointer to the map control M1, and that is the variable name we assign to the map when we put it on the dialog.
                Now that we have a pointer to the map control, we call the plot route method for the map control.
                To gain access to all of the methods that the map control has you can click the 'Insert UX component method' button
                at the bottom of the screen. Next type map into the Filter: bar.</note>
  </case>
            
           <case>
               
           </case>
            <case>
                <note>The location in the plot route method were entered as addresses but could also be lat or long numbers.</note>
            </case>
            
                      </cases>
        </step>
           <step>
            <description>Add a map container</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Map Properties - Route directions - DIVid set to 'routePanelId</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Create a Static Text control.</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Click the [...] next to the Static text property</description>
            <figure><link></link></figure>
        </step>
           <step>
            <description>The Static text property should now read like this</description>
            <example><![CDATA[<div id="routePanelId" style="width: 5in; 6in; overflow:auto;">directions</div>]]></example>
            <figure><link></link></figure>
        </step>
           <step>
            <description>Place a Container control around the Map and Static Text Controls</description>
            <figure><link></link></figure>
        </step>
        
        
    </steps>
    
    
</section>


      
</sections>

<links>
    <link href="http://www.ajaxvideotutorials.com/V11Videos/dialog_component_map_drivingDirections.swf">this video</link>
    
</links>
</page>