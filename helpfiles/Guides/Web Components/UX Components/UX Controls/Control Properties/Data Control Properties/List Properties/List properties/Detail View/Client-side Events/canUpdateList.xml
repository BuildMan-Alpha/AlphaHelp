<page>
    <topic>CanUpdateList</topic>
<description>Fires when the user tries to update the List with edits that have been made to the List Detail View.
     If function returns false, action is cancelled. The data object is passed in as a member of the e.object. 
     If you set properties in e.data, you can override the values that the user entered.
</description>
 
<sections>
    <section>
        <title>Parameters</title>
        <description>This event passes a 'data' parameter when the Javascript code executes.</description>
        
    </section>
    
    <section>
        <title>Example</title>
        <description>You can use this event to override user entries. This detail view was built in the guide to [Creating a Detail View with a Dirty Control Class].
        </description>
        <steps>
             <step>
                <description>Create a List Control with a working detail view as described in [Creating a Detail View with a Dirty Control Class]. </description>
                
            </step>
                   <step>
                <description> In the Detail View pane click the [...] button next to the 'Events' property under the 'Client-side Events' section.</description>
                
            </step>
             <step>
                <description>Click the canUpdateList event, then view the work area where this event is defined.</description>
                
            </step>
         
               <step>
                <description>Add the following javascript:</description>
                <example><![CDATA[if( e.data.ContactName.toLowerCase().trim() === 'badname' ) {
    alert('Cannot have name of badname');
    return false;
}]]></example>

            </step>
               <step>
                <description>Run the component in Live Preview. When you try to enter 'badname' into one of the Detail View fields and click 'Save', 
                    the component should return a 'Cannot have name of badname' message. It will then revert back to the pre-existing 
                    name.</description>
                
            </step>
            
            
        </steps>
        
    </section>
    
    
    
    
</sections>

<links>
    <link href="http://documentation.alphasoftware.com/documentation/pages/Guides/Web%20Components/UX%20Components/UX%20Controls/Control%20Properties/Data%20Control%20Properties/List%20Properties/List%20properties/Detail%20View/Detail%20View%20Properties/Dirty%20control%20class%20name.xml">Creating a Detail View with a Dirty Control Class</link>
    
</links>


</page>