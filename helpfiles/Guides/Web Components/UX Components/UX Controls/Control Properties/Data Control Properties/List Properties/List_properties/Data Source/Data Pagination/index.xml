<page>
    <shortlink>ux list dbf data pagination properties</shortlink>
    <topic>Data Pagination</topic>
    <description>Data pagination means breaking data up into pages. 
        The properties here specify how users move through and view large blocks of data. For example, 
        when viewing a data set with 100 rows or more of data, a user might only be able to view a given number of rows at a time. 
        In this section you can choose how big the page should be, what controls should be used to navigate the pages, what these controls 
        should look like, a what they should say. </description>
  
  
<!--list:.-->
<!--order:
Paginate data
Page size
Pagination method
'Fetch More' control text
'Fetch More' control type
'Fetch More' control style
'Fetch More' container style
-->

<sections>
    <section>
       <description>There is a difference between Client-side and Server-side pagination. 
           The data pagination done in the List Builder's Data Source tab is all server-side. Because you are connected to a server in order to 
    obtain data; which will necessarily limit the number of records downloaded to the device at a given time. Thisalso means that you have to have an active connection in order to 
    fetch the next batch of records. This makes it impossible to use server side pagination in a disconnected context. 
    With the client-side equivalent of "pagination", i.e. "list virtualization", you basically download the entire data set but only render a small portion of it.
    The most expensive part of the list data is displaying it, not storing it, so using client side list virtualization actually allows you to have a huge number of records. 
    However, you can just render a small portion of these records at a time of them. List virtualization for controls is defined on the List Properties tab in the List Builder.
</description> 

        
    </section>
    
</sections>

</page>