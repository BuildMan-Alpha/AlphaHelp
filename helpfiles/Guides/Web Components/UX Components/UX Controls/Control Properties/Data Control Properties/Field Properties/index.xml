<page>
    <shortlink>UX Control Field Properties</shortlink>
    <topic>Field Properties</topic>
    <description>Properties available in the "Field Properties" section for a UX Control.</description>
    <sections>
        <section>
            <title>Variable name</title>
            <description>Name of the control. Must be Unique.</description>
        </section>
        <section>
            <title>Type</title>
            <description>The control type.</description>
            <cases>
                <case>
                    <title>Treat field as a Logical field</title>
                    <description>Only available if Type is set to 'Numeric'. If the field is a Numeric (Integer) field, and it contains only values of 0 or 1, then you can treat it as a Logical field and set the control type to a Checkbox.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Default value</title>
            <description>
                <p>Specify the default value for the control. The default value can be a value, an expression (start expression with an = sign), a session variable (e.g. =session.name), a page variable (e.g. =pageVariable.name), or an argument (e.g. =:arg1).</p>
                <p>If the control is a dropdownbox, radio button, or checkbox, you must set the stored value, not he display value.</p>
                <p>If the control is a two-value 'slider', the default value is of the form *[xb:value1..value2]*.</p>
                <p>If the control is multi-valued (e.g. checkbox, list configured as multi-select, etc.), you can use special array() syntax. For example: *[xb:array(red,green)]*. Alternatively, you can enter an expression as a CR-LF delimited list: *[xb:="red"+crlf()+"green"]*.</p>
            </description>
            <note>For numeric fields, numbers must be entered with a period for the decimal separator, regardless of the regional settings on the machine when the server is running.</note>
        </section>
        <section>
            <title>Validation Xbasic</title>
            <description>Specify Xbasic code to test if the data in this field is valid. By default, only dirty fields are validated. You can specify that all fields should be validated in Update Settings, Edit Properties. If this field is a Repeating Section, see the setting in the Repeating Section for 'Validation - field option' and 'Validation - row option'.</description>
        </section>
        <section>
            <title>Validation rules</title>
            <description>Specify rules to test if the data in this field is valid. By default, only dirty fields are validated. You can specify that all fields should be validated in Update Settings, Edit Properties. If this field is a Repeating Section, see the setting in the Repeating Section for 'Validation - field option' and 'Validation - row option'.</description>
        </section>
        <section>
            <title>Immediate validation</title>
            <description>Specify if the value in the field should be validated as soon as you tab out of the field, or in the case of a radio button, dropdownbox, or checkbox control, as soon as you change a value. The 'server-side' option will generate an Ajax callback, so you should try to limit the number of fields that require real-time server-side validation.</description>
            <cases>
                <case>
                    <title>Validation Javascript</title>
                    <description>Only available if Immediate validation is set to 'Client-side only' or 'Client-side and Server-side'. Specify Javascript to validate the data in the field. Client-side validation is very fast because it does not require making an Ajax callback to the server. Your Javascript code can use the 'data' variable name to refer to the current value in the control. Your code should include a 'return' statement that returns true or a string with an error message. For example: *[js:return true;]* (no error) or *[js:return 'Value is not valid.';]* (if there is an error.)</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Class</title>
            <description>Specify the class name for the control. <![CDATA[<Default>]]> will use the default class name for the style name selected.</description>
        </section>
        <section>
            <title>Style</title>
            <description>Specify the in-line style for the control.</description>
        </section>
        <section>
            <title>Width</title>
            <description>Specify the control's width. Use CSS units (e.g. 1in, 200px, etc.) If you specify a width here and also in the 'style' property, this value will be used. Leave blank to use the default width.</description>
        </section>
        <section>
            <title>Height</title>
            <description>Specify the control's height. Use CSS units (e.g. 1in, 200px, etc.) If you specify a height here and also in the 'style' property, this value will be used. Leave blank to use the default height.</description>
        </section>
        <section>
            <title>Container in-line style</title>
            <description>Only applies to controls that have a smart field button - e.g. Lookups, Date/Time pickers, In-control buttons. Specify style attributes for the container for the control. The container encloses both the input control and the smart field button.</description>
        </section>
        <section>
            <title>Break</title>
            <description>Force a column break after this control.</description>
            <cases>
                <case>
                    <title>Break height</title>
                    <description>Only available if Break is set to 'After'. Specify the vertical distance between this control and the next control. Use CSS syntax, e.g. 10px, .5in, 20pt, etc.</description>
                </case>
                <case>
                    <title>Horizontal spacer</title>
                    <description>Only available if Break is set to 'None'. Specify the horizontal distance between this control and the next control. Use CSS syntax, e.g. 10px, .5in, 20pt, etc.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Hide</title>
            <description>Specify if this control should be hidden. Controls are typically hidden so that they can be manually placed into the HTML in a 'Free-form Container'.</description>
        </section>
        <section>
            <title>Has help</title>
            <description>Specify if there is help for this field. The help will appear in a window when the user presses F1. The Help text is read from a database. Go to the Properties pane to configure the Help database source. The Help Window style can either be a pop-up window or a dropdown window. To configure the Help Window style, go to the Properties pane and set the 'Field help window style' property.</description>
            <cases>
                <case>
                    <title>Help ID</title>
                    <description>Only available if Has help is enabled. Specify the Help ID. The help text for this field is looked up in the Help table using this ID as the key.</description>
                </case>
                <case>
                    <title>Show help icon</title>
                    <description>Only available if Has help is enabled. Specify if an icon should be shown next to the control to indicate help is available for this control.</description>
                    <cases>
                        <case>
                            <title>Help icon</title>
                            <description>Only available if Show help icon is set to 'LeftOfControl' or 'RightOfControl'. Specify the icon to show next to the field control. Clicking or hovering over this icon will show the help text for the field.</description>
                        </case>
                        <case>
                            <title>Help icon behavior</title>
                            <description>Only available if Show help icon is set to 'LeftOfControl' or 'RightOfControl'. Specify the action when the user clicks the help icon or moves the mouse over the help icon.</description>
                        </case>
                    </cases>
                </case>
            </cases>
        </section>
        <section>
            <title>Captcha form validation</title>
            <description>Specify if a Captcha image should be displayed for this control. The user will need to enter the text shown in the Captcha image in order to submit the UX Component.</description>
            <cases>
                <case>
                    <title>Number of characters</title>
                    <description>Only available if Captcha form validation enabled. Specify the number of characters to display in the Captcha image.</description>
                </case>
                <case>
                    <title>Image height</title>
                    <description>Only available if Captcha form validation enabled. Specify the height (in inches) of the Captcha image.</description>
                </case>
                <case>
                    <title>Image width</title>
                    <description>Only available if Captcha form validation enabled. Specify the width (in inches) of the Captcha image.</description>
                </case>
                <case>
                    <title>Refresh icon</title>
                    <description>Only available if Captcha form validation enabled. Specify the icon for the 'Refresh' button. This is the button that the user can click to get a new Captcha image if the text in the current image is too hard to read.</description>
                </case>
                <case>
                    <title>Refresh icon help</title>
                    <description>Only available if Captcha form validation enabled. Specify the bubble help for the refresh icon for the Captcha image.</description>
                </case>
                <case>
                    <title>Captcha error text</title>
                    <description>Only available if Captcha form validation enabled. Specify the error text to show if the user does not enter the correct text into the Captcha control when submitting the UX Component.</description>
                </case>
            </cases>
        </section>
        <section>
            <title>Initial focus</title>
            <description>Specify if this control should have focus when the UX Component is first shown. If you check this property on more than one control, the first control checked will get focus.</description>
        </section>
        <section>
            <title>Control container class name</title>
            <description>Advanced/Optional. All controls are automatically wrapped in a div with a class name of 'A5CWLayout' or 'A5container', unless the control is a 'NoFloat' container. You can specify a class name to use for the control container in addition to the 'A5CWLayout' or 'A5container' class that is automatically assigned. This allows you to have more control over the appearance of the control.</description>
        </section>
        <section>
            <title>Control container prevent float</title>
            <description>Advanced/Optional. All controls are automatically wrapped in a div with a class name of 'A5CWLayout' or 'A5container', unless the control is a 'NoFloat' container. This container automatically 'floats' the control, aligning controls in a flow layout from left to right until a control with a 'break' is encountered. In addition, the class adds padding around the control. By checking this property, you are removing the 'A5CWLayout' or 'A5container' class from the div container enclosing this control.</description>
        </section>
    </sections>
</page>