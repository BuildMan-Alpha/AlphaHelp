<page>
    <topic>Internationalization Helper Utilities</topic>
    <description>Makes it easy to add language tags to different parts of an application</description>
  

<sections>
    <section>
        <figure><link>images/int.png</link></figure>
        </section>
    <section>
       <description><![CDATA[You can create apps that are designed to be used in multiple languages and around the world. 
        The way this is done throughout Alpha Anywhere has been to use a special <a5:r></a5:r> or <a5:t></a5:t> tag 
        around the label or text that you want to internationalize. The alternate spellings for each of the controls that 
        are tagged can then be defined in the 'Language definition' property on UX Properties page. 
        The Internationalization Helper Utilities option on the Additional Options Menu allows for multiple parts of an 
        application to be tagged in one go. 
        For a explanation on how to use the Internationalization Helper Utilities [watch this video] or read on. ]]></description>
    </section>
    
    
    
    <section>
        <title>Options</title>
        <description>There are several different ways that you can go about assigning internationalization tags.</description>
        <figure><link>images/int2.png</link></figure>
    </section>
    <section>
        
        <description>You can choose to apply internationalization tags to all of the places in the application that will accept them 
            by clicking the 'Select All Options' button.</description>
            <figure><link>images/int3.png</link></figure>
    </section>
    <section>
        <description>Alternatively, you can use the 'Select Option' button to add internationalization tags to a particular type of 
            control or text in the application. A menu will open with the following options:
        </description>
        <list bullet="true">
            <item>
                <name>Control Labels</name>
            </item>
            <item>
                <name>List Control Column Headings</name>
            </item>
            <item>
                <name>List Control Detail View</name>
            </item>
            <item>
                <name>StaticText Controls</name>
            </item>
            <item>
                <name>Button Controls</name>
            </item>
            <item>
                <name>Frame Controls</name>
            </item>
            <item>
                <name>Bubble Help - Labels</name>
            </item>
            <item>
                <name>Bubble Help - Fields</name>
            </item>
            <item>
                <name>Bubble Help - Other</name>
            </item>
            <item>
                <name>DatePicker - 'day name' Labels</name>
            </item>
            <item>
                <name>DatePicker - 'month name' Labels</name>
            </item>
            <item>
                <name>System messges</name>
            </item>
        </list>
        
    </section>
    <section>
        <description></description>
        
    </section>
    
    <section>
        <title>Add Text Dictionary Tags to a Control Type.</title>
        
        <description><![CDATA[Text Dictionary tags, written <a5:t></a5:t>, were added after the standard language tags, written <a5:r></a5:r>, were implemented. 
        These tags can be used very effectively for the internationalization of applications. Unlike standard language tags, text dictionary 
        tags are stored in a SQL database. This makes it easy to add language definitions to text that utilize, for example, Japanese or Chinese characters; 
        without having to go through the trouble of looking up unicode values or escaping certain characters in a string. You can also use Text Dictionary Tags 
        to add external HTML to specified areas of text. There are two videos on how to implement text dictionary tags that you can watch here: [Part 1], [Part 2], or you can follow the guide below.]]></description>
    
    </section>
    
    
    <section>
        <title>Create a New Text Dictionary Table</title>
        <steps>
            <step>
                <description>In the Web Projects Control Panel click on the Project Properties button in the panel toolbar.</description>
                
            </step>
              <step>
                <description>Scroll down to and expand the 'Text Dictionary Table Settings' section. Click on the [...] button next to the Connection string property.</description>
           
            </step>
            <step>
                <description>Set the Table Type to SQL</description>
                
            </step>
              <step>
                <description>Click the [...] button next to the 'Connection string' property and form a connection string to the Northwind database.</description>
                
            </step>
              <step>
                <description>Type the name of the Table you wish to create in the 'Table name' property.</description>
                
            </step>
              <step>
                <description>Click the 'Create Text Dictionary Table' button at the bottom of the 'Define Text Dictionary Table' dialog. Click OK.</description>
                
            </step>
</steps> 
</section>

<section>
    <title>Define New Tags in the Text Dictionary Table</title>
           <steps>
              <step>
                <description></description>
                
            </step>
              <step>
                <description></description>
                
            </step>
              <step>
                <description></description>
                
            </step>
              <step>
                <description></description>
                
            </step>
            
            
        </steps>
        
        
        
    </section>
    
    
    
    
    
    
    
    
    <section>
        <title>Add Language Tags to a Control Type.</title>
        <steps>
            <step>
                <description>In the UX Builder on the UX Controls page open the 'Other Controls' menu. Click on [Button] 
                    to add a button control to the component. Add several button controls.
                </description>
                <figure><link>images/ihu2.png</link></figure>
            </step>
            
            
            
            <step>
                <description>Add some different Button text to each of the buttons by highlighting each button control and 
                    entering the new text into the 'Button text' property, in the Button Properties section of the properties list.  
                </description>
                <figure><link>images/ihu3.png</link></figure>
            </step>
            <step>
                <description>Organize the buttons in the controls tree.</description>
                <figure><link>images/ihu.png</link></figure>
            </step>
            <step>
                <description>After naming all of the button click on the 'Menu' dropdown on the UX Controls page toolbar. Select 
                    the 'Internationalization Helper Utilities' option.
                </description>
                <figure><link>images/ihu4.png</link></figure>
            </step>
            <step>
                <description>Click the 'Select Option' button. From the list of options select the 'Button Controls' option. Then select the 
                     'Add language tags to text in all button controls' option.</description>
                <figure><link>images/ihu5.png</link></figure>
            </step>
            <step>
                <description>You should see a list appear with all of the button controls that tags will be added to. Click the 
                    'Execute Code' button. 
                </description>
                <figure><link>images/ihu6.png</link></figure>
            </step>
            <step>
                <description>Close the dialog. Go back to one of the 'Button text' properties you defined on the UX Controls page. This should now have an internationalization tag around it.</description>
                <figure><link>images/ihu7.png</link></figure>
            </step>
            <step>
                <description>Open the UX Properties page. Scroll down the list of properties to the 'Other' section'. Click the [...] button next 
                    to the 'Language definitions' property.
                </description>
                <figure><link>images/ihu8.png</link></figure>
            </step>
          
            <step>
                <description>Click the 'Add Language' button and name the new language.</description>
                <figure><link>images/ihu9.png</link></figure>
            </step>
              <step>
                <description>Click the 'Refresh List of Placeholders' button. You should see the buttons that you defined text for appear with an 
                    equals sign next to it.</description>
                <figure><link>images/ihu10.png</link></figure>
            </step>
            <step>
                <description>Translate each button into the new langauge that you added by placing the new term after the equals sign. Click OK</description>
                <figure><link>images/ihu11.png</link></figure>
                <note>You need to escape commas incorporated into any text by using a backslash '\' character.</note>
            </step>
            <step>
                <description>Still in the 'Other' Section of the UX Properties page, set the 'Active language' property to the language you defined.</description>
                <figure><link>images/ihu12.png</link></figure>
            </step>
             <step>
                <description>Run the component in Live Preview. You should see all of the buttons displaying the active language.</description>
                <figure><link>images/ihu13.png</link></figure>
            </step>
            
            
            
        </steps>
        
    </section>
    
    <section>
        <title>Remove Language or Text Dictionary Tags </title>
        
        
    </section>
    
    
    
</sections>



<links>
    <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_internationalizationGenie.swf"></link>
    <link href="http://www.ajaxvideotutorials.com/V12Videos/textDictionary_1.swf">Part 1</link>
    <link href="http://www.ajaxvideotutorials.com/V12Videos/textDictionary_2.swf">Part 2</link>
</links>

</page>