<page>
    <topic>Data Series Builder</topic>
    <description>The Data Series Builder is used to manage data series defined in the UX Component.</description>
    <groups>
        <group>
            <sections>
                <section>
                    <figure>
                        <title>The Data Series Builder</title>
                        <link>images/dsb.png</link>
                    </figure>
                </section>
            </sections>
        </group>
        <group>
            <title>Data Source Type</title>
            <sections>
                <section>
                    <description>The data source type menu determines what type of data the data series will be created from. The options are:</description>
                    <list>
                        <item>
                            <name>SQL</name>
                            <description>Uses SQL data to create a data series that can be used inside a control. You will need to build a connection to the SQL data to be used.</description>
                        </item>
                        <item>
                            <name>SQL -CrossSection</name>
                            <description>Uses SQL data to create a data series that used with different controls. "Cross sectional" means the data will be plotted from multiple fields in a single record.</description>
                        </item>
                        <item>
                            <name>DBF</name>
                            <description></description>
                        </item>
                        <item>
                            <name>DBF -CrossSection</name>
                            <description></description>
                        </item>
                        <item>
                            <name>Static</name>
                            <description>Create a list or table of static data by typing in the options to appear in the data series.</description>
                        </item>
                        <item>
                            <name>Custom</name>
                            <description></description>
                        </item>
                        <item>
                            <name>Javascript</name>
                            <description>Creates a data series based on Javascript, making the data accessible to Javascript functions in your component.</description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
        <group>
            <title>SQL</title>
            <sections>
                <section>
                    <title>Arguments Properties</title>
                    <list>
                        <item>
                            <name>Data source type</name>
                            <description>Specify where the data that populates the series comes from. Choices are 'SQL' or 'DBF' - a list of values from a SQL or DBF table,  'Static' - a static list of values, 'Custom' allows you to use use custom Xbasic and Javascript functions to dynamically compute the series values, 'Javascript' - allows you to specify a Javascript function that will compute the series values.). Choices include *[ui:SQL]*, *[ui:SQL-CrossSection]*, *[ui:DBF]*, *[ui:DBF-CrossSection]*, *[ui:Static]*, *[ui:Custom]*, *[ui:Javascript]*.</description>
                        </item>
                        <item>
                            <name>Arguments</name>
                            <description>Define arguments. Arguments can be bound to page, session and cookie variables. Argument values are passed into all server-side Xbasic event handlers in the component.TIP:For 'array arguments' (for use in a SQL IN clause), the argument name must start with 'array_'.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>SQL Data Source Properties</title>
                    <list>
                        <item>
                            <name>Connection string</name>
                            <description>Connection string property.</description>
                        </item>
                        <item>
                            <name>Method for defining SQL query</name>
                            <description>Method for defining SQL query property.</description>
                        </item>
                        <item>
                            <name>Table name</name>
                            <description>Table name property.</description>
                        </item>
                        <item>
                            <name>Field list</name>
                            <description>Field list property.</description>
                        </item>
                        <item>
                            <name>Filter</name>
                            <description>Specify the filter expression. The filter expression can reference values in other controls on the Dialog. To do this, define one or more arguments, and then bind the argument value to a control value. For example, to bind the argument value to the value in the CustomerId control, set the argument value to {CustomerId}. Your filter can then reference the argument.</description>
                        </item>
                        <item>
                            <name>Order</name>
                            <description>Order property.</description>
                        </item>
                        <item>
                            <name>Distinct</name>
                            <description>Specify if you want unique records only.</description>
                        </item>
                        <item>
                            <name>Record limit</name>
                            <description>Specify the maximum number of records to be retrieved in the SQL query. -1 indicates no limit.</description>
                        </item>
                        <item>
                            <name>SQL Statement</name>
                            <description>SQL Statement property.</description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
        <group>
            <title>SQL-CrossSection</title>
            <sections>
                <section>
                    <title>SQL Data Source Properties</title>
                    <description>The SQL-CrossSection data source type includes the following property in its SQL Data Source Properties, in addition to the properties that normally appear with the SQL data source type.</description>
                    <list>
                        <item>
                            <name>Data extraction template</name>
                            <description>The data extraction template defines how data from multiple columns in a single record is turned into a series of values for the data series.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>Using Cross Sectional SQL and DBF Types</title>
                    <description>Cross sectional data types allow you to plot data from multiple fields in a single record, rather than plotting data from a single field in multiple records. For more on this data type watch [this video on cross-sectional data]</description>
                </section>
            </sections>
        </group>
        <group>
            <title>DBF</title>
            <sections>
                <section>
                    <title>DBF Data Source Properties</title>
                    <list>
                        <item>
                            <name>Data source</name>
                            <description>Data source property.</description>
                        </item>
                        <item>
                            <name>Filter</name>
                            <description>Specify the filter expression. The filter expression can reference values in other controls on the Dialog. To do this, define one or more arguments, and then bind the argument value to a control value. For example, to bind the argument value to the value in the CustomerId control, set the argument value to {CustomerId}. Your filter can then reference the argument.</description>
                        </item>
                        <item>
                            <name>Order</name>
                            <description>Order property.</description>
                        </item>
                        <item>
                            <name>Data extraction template</name>
                            <description>The [data extraction template] defines how data from multiple columns in a single record is turned into a series of values for the data series.</description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
        <group>
            <title>DBF-CrossSection</title>
            <sections>
                <section>
                    <title>DBF Data Source Properties</title>
                    <description>The DBF-CrossSection data source type includes the following property in its DBF Data Source Properties, in addition to the properties that normally appear with the DBF data source type.</description>
                    <list>
                        <item>
                            <name>Data extraction template</name>
                            <description>The [data extraction template] defines how data from multiple columns in a single record is turned into a series of values for the data series.</description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
        <group>
            <title>Static Data</title>
            <sections>
                <section>
                    <title>Static Data Properties</title>
                    <list>
                        <item>
                            <name>Static data</name>
                            <description>Static data property.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>Using the Data Series Editor to Create Static Data</title>
                    <steps>
                        <step>
                            <description></description>
                        </step>
                    </steps>
                </section>
            </sections>
        </group>
        <group>
            <title>Custom Data</title>
            <sections>
                <section>
                    <title>Custom Properties</title>
                    <list>
                        <item>
                            <name>Xbasic function name</name>
                            <description>Specify the name of the Xbasic function to call to compute the series values.</description>
                        </item>
                        <item>
                            <name>Subseries names</name>
                            <description>If your Xbasic function returns multiple data series, specify a comma delimited list of the names of each subseries. For example: sales,regionName</description>
                        </item>
                        <item>
                            <name>Javascript function</name>
                            <description>(Optional) Specify the name of a Javascript function to call before an Ajax callback is made to refresh the series. The data returned by this Javascript function will be available to the Xbasic function, which computes the series values.</description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
        <group>
            <title>Javascript Data</title>
            <sections>
                <section>
                    <title>Javascript</title>
                    <list>
                        <item>
                            <name>Javascript function</name>
                            <description>Specify the name of the Javascript function that will calculate the series values.</description>
                        </item>
                        <item>
                            <name>Subseries names</name>
                            <description>If your Javascript function returns multiple data series, specify a comma delimited list of names of each subseries. For example: sales, regionName.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>Using the Javascript Type</title>
                    <description>For more on the Javascript Type watch this two part video: [Part 1], [Part 2].</description>
                </section>
                <section>
                    <title>Using a Defined Data Series Inside a Control.</title>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <link href="https://www.viddler.com/v/53743d97">this video on cross-sectional data</link>
        <link href="https://www.viddler.com/v/1587d429">Part 1</link>
        <link href="https://www.viddler.com/v/aa4b148e">Part 2</link>
        <link link="data series editor defining data extraction templates">data extraction template</link>
    </links>
    <see>
        <ref link="how to base a chart on a javascript series type">How to Base a Chart on a Javascript Data Series</ref>
        <ref link="how to base a chart on cross sectional data">How to Base a Chart on Cross-sectional Data</ref>
        <ref link="how to base a chart on a custom series">How to Base a Chart on a Custom Series</ref>
        <ref link="How to write a charting application from a Web service">How to Write a Charting Application For a Web Service</ref>
    </see>
</page>