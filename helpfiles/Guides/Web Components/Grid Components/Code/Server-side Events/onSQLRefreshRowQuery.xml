<page>
    <shortlink>grid onSQLRefreshRowQuery event</shortlink>
    <topic>onSQLRefreshRowQuery Event</topic>
    <description>
        <p>Fires when the Grid needs to select the current row in the Grid to refresh it.</p>
    </description>
    <discussion>
        <p>This event fires every time the Grid needs to refresh the data in the current row.</p>
    </discussion>
    <sections>
        <section>
            <description>The following variables are available to you in the event:</description>
            <list>
                <item>
                    <name-title>Variable</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>e.tmpl</name>
                    <description>The grid component definition</description>
                </item>
                <item>
                    <name>e.rtc</name>
                    <description>Run-time calculations (allows you to pass data to other event handlers)</description>
                </item>
                <item>
                    <name>e.__si</name>
                    <description>State information</description>
                </item>
                <item>
                    <name>e.cn</name>
                    <description>The [SQL::Connection] object for the Grid. You can call this object's *[xb:.execute()]* method to execute your own SQL.</description>
                </item>
                <item>
                    <name>e.sql</name>
                    <description>The SQL Statement that Alpha Anywhere has computed to get the data to refresh the row.</description>
                </item>
                <item>
                    <name>e.arguments</name>
                    <description>The [SQL::Arguments] object with values for all of the arguments in *[xb:e.sql]*. To read a value from arguments: *[xb:e.arguments.find("argumentName").data]*</description>
                </item>
            </list>
        </section>
        <section>
            <description>*[xb:e.arguments]* contains values for each column in the current record's Primary Key. For example if the Primary Key has 2 columns, then you can get the values for these columns as follows:</description>
            <example><![CDATA[e.arguments[e.arguments.argumentNumber("pkvalue_1")].data  - value of first Primary Key column
e.arguments[e.arguments.argumentNumber("pkvalue_2")].data  - value of second Primary Key column]]></example>
        </section>
        <section>
            <description>Your event must set the following properties:</description>
            <list>
                <item>
                    <name-title>Property</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>e.handled</name>
                    <description>Set to *[xb:.t.]* if your event has returned the resultset to use</description>
                </item>
                <item>
                    <name>e.resultset</name>
                    <description>A [SQL::ResultSet] of records to show in the Grid (need only be set if *[xb:e.handled]* is set to *[xb:.t.]*)</description>
                </item>
            </list>
        </section>
        <section>
            <description>Your event can optionally set these properties of the *[xb:e]* object:</description>
            <list>
                <item>
                    <name-title>Property</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>e.fatalError</name>
                    <description>Set to *[xb:.t.]* if a fatal error has occurred</description>
                </item>
                <item>
                    <name>e.errorText</name>
                    <description>The error text to show if a fatal error occurred</description>
                </item>
            </list>
        </section>
        <section>
            <title>Setting State Variables</title>
            <description>
                <p>You can also set state variables in this event. The value of any state variables will be available in all subsequent ajax callbacks (in the e.__si2 object).</p>
                <p>To set a state variable:</p>
            </description>
            <example><![CDATA[e._state.myvar1 = "value1"
e._state.myvar2 = "value2"]]></example>
        </section>
    </sections>
    <links>
        <link link="sql::connection object">SQL::Connection</link>
        <link link="sql::arguments class">SQL::Arguments</link>
        <link link="sql::resultset object">SQL::ResultSet</link>
    </links>
</page>