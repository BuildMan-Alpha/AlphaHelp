<page build="0">
    <shortlink>rest reference builder</shortlink>
    <topic>REST Reference Builder</topic>
    <description>
        <p>The REST Reference Builder is used to define endpoints, authentication requirements, and more for querying a third-party REST API.</p>
    </description>
    <discussion>
        <p>The REST Reference Builder creates an Xbasic class that can be used to make API calls against a third-party REST service in a server-side script. Scripts to query the API are inserted into server-side code using the REST Reference Genie. The genie generates the code required to call the endpoint configured in the REST Reference. Endpoints, or Actions, are made available as methods of the Xbasic class for the REST Reference.</p>
    </discussion>
    <sections>
        <section>
            <title>Creating a REST Reference</title>
            <description>
                <p>To create a REST Reference, select the "Web Services" option on the Web Projects Control Panel. Then click the New button. This opens the New Service Type dialog.</p>
                <p>In the REST section, click *[ui:Create a new definition to consume a REST service]* to create a new REST Reference.</p>
            </description>
            <figure>
                <title>New Service Type dialog</title>
                <alt>New Service Type dialog</alt>
                <link>images/newServiceDlg.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The REST Reference can be created from an existing Google Service, imported from a Swagger definition, or built from scratch.</p>
            </description>
            <figure>
                <title>Enter Name of REST Reference dialog</title>
                <alt>Enter Name of REST Reference dialog</alt>
                <link>images/newRestReference.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>To create a REST Reference for a Google service, click the *[ui:Import Google Service...]* URL and select the desired Google service. Refer to Google's documentation for the desired API for more information about using the selected API.</p>
            </description>
            <figure>
                <title>Google REST Service Definition Import</title>
                <alt>Google REST Service Definition Import</alt>
                <link>images/googleService.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Some REST APIs provide a Swagger definition. A Swagger definition is a JSON document that describes a RESTful API. If the API that you'd like to use provides a Swagger definition, you can use the the *[ui:Import Swagger...]* link to import the Swagger definition. The Swagger definition can be pasted directly into the window, imported from a URL, or loaded from a local file. Alpha Anywhere will use the definition to generate the REST Reference.</p>
            </description>
            <figure>
                <title>Enter Swagger Definition</title>
                <alt>Enter Swagger Definition</alt>
                <link>images/swaggerDefinition.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>After entering a *[ui:Name]*, you can click *[ui:Create]* to generate the REST Reference. Alpha Anywhere will create a new file with an "a5restapi" extension with the name specified in the Create REST Reference dialog. The Edit REST Service Definition may also automatically open.</p>
            </description>
        </section>
        <section>
            <title>Overview of the Edit REST Service Definition dialog</title>
            <description>
                <p>The Edit REST Service Definition dialog contains the REST Reference definition. Included in the definition is the REST API URL, endpoints (Actions), [Named Resource Providers], and other information required to call the API.</p>
                <p>If you don't import a Google service, the Edit REST Service Definition dialog opens after creating the service.</p>
            </description>
            <figure>
                <title>Edit REST Service Definition</title>
                <alt>Edit REST Service Definition</alt>
                <link>images/editService2.png</link>
            </figure>
        </section>
        <section>
            <title nested="2">Properties</title>
            <description>
                <p>The *[ui:Properties]* tab contains the base URL and Provider information for the API:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Property</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>Resource URL</name>
                            <description>The base path for the REST service. E.g. https://www.myservice.com/v1/api/</description>
                        </item>
                        <item>
                            <name>Public Access - Provider</name>
                            <description>The API endpoint for endpoints that don't require authentication. Public endpoints may require an API key but generally don't require the user to provide credentials, such as OAuth credentials.</description>
                        </item>
                        <item>
                            <name>Private Access - Provider</name>
                            <description>The API endpoint for endpoints that require authentication, such as OAuth.</description>
                        </item>
                    </list>
                </p>
                <p>Endpoints for the REST API are added as *[ui:Actions]*. An *[ui:Action]* specifies the Path, parameters, the method (GET, POST, etc), and the schema for content sent in the body and header of the request.</p>
                <p>You can add an Action using the *[ui:Add Action]* button. You can also create an Action by importing from a CURL command via *[ui:Import from CURL...]*.</p>
            </description>
            <figure>
                <title>Import from CURL</title>
                <alt>Import from CURL</alt>
                <link>images/importCURL.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Placeholders can be used where needed in the URL and body using the syntax *[js:{placeholder_name}]*. "placeholder_name" corresponds to the value of *[ui:Name]* for a Parameter, defined at the bottom of the dialog using the *[ui:Add Parameter]* button. Any headers required by the endpoint are also defined as Parameters.</p>
            </description>
            <figure>
                <title>Edit Action dialog</title>
                <alt>Edit Action dialog</alt>
                <link>images/editAction.png</link>
            </figure>
        </section>
        <section>
            <title>REST Reference Genie</title>
            <description>
                <p>The REST Reference Genie generates the Xbasic to call an endpoint defined in a REST Reference. The genie is found in the context menu for the Xbasic editor. Right-click anywhere in the Xbasic editor, then select *[ui:Genies...]* &gt; *[ui:REST Reference call...]*.</p>
            </description>
            <figure>
                <title>REST Reference call option in the context menu</title>
                <alt>REST Reference call option in the context menu</alt>
                <link>images/contextMenu.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Select the REST service in the *[ui:Service]* column that you'd like to use, then choose the endpoint to call in the Method column. Alpha Anywhere will display the Xbasic to call the endpoint in the code window at the bottom of the dialog. Click *[ui:Copy Example to Clipboard]* to copy the code. When you click *[ui:OK]*, the code for the selected method is automatically inserted into the Xbasic editor at the cursor location.</p>
            </description>
            <figure>
                <title>Pick a REST Service and Method dialog</title>
                <alt>Pick a REST Service and Method dialog</alt>
                <link>images/restReferenceSelector.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The *[ui:Generate]* dropdown box at the top fo the dialog can be used to add help information to the Xbasic in the form of comments.</p>
            </description>
        </section>
        <section>
            <title>Example: Building a REST Reference using the Random Useless Facts API</title>
            <description>
                <p>In this example, we'll build a REST Reference for the Random Useless Facts API. The *[extlink:Random Useless Facts API@https://uselessfacts.jsph.pl]* is a free public REST API that returns a random useless fact. The API has two end points: *[js:/random]*, which returns a random useless fact, and *[js:/today]* which returns the useless fact of the day. Facts can be retrieved in German (de) or English (en) in a variety of formats (.html, .json, .txt, or *[extlink:.md@https://en.wikipedia.org/wiki/Markdown]*). For example, the URL to retrieve a random fact in English as JSON is:</p>
                <p>
                    <example><![CDATA[https://uselessfacts.jsph.pl/random.json?language=en]]></example>
                </p>
            </description>
            <cases>
                <case>
                    <title nested="2">Creating the REST Reference</title>
                    <description>
                        <p>To create a new REST Reference, select the "Web Services" option on the Web Projects Control Panel. Then click the New button.</p>
                    </description>
                </case>
                <case>
                    <description>
                        <p>When the New Service Type dialog appears, select *[ui:Create a new definition to consume a REST service]* in the REST portion of the dialog.</p>
                    </description>
                    <figure>
                        <title>New Service Type dialog</title>
                        <alt>New Service Type dialog</alt>
                        <link>images/newServiceDlg.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>Enter a name for the REST Reference then click *[ui:Create]*. In this example, we'll name the REST Reference *[randomFact]*.</p>
                    </description>
                    <figure>
                        <title>Enter Name of REST Reference prompt</title>
                        <alt>Enter Name of REST Reference prompt</alt>
                        <link>images/nameRestReference.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>After creating the REST Reference, Alpha Anywhere opens the reference for editing. The *[ui:Edit REST Service Definition]* builder is where you specify the REST API URL, authentication requirements, and endpoints (*[ui:Actions]*) that you'd like to call.</p>
                    </description>
                    <figure>
                        <title>Edit REST Service Definition builder</title>
                        <alt>Edit REST Service Definition builder</alt>
                        <link>images/editService1.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>Next, we'll configure the Resource URL for the API. Add the following information to the Edit REST Service Definition builder:</p>
                        <p>
                            <list>
                                <item>
                                    <name>*[ui:Resource URL]*</name>
                                    <description>https://uselessfacts.jsph.pl</description>
                                </item>
                            </list>
                        </p>
                        <p>The Random Useless Fact API does not require authentication, so the *[ui:Public Access]* and *[ui:Private Access]* properties should be blank.</p>
                        <p>Now that we've defined the Resource URL, we can add *[ui:Actions]* for the *[js:/random]* and *[js:/today]* endpoints. Click the *[ui:Add Action]* button to add a new action.</p>
                    </description>
                    <figure>
                        <title>Add Action button</title>
                        <alt>Add Action button</alt>
                        <link>images/addAction.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>The first action we'll add will call the *[js:/today]* endpoint. Enter the following values in for the corresponding property in the Action editor:</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Property</name-title>
                                    <description-title>Value</description-title>
                                </item>
                                <item>
                                    <name>*[ui:Name]*</name>
                                    <description>today</description>
                                </item>
                                <item>
                                    <name>*[ui:Method]*</name>
                                    <description>get</description>
                                </item>
                                <item>
                                    <name>*[ui:Access]*</name>
                                    <description>public</description>
                                </item>
                            </list>
                        </p>
                        <p>Next, we'll define the *[ui:Path]*. Click the [...] smart field button for the *[ui:Path]* property. Then, enter the following values in the *[ui:Path]* and *[ui:Query Parameters]* text boxes:</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Property</name-title>
                                    <description-title>Value</description-title>
                                </item>
                                <item>
                                    <name>*[ui:Path]*</name>
                                    <description>/today{format}</description>
                                </item>
                                <item>
                                    <name>*[ui:Query Parameters]*</name>
                                    <description>language={language}</description>
                                </item>
                            </list>
                        </p>
                    </description>
                    <figure>
                        <title>Defining the Path and Query Parameters</title>
                        <alt>Defining the Path and Query Parameters</alt>
                        <link>images/addingPath.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>The *[js:/today]* endpoint has two optional parameters you can use to request a specific file format and language to use when returning the fact. The file format is part of the path. For example, *[js:/today.json]* will return the fact in JSON format.</p>
                        <p>To make the call dynamic, we can specify a placeholder in the path representing the optional format: {format}.</p>
                        <p>The language is passed to the endpoint as a query parameter. E.g. *[js:/today?language=en]* returns the fact in English. We can use a placeholder, {language}, in the Query Parameters to make the is a placeholder for the requested language.</p>
                        <p>Click *[ui:OK]* to save the Path definition.</p>
                    </description>
                </case>
                <case>
                    <description>
                        <p>After defining the *[ui:Path]*, we next need to define the parameters used in the path definition. We'll configure the {language} placeholder first. Alpha Anywhere should automatically add a parameter for language after saving the *[ui:Path]*.</p>                        
                    </description>
                    <figure>
                        <title>Specifying parameters</title>
                        <alt>Specifying parameters</alt>
                        <link>images/languageParam.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>If there are no parameters listed in the dialog, you can create the language parameter using *[ui:Add Parameter]*: click the *[ui:Add Parameter]* button to add a parameter, select the *[ui:Query]* option, then click *[ui:OK]*.</p>
                    </description>
                    <figure>
                        <title>Add a new Query Parameter</title>
                        <alt>Add a new Query Parameter</alt>
                        <link>images/addQueryParameter.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>Verify that the Query parameter for language has the following values for *[ui:Name]* and *[ui:Location]*:</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Property</name-title>
                                    <description-title>Value</description-title>
                                </item>
                                <item>
                                    <name>*[ui:Name]*</name>
                                    <description>language</description>
                                </item>
                                <item>
                                    <name>*[ui:Location]*</name>
                                    <description>Query</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </case>
                <case>
                    <description>
                        <p>Next, we'll create the format parameter. Click *[ui:Add Parameter]*, select the *[ui:Path]* option, then click *[ui:OK]*.</p>
                    </description>
                    <figure>
                        <title>Add a new Path Parameter</title>
                        <alt>Add a new Path Parameter</alt>
                        <link>images/addPathParameter.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>Select the new path parameter. Then, enter the following values for the *[ui:Name]* and *[ui:Location]* properties:</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Property</name-title>
                                    <description-title>Value</description-title>
                                </item>
                                <item>
                                    <name>*[ui:Name]*</name>
                                    <description>format</description>
                                </item>
                                <item>
                                    <name>*[ui:Location]*</name>
                                    <description>Path</description>
                                </item>
                            </list>
                        </p>
                    </description>
                    <figure>
                        <title>The complete definition for the today endpoint</title>
                        <alt>The complete definition for the today endpoint</alt>
                        <link>images/formatParam.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>When you've finished defining the {format} parameter, you can test the Action. Click *[ui:Test]* to open the Action tester</p>
                    </description>
                    <figure>
                        <title>Action test dialog</title>
                        <alt>Action test dialog</alt>
                        <link>images/actionTest.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>Enter a language and format in the *[ui:language]* and *[ui:format]*. The Random Useless Fact API supports the following values for language and format:</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Language Options</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>en</name>
                                    <description>Return the fact in English</description>
                                </item>
                                <item>
                                    <name>de</name>
                                    <description>Return the fact in German</description>
                                </item>
                            </list>
                        </p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Format Options</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>.html</name>
                                    <description>Return the fact formatted as HTML.</description>
                                </item>
                                <item>
                                    <name>.json</name>
                                    <description>Return the fact formatted as JSON.</description>
                                </item>
                                <item>
                                    <name>.txt</name>
                                    <description>Return the fact formatted as plain text.</description>
                                </item>
                                <item>
                                    <name>.md</name>
                                    <description>Return the fact formatted as *[extlink:Markdown@https://en.wikipedia.org/wiki/Markdown]*</description>
                                </item>
                            </list>
                        </p>
                        <p>The image below shows the result of calling the endpoint with *[ui:language]* set to "en" and *[ui:format]* set to ".json":</p>
                    </description>
                    <figure>
                        <title>Action test results</title>
                        <alt>Action test results</alt>
                        <link>images/actionTestResult.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>When you are done testing the endpoint, click *[ui:Save]* to save the Action.</p>
                        <p>Repeat the process above to add the *[js:/random]* endpoint. The *[js:/random]* endpoint takes the same optional parameters as *[js:/today]*. The Action definition should be identical to *[js:/today]* with the exception of the path portion for the *[ui:Path]* parameter, which is defined as *[js:/random{format}]*.</p>
                        <p>After adding the *[js:/random]* Action, save the REST Service Definition. It can now be added to any Xbasic script using the [REST Reference Genie].</p>
                    </description>
                </case>
            </cases>
        </section>
    </sections>
    <links>
        <link href="/images/tools/ellipsesButton.png">...</link>
        <link href="#section1_REST%20Reference%20Genie">REST Reference Genie</link>
        <link link="server%20ref%20web%20project%20settings#section1_Resource%20Providers">Named Resource Providers</link>
    </links>
    <see>
        <ref link="consuming rest services">Consuming REST Services</ref>
    </see>
</page>