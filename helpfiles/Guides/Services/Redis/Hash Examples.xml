<page>
<title>Simple Example Using Redis Hash</title>
<description>
Redis hash is a key that contains its own 'keys' called 'fields'.
</description>
<sections>
<section>
<description>
<p>In the following example, we create a hash called HiScore that has fields that match names, each of which contain a numeric value.</p>
<p>The HSet method is used to set a field in a hash to a value</p>
<p>The HExists method returns a valueInteger of '1'' if a field exists, otherwise a value of '0' is returned.</p>
<p>The HGetAll method returns an array of interleaved key/value pairs.</p>
<p>The HKeys method returns just the fields (keys).</p>
<p>The HVals method returns just the values.</p>
<p>The HDel method removes a field from the hash</p>
</description>
<example><![CDATA[
dim redis as extension::RedisClient = extension::RedisClient::CreateClient()
dim hash as extension::RedisResult

redis.HSet("HiScore","John",100)
redis.HSet("HiScore","Tim",120)
? redis.HExists("HiScore","John").valueInteger
= 1
? redis.HExists("HiScore","Jim").valueInteger
= 0
hash = redis.HGetAll("HiScore")
? hash.type
= "Array"

? hash.valueString
= John
100
Tim
120

redis.HSet("HiScore","John",130)
hash = redis.HGetAll("HiScore")
? hash.valueString
= John
130
Tim
120

hash = redis.HKeys("HiScore")
? hash.valueString
= John
Tim

hash = redis.HVals("HiScore")
? hash.valueString
= 130
120

redis.HDel("HiScore","John")

hash = redis.HKeys("HiScore")
? hash.valueString
= "Tim"
]]>
</example>
</section>
</sections>
</page>