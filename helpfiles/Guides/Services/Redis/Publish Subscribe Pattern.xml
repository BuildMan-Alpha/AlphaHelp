<page>
<topic>The Redis Publish Subscribe Pattern</topic>
<description>
An example of how to implement Redis Publish and Subscribe in XBasic.
</description>
<sections>
<section>
<description>
<p></p>
</description>
<example><![CDATA[
dim redis as extension::RedisClient = extension::RedisClient::CreateClient()
redis.CreateListener("myNotify","SUBSCRIBE mynotify")
dim note as c 

ui_modeless_dlg_box("notice_handler",<<%dlg%
{title=Get Notifications}
Notice: [%M%.100,20note];
%dlg%,<<%code%
if a_dlg_button = "quit" then
	a_dlg_button = ""
	ui_modeless_dlg_close("notice_handler")
else if word(a_dlg_button,1,":") = "note" then
    note = substr(a_dlg_button,6)
	a_dlg_button = ""
end if
%code%)

thread_create("mySubscribe_thread",<<%code%
dim redis as extension::RedisClient = extension::RedisClient::CreateClient()
dim srv as extension::Listener 
srv = extension::Listener::Get("myNotify")
while .not. srv.Closed() 
	dim event as extension::ListenerEvent 
	event = srv.Read()
	if event.data = "quit" then
		ui_dlg_event("notice_handler","quit")
		exit while
	end if
	ui_dlg_event("notice_handler","note:"+event.data)	
end while
srv.close()
%code%)
]]>
</example>
</section>
<section>
<description>
<p></p>
</description>
<example><![CDATA[
dim redis as extension::RedisClient = extension::RedisClient::CreateClient()
redis.Publish("mynotify","Hello World")

redis.Publish("mynotify","Goodbye World")

redis.Publish("mynotify","quit")
]]>
</example>
</section>
</sections>
</page>