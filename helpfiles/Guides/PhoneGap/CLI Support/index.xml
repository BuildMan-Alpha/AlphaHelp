<page>
 <topic>PhoneGap / Cordova CLI Builder  </topic>
	<description>
		Alpha Anywhere includes a CLI build option in the PhoneGap App Builder. Support is provided for Android builds on a Windows PC and iOS builds on a Mac. 
	</description>

	<discussion>
		<p>For Android, the build scripts will build an Android APK file, installing all requested plugins. Options are provided to install the APK file on an Android device through the USB debug cable, by scanning a QR Code or the APK can be uploaded to the cloud so that it could be shared and installed by a group of test users. For iOS apps, the builder will package up all of the required app files into a zip file and generate a Bash shell script to build the Cordova App on a Mac.</p>
		
		<p>Alpha Anywhere has supported the creation of native iOS, Android and Windows Mobile Apps through the use of Adobe's PhoneGap Build service for many years. PhoneGap Build removes the requirement of installing the native mobile platform development tools on the local development machine so it is simple to build Android, iOS and Windows native mobile apps from a Windows PC.</p> 

		<p>However, there are certain plugins that are not supported at the present time through PhoneGap Build. These include any plugin that requires the use of hooks. Hooks are scripts that the Cordova CLI executes at certain points in the application build process. They allow the developer to extend the Cordova framework to better suit certain specific plugin requirements. Hooks can be used to integrate the CLI into a larger framework but they are typically used to control project creation and manipulate files in a project.</p>

		<p>The Cordova CLI provides a command line interface for creating Cordova (PhoneGap) apps. It is supported on OSX and Windows development machines and requires the developer to install the Cordova CLI and the native app developer tools on the development machine.</p> 

		<p>If you want to build iOS apps using the Cordova CLI, you will need a Mac with the Cordova CLI and Xcode installed. You will also need an Apple Developer Account.</p> 

		<p>To develop Android apps on a Windows PC you will need to install the Java SE Development Kit (JDK), NodeJS, NPM, the Android SDK (or Android Studio) and the Cordova CLI.</p>
		
	</discussion>
	
	<sections>
		<section>
			<title>Windows PC Android SDK installation and setup for deploying Cordova Apps</title>
			<steps>
				<step>
					<description>*[Install Node.js]*</description>
					<cases>
						<case>		
							<description>a. Download the installer from *[extlink:https://nodejs.org/en/downloads]*</description>
								<note>Node.js needs to be added to the PATH environment variable, which is done by default.</note>
						</case>
						<case>
							<description>b.	To test the installation, open up a new command window and type node --version
								The version number should be displayed.
							</description>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install a local Git client]* (if not previously installed).</description>
					<cases>
						<case>
							<description>a.	See: *[extlink:https://git-scm.com/downloads]* 
							
							</description>
							<note>Default settings are recommended.</note>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install Cordova]*</description>
					<cases>
						<case>		
							<description>a. From a command window, enter npm install -g cordova.</description>
						</case>
						<case>
							<description>
								b. To verify proper installation, from the command window enter cordova -v, the installed Cordova version will be displayed. 
							</description>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install the Java Development Kit]*</description>
					<cases>
						<case>
							<description>
								a. See: *[extlink:http://www.oracle.com/technetwork/java/javase/downloads/index.html]*
							</description>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install Android Studio]*</description>
					<cases>
						<case>
							<description>
								a. See: *[extlink: https://developer.android.com/studio/install.html]*
							</description>
							<note>After installing Android Studio, you must install the packages for whatever API level you wish to target. </note>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Set the Environment Variables]*</description>
					<cases>
						<case>
							<description>
								The Cordova CLI will attempt to set these variables for you but in certain cases they need to be set manually. In Windows, the steps to set the environment variables are dependent on the installed version of Windows. You must close and open any command prompt windows after making the changes for the changes to take effect.
							</description>
							<steps>
								<step>
									<description>
										Click on the *[Start Menu]* in the lower left corner of the desktop.
									</description>
								
								</step>
								<step>
									<description>
										In the search bar, search for *[Environment Variables]* and select *[Edit the System Environment Variables]*.
									</description>
									
								</step>
								<step>
									<description>
										In the window that appears, click the *[Environment Variables]* button.
									</description>
									<figure><link>images/env_vars1.png</link></figure>
								</step>
								<step>
									<description>
										Click *[New]*... and enter the variable name and value. 
									</description>
								</step>
								<step>
									<description>
										Set the *[JAVA_HOME]* environment variable to the location of your JDK installation.
									</description>
								</step>
								<step>
									<description>
										Set the *[ANDROID_HOME]* environment variable to the location of your Android SDK installation.
									</description>
									<figure><link>images/env_vars2.PNG</link></figure>
								</step>
							</steps>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Edit the System Path]*</description>
					<cases>
						<case>
							<steps>
								<step>
									<description>Select the *[Path]* variable and press *[Edit]*.</description>
									<figure><link>images/env_vars3.png</link></figure>
								</step>
								<step>
									<description>*[Add]* the following entries:</description>
										<cases>
											<case>
												<steps>
													<step>
														<description> %JAVA_HOME%\bin</description>
													</step>
													<step>
														<description>%ANDROID_HOME%\platform-tools</description>
													</step>
													<step>
														<description>%ANDROID_HOME%\tools</description>
													</step>
												</steps>
											</case>
										</cases>
										<figure><link>images/env_vars4.png</link></figure>
								</step>
							</steps>
						</case>
					</cases>
				</step>
			</steps>
		</section>

		<section>
			<title>Mac OSX Cordova Installation</title>
			<steps>
				<step>
					<description>*[Install Xcode]* (if not previously installed)</description>
					<cases>
						<case>
							<steps>
								<step>
									<description>See: *[extlink:https://developer.apple.com/xcode/]* and click the *[Download]* button.</description>
								</step>
							</steps>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install Node.js]*</description>
					<cases>
						<case>		
							<description>a. 	Download the installer from *[extlink:https://nodejs.org/en/downloads]*</description>
							<note>*[/usr/local/bin]* needs to be added to the PATH environment variable, which should done by default. To verify, enter echo $PATH from Terminal.
</note>
							
						</case>
						<case>
							<description>To test the installation, from Terminal, type *[node --version]*
								The version number should be displayed.
							</description>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install a local Git client]* (if not previously installed).</description>
					<cases>
						<case>
							<description>a.	See: *[extlink:https://git-scm.com/downloads]* 
							
							</description>
							<note>Default settings are recommended.</note>
						</case>
					</cases>
				</step>
				<step>
					<description>*[Install Cordova]*</description>
					<cases>
						<case>		
							<description>a. From a Terminal window, enter *[npm install -g cordova]*.</description>
						</case>
						<case>
							<description>
								b. To verify proper installation, from a Terminal window enter *[cordova -v]*, the installed Cordova version will be displayed. 
							</description>
						</case>
					</cases>
				</step>
				
			</steps>
		</section>
		
		<section>
			<title>Using the PhoneGap CLI Builder</title>
			
			<description>
				<p>From the PhoneGap App Builder, *[it is best to start a new PhoneGap Project]* to make sure you are using the latest project template files. 
					These files change from time to time based on device operating system revisions or revisions to PhoneGap.
					*[Set the App Build Target to CLI]*. 
				</p>
			</description>
			<figure><link>images/pg_cli1.png</link></figure>
		</section>
		<section>
			<description>
				<p>The options within the PhoneGap App Builder will be updated to reflect the options that are applicable to a CLI build.
					*[Make sure to specify the Application ID properly]*. The Application ID uses reverse domain naming notation and the CLI app folder created will use 
					the app name specified in this string. For example, if the application id is com.alphasoftware.test1 then the CLI project folder created will be test1. 
					Spaces are not allowed and the name will automatically be in lower case, per Android conventions.
				</p>   

				<p>The Cordova version that is used for the CLI build is dictated by the installed Cordova CLI version. 
					*[To update the Cordova CLI version]* to the latest release, from a Command window, enter *[npm install -g cordova]*.
				</p>

				<p>All other options are set similar to the values used for PhoneGap Build. Make sure to specify the Ajax URL as you would for PhoneGap Build.
				</p>

				<p>You can select a custom app icon (remember to use a 512px x 512px image) and splash screen or launch image. 
					If nothing is specified a default icon and splashscreen will be used. 
				</p>
			
				<p>Specify all of the required required plugins as you would for PhoneGap Build. 
					If you are using any plugins that require you to insert a hook, you will need to build the CLI version of the app and then edit the 
					generated source code to include the hook per the plugin documentation. You can then run the Cordova CLI Builder again and update the app. 
				</p>

				<p>Once all of the options have been set, select the *[Save / Launch PhoneGap CLI Builder]* button. The PhoneGap CLI Project Builder Window will appear.
				</p>
			</description>
			<figure><link>images/pg_cli2.png</link></figure>
		</section>
		
		<section>
			<title>The Cordova CLI Builder</title>
			<figure><link>images/pg_cli3.png</link></figure>
		</section>
		
		<section>
			<title>Build Specifications</title>
			<description>
				<p>*[Step 1 is to specify the Target Project Build Folder]*. This will be the root folder for the CLI generated files. 
					If you have specified an Android build, a sub-folder will be created with the name of the app ID. 
					If you have specified an iOS build, an iOS files sub-folder will be created with a naming convention of appid_iOS_Files. 
					The iOS files generated need to be transferred to a Mac to build an iOS App
				</p>	
				<p>*[Generate Android Build]*</p>
				<p>Check this option to build a CLI Cordova Android project. Once checked, numerous other Android project related options will appear.</p>
				<p>*[Generate iOS Build]*</p>
				<p>Check this option to package up all of the app files and generate a BASH script for building a Cordova project on a Mac.</p>		
			</description>
		</section>
		<section>
			<title>Android Build Options</title>
		</section>
		<section>
			<title>Post APK Build Behavior</title>
		</section>
		
	</sections>
</page>