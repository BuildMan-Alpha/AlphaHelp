<page build="0">
    <shortlink>cli builder checklist</shortlink>
    <topic>Building iOS Applications with Cordova CLI</topic>
    <description>A quick guide for creating iOS applications with Cordova CLI using Xcode.</description>
    <sections>
        <section>
            <title>Generating the Build Script</title>
            <steps>
                <step>
                    <description>
                        <p>On the *[ui:Web Projects Control Panel]*, launch the PhoneGap Builder.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>In the PhoneGap Build Project Settings, set *[ui:App Build Target]* to *[CLI]*</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Check the *[ui:iOS]* property.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Select the *[ui:Initial UX Component]* and configure the *[ui:URL for All Ajax Callbacks]*. The Ajax Callback URL is only required if your application includes server-side code. See [Publishing Resources to the Application Server] for instructions on publishing resources to the Application Server.</p>
                    </description>
                    <figure>
                        <link>images/ios_cli1.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Add any additional assets your application requires, including *[ui:Additional Files Required]* or *[ui:SQLite Databases]*. If you plan on using Instant Update or Firebase Authentication, enable and configure those features.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>If this is the first time you are building the Cordova CLI application, or want to update your image resources for the application, check *[ui:Generate Image Resource Files]*. Then, check *[ui:Generate iOS Storyboard Launch Images]* and set the *[ui:Master Icon]* and *[ui:iOS Storyboard Launch Image]* properties.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Set the *[ui:Application Id]*, *[ui:Version]*, *[ui:Application Name]*, *[ui:Description]*, *[ui:App Author]*, *[ui:App Email]*, and *[ui:App Info Link]* and any other settings required by your application.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Make sure *[ui:Alpha WkWebView Engine]* is checked.</p>
                    </description>
                    <figure>
                        <link>images/ios_cli2.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Add any additional required plugins for your application.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Click *[ui:Save &amp; Launch PhoneGap CLI Builder]* when you are done setting up your PhoneGap Build Project Settings.</p>
                    </description>
                    <figure>
                        <link>images/ios_cli3.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Set the *[ui:Target Project Build Folder]*. This is where the CLI build files will be generated for your application.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Check *[ui:Generate iOS Build Script]*.</p>
                    </description>
                    <figure>
                        <link>images/ios_cli4.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Click *[ui:Build App]* to generate the files. Note where the files were generated. You will need it later.</p>
                    </description>
                </step>
            </steps>
        </section>
        <section>
            <title>Publishing Resources to the Application Server</title>
            <description>
                <p>If your app does any server-side processing, you must publish the required components and files to Alpha Cloud or a server running the Alpha Anywhere Application Server.</p>
            </description>
            <steps>
                <step>
                    <description>
                        <p>Create a publishing profile if you do not have an existing publishing profile to publish your files to the Application Server. Go to *[ui:Web]* &gt; *[ui:Project Settings]* &gt; *[ui:Add New Profile]*.</p>
                    </description>
                    <figure>
                        <link>images/create_profile.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Configure the SameSite Cookie Policy on the Application Server. The SameSite Cookie policy must be set to "Unset" or "None". It is recommended to start with a policy of "Unset".</p>
                        <p>If you are publishing to the Application Server for IIS or Alpha Cloud, the SameSite Cookie Policy is configured in the [Web Project Properties].</p>
                        <p>If you are publishing to the Standalone Application Server or Development Server (testing only), the SameSite policy is set on the [Advanced] tab of the Application Server settings.</p>
                    </description>
                    <note>
                        <p>This step may require access to the server running the Application Server.</p>
                    </note>
                    <figure>
                        <title>SameSite Cookie Policy is set in the Web Project Properties for IIS and Alpha Cloud</title>
                        <link>images/samesite_cloudIIS.png</link>
                    </figure>
                    <figure>
                        <title>SameSite Cookie Policy is set on the Advanced tab for the standalone Application Server</title>
                        <link>images/samesite_classic.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>From the Web Projects Control Panel, click *[ui:Publish]* in the toolbar or select *[ui:Publish Project]* under the *[ui:Web]* menu.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Select the Publishing Profile for the server that will host your application files.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Publish all components and files required by your application to the server.</p>
                    </description>
                </step>
            </steps>
        </section>
        <section>
            <title>Building the iOS Application with Xcode</title>
            <description>
                <p></p>
            </description>
            <steps>
                <step>
                    <description>
                        <p>Navigate to where the Cordova CLI Build Script was created.</p>
                    </description>
                    <figure>
                        <title>The Build Script is created within a folder in the *[ui:Target Project Build Folder]*, specified in the PhoneGap CLI Builder</title>
                        <link>images/ios_cliBuild1.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Copy the files to a location that can be accessed from the Mac you plan to use to build your iOS application. This can be a third-party service such as Google Drive or DropBox, a server, or other location that can be accessed from both the Mac and your Alpha Anywhere Development machine.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>Copy the files from the location where they were uploaded to your Mac machine. The Mac can be a physical machine that you own or hosted through a third-party service such as *[extlink:MacInCloud]*.</p>
                    </description>
                    <figure>
                        <link>images/ios_cliBuild2.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Open *[extlink:Terminal@https://support.apple.com/guide/terminal/welcome/mac]* on the Mac.</p>
                    </description>
                    <tip>
                        <p>Click the magnifying glass in the upper right-hand corner to open *[extlink:Spotlight@https://support.apple.com/en-us/HT204014]* and search for "terminal" to open Terminal.</p>
                        <p>[screenshot_terminal]</p>
                    </tip>
                </step>
                <step>
                    <description>
                        <p>In *[ui:Terminal]*, use the *[code:cd]* command to navigate to the directory where the build script is saved. For example, if you put the build script in the Documents folder in a folder called "MyBuildScript", you would enter the following:</p>
                    </description>
                    <example><![CDATA[cd ~/Documents/MyBuildScript]]></example>
                    <note>Make sure you are in the same folder as the *[ui:build.sh]* file.</note>
                </step>
                <step>
                    <description>
                        <p>Run the build script to generate an Xcode workspace by entering the following command in Terminal:</p>
                        <p>
                            <example><![CDATA[bash build.sh]]></example>
                        </p>
                    </description>
                    <figure>
                        <title>Navigate to the folder where the build script is stored and run the script</title>
                        <link>images/ios_cliBuild4.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>In Finder, locate the generated files and open the Xcode project. The Xcode project will have the file extension *[xcworkspace]*. The Xcode project will be located inside the platforms/ios directory. For example, if your application was named "myapp", the Xcode project will be located in the same location as the build.sh file at:</p>
                        <p>
                            <example><![CDATA[myapp/platforms/ios/myapp.xcworkspace]]></example>
                        </p>
                        <p>Double-click the file to open the Xcode project.</p>
                    </description>
                </step>
                <step>
                    <description>
                        <p>When Xcode launches, select the Project name in the project navigator to open the project editor.</p>
                    </description>
                    <figure>
                        <link>images/ios_cliBuild6.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>On the General tab in the project editor, verify the Deployment Info *[ui:Target]* is set to 11.0 or higher. 11.0 is the minimum Target version that does not use UIWebView.</p>
                    </description>
                    <figure>
                        <link>images/ios_cliBuild5.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <p>Next, select your target platform. If you have access to the Mac and are able to connect a device to the machine, this can be your own iPhone or iPad device. If you do not have access to a device, or have not yet setup a provisioning profile, select one of the devices from the emulator list.</p>
                    </description>
                    <figure>
                        <link>images/target_platform.png</link>
                    </figure>
                    <note>When you are ready to build your application for deployment in the app store, the target platform must be "Generic iOS Device".</note>
                </step>
                <step>
                    <description>
                        <p>Build your application. Under the *[ui:Product]* menu, select *[ui:Build]*. If it builds with no errors, you are ready to test your application.</p>
                    </description>
                    <figure>
                        <link>images/ios_cliBuild7.png</link>
                    </figure>
                </step>
            </steps>
        </section>
        <section>
            <title>Testing your Application</title>
            <description>
                <p>Xcode includes an emulator you can use to test your application without needing to install it on a device. To use the emulator, you must first select a target device from the *[ui:iOS Simulators]* section of the target platform dropdown.</p>
            </description>
            <figure>
                <link>images/target_platform.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <link>images/ios_simulators.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>After selecting a simulator, click the *[ui:Run]* button to start the simulator and run your application.</p>
            </description>
            <figure>
                <link>images/run_simulator.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When the simulator launches, the icon for it will appear in app tray at the bottom of the screen. Click the icon to open the simulator.</p>
            </description>
            <figure>
                <link>images/simulator_icon.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When you are done, you can close the simulator by selecting *[ui:Quit Simulator]* from the *[ui:Simulator]* menu.</p>
            </description>
            <figure>
                <link>images/close_simulator.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>If you have physical access to the machine, you can also install your application on a device with a free provisioning profile. To learn more, see *[extlink:Running Your App in the Simulator or on a Device@https://developer.apple.com/documentation/xcode/running_your_app_in_the_simulator_or_on_a_device]*</p>
                <p>If you do not have physical access to the Mac, then you can use *[extlink:TestFlight@https://developer.apple.com/testflight/]* or third-party service such as *[extlink:Diawi@https://www.diawi.com/]* to install and test your application on a device. This may require an *[extlink:Apple Developer Account@https://developer.apple.com/programs/]*.</p>
            </description>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Alpha Anywhere Cordova iOS 13 App Development</title>
                <description>
                    <p>In this video, we discuss building iOS Cordova applications for iOS 13 using WkWebView with the Alpha Anywhere integrated CLI PhoneGap Builder and Xcode. This video shows how to build applications on a Mac as well as using the *[extlink:MacInCloud@https://www.macincloud.com/]* service.</p>
                </description>
                <date>2020-04-01</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.youtube.com/watch?v=DWn-cru0_oc</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link href="#section1_Publishing%20Resources%20to%20the%20Application%20Server">Publishing Resources to the Application Server</link>
        <link link="server%20ref%20web%20project%20settings">Web Project Properties</link>
        <link link="application%20server%20settings%20advanced">Advanced</link>
        <link href="images/ios_cliBuild3.png">screenshot_terminal</link>
    </links>
    <see>
        <ref href="https://support.apple.com/guide/terminal/welcome/mac">Terminal Guide on Mac</ref>
        <ref href="https://support.apple.com/en-us/HT204014">Using Spotlight on Mac</ref>
        <ref href="https://developer.apple.com/documentation/xcode/">Xcode Documentation</ref>
        <ref href="https://www.macincloud.com/">MacInCloud</ref>
        <ref href="https://developer.apple.com/documentation/xcode/running_your_app_in_the_simulator_or_on_a_device">Running your App in an iOS Device Simulator Using Xcode</ref>
    </see>
</page>