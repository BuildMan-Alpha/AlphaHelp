<page>
    <topic>PhoneGap Push Notifications</topic>
    <description>
		Native push notifications overview and all of the component templates that have been created to demonstrate the use of the numerous PhoneGap push notification plugins.
	</description>
    <!--list:.-->
	<sections>
		<section>
			<title>Push Notification Overview</title>
			<description>
				When a native mobile app is registered to process push notifications, the app does not need to be running in order to receive and display the notification. The notification messages are sent from a server back end and received by the device without an explicit request from the device or user. A user must agree to accept notifications from the app but once that is done, the notifications will arrive without the device initiating a request. Depending upon the device, the notification can cause the phone to beep or vibrate and it may display a message either within the app (if it is active and has focus) or as a toast pop-up or across the top of the screen. The message may contain a badge, text, a hyperlink, etc. Typically if the user taps on the message (assuming he/she is not in the app), the app will launch or transition into view.  
			</description>
		</section>
		<section>
			<title>Push Notification Architecture</title>
			<description>
				<p>Push notification processing is platform specific. The process of subscribing to push notifications is very different for iOS, Android and Windows devices. Each platform requires a different push notification dispatch server and each platform requires it's own unique method of app authentication and authorization for push notifications. Security is paramount. Apple, Google and Microsoft provide platform specific push notification servers (PNS) to communicate with their respective devices. At this point in time, access to these servers is free of charge. If you as a developer want to write the application specific server side code that can communicate with each of these platform specific push notification servers, you can. Of course you must be well versed in the specifics of each PNS.</p> 
				
				<p>Apple uses the *[Apple Push Notification Service (APNS)]* which can send notifications to iOS (and indirectly to watchOS), tvOS and OS X devices.</p>
			</description>	
		</section>

		<section>
			<title>Apple Push Notification Service (APNS)</title>
			<figure><link>images/apns.png</link></figure>
		</section>

		<section>
			<description>
				Google uses *[Google Cloud Messaging (GCM)]* which can send notifications to Android devices or to the Google Chrome Internet browser.
			</description>
		</section>

		<section>
			<title>
				Google Cloud Messaging
			</title>
			<figure>
				<link>images/gcm.png</link>
			</figure>
		</section>
		<section>
			<description>
				Windows  uses the *[Windows Push Notification Service (WNS)]* which can send notifications to Windows 8, Windows 8.1, Windows Phone 8.1, Windows 10, Windows 10 Mobile and XBox.
			</description>
		</section>
		<section>
			<title>
				Windows Push Notification Services (WNS)
			</title>
			<figure>
				<link>images/wns.png</link>
			</figure>
		</section>
		<section>
			<title>Cross Platform Push Notification Services</title>
			<description>
				<p>If you are planing to support mutliple devices/platforms, you should consider using a cross platform push notification service. These offer a standard API for their service which in turn processes and forwards the push notifcations to the respective platform specific servers. As such, with one API you can send messages to Android, iOS and Windows devices.</p>
				<p>There are a number of cross platform push notification service providers, each with unique features. There is typically a usage  or monthly charge for these services.
				</p>
				<p>Some of the *[cross platform push notification service providers]* include:</p>
			</description>
			<steps>
				<step><description>Amazon Simple Notification Service (SNS)</description></step>
				<step><description>Bit6 IP Messaging</description></step>
				<step><description>Google Cloud Messaging</description></step>
				<step><description>Microsoft Azure Notification Hub</description></step>
				<step><description>Pushwoosh</description></step>
			</steps>
		</section>
		<section>
			<description>
				We are continually working on numerous component templates that support different cross platform push notification services. If you do not see the service you are interested in exploring in the component template list at the top of this page at the present time, check back at a later date for a possible update.  
			</description>
		</section>
		
	</sections>
</page>