<page>
    <topic>UX Component - Action Javascript - PhoneGap - File System Actions</topic>
   <description>This action in Action Javascript allows you to perform actions on the file system of the mobile device on which your UX is running. </description> 
<sections>
    <section>
      <note>File system actions are only supported for PhoneGap applications. </note>
    </section>
    <section>
        <description>The actions currently supported are:
</description>
        <cases>
            <case>
                  <description>Get Directory Contents
</description>
            </case>
              <case>
                  <description>Get Directory Contents (Recursive)
</description>
            </case>
              <case>
                  <description>Remove Directory
</description>
            </case>
              <case>
                  <description>Remove Directory (Recursive)
</description>
            </case>
              <case>
                  <description>Create File
</description>
            </case>
              <case>
                  <description>Delete File
</description>
            </case>
              <case>
                  <description>File Exists
</description>
            </case>
              <case>
                  <description>Read File
</description>
            </case>
            
        </cases>
    </section>
    <section>
        <description>All of these actions are performed asynchronously. For each action you specify the Javascript to execute once the action has successfully completed. If the action fails, the Javascript you specify for the on failure action is executed.
Because the actions are asynchronous, you cannot simply define an Action Javascript that calls two file system actions sequentially. For example, assume that you defined an Action Javascript that did this
</description>
        <steps>
            <step>
                <description>Create a new directory
</description>
            </step>
               <step>
                <description>Write a file to the new directory
</description>
            </step>
        </steps>
    </section>
    <section>
        <description>This would likely fail because the second action (write a file to the new directory) would be executed immediately after the first action (before the new directory had actually been created).
In order to make the above work, the second action (write a file) needs to be called in the first action's onSuccess function.
The asynchronous nature of file system actions makes it tricky to write complex scripts that perform many file system actions
In the above example, you would need to convert your Action Javascript to text mode and the rearrange the code.
For example, assume you defined the above two actions using Action Javascript. Once you converted to text mode your code would look like this:
</description>
        <example><![CDATA[{dialog.object}.phoneGapCreateDirectory('dir1', function() { //ok}, function() { //fail } );
{dialog.object}.phoneGapCreateFile('dir1/file1.txt','some data',function() { //ok }, function() {//fail },false);
]]></example>
    </section>
      <section>
        <description>To re-organize the code so that the write file action happens after the new directory has been created, we simply paste the action into the create directory's onSuccess function:
</description>
        <example><![CDATA[{dialog.object}.phoneGapCreateDirectory('dir1', function() { 
    //ok
    {dialog.object}.phoneGapCreateFile('dir1/file1.txt','some data',
    function() { //ok }, 
    function() {//fail },false);

}, function() { //fail } );]]></example>
    </section>
    <section>
        <title>PhoneGap File System Methods</title>
        <description>The following methods have been added to the UX for working with files on the mobile device. </description>
  <note>File system actions are only supported for PhoneGap applications. </note>
    </section>
    <section>
        <cases>
            <case>
                <description>Create a directory</description>
                <example><![CDATA[{dialog.object}.phoneGapCreateDirectory(dirName, onComplete, onError) ]]></example>
            </case>
             <case>
                <description>Create a directory (recursively)</description>
                <example><![CDATA[{dialog.object}.phoneGapCreateDirectoryRecurse(dirName, onComplete, onError) ]]></example>
            </case>
             <case>
                <description>Read a directory</description>
                <example><![CDATA[{dialog.object}.phoneGapGetDirectory(dirName, onComplete, onError) ]]></example>
            </case>
             <case>
                <description>Read a directory (recursively)</description>
                <example><![CDATA[{dialog.object}.phoneGapGetDirectoryRecurse(folder, onDirComplete, onDirError) ]]></example>
            </case>
             <case>
                <description>Remove a directory</description>
                <example><![CDATA[{dialog.object}.phoneGapRemoveDirectory(dirName,onSuccess,onError) ]]></example>
            </case>
             <case>
                <description>Remove a directory (recursively)</description>
                <example><![CDATA[{dialog.object}.phoneGapRemoveDirectoryRecurse(dirName,onSuccess,onError) ]]></example>
            </case>
             <case>
                <description>Delete a file</description>
                <example><![CDATA[{dialog.object}.phoneGapDeleteFile(fileName,onSuccess,onError)]]></example>
            </case>
             <case>
                <description>Check if a file exists</description>
                <example><![CDATA[{dialog.object}.phoneGapFileExists(fileName,onResult,onFailed)]]></example>
            </case>
             <case>
                <description>Read a file</description>
                <example><![CDATA[{dialog.object}.phoneGapReadFile(fileName,onReadFile,onReadFileERROR)]]></example>
            </case>
             <case>
                <description>Create a file</description>
                <example><![CDATA[{dialog.object}.phoneGapCreateFile(fileName,text,onCreatedFile,onCreateFileERROR,flagAppend)]]></example>
            </case>
            
            
        </cases>
        
        
        
    </section>
    
    
</sections>
    
    
</page>