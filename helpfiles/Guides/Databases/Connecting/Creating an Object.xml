<page>
	<topic>Creating an Object

</topic>
<description>How to create a connection object and connect to your back-end database.</description>
	<sections>
		<section>
			<title>The SQL::Connection Object</title>
			<description>The first object you will need when using AlphaDAO is the connection object. The connection object allows you to connect to your back-end database. The first connection object method that you will need to use is its .Open() method. To connect to a back-end database, you must provide a connection string. The connection string tells AlphaDAO how to find and open your database. For example, the following code creates a connection object and then connects to the Microsoft Access alphasports.mdb database. </description>
			<steps>
				<step>
					<description>Type this in the Interactive window: 
</description>
					<example><![CDATA[dim conn as SQL::Connection
conn.open( ]]></example>
					<figure><link>images/CST_connection_open.png</link></figure>
				</step>
				<step>
					<description>Right click to open the Create SQL Connection String dialog.
</description>
				</step>
				<step>
					<description>Leave the Connection Type list set to "Access".
</description>
				</step>
				<step>
					<description>Click the 'open folder' icon in the File Name control to navigate to and select the AlphaSports.MDB file in the c:\program files\a5v8\mdbfiles\ directory.
</description>
				</step>
				<step>
					<description>Click Test Connection. This should display a dialog box that tells you the connection succeeded.
</description>
				</step>
				<step>
					<description>Click OK to return to the Interactive window. The code should look like this.
</description>
					<example><![CDATA[dim conn as SQL::Connection
conn.open("{A5API=Access,FileName='C:\Program Files\a5v8\MDBFiles\Alphasports.mdb',UserName='Admin'}")
]]></example>
				</step>
				
			</steps>
			
			
		</section>
		<section>
			<description>It is very important that you close your connections at your end of your scripts. If your script repeatedly opens connections and does not close them, you will run out of resources. To close an open connection, you use the connection object's .Close() method.
Let's close the open connection now. Type this in the Interactive window:
</description>
			<example><![CDATA[conn.close()]]></example>
		</section>
	</sections>
	<limitations>Desktop applications only.</limitations>
	<see>
		<ref link="Working with SQL Databases">Working with SQL Databases</ref>
		<ref link="SQL::Connection Class">SQL::Connection Object</ref>
	</see>
</page>