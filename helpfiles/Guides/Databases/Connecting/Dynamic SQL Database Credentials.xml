<page>
	<shortlink>server dynamic sql database credentials</shortlink>
	<topic>Dynamic SQL Database Credentials</topic>
	<description>By default all users who use an AlphaDAO connection to the SQL database using the same credentials. These credentials are defined in the AlphaDAO Named 	Connections defined in the application publish profile.</description>
	<sections>
		<section>
			<description>For example, when the developer builds an application he may specify that a List control is based on a named connection string called 'MarketingData'. In the Publishing Profile that the developer creates before publishing the application, the developer might specify that this named connection string resolves to:</description>
			<example code="xb"><![CDATA[{A5API='SQLServer',A5DBVersion=2008,Server='myappserver',A5ANSINullPadWarn=Default, UserName='frank',Password='mysecretPassword',Database='Northwind'}]]></example>
		</section>
		<section>
			<description>Every user who uses this application will now connect to the SQL database using a username of 'frank' and a password of 'mysecretpassword'. In many applications, this will be perfectly fine. However, in some applications (particularly applications in which users are required to log in to the application), users may be required to connect to the SQL database using their own credentials. These user credentials can be set easily using the *[xb:setSQLCredentials()]* method of the context.session object:</description>
			<example code="xb"><![CDATA[context.session.setSQLCredentials(Username as c, Password as c)]]></example>
		</section>
		<section>
			<description>For example:</description>
			<example code="xb"><![CDATA[context.session.setSQLCredentials("Dave","DavesPassword") ]]></example>
		</section>
		<section>
			<description>The typical way in which this method is used is:</description>
			<cases>
				<case>
					<description>A page is created to set the 'Redirect page after login' in the security settings. This is the page where session variables are often defined for the currently logged in user.</description>
				</case>
				<case>
					<description>The following code is added to the redirect after login page to set the SQL Credentials:</description>
					<example code="xb"><![CDATA[<%a5'insert code here to look up the appropriate username and password for this user.

'Then, call the context.session.setSQLCredentials() method.
context.session.setSQLCredentials("userNameForUser","passwordForUser")

if .not. Context.Session.CallResult.Success then
    ' Error: SQL Credentials were not set.
    error_generate(Context.Session.CallResult.Text) 
end if
%>]]></example>
				</case>
			</cases>
		</section>
	</sections>
	<see>
		<ref link="Creating Dynamic Connection Strings">Creating Dynamic Connection Strings</ref>
        <ref link="server xb building multi-tenant applications dynamic connection strings">Building Multi-Tenant Applications - Dynamic Connection Strings</ref>
		<ref link="security framework extended user information table">Storing Additional User Information in the Security Framework</ref>
		<ref link="api objects session object set sql credentials method">context.session.setSQLCredentials</ref>
	</see>
</page>