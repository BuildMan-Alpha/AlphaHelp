<page>
    <topic>Connecting to SQL Server</topic>
    <description>Alpha Anywhere AlphaDAO provides an extension driver for SQL Server to simplify building connections using any of the SQL Server ODBC drivers provided by Microsoft. You must first install the appropriate driver for the version of your SQL Server database. In the connection string dialog, select the version of the database you are connecting to. Alpha Anywhere will select the installed driver that is the best fit for the target version.</description>
    <sections>
        <section>
            <title>Before you Begin</title>
            <description>
                <p>Before you begin, make sure you have installed and configured your SQL Server server and installed the appropriate client side driver. For more information on installing and configuring SQL Server, see *[extlink:https://www.microsoft.com/en-us/sql-server/sql-server-downloads]*.</p>
            </description>
            <important>
                <p>Alpha Anywhere is a 32-bit executable.  You must install the 32-bit ODBC client driver for your database. To view those drivers, you will need to run the 32-bit ODBC Data Source Administrator found at c:\windows\syswow64\odbcad32.exe.</p>
            </important>
            <figure>
                <link>images/MicrosoftODBCAd32.jpg</link>
            </figure>
        </section>
        <section>
            <title>Using the SQL Server Connection String Dialog</title>
            <description>When you select SQL Server as your connection type in the connection string dialog, the dialog below will be displayed. Select the version of your database, enter the server name and provide any authentication information required to connect to your database. The values you select will be generated into the connection string at the top of the dialog for you as you make changes.</description>
            <figure>
                <link>images/SQLServerConnectionStringDialogGeneral.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Microsoft documentation identifies "ODBC Driver 18 for SQL Server" as the current driver for "all supported versions" of SQL Server. With the exception of some of the oldest database servers, you should be able to install this driver and successfully connect to and query your database.</p>
                <p>If you get errors or unexpected results when executing SQL, try downloading and installing one of the older drivers listed in [SQL Server Versions].</p>
            </description>
        </section>
        <section>
            <description>
                <p>ODBC Driver 18 for SQL Server changes the default behavior for encryption. Previously it was disabled by default. In ODBC Driver 18 for SQL Server it is enabled by default.</p>
                <p>When connecting to a test database, be sure to set the Trust Server Certificate to checked ('A5TrustServerCertificate=Y') if you have not installed a certificate or are running with a self-signed certificate.</p>
                <p>For production systems, especially those which you connect to on a public network, you should always purchase and install a certificate that can be publicly validated, set Encrypt to checked and set Trust Server Certificate to unchecked.</p>
            </description>
        </section>
        <section>
            <note>Pay attention to the security of your SQL Server environment and the connection from your client to the server. Modern network communication is generally done with TLS (previously called SSL), and SQL Server fully supports this.</note>
        </section>
        <section>
            <description>
                <p>When running any version of SQL Server, be sure to update the database software to keep current with Microsoft bug fixes and security patches.</p>
                <p>Because secure connections to the database rely on Windows infrastructure, you should also keep your version and patch level of Windows as current as possible.</p>
                <p>In the past, it was acceptable, if not advisable to skip applying patches to a working system.  This is no longer the case because of the need for constant security updates. Instead, you will need to watch for frequent updates and test them on your system.</p>
            </description>
        </section>
        <section>
            <title>SQL Server Versions</title>
            <description>
                <p>The list below shows the database version and the previously recommended driver for that database. The version that you see in the Microsoft ODBC administrator dialog is for the client driver of that name specifically.  It is independent of the database server version. You may need to update your client driver from time to time as updates are made available from Microsoft.</p>
                <p>Again, the client driver name is the one that you want to match the database version.</p>
                <p>As of this writing the following client drivers are available for the various versions of the SQL Server database.</p>
                <p>
                    <list>
                        <item>
                            <name-title>SQL Server Version</name-title>
                            <description-title>Client Driver Name</description-title>
                        </item>
                        <item>
                            <name>2019,2022</name>
                            <description>ODBC Driver 18 for SQL Server</description>
                        </item>
                        <item>
                            <name>2017</name>
                            <description>ODBC Driver 17 for SQL Server</description>
                        </item>
                        <item>
                            <name>2016</name>
                            <description>ODBC Driver 13 for SQL Server</description>
                        </item>
                        <item>
                            <name>2014</name>
                            <description>ODBC Driver 11 for SQL Server</description>
                        </item>
                        <item>
                            <name>2012</name>
                            <description>SQL Server Native Client 11.0</description>
                        </item>
                        <item>
                            <name>2008</name>
                            <description>SQL Server Native Client 10.0</description>
                        </item>
                        <item>
                            <name>2005</name>
                            <description>SQL Native Client</description>
                        </item>
                        <item>
                            <name>Older Versions</name>
                            <description>SQL Server</description>
                        </item>
                    </list>
                </p>
                <p>Consult the documentation for Microsoft SQL Server for more information about downloading and installing client drivers.</p>
            </description>
        </section>
        <section>
            <title>Configuring the Connection String</title>
            <description>
                <p>The SQL Server connection string dialog has tab pages for general properties, timeouts, SSH tunneling, and advanced properties. Each of the properties are described below.</p>
            </description>
            <tip>Click the Refresh button to see a list of databases, or leave the entry blank and click Test Connection. Once you have made an initial connection, you can click the Create Database button to create a new database on the server.</tip>
            <figure>
                <link>images/SQLServerConnectionStringDialogGeneral.png</link>
            </figure>
        </section>
        <section>
            <description>The Timeouts tab page lets you override default timeouts for login, the lifetime of the connection and for each query.</description>
            <figure>
                <link>images/SQLServerConnectionStringDialogTimeouts.png</link>
            </figure>
        </section>
        <section>
            <description>The SSH tab is used to enable a connection to a database using an SSH2 tunnel. These connections are made from a local tunnel that is connected to a remote server and then finally to the actual database, typically behind a firewall. Alpha Anywhere will create and manage the tunnel for you based on the values you provide on this page.</description>
            <figure>
                <link>images/SQLServerConnectionStringDialogSSH.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>The Advanced tab is used to set up a secure connection, enable column encryption, enter additional parameters
                        and provide an initial command to be executed at connect time.</p>
                <p>To set SQL server parameters that are not directly supported by the SQL Server connection string dialog, enter them as comma separated key=value entries.  They will be passed directly to the connection string provided to SQL Server.</p>
                <p>To execute one or more commands immediately after connecting to the database, enter native SQL Server commands separated by a semi-colon.</p>
            </description>
            <figure>
                <link>images/SQLServerConnectionStringDialogAdvanced.png</link>
            </figure>
        </section>
        <section>
            <title>SQL Server Connection String Properties</title>
            <list>
                <item>
                    <name-title>Connection Property</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>A5API</name>
                    <description>Setting the connection property A5API to 'SQLServer' will load the SQL Server driver when you open a connection.</description>
                </item>
                <item>
                    <name>A5DBVersion</name>
                    <description>The version number of SQL Server your server is running. This will assure that your client connects using the driver best matched to your SQL Server server.</description>
                </item>
                <item>
                    <name>Server</name>
                    <description>Enter the DNS name or IP address of your server.</description>
                </item>
                <item>
                    <name>Port</name>
                    <description>SQL Server defaults to an IP address of 1433. It is a good practice to set the server port to a different value so that it is not as obvious what port SQL Server is running on. This is not a substitute for using secure connections.</description>
                </item>
                <item>
                    <name>UserName</name>
                    <description>Set this value to the user name you wish use to connect to the database. This is only needed if trusted_connection is not set to 'yes'.</description>
                </item>
                <item>
                    <name>Password</name>
                    <description>Set this value to the password value you wish use to connect to the database. This is only needed if trusted_connection is not set to 'yes'.</description>
                    <note>Using the connection string dialog will obscure the password within the connection string. Publish functions encrypt the connection string.</note>
                </item>
                <item>
                    <name>Database</name>
                    <description>Enter or select the name of the database you are targeting.</description>
                </item>
                <item>
                    <name>A5TraceSQL</name>
                    <description>Set this value to Y to trace SQL statements. Within Alpha Anywhere messages are written to the trace pane. For Application Servers the output is written to a file.  The actual location varies by server.</description>
                </item>
                <item>
                    <name>A5TraceSQLLevel</name>
                    <description>Set this value to determine how much detail will be written to the trace log. When set to "Errors", only errors will be reported. When set to "SQL" a summary of each statement and the results will be reported, including errors. When set to "Complete" all errors and SQL will be reported as well as key function calls and translated queries with argument markers as well as any caller context provided. When set to "Diagnostic", all of the previous output will be included along with the user thread name, the argument values and bind mappings. All other values are treated as if "SQL" was set.</description>
                </item>
                <item>
                    <name>A5TraceSQLFormat</name>
                    <description>Set this value to indicate the output format desired. When set to "JSON", information will be written in JSON format with a trailing comma.  Parsing a file in JSON format can be done by stripping the last trailing comma and wrapping the text in square brackets "[]". When set to "Text", the output is written as formatted text.  This is the default format.</description>
                </item>
                <item>
                    <name>A5LoginTimeout</name>
                    <description>Set this value to control the timeout for new connections in seconds. Omit this setting to use the SQL Server ODBC driver default value.</description>
                </item>
                <item>
                    <name>A5ConnectionTimeOut</name>
                    <description>Set this value to control the timeout for the lifetime of a connection in seconds. Omit this setting to use the SQL Server ODBC driver default value.</description>
                </item>
                <item>
                    <name>A5QueryTimeOut</name>
                    <description>Set this value to control the timeout for a single query in seconds. Omit this setting to use the SQL Server ODBC driver default value.</description>
                </item>
                <item>
                    <name>A5SSHTunnel</name>
                    <description>Setting this value to Y requests that a tunnel be created to connect to the target database.
                        <p>The connection string properties for SSH connections are discussed separately in [Connecting Securely with SSH].</p>
                    </description>
                </item>
                <item>
                    <name>A5SSL</name>
                    <description>Set this value to 'Y' to encrypt connections to the server. The default value of this parameter is 'N'.</description>
                </item>
                <item>
                    <name>A5TrustServerCertificate</name>
                    <description>Set this value to 'Y' if you are using a self-signed certificate and do not want to check the server identity against a certificate authority. This value should never be set to 'Y' on a production server, but can be useful in testing out secure connections on a development server. The default value of this parameter is 'N'.</description>
                </item>
                <item>
                    <name>A5EnableColumnEncryption</name>
                    <description>Set this value to 'Y' to enable column encryption for the Always Encrypted feature of SQL Server. This will add the string "ColumnEncryption=Enabled" to the SQL Server connection string. For more information on this feature see *[extlink:https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/always-encrypted-database-engine]*. The default value of this parameter is 'N'.</description>
                </item>
                <item>
                    <name>A5ForceStringsToUTF</name>
                    <description>Set this value to 'Y' to disable functions that send data to the database as wide characters (16-bit Unicode).
                        Data will instead be bound and passed as multi-byte characters.
                        The default value of this parameter is 'N'.
                    </description>
                </item>
                <item>
                    <name>A5ANSINullPadWarn</name>
                    <description>This property is obsolete.
                    </description>
                </item>
                <item>
                    <name>A5InitialCommand</name>
                    <description>Set this value to the semi-colon delimited list of commands you want to execute after a connection is opened.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Using Portable SQL with SQL Server</title>
            <description>A SQL Server connection automatically selects SQL Server as it's syntax. The SQL Server syntax handler reads table information, and generates DDL (Data Definition Language) such as CREATE TABLE, DROP TABLE and DML (Data Manipulation Language) such as SELECT, INSERT, UPDATE, DELETE. It is also responsible for translating AlphaDAO Portable SQL functions into native implementations.</description>
            <note>The SQL Server syntax handler may be used with the ODBC and ADO.Net drivers as well.</note>
        </section>
        <section>
            <title>Using Datetime Types with SQL Server</title>
            <description>
			<p>SQL Server has two datetime types.<br/>
			</p>
			<p>
			<strong>DATETIME </strong>- The datetime type is an older version of datetimes.  
					It records fractional seconds in 'ticks'.  A tick is 1/300 of a second.
					For that reason, precision of fractional seconds is imprecise.
			</p>
			<p>
			<strong>DATETIME2 </strong>- Datetime2 is a newer type that supports fractional values from 0 to 7 digits to the right of the decimal point.
			</p>
			<p>
			XBasic supports up to 4 decimal places in some places (100 microseconds), but generally supports 3 decimal places (milliseconds).
			</p>

		</description>
            <note>When comparing datetime types, you may need to cast to either datetime or datetime2 to get equivalence.  For example "cast(columnname as datetime)".
		Values populated from XBasic will likely match.  If you populate your database columns with more decimal places then you will need to
		compare values within a millisecond of tolerance for datetime2 and within 1/300 of a second for datetime types.</note>
        </section>
        <section>
            <title>SQL Server Compatibility Levels</title>
            <description>
			<p>SQL Server has a setting for determining database behavior called Compatibility Level.  
				This is a complex setting and may affect a number of behaviors.
				Compatibility Level can be used to determine how datetime types will be handled in SQL Queries. <br/>
				</p>
			<p><strong>150 </strong>- The current compatibility level for new databases using SQL Server 2022 is 150.
					This will cause datetime values passed in arguments to be processed as DATETIME2 types.
					</p>
			<p><strong>120 </strong>- Setting the compatibility level of the database to 120 will cause arguments to be processed as DATETIME types.
					</p>
			<p>
			To determine current compatibility level setting of databases in SQL Server, run the following query:
			</p>
			<p><strong>select name, compatibility_level from sys.databases;</strong>
			</p>
			<p>
			To set the compatibility level setting for a specific database (Northwind in this example) in SQL Server, run the following query:
			<br/>
			</p>
			<p>
			<strong>alter database Northwind set compatibility_level = 120;</strong>
			</p>
		</description>
            <note>Consult the SQL Server documentation for compatibility levels before changing the behavior of your production database.</note>
        </section>
    </sections>
    <links>
        <link link="Alpha Anywhere SSH Database Connections">Connecting Securely with SSH</link>
        <link href="">SQL Server Versions</link>
    </links>
</page>


