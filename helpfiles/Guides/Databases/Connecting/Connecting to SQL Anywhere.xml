<page>
	<topic>Connecting to SQL Anywhere</topic>
<description>Alpha Anywhere AlphaDAO includes a SQL Anywhere extension driver built on the SQL anywhere ODBC driver.  
			SQL Anywhere connections in Alpha Anywhere do not require a DNS tobe configured, but the SQL Anywhere driver must be installed. 
			</description>
	<sections>
		<section>
			<title>Using the SQL Anywhere Connection String Dialog</title>
			<description>When you select SQL Anywhere as your connection type in the connection string dialog, the dialog below will be displayed.  
						Enter your host and server name and provide any authentication information required to connect to your database. 
						The values you select will be generated into the connection string at the top of the dialog for you as you make changes.
					</description>
			<cases>
				<case>
				<description>The SQL Anywhere connection string dialog has tab pages for general properties, timeout values and TLS/SSL connections. 
						 Each of the properties are described below.</description>
				<figure><link>images/SQLAnywhereConnectionStringDialog_General.jpg</link></figure>
				</case>
				<case>
				<description>The Timeouts tab page lets you override default timeouts for login, the lifetime of the connection and for each query.
						</description>
				<figure><link>images/SQLAnywhereConnectionStringDialog_Timeouts.jpg</link></figure>
				</case>
				<case>
				<description>The TLS tab is used to enable TLS (also called SSL) connections.
                    These connections are encrypted between Alpha Anywhere and the database.
                    The database presents a certificate to the client and the client verifies that it trusts the certificate.
                    You will need to provide a certificate file with trusted certificates (and possibly the certificate being provided by the server.
                    You can also require that the server certificate match a name, company and/or unit values that you provide.
						</description>
				<figure><link>images/SQLAnywhereConnectionStringDialog_TLS.jpg</link></figure>
				</case>

				<case>
				<title>Creating a New Database in the SQL Anywhere Connection String Dialog</title>
				<description>You can create a database from the connection string dialog once you have successfully connected to your server by clicking on the "Create Database" button.
						The dialog below will be displayed.
						Type a database name. 
						Click 'OK' to create a new database file.
						</description>
				</case>
			</cases>
		</section>
		<section>
			<title>Attaching Databases to a SQL Anywhere Connection</title>
			<cases>
				<case>
				<description>A SQL Anywhere connection has a primary database known as 'main' and may also attach other databases using the "attach database" command.
						This can be useful when you have a set of data that is shared with multiple databases (such as a price or cost database),
						or you want to work with tables but not fragment your permanent database file.
						</description>
				</case>
				<case>
				<example>attach database 'c:\temp\mydatabase.db' as mydatabase</example>
				</case>
				<case>
				<description>When you attach a database, that database is addressed using the alias you assign in the 'as' clause.  
						Alpha Anywhere treats this connection as a schema and you must include the alias (mydatabase in this case) when referring to the tables in the attached database.
						</description>
				</case>
			</cases>
		</section>
		<section>
			<title>SQL Anywhere Connection String Properties</title>
			<list>
				<item>
					<name-title>Connection Property</name-title>
					<description-title>Description</description-title>
				</item>

				<item>
					<name>A5API</name>
					<description>Setting the connection property A5API to 'SQLAnywhere' will load the SQL Anywhere driver when you open a connection.</description>
				</item>
				<item>
					<name>A5DBVersion</name>
					<description>The version number of SQL Anywhere your server is running. 
						This will assure that your client connects using the driver best matched to your SQL Anywhere server.
						</description>
				</item>
				<item>
					<name>Host</name>
					<description>Enter the DNS name or IP address of your server.</description>
				</item>
				<item>
					<name>Port</name>
					<description>SQL Anywhere defaults to an IP address of 2638.
            It is a good practice to set the server port to a different value so that it is not as obvious that SQL Anywhere is being served.
						This is not a substitute for using secure connections.
						</description>
				</item>
				<item>
					<name>Server</name>
					<description>The specific SQL Anywhere server running on the target host. 
						Note that the server is NOT the DNS name or IP.  Enter that value as the host.
						</description>
				</item>
				<item>
					<name>Database</name>
					<description>Enter or select the name of the database you are targeting.</description>
				</item>
				<item>
					<name>trusted_connection</name>
					<description>Set this value to 'yes' to use Windows authentication.</description>
				</item>
				<item>
					<name>UserName</name>
					<description>Set this value to the user name you wish to connect to the database with.  
                This is only needed if trusted_connection is not set to 'yes'</description>
				</item>
				<item>
					<name>Password</name>
					<description>Set this value to the password value you wish to connect to the database with.  
                This is only needed if trusted_connection is not set to 'yes'
                <note>Using the connection strintg dialog will obscure the password within the connection string.
                Publish functions encrypt the connection string.</note>
              </description>
				</item>
				<item>
					<name>A5LoginTimeout</name>
					<description>Set this value to control the timeout for new connections in seconds.
              Omit this setting to use the SQL Anyehre ODBC driver default value.</description>
				</item>
				<item>
					<name>A5ConnectionTimeOut</name>
					<description>Set this value to control the timeout for the lifetime of a connection in seconds.
              Omit this setting to use the SQL Anyehre ODBC driver default value.</description>
				</item>
				<item>
					<name>A5QueryTimeOut</name>
					<description>Set this value to control the timeout for a query in seconds.
              Omit this setting to use the SQL Anyehre ODBC driver default value.</description>
				</item>
				<item>
					<name>A5TraceSQL</name>
					<description>Set this value to Y to trace SQL statements.
            Within Alpha Anywhere messages are written to the trace pane.
            For Application Servers the output is written to a file.  The actual location varies by server.
						</description>
				</item>
				<item>
					<name>A5SSL</name>
					<description>Setting this value to Y requests that connections made to SQL Anywhere be done using TLS (Transport Level Security).
            The predecessor to TLS is SSL (Secure Sockets Level) and is no longer the current protocol, 
            but you will often see SSL in documentation and common usage.
					</description>
				</item>
				<item>
					<name>A5TLSTrustedCertificateFile</name>
					<description>Enter the file name or complete path to a file with trusted certificates, server certificates and any local certificates.
									If the file is for an IIS installation (including Alpha Cloud) you can omit the path and Alpha Anywhere wll look
                      for the file in a subfolder of the deployed application.  
                      
                  You will need to install the file into your web project in the same location.
                   
							</description>
				</item>
				<item>
					<name>A5TLSCertificateName</name>
					<description>You can (optionally) set this field to the name of the certificate you expect for tighter security.</description>
				</item>
				<item>
					<name>A5TLSCertificateCompany</name>
					<description>You can (optionally) set this field to the name of the company you expect in the certificate for tighter security.</description>
				</item>
				<item>
					<name>A5TLSCertificateUnit</name>
					<description>You can (optionally) set this field to the name of the unit you expect in the certificate for tighter security.</description>
				</item>
				<item>
					<name>A5InitialCommand</name>
					<description>A string of commands (separated by semicolons ';') to be executed each time the connection is opened.</description>
				</item>
			</list>
			
		</section>
		<section>
			<title>Using Portable SQL with SQL Anywhere</title>
			<cases>
				<case>
				<description>A SQL Anywhere connection automatically selects SQLAnywhere as it's syntax.  
						The SQLAnywhere syntax handler reads table information, and generates DDL (Data Definition Language) such as CREATE TABLE, DROP TABLE and DML (Data Manipulation Language) such as SELECT, INSERT, UPDATE, DELETE.
						It is also responsible for translating AlphaDAO Portable SQL functions into native implementations.   
						Although geography functions are not currently supported, the syntax handler has been extended to support all other portable SQL functions.
					</description>
				</case>
				<case>
				<note>The SQLAnywhere syntax handler may be used with the ODBC and ADO.Net drivers as well..
						</note>
				</case>
			</cases>
		</section>
</sections>
	
</page>


