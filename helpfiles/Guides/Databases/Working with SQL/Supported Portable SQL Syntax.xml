<page>
    <topic>Supported Portable SQL Syntax</topic>
    <description>Overview of supported SQL syntax in portable SQL queries.</description>
    <discussion>
        <!--
        SQL92 Grammar subset to support as many db as possible.
        -->
        <p>Although there are standards for SQL, each database vendor introduces slight variations to the language that make it challenging to write a single statement that executes on an arbitrary database. Alpha Anywhere Alpha DAO makes it possible to write SQL statements that are portable across many databases. The Portable SQL parser creates an intermediate data structure that Alpha DAO syntax handlers use to generate native syntax for any database that Alpha Anywhere has a handler. In cases where your database vendor selection does not determine the syntax  (such as ODBC or ADO.NET drivers), you specify the target syntax you want to generate in connection string dialogs or a manually constructed connection string. In many cases, you can select the ODBC or Generic (based on ANSI SQL-92) syntax handler if a separate handler doesn't exist for your database.</p>
        <p>The following is a simplified SQL grammar of the SQL dialect supported by the Alpha Anywhere Portable SQL parser.</p>
    </discussion>
    <sections>
        <section>
            <title>Notes on Syntax</title>
            <steps>
                <step>
                    <description>Words that are italicized are rules.</description>
                </step>
                <step>
                    <description>Words in all capital letters are literals or keywords and appear as typed. The actual SELECT statement is case insensitive.</description>
                </step>
                <step>
                    <description>The vertical bar ( | ) indicates that any of the alternatives are valid. Commas are part of the input stream.</description>
                </step>
                <step>
                    <description>Items in square brackets [] are optional.</description>
                </step>
                <step>
                    <description>
                        <p>With some exceptions, parentheses shown are a required part of the input stream</p>
                    </description>
                </step>
            </steps>
        </section>
        <section>
            <title>Select_Statement</title>
            <!-- Things to explain/callout: SQL Keyword; When does something need to be explained again (column item); Literal values - integer -->
            <description>Select_Statement Components and Syntax</description>
            <example><![CDATA[SELECT [ DISTINCT | ALL [ROWS] | FIRST integer ] *[em:Column_Item]* [, *[em:Column_Item]* ... ]
FROM *[em:Select_Table_Reference]* [, *[em:Select_Table_Reference]* ... ]
[ WHERE *[em:Logical_Expression]* ]
[ GROUP BY *[em:Value_Expr]* [, *[em:Value_Expr]* ... ] [ HAVING *[em:Logical_Expression]* ] ]
[ UNION [ALL] *[em:Select_Statement]* [ UNION [ALL] *[em:Select_Statement]* ... ] ]
[ ORDER BY *[em:Column_Item]* [ ASC | DESC ] [, *[em:Column_Item]* [ ASC | DESC ]  ... ]]]]></example>
        </section>
        <section>
            <topic>Select_Statement Arguments</topic>
            <list>
                <item>
                    <name-title>Argument</name-title>
                    <description-title>Syntax</description-title>
                </item>
                <item>
                    <name>Column_Item</name>
                    <description>
                        <p>
                            <example><![CDATA[*[em:Value_Expr]* | *[em:Identifer]* [ AS *[em:Identifier]* ]
*[em:Identifier]* = *[em:Value_Expr]*]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Column_Reference</name>
                    <description>
                        <p>
                            <example><![CDATA[[*[em:Identifier]*.]*[em:Identifier]*
[*[em:Identifier]*.]*]]></example>
                        </p>
                        <p>The table name is optional when specifying column names in a SELECT statement.</p>
                    </description>
                </item>
                <item>
                    <name>Select_Table_Reference</name>
                    <description>
                        <p>
                            <example><![CDATA[[*[em:Identifier]*.]*[em:Identifier]*
[[[LEFT|FULL|RIGHT [OUTER]] | INNER] JOIN *[em:Select_Table_Reference]* [ ON *[em:Logical_Expression]* ]] ... ]
[[AS] *[em:Identifier]* ] ]]></example>
                        </p>
                        <p>
                            <list bullet="true">
                                <item>
                                    <name>JOIN is optional.</name>
                                </item>
                                <item>
                                    <name>JOIN type (LEFT, FULL, RIGHT, INNER) is optional. If no type is specified, an INNER JOIN is performed.</name>
                                </item>
                                <item>
                                    <name>OUTER can only be used with LEFT, FULL, or RIGHT.</name>
                                </item>
                                <item>
                                    <name>Specify *[xb:AS Identifier]* to define a table alias. E.g. *[xb:tableb AS b]*</name>
                                </item>
                            </list>
                        </p>
                    </description>
                    <note>Defining a table alias is optional.</note>
                </item>
                <item>
                    <name>Logical_Expression</name>
                    <description>
                        <p>
                            <example><![CDATA[*[em:Value_Expr]* [ AND|OR *[em:Value_Expr]* ... ]]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Value_Expr</name>
                    <description>
                        <p>
                            <example><![CDATA[[NOT] *[em:Logical_Expression]* [ AND|OR *[em:Logical_Expression]* ... ] |
[EXISTS]  *[em:Select_Statement]* |
*[em:Value_Expr]* *[em:Comparison_Operator]* [ ALL | SOME | ANY ] ( *[em:Select_Statement]* ) |
*[em:Value_Expr]* *[em:Comparison_Operator]* *[em:Value_Expr]* |
*[em:Value_Expr]* IS [NOT] NULL |
*[em:Value_Expr]* CONTAINS ( *[em:Column_Reference]*, *[em:String]* ) |
*[em:Value_Expr]* [NOT] LIKE *[em:Value_Expr]* |
*[em:Value_Expr]* [NOT] BETWEEN *[em:Value_Expr]* AND *[em:Value_Expr]* |
*[em:Value_Expr]* [NOT] IN (*[em:Select_Statement]* | *[em:Value_Expr_List]*) |
*[em:Constant]* [ *[em:Operator]* *[em:Value_Expr]* ] |
*[em:Value_Expr]* [ *[em:Operator]* *[em:Value_Expr]* ] |
[*[em:Unary_Operator]*]*[em:Sub_Expression]*]]></example>
<!--LIKE - show one or two examples using %
See Also FullTextColumnContains() function
() are required for IN
Add a note about IN with Integers-->
                        </p>
                        <p>For Example:</p>
                        <p>
                            <example code="sql"><![CDATA[ShipDate IS NULL
OrderDate IS NOT NULL
StartDate BETWEEN {1995-01-01} AND {2005-12-31}
Address LIKE '123 Main%'
Customer LIKE '%Co%'
FirstName IN ('Jane','Steve','Fred')
FullTextColumnContains(LastName,'Marie')]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Sub_Expression</name>
                    <description>
                        <p>
                            <example><![CDATA[*[em:Function]* | *[em:Constant]* | NULL | *[em:Column_Reference]* | (  *[em:Select_Statement]* ) | *[em:CASE]* | *[em:CAST]*]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Function</name>
                    <description>
                        <p>
                            <example><![CDATA[*[em:Identifier]* ( [ ALL | DISTINCT ] *[em:Value_Expr]* | * ] ) |
*[em:Identifier]* ( *[em:Value_Expr]* [, *[em:Value_Expr]* ... ] ) |
"current_timestamp" | "current_user" | "session_user" | "system_user" | "user"]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>CASE</name>
                    <description>
                        <p>
                            <example><![CDATA[CASE *[em:Value_Expr]*
    WHEN *[em:Value_Expr]* THEN *[em:Value_Expr]*
    [...]
    [WHEN *[em:Value_Expr]* THEN *[em:Value_Expr]*]
    [...]
    [ ELSE *[em:Value_Expr]*]
    END]]></example>
                        </p>
                        <p>CASE must have at least one WHEN clause. If testing for multiple values, multiple WHEN clauses can be used. ELSE is optional and can be specified without a *[em:Value_Expr]* to handle all cases that don't match a WHEN clause.</p>
                    </description>
                </item>
                <item>
                    <name>CAST</name>
                    <description>
                        <p>
                            <example><![CDATA[CAST (*[em:Value_Expr]* AS *[em:Type]*)]]></example>
                        </p>
                        <p>*[em:Type]* is the data type to cast the value, e.g. *[xb:INTEGER]* or *[xb:DATE]*. The type is database dependent. Consult your database documentation for a list of supported data types.</p>
                    </description>
                    <important>
                        <p>If you use a type name that is not supported on the target SQL database, *[xb:CAST]* will fail.</p>
                    </important>
                </item>
                <item>
                    <name>Identifier</name>
                    <description>
                        <p>
                            <example><![CDATA[*[em:Non_Quoted_Identifier]* | *[em:Quoted_Identifier]*]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Constant</name>
                    <description>
                        <!--ODBC format and Access format supported for specifying date/times-->
                        <p>
                            <example><![CDATA[*[em:Number]* | *[em:Logical]* | *[em:String]* | *[em:Currency]* | *[em:Date_Time]*]]></example>
                        </p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Constant</name-title>
                                    <description-title>Example</description-title>
                                </item>
                                <item>
                                    <name>*[em:Number]*</name>
                                    <description>
                                        <p>
                                            <example><![CDATA[0.0
0
-0
0x0
0.0e0]]></example>
                                        </p>
                                    </description>
                                </item>
                                <item>
                                    <name>*[em:Logical]*</name>
                                    <description>
                                        <p>
                                            <example><![CDATA[.t.
.f.
true
false]]></example>
                                        </p>
                                    </description>
                                </item>
                                <item>
                                    <name>*[em:String]*</name>
                                    <description>
                                        <p>
                                            <example><![CDATA["Spain"]]></example>
                                        </p>
                                    </description>
                                </item>
                                <item>
                                    <name>*[em:Currency]*</name>
                                    <description>
                                        <p>
                                            <example><![CDATA[$12.50]]></example>
                                        </p>
                                    </description>
                                </item>
                                <item>
                                    <name>*[em:Date_Time]*</name>
                                    <description>
                                        <p>Date and Date Time values specified using the following format:</p>
                                        <p>
                                            <example><![CDATA[{yyyy-mm-dd [HH:MM:SS [.ffffff] [am|pm]]}
{yyyy-mm-dd}
{m[m]/d[d]/yy[yy]}
{m[m]/d[d]/yy[yy] [HH:MM:SS[.ffffff] [am|pm]]}]]></example>
                                        </p>
                                        <p>Where:</p>
                                        <p>
                                            <list bullet="true">
                                                <item>
                                                    <name>*[xb:yyyy]* or *[xb:yy]* is the year.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:mm]* or *[xb:m]* is the month.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:dd]* or *[xb:d]* is the day.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:HH]* is the hour.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:MM]* is the minutes.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:SS]* is the seconds.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:.ffffff]* is fractions of a second -- you can specify up to six digits.</name>
                                                </item>
                                                <item>
                                                    <name>*[xb:am|pm]* is the "am" or "pm" for 12 hour time format.</name>
                                                </item>
                                            </list>
                                        </p>
                                        <p>For example:</p>
                                        <p>
                                            <example><![CDATA[{2019-12-31 14:47:00}
{2019-01-01}
{12/31/2019}
{1/1/2019 01:01:01.000000}
{11:59:00 pm}]]></example>
                                        </p>
                                    </description>
                                </item>
                            </list>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Mathematical_Operator</name>
                    <description>
                        <p>
                            <example><![CDATA[+ | - | &
* | / | MOD]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Comparison_Operator</name>
                    <description>
                        <p>
                            <example><![CDATA[= | != | <> | <= | !> | < | >= | !< | >]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Unary_Operator</name>
                    <description>
                        <p>
                            <example><![CDATA[+ | - | ~]]></example>
                        </p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Unary_Operator</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>+</name>
                                    <description>Positive. E.g., *[xb:+12]*</description>
                                </item>
                                <item>
                                    <name>-</name>
                                    <description>Negative. E.g., *[xb:-3]*</description>
                                </item>
                                <item>
                                    <name>~</name>
                                    <description>One's complement where supported. Check your database documentation to see if this operator is available.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </item>
            </list>
        </section>
        <section>
            <title>Delete Syntax</title>
            <description>
                <p>The Portable SQL DELETE statement deletes one or more records from the specified table.</p>
                <p>
                    <example><![CDATA[DELETE FROM *[em:Table_Name]*
WHERE *[em:Column_Name]* = *[em:Value_Expression]*]]></example>
                </p>
            </description>
            <note>
                <p>Use [SQL::Arguments] in WHERE clauses to eliminate common SQL vulnerabilities (such as SQL injection attacks).</p>
            </note>
        </section>
        <section>
            <title>Update Syntax</title>
            <description>
                <p>The Portable SQL UPDATE statement modifies one or more records in the specified table.</p>
                <p>
                    <example><![CDATA[UPDATE *[em:Table_Name]*
SET *[em:Column_Name]* = *[em:Value_Expression_1]*
 WHERE *[em:Column_Name]* = *[em:Value_Expression_2]*]]></example>
                </p>
            </description>
            <note>
                <p>Use [SQL::Arguments] in SET and WHERE clauses to eliminate common SQL vulnerabilities (such as SQL injection attacks).</p>
            </note>
        </section>
        <section>
            <title>Insert Syntax</title>
            <description>
                <p>The Portable SQL INSERT statement adds a record to the specified table.</p>
                <p>
                    <example><![CDATA[INSERT INTO *[em:Table_Name]* ( *[em:Column_Name_1]*, *[em:Column_Name_2]*, ... , *[em:Column_Name_N]* )
VALUES ( *[em:Value_Expression_1]*, *[em:Value_Expression_2]*, ... *[em:Value_Expression_N]* )]]></example>
                </p>
            </description>
            <note>
                <p>Use [SQL::Arguments] in VALUES to eliminate common SQL vulnerabilities (such as SQL injection attacks).</p>
            </note>
        </section>
    </sections>
    <see>
        <ref link="Portable SQL">Portable SQL</ref>
        <ref link="Portability Functions">Portability Functions</ref>
    </see>
    <links>
        <link href="#section2_More%20about%20JOINs">More about JOINs</link>
        <link link="api%20sql%20namespace%20arguments%20class">SQL::Arguments</link>
    </links>
</page>