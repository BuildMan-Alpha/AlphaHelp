<page api="xb">
	<shortlink>api alphadao objects</shortlink>
	<topic>AlphaDAO Objects</topic>
	<description>The Alpha Anywhere Enterprise edition provides Xbasic program access to SQL databases such as  Microsoft SQL Server, Oracle, MySQL as well as  Microsoft Access. This functionality extends the familiar Alpha Anywhere database features that previously supported only .DBF files. AlphaDAO provides the following SQL objects. Each object has properties and methods.</description>
	<sections>
		<section>
			<title>SQL::Argument</title>
			<description>This object defines a single argument to be passed to a SQL function in a SQL::Arguments collection.
			</description>
		</section>
		<section>
			<title>SQL::Arguments</title>
			<description>A collection of arguments to be passed to a SQL function.
			</description>
		</section>
		<section>
			<title>SQL::CallResult</title>
			<description>This object provides a more complete description of a function call on an object in the SQL name space.
			</description>
		</section>
		<section>
			<title>SQL::Connection</title>
			<description>Each instance of SQL::Connection represents a potential or active database session.
			</description>
		</section>
		<section>
			<title>SQL::DataTypeInfo</title>
			<description>A single column in a table or result set. The description includes the name, size, precision, Alpha Anywhere type, the native type, and an intermediate type (see SQL::IntermediateType ) which contains more precise type information. This intermediate type makes it possible to recreate a table using the closest possible matching type in the target table.
			</description>
		</section>
		<section>
			<title>SQL::IndexColumnInfo</title>
			<description>A description of one of the columns in an index. A SQL::IndexInfo contains one or more columns that make up the primary key, the foreign key, of a unique or non-unique index.</description>
		</section>
		<section>
			<title>SQL::IndexInfo</title>
			<description>A description of an index on a SQL table. Each table in a SQL database has one or more relationships, constraints or indexes. The primary key, foreign keys, and unique and non-unique indexes are each described by a SQL::IndexInfo instance. The SQL::TableInfo object contains a list of those indexes.
			</description>
		</section>
		<section>
			<title>SQL::ResultSet</title>
			<description>A collection of rows returned from the execution of a query. When a SQL query returns one or more rows of data, you can use the SQL::ResultSet object to get the description of the result set and to navigate within the rows of the results to retrieve the data.
			</description>
		</section>
		<section>
			<title>SQL::Row</title>
			<description>The data returned by the SQL::ResultSet.NextRow() method.
			</description>
		</section>
		<section>
			<title>SQL::Schema</title>
			<description>A collection of SQL table definitions. SQL::Schema is a container for one or more SQL::TableInfo objects.
			</description>
		</section>
		<section>
			<title>SQL::TableInfo</title>
			<description>A fairly complete description of a SQL table, its columns, and its indexes. Many of the SQL functions either ask you to provide a SQL::TableInfo object, or will create one for you. Using this object, it is possible to retrieve a description of a table from one database and construct a copy of that table in the same or another database.
			</description>
		</section>
	</sections>
	<see>
		<ref link="Working with SQL">Working with SQL</ref>
		<ref link="api sql namespace argument class">SQL::Argument</ref>
		<ref link="api sql namespace arguments class">SQL::Arguments</ref>
		<ref link="api sql namespace call result object">SQL::CallResult</ref>
		<ref link="api sql namespace connection object">SQL::Connection</ref>
		<ref link="api sql namespace data type info class">SQL::DataTypeInfo</ref>
		<ref link="api sql namespace index column info object">SQL::IndexColumnInfo</ref>
		<ref link="api sql namespace index info class">SQL::IndexInfo</ref>
		<ref link="api sql namespace result set object">SQL::ResultSet</ref>
		<ref link="api sql namespace row class">SQL::Row</ref>
		<ref link="api sql namespace schema object">SQL::Schema</ref>
		<ref link="api sql namespace schema object">SQL::TableInfo</ref>
	</see>


</page>