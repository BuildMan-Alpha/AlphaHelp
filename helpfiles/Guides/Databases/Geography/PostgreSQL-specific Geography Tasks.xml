<page>
    <topic>PostgreSQL-specific Geography Tasks</topic>
    <description>Database creation, creating and dropping tables with geometry columns, inserting location data values, inserting line data values, and polygon data values.</description>
    <sections>
        <section>
            <note>In the samples below, :SRID indicates the optional spatial reference identifier argument. For PostgreSQL, the default is 4326.</note>
        </section>
        <section>
            <title>Database Creation</title>
            <description>The database must be created with the template "template_postgis".</description>
            <example code="sql"><![CDATA[CREATE DATABASE myDB WITH OWNER myowner 
    TEMPLATE = template_postgis; ]]></example>
        </section>
        <section>
            <title>Creating and Dropping Tables with Geometry Columns</title>
            <description>Creating a table with geometry columns:</description>
            <example code="sql"><![CDATA[CREATE TABLE "GeogTest"
(
"KeyValue"	varchar(25)	NOT NULL,
PRIMARY KEY ("KeyValue"))

SELECT AddGeometryColumn('GeogTest', 'Location', 4326, 'GEOMETRY', 2); ]]></example>
        </section>
        <section>
            <description>Dropping a table:</description>
            <example code="sql"><![CDATA[SELECT DropGeometryColumn('mygeometrytable', 'geomcolumn');
DROP TABLE "GeogTest" ]]></example>
        </section>
        <section>
            <title>Inserting Location Data Values</title>
            <description>Inserting location data using Portable SQL Syntax:</description>
            <example code="sql"><![CDATA[INSERT INTO GeogTest (KeyValue, Location) 
    values('Item1', GeogCreateLocation(-70, 42, :SRID))]]></example>
        </section>
        <section>
            <description>Inserting location data using Native syntax:</description>
            <example code="sql"><![CDATA[INSERT INTO "GeogTest"  ("KeyValue", "Location") 
    VALUES ('Item1', ST_GeometryFromText('POINT(' || 
    CAST( - 70 as VARCHAR(1024)) || ' ' || 
    CAST(42 as VARCHAR(1024)) || ')', CAST(:SRID AS INT))) ]]></example>
        </section>
        <section>
            <title>Inserting Line Data Values</title>
            <description>Inserting line data values using Portable SQL Syntax:</description>
            <example code="sql"><![CDATA[INSERT INTO GeogTest (KeyValue, Location) 
    values('Item2', GeogCreateLine(-70, 42, -70, 38, :SRID)) ]]></example>
        </section>
        <section>
            <description>Inserting line data values using Native SQL Syntax:</description>
            <example code="sql"><![CDATA[INSERT INTO "GeogTest"  ("KeyValue", "Location") 
    VALUES ('Item2', ST_GeometryFromText('LINESTRING(' || 
    CAST( - 70 as VARCHAR(1024)) || ' ' || 
    CAST(42 as VARCHAR(1024)) || ', ' || 
    CAST( - 70 as VARCHAR(1024)) || ' ' || 
    CAST(38 as VARCHAR(1024)) || ')', CAST(:SRID AS INT))) ]]></example>
        </section>
        <section>
            <title>Inserting Polygon Data Values</title>
            <description>Inserting polygon values using Portable SQL Syntax:</description>
            <example code="sql"><![CDATA[INSERT INTO GeogTest (KeyValue, Location) 
    values('Item3', GeogCreatePolygon(-70, 42, -70, 32, -60, 32, 
        -60, 42, -70, 42, :SRID)) ]]></example>
        </section>
        <section>
            <description>Inserting polygon values using Native SQL Syntax:</description>
            <example code="sql"><![CDATA[INSERT INTO "GeogTest"  ("KeyValue", "Location") 
    VALUES ('Item3', ST_GeometryFromText('POLYGON((' || 
    CAST( - 70 as VARCHAR(1024)) || ' ' ||
    CAST(42 as VARCHAR(1024))|| ', ' || 
    CAST( - 70 as VARCHAR(1024)) || ' ' || 
    CAST(32 as VARCHAR(1024))|| ', ' || 
    CAST( - 60 as VARCHAR(1024)) || ' ' || 
    CAST(32 as VARCHAR(1024))|| ', ' || 
    CAST( - 60 as VARCHAR(1024)) || ' ' || 
    CAST(42 as VARCHAR(1024))|| ', ' || 
    CAST( - 70 as VARCHAR(1024)) || ' ' || 
    CAST(42 as VARCHAR(1024))|| '))', CAST(:SRID AS INT))) ]]></example>
        </section>
    </sections>
    <see>
        <ref link="Geographic Databases">Geographic Databases </ref>
        <ref>Changes to SQL Objects for Geometry </ref>
        <ref link="Portable SQL Functions for Geographies">Portable SQL Functions for Geographies </ref>
        <ref link="Common Geography Database Tasks">Common Geography Database Tasks </ref>
        <ref link="Database-specific Geography Tasks Help Pages">Database-specific Geography Tasks </ref>
        <ref link="DB2-specific Geography Tasks">DB2-specific Geography Tasks </ref>
        <ref link="MySQL-specific Geography Tasks">MySQL-specific Geography Tasks </ref>
        <ref link="Oracle-specific Geography Tasks">Oracle-specific Geography Tasks </ref>
        <ref link="PostgreSQL-specific Geography Tasks">PostgreSQL-specific Geography Tasks </ref>
        <ref link="SQL Server-specific Geography Tasks">SQL Server-specific Geography Tasks </ref>
        <ref link="SQL Geography Examples">SQL Geography Examples </ref>
    </see>
</page>