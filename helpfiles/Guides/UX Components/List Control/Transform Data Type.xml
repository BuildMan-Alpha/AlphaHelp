<page>
  <topic>UX Component - List Control - Transform Data Type</topic>
  
  <description>Unless the List data source is a Javascript function (in which case you have complete control over the data types for each field in the List), all data in the List are string values. </description>
  
  <sections>
    
    <section>
    <videos>
      <video>
        <description>Watch Video
</description>
        <link>http://www.ajaxvideotutorials.com/V12Videos/ux_List_transformdatatype.swf</link>
      </video>
       <video>
        <description>Download component
</description>
        <link>http://www.ajaxvideotutorials.com/V12Videos/listTransformDataType.zip</link>
      </video>
      
    </videos>
    </section>
    <section>
      <description>The 'Transform data type' property allows you to transform the data type of the data in a List column to a Date, Numeric, or Logical data type. 
To transform the data type, set the option in the 'Transform data type' property on the Fields pane in the List builder (as shown below).
</description>
      <figure><link>images/transformdatatype.gif</link></figure>
      
    </section>
    <section>
      <description>The benefit of transforming dates into true date objects and numbers into true number objects is that you can then use the template formatting options to format date or numeric values. 
For example, the template for a date field might be specfied as: 
</description>
      <example><![CDATA[{DateOfBirth:date('MM-dd-yyyy')} ]]></example>
    </section>
      <section>
      <description>or a numeric field, the template might be specified as:</description>
      <example><![CDATA[{Price:number('$# ###.00')}]]></example>
      <note>It is not strictly necessary to transform a string to a number in order to use the number format directive in the template. The sample template shown above ( {Price:number('$# ###.00')} would actually also work on a string value that contained a valid number.</note>
    </section>
    
    
  </sections>
</page>