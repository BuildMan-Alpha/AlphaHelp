<page>
    <topic>Client Side Javascript in UX Components</topic>
    <description>This is an overview of javascript in UX Components, what events are, how javascript can be written, where javascript can be used, and ways to test javascript in UX components.</description>
    <discussion>
        <p>UX components are used to create mobile apps and provide robust interfaces in web applications. Built on top of web technology, a UX Component is composed of 3 parts: HTML, CSS, and Javascript. HTML and CSS define the structure and look of the component. Javascript is used to create the interactive piece of the UX component. Javascript allows you to create a rich user experience. Retrieving data from a server, showing a message, resetting data in a form, or enabling a button are behaviors created with javascript.
        </p>
        <p>Javascript is added through events or properties to create effects and functionality in a UX component. Action Javascript offers a wide assortment of functionality you can drop into your component or use as a starting point in your scripts. UX components also have built-in methods you can use to access information about and manipulate the controls in your component. Built-in debugging tools and compatibility with third-party debuggers also help to track down problems before you publish them to the web.
        </p>
    </discussion>
<!--list:.-->
<!--order:
clientSideEvents
actionJavascript
javascriptActions
aliasesPlaceholders
dialogObjectMethods
extendingDialogObject
modifyingActionJavascriptCode
clientSideExpressions
importExternalJavascript
testingDebugging
-->
</page>