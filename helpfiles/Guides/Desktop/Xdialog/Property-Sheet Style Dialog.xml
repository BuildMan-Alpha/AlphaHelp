<page>
	<topic>Property-Sheet Style Dialog
</topic><description>To create a property-sheet style Xdialog.
</description>
<sections>
<section>
	
<steps>
	<step>
		<description>Create a new Action Script.
</description>
	</step>
	<step>
		<description>Select "Xdialog Windows" in the Category list.
</description>
	</step>
	<step>
		<description>Select "Display an XDialog Box" in the Action list.
</description>
	</step>
	<step>
		<description>Click OK to display the Script Genie.
</description>
	</step>
	<step>
		<description>Enter the name of new variable in the Variable Name field.
</description>
	</step>
	<step>
		<description>Optionally, change the value of the Prompt field.
</description>
	</step>
	<step>
		<description>Optionally, change the selection in the data Type list.
</description>
	</step>
	<step>
		<description>Set the Width and Height of the resulting dialog box.
</description>
	</step>
	<step>
		<description>Select "Property-sheet style Dialog" in the Style list.
</description>
	</step>
	<step>
		<description>Click Define Property-Sheet Dialog to display the Property Sheet Builder. 
</description>
<figure><link>images/Property_Style_Xdialog.gif</link></figure>
	</step>
	
</steps>	
	
	
</section>	

<section>
<title>Property Sheet Builder
</title>	
<description>The Items tab of the Property Sheet Builder allows you to specify a hierarchy of menu entries.
</description>	

<cases>
	<case>
		<description>Category entries - are menu groupings. Categories can be collapsed and expanded.
</description>
	</case>
	<case>
		<description>Item entries - are menu selections. Items set the value of variables and generate events.
</description>
	</case>
	<case>
		<description>Separator - a horizontal line that visually groups entries.
</description>
	</case>
	<case>
		<description>Text - static text
</description>
	</case>
	
</cases>


	
</section>
<section>
	
	<description>For each entry click Add to display the Add Entry dialog.
</description>
<steps>
	<step>
		<description>Select one of the following Type radio buttons:
</description>
		<cases>
			<case>
				<description>New Category
</description>
			</case>
			<case>
				<description>Item
</description>
			</case>
			<case>
				<description>Separator
</description>
			</case>
			<case>
				<description>Text
</description>
			</case>
			
		</cases>
		
	</step>
	<step>
		<description>Enter the text for the entry in the Settings > Name field.
</description>
	</step>
	
</steps>	
	
</section>
<section>
	
	<title>Item
</title>
	<description>If you selected "Item" in step 1a, enter values into the following fields.
</description>
<steps>
	<step>
		<description>Enter the name of the variable that will be set in the Variable name field.
</description>
	</step>
	
	<step>
		<description>Select the Variable scope. The options are:
</description>
<cases>
	<case>
		<description>"Local"
</description>
	</case>
	<case>
		<description>"Session"
</description>
	</case>
	<case>
		<description>"Global"
</description>
	</case>
	
</cases>
	</step>
	
	<step>
		<description>Select the Variable type. The options are:
</description>
		<cases>
	<case>
		<description>"Character"
</description>
	</case>
	<case>
		<description>"Numeric"
</description>
	</case>
	<case>
		<description>"Logical"
</description>
	</case>
	
</cases>
	</step>
	
	<step>
		<description>Optionally, set a Default Value for the variable. Character strings should not be quoted.
</description>
	</step>
	
	<step>
		<description>Select the Control type. The options are:
</description>
		<cases>
	<case>
		<description>"Edit" - allows you to enter a character, date, or numeric value
</description>
	</case>
	<case>
		<description>"Smart" - opens a dialog that helps you select or enter a value
</description>
	</case>
	<case>
		<description>"Combo" - presents a list, but does not allow new entries
</description>
	</case>
	<case>
		<description>"EditCombo" - presents a list, but allows new entries
</description>
	</case>
</cases>
	</step>
	
	<step>
		<description>Input the Event name of the variable.
</description>
	</step>
	
	<step>
		<description>Click OK to return to the Property Sheet Builder.
</description>
	</step>
	
	<step>
		<description>Optionally, enter values the Control Properties > Data field.
</description>
<cases>
	<case>
		<description>1. For Combo controls enter a comma separated list or an "@" followed by the name of variable containing a CR-LF delimited list. You must DIM this variable and populate this list on the Initial Code tab. See Defining the Contents of a Combo Box.
</description>
	</case>
	<case>
		<description>2. For Smart Button controls, enter the code to execute in the format: field_name = function(). See Creating Smart Fields.
</description>
	</case>
	<case>
		<description>3. For Check box controls, enter the check box text. Character values should not be quoted.
</description>
	</case>
</cases>
	</step>
	
	<step>
		<description>Set the value of Control Properties > Enable. The options are:
</description>
<cases>
	<case>
		<description>.T. = always enable the item
</description>
	</case>
	<case>
		<description>.F. = always disable the item
</description>
	</case>
	<case>
		<description>A logical variable or expression that can be changed from TRUE to FALSE to selectively enable or disable the item.
</description>
	</case>
</cases>
	</step>
	
	<step>
		<description>Set the value of Control Properties > Readonly. The options are:
</description>
		<cases>
	<case>
		<description>.T. = always allow the user to read but not change the value
</description>
	</case>
	<case>
		<description>.F. = always allow the user to read or change the value
</description>
	</case>
	<case>
		<description>A logical variable or expression that can be changed from TRUE to FALSE to selectively change the item from read-only to editable.
</description>
	</case>
</cases>
	</step>
	
	<step>
		<description>Set the value of Control Properties > Show. The options are:
</description>
		<cases>
	<case>
		<description>.T. = display the item
</description>
	</case>
	<case>
		<description>.F. = hide the item
</description>
	</case>
	<case>
		<description>A logical variable or expression that can be changed from TRUE to FALSE to selectively display or hide the item.
</description>
	</case>
</cases>
	</step>
	
	
	
</steps>	
</section>



<section>
<title>New Category
</title>	
<description>If you selected "New Category" in step 1a:
</description>	
<steps>
	<step>
		<description>Make a selection from the Category Properties > Initial state list. The options are:
</description>
		<cases>
			<case>
				<description>"Opened"
</description>
			</case>
			<case>
				<description>"Closed"
</description>
			</case>
			
		</cases>
	</step>
	<step>
		<description>Set the value of Category Properties > Show Category. The options are:
</description>
		<cases>
			<case>
				<description>.T. = always display the category
</description>
			</case>
			<case>
				<description>.F. = always hide the category
</description>
			</case>
			<case>
				<description>A logical variable or expression that can be changed from TRUE to FALSE to selectively display or hide the category.
</description>
			</case>
		</cases>
	</step>
	<step>
		<description>Set the value of Category Properties > Show Label. The options are:
</description>
		<cases>
			<case>
				<description>.T. = always display the label
</description>
			</case>
			<case>
				<description>.F. = always hide the label
</description>
			</case>
			<case>
				<description>A logical variable or expression that can be changed from TRUE to FALSE to selectively display or hide the label.
</description>
			</case>
		</cases>
	</step>
	
</steps>
	
</section>
<section>
	
	<title>Text
</title>
<description>If you selected "Text" in step 1a:
</description>	
<steps>
	<step>
		<description>Enter the text to display in the Text Properties > Text field.
</description>
	</step>
	<step>
		<description>Enter the number of rows it is to span in the Text Properties > Row Span field.
</description>
	</step>
</steps>	
</section>
<section>
	
	<title>Other Tabs</title>
<steps>
	<step>
		<description>Use the Initial Code tab to other DIM variables, such as those containing lists, and set their initial values.
</description>
	</step>
	<step>
		<description>Use the Event Code tab to write code that responds to item events and runs scripts, functions, etc.
</description>
	</step>
	<step>
		<description>Display the Propsheet Settings tab.
</description>
	</step>
	<step>
		<description>Select the Type of property sheet. The two styles are "Normal" and "WebForm Style" and illustrated below. 
</description>
<figure><link>images/Property_Sheet_Styles.gif</link></figure>
	</step>
	<step>
		<description>If you selected "Normal" in step 4, select the Icon Style and Icon Color.
</description>
	</step>
	<step>
		<description>If you selected "WebForm Style":
</description>
<cases>
	<case>
		<description>Select the cascading style sheet to use from the WebForm Style list. See also Webform Style Builder.
</description>
	</case>
	<case>
		<description>Select the font size from the Font Scale list. The options are:
</description>
<cases>
	<case>
		<description>"Smallest" 
</description>
	</case>
	<case>
		<description>"Smaller" 
</description>
	</case>
	<case>
		<description>"Medium" 
</description>
	</case>
	<case>
		<description>"Larger" 
</description>
	</case>
	<case>
		<description>"Largest" 
</description>
	</case>
</cases>
	</case>
</cases>
	</step>
	<step>
		<description>Optionally, modify the Row Height, Header Width, and Help Height.
</description>
	</step>
	<step>
		<description>Click OK to exit the Property Sheet Builder.
</description>
	</step>
	<step>
		<description>Continue with Define Title of Display an Xdialog Box.
</description>
	</step>
	
	
</steps>	
	
</section>


<section>
	
	<title>Defining the Contents of a Combo Box
</title>
<description>There are two ways to populate a combo box.
</description>	
	<steps>
		<step>
			<description>Enter the values into the Control Properties > Data field in the format: Value1,Value2,Value3...ValueN.
</description>
		</step>
		<step>
			<description>Define the list with Xbasic code:
</description>
<cases>
	<case>
		<description>1. Place a reference to the list in the Control Properties > Data field in the format: @ListVariableName.
</description>
	</case>
	<case>
		<description>2. Display the Initial Code tab.
</description>
	</case>
	<case>
		<description>3. Set the values of the list in the following format:
</description>
<example><![CDATA[ListVariableName = <<%str%
Value1
Value2
Value3
...
ValueN
%str% ]]></example>
	</case>
</cases>
		</step>
		
	</steps>
</section>


<section>
	<title>Creating Smart Fields
</title>
<description>Smart fields are highly desirable when you want to enter the following types of data.
</description>	
<cases>
	<case>
		<title>Color</title>
		<example><![CDATA[myColor =  UI_SELECT_COLOR2() ]]></example>
	</case>
	<case>
		<title>Date</title>
		<example><![CDATA[myDate =  UI_GET_DATE_CALENDAR() ]]></example>
	</case>
	<case>
		<title>Field Name</title>
		<example><![CDATA[myField =  UI_GET_FIELDNAME() ]]></example>
	</case>
	<case>
		<title>Filter Expression</title>
		<example><![CDATA[myFilter =  UI_GET_FILTER() ]]></example>
	</case>
	<case>
		<title>Font</title>
		<example><![CDATA[myFont =  UI_GET_FONT() ]]></example>
	</case>
	<case>
		<title>Order Expression</title>
		<example><![CDATA[myOrder =  UI_GET_ORDER() ]]></example>
	</case>
	<case>
		<title>Others</title>
		<description>See ((User Interaction _UI_ Functions|User Interaction (UI) Functions))</description>
	</case>
	
</cases>
	
</section>
<section>
	<description>To return multiple selections, try something like this. This function call uses UI_GET_LIST2() to return one or more values from a list created by TABLE.EXTERNAL_FIELD_NAME_GET().</description>
	<example><![CDATA[myFields = ui_get_list2("Select Fields", "", table.external_field_name_get(tbl_name, "N"), 2)
 ]]></example>
</section>
<section>
	
<title>Hiding and Displaying an Item or Category
</title>	
<steps>
	<step>
		<description>Create a logical variable with an initial value that corresponds to whether the item or category should be initially hidden or displayed.
</description>
<example><![CDATA[dim showVariableName as L = .F. ]]></example>
	</step>
	<step>
		<description>Place the name of this variable into the Control Properties > Show field.
</description>
	</step>
	<step>
		<description>Display the Event Code tab of the Property Sheet Builder.
</description>
	</step>
	<step>
		<description>Select the Change event of the item that will trigger the change from hidden or shown.
</description>
	</step>
	<step>
		<description>Enter code that resets the value of showVariableName. See the following pictures for an example.
</description>
	</step>
	
</steps>	
	
</section>


<section>
	<description>The Item Properties > Variable Name field of the "Database" item contains the variable cDatabase. The user selection in the combo box sets this variable's value. 
</description>
<figure><link>images/Setup_to_Hide_or_Show_Item.gif</link></figure>	
</section>

<section>
	<description>The event variable eDatabase has code attached to its Change event. The code tests for the value of the cDatabase variable, and sets the value of showADOProducts. 
</description>
<figure><link>images/Property_Sheet_Builder_Event_Tab.gif</link></figure>	
</section>

<section>
	<description>The Control Properties > Show field of the "ADO Products" item contains the showADOProducts variable. When the value is TRUE (.T.), the item is visible. When the value is FALSE (.F.), the item is hidden. 
</description>
<figure><link>images/Hide_or_Show_Item.gif</link></figure>	
</section>

<section>
	<description>This picture shows the property sheet dialog with the "ODBC Products" item that appears only when "ODBC Compatible (AlphaDAO)" is selected from the "Database" list. 
</description>
	<figure><link>images/Hidden_and_Displayed_Item.gif</link></figure>
</section>

<section>
	<title>Responding to Events
</title>
<description>Each category and item generates the following events:
</description>	
<cases>
	<case>
		<description>Change
</description>
	</case>
	<case>
		<description>SetFocus
</description>
	</case>
	<case>
		<description>KillFocus
</description>
	</case>
	<case>
		<description>Keypress
</description>
	</case>
	<case>
		<description>Keydown
</description>
	</case>
	<case>
		<description>Keyup
</description>
	</case>
	
</cases>	
</section>
<section>
	<description>You can attach Xbasic code to any of these events.
</description>
</section>


</sections>	
	<see>
		<ref href="/documentation/index?search=Display an Xdialog Box">Display an Xdialog Box</ref>
		<ref>Webform Style Builder</ref>
	</see>
</page>