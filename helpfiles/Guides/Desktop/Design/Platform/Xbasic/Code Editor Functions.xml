<page>
	<shortlink>dt xb Code Editor Functions</shortlink>
	<topic>Code Editor Functions</topic>
<description>The Alpha Anywhere Code Editor has many functions to make you more productive.
</description>

<sections>
<section>
<title>Auto-Completion
</title>
	<description>When you type in the Code Editor, the Alpha Anywhere auto-completion logic displays a list of functions or methods starting with the characters you have typed. You can then press Enter to have Alpha Anywhere fill in the command. The Alpha Anywhere auto-completion logic and Bubble Help make typing Xbasic commands and functions much easier because whenever a table name, field name, index name, or constant are required, you can simply right-click on the Bubble Help, and Alpha Anywhere displays a list of all of the parameters from which you can select. Also, after you have declared a variable, Alpha Anywhere shows all the variable names, making it less likely that you will introduce an error by transposing a letter while typing a variable name in a script. 
</description>
	<figure><link>images/Auto_Completion.gif</link></figure>
	
</section>	
<section>
	
	<description>When you place the insertion point in a function or method, Alpha Anywhere Bubble Help displays the syntax.
</description>
<figure><link>images/image864.gif</link></figure>	
</section>
	<section>
		
		<description>Locally defined functions are also included in the auto-completion feature. For example, if you are writing a script and you define several functions in the script, Alpha Anywhere will list all of the locally-defined functions, in addition to global functions and system functions. Alpha Anywhere also displays Bubble Help for User Defined Functions.
</description>
	</section>
	
	
	
<section>
	<title>Automatic Formatting
</title>
	<description>The Code Editor includes a Format command ( Code > Format ) and a Format button on the toolbar that formats all code. 
</description>
<figure><link>images/Format_Code_button.gif</link></figure>
	
</section>	
	<section>
	<description>The function converts all language elements to uppercase and indents the code. For example:</description>
<example><![CDATA[if date = {12/25/2001} then 
ui_msg_box("Hello", "Merry Christmas") 
end if]]></example>	
	
</section>	
	<section>
	<description>Becomes:</description>
<example><![CDATA[IF date = {12/25/2001} then
    ui_msg_box("Hello", "Merry Christmas")
END IF]]></example>	
	
</section>	
<section>
	<title>Finding Un-dimmed Variables
</title>
<description>Selecting Code > Find Un-DIMmed Variables displays the Un Dimmed Variables dialog box. The Un DIMmed Variables list displays all the variables that are not DIMmed.
</description>	
<steps>
	<step>
		<description>Select an entry from this list.
</description>
	</step>
	<step>
		<description>Optionally, click the Local, Shared, or Global radio buttons to set the scope of the variable. The default is "Local".
</description>
	</step>
	<step>
		<description>Optionally, click the Dim as button that corresponds to the type of the variable. The resulting code will appear in the Generated DIM Commands list.
</description>
	</step>
	<step>
		<description>Click Copy Commands to Clipboard.
</description>
	</step>
	<step>
		<description>Paste the DIM commands into your script.
</description>
	</step>
	
	
</steps>	
</section>	

<section>
	<title>Alignment and Indenting
</title>
<description>The Code > In/Outdent Code > Indent Code</description>	
	<figure><link>images/Indent_button.gif</link></figure>
</section>
<section>
	<description>and Code > In/Outdent Code > Outdent Code</description>	
	<figure>images/Outdent_button2.gif</figure>
	
</section>
	<section>
	<description>commands allow you to select a section of code and insert or remove a tab. The Code > In/Outdent Code > Left Align Code</description>	
	<figure><link>images/Align_button.gif</link></figure>
	
</section>
	<section>
		<description>button removes all leading tabs and moves the code to the left margin.</description>
	</section>
<section>
	<title>Checking Syntax</title>
	<description>At any time you may select Code > Check Syntax button.</description>	
	<figure>images/Check_Syntax_button.gif</figure>
	
</section>
<section>
	<description>This removes all leading tabs and moves the code to the left margin.</description>	
	
</section>
		
<section>
	<title>Global Search of Scripts and Functions
</title>
	<description>The Edit > Global Search... command displays the Global Search of Scripts and Functions dialog box. To find text in any one of your scripts or functions:
</description>	
	<steps>
		<step>
			<description>When the Code tab is visible, select Code > Search Scripts and Functions... . Alternatively, while the Code Editor is open, click Edit > Global Search... .
</description>
		</step>
		<step>
			<description>Enter text to find in the Search for field or click the 'down arrow' icon to select a previous search argument. Alpha Anywhere returns a list of scripts and the lines of code that contain the searched-for text.
</description>
		</step>
		<step>
			<description>Optionally, narrow the search by selecting the Scripts or Functions radio buttons.
</description>
		</step>
		<step>
			<description>Optionally, narrow the search by clicking the Whole words or Match case check boxes.
</description>
		</step>
		<step>
			<description>Optionally, narrow the search by entering all or part of the name of a script in the Filter field.
</description>
		</step>
		<step>
			<description>Click Search. The Global Search of Scripts and Functions dialog box displays a list of files and lines of code that contain the search text.
</description>
		</step>
		<step>
			<description>Optionally, select an item from the returned list and click Quick View to see the script in a preview window. You can select and copy the code from this window.
</description>
		</step>
		<step>
			<description>Optionally, select an item from the returned list and click Edit Script to open the script in the Code Editor.
</description>
		</step>
		
		
	</steps>
</section>	


<section>
	<title>Clearing the Window
</title>
<description>To clear the entire Code Editor window, click the following.</description>	
	<figure><link>images/Clear_All_Button.gif</link></figure>
</section>

<section>
	
<description>To clear only the portion of the screen below the cursor location, click this.</description>	
	<figure><link>images/Clear_Downwards_Button.gif</link></figure>
</section>
<section>
	
<description>To clear only the portion above the cursor location, click this.</description>	
	<figure><link>images/Clear_Upwards_Button.gif</link></figure>
</section>


<section>
	<title>Commenting and Un-commenting
</title>
<description>To comment out a block of code, select it and click Code > Comment/Un-Comment Code > Comment Out . </description>	
	<figure><link>images/Comment_Out_Code_button.gif</link></figure>
</section>

<section>
	
<description>To reverse the process and change a comment into code, select it and click Code > Comment/Un-Comment Code > Un-Comment Out .</description>	
	<figure><link>images/Comment_In_Code_button.gif</link></figure>
</section>

<section>
	<title>Line Numbering
</title>
<description>To enable or disable line numbering when a script or function is open in the Code Editor, right click on the code window and check or clear Line Numbering.
</description>	
	
</section>



<section>
	<title>Insert Functions
</title>
<description>The Code Editor provides a set of useful tools for finding and inserting critical pieces of information into your script or function.
</description>	
<cases>
	<case>
		<title>Image Name</title>
	<description>Code > Insert Image Name displays the Insert Image dialog box that allows you to select from System Images, Addin Images, Bitmap Library Images, Windows Images, and images stored in your current database.</description>	
	</case>
	<case>
		<title>Function Name</title>
	<description>Code > Insert Function displays the Function Finder dialog box that allows you to search for functions by return type and description.</description>	
	</case>
	<case>
		<title>Field Name</title>
	<description>Code > Insert Field Name displays the Insert Field dialog box that allows you to insert field names from any of the tables in your database.</description>	
	</case>
	<case>
		<title>Color Name</title>
	<description>Code > Insert Color > By Alpha Anywhere Name... displays the Select Color dialog box that allows you to select any of the pre-defined colors in your database.</description>	
	</case>
	<case>
		<title>RGB Color Value</title>
	<description>Code > Insert Color > By RGB Value... displays the Color Picker dialog box that allows you to select any pre-defined color or define a new color.
</description>	
	</case>
	<case>
		<title>Hex Color Value</title>
	<description>Code > Insert Color > By HEX Value... displays the Color Picker dialog box that allows you to select any pre-defined color or define a new color.
</description>	
	</case>
	<case>
		<title>Formatted Keystrokes</title>
	<description>Code > More Genies > Insert Key Code displays the Insert Key Codes dialog box that allows you to record and insert formatted keystrokes suitable for use with the SYS_SEND_KEYS() function.</description>	
	</case>
	
	
</cases>	
	
</section>
<section>
	<title>Color Coding</title>
<description>The Xbasic Editor color codes scripts. Functions and methods are shown in green, comments in blue, and constant values in light gray. Text values without a closing quote are shown in red.</description>	
</section>


<section>
	<title>Show Function Declaration
</title>
<description>When your cursor is positioned on a function call and the function is defined within the same script, you can right click Show function declaration. This opens the function in a new window. 
</description>	
<figure><link>images/UG_Show_Function_Definition.gif</link></figure>
</section>

<section>
	<title>Goto Function Declaration
</title>
<description>When your cursor is positioned on a function call and the function is defined within the same script, you can right click Goto function declaration. This repositions the cursor at the beginning of the function definition.
</description>	
	
</section>

		
</sections>	
<see>
	<ref>Code Editor</ref>
<ref>Improved Code Library</ref>	
	
</see>	
</page>