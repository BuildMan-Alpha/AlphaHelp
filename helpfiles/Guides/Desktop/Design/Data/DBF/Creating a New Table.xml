<page>
	<shortlink>dt Creating a New Table</shortlink>
	<topic>Creating a New Table</topic>
<description>Typically, you create new database tables by defining their data field structure in the Table Editor window. Other methods for creating tables include:
</description>	
<sections>
	<section>	
<cases>
	<case>
		<description>Using the Alpha Anywhere New Table/Set Genie?.
</description>
	</case>
	<case>
		<description>Importing database files from other programs, such as  Microsoft Access, Excel, Outlook, and Visual FoxPro.
</description>
	</case>
	
</cases>		
		
		
	</section>
	<section>
<description>From the Tables/Sets tab on the Control Panel, click the New button and select New Table (Design mode). 
</description>		
	<figure><link>images/UG_Table_create_menu.png</link></figure>	
	</section>
<section>
	<description>The Table Editor opens, where you define the structure of the new table. 
</description>
	<figure><link>images/UG_Create_Table.png</link></figure>
</section>	

<section>
	<description>The Table Editor looks like a spreadsheet (and a bit like an Alpha Anywhere table). In the Table Editor, you define the type of information that will be stored in your table, in contrast to entering the information to be stored in the table. Using the Table Editor you describe the Fields that make up the new table. Each row in the Table Editor creates a Field and defines the properties of the Field.
For the checkbook register, there are four fields: Transaction Number, Date, Payee, and Amount. Therefore, four rows are filled in the Table Editor, one for each field. Each of these fields will appear as Columns in the resulting table.
</description>
	
</section>	

<section>
	<title>Field Names</title>
	<description>Start by entering a field Name, which can be up to 32 characters. The field name must start with a letter, and can contain the characters A-Z, 0-9, and the underscore character (_). If you use a space in the field name, Alpha Anywhere inserts an underscore in place of the space.
</description>
	<note>Any name longer than 10 characters is actually saved in the data dictionary since the .dbf format only supports 10 characters. If the data dictionary becomes corrupted, these long names can be lost and then the fields would appear to be "dropped". Most developers strictly stick to names of 10 characters or less. If you use more than 10 characters, then the first 9 characters should never be the same.</note>
</section>	

<section>
	<title>Field Types
</title>
	<description>In the Type column you specify the type of information the field will contain. You select the field type from drop-down list of preset values. Alpha Anywhere recognizes the selected field type and understands how to handle information in the field.
In the checkbook example, the Date column is designated as a date field, while the Transaction Amount is stored as a numeric field.
Some things to keep in mind about field types when creating a table:
When you create a numeric field and use decimal places, the width you enter needs to include numbers on both sides of the decimal point and the decimal point itself. For example, if the largest value you want to store is 99.99, enter 5 in the Width column and 2 in the Decimal column.
Numeric information that won't be used to perform numerical calculations (e.g. ZIP codes or phone numbers) should be stored in a character field instead of a numeric field. This lets you add zeros and formatting characters. For example, the ZIP code 01803 becomes 1803 when stored in a numeric field and (617) 555-1212 won't be accepted in a numeric field because of the non-numeric characters.
Alpha supports the following eleven field types. Note that there are variable data types that are not supported as field types.
</description>
	<cases>
		<case>
			<title>Bitmap</title>
			<description>Stores bitmap (.bmp) image files as Data in the table.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Character</title>
			<description>The most common field type, Character allows any combination of alphanumeric characters. Maximum of 255 characters.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>Yes</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Date</title>
			<description>Contains a date only. Alpha Anywhere automatically sets the width to 8 for all date fields. Valid dates are 01-01-0000 through 12-31-9999.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>Yes
</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Exponent Numeric</title>
			<description>A fixed precision decimal number.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No
</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Image File Reference </title>
			<description>A field that links to and displays an image (.jpg or .bmp) without storing it in the table.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>JPEG Image</title>
			<description>Stores JPEG (.jpg) image files as data in the table. Refer to Creating a Bitmap Image Field and Creating a JPEG Image Field.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Logical</title>
			<description>Contains a single character, signifying TRUE or FALSE. You can display logical fields as Check boxes.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>Yes</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Memo</title>
			<description>Contains a 10-character pointer to a special memo field file, which can contain a virtually unlimited number of characters. Memos are stored internally as either character or binary (blob) data.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Numeric</title>
			<description>Contains numbers, including a decimal point, any decimal places, and a negative sign. A number can contain up to 14 decimal places. Maximum of 19 characters.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>Yes</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>OLE</title>
			<description>Contains an OLE object, such as a spreadsheet or text file. (OLE is short for object linking and embedding, a method of integrating information that's processed in other applications.)</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Rich Text Memo</title>
			<description>Similar to a memo field except you can change the font, alignment, color, and size.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>No</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Short Time</title>
			<description>Contains a time. Sets the width to 9 for all short time fields.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>Yes</description>
				</case>
				
			</cases>
			
		</case>
		
		<case>
			<title>Time</title>
			<description>Contains a date and time. Sets the width to 17 for all time fields.</description>
			<cases>
				<case>
					<title>Data Type:</title>
					<description>Yes
</description>
				</case>
				
			</cases>
			
		</case>
		
		
	</cases>
	
	
	
</section>
<section>
	<title>Field Width
</title>
	<description>The number of characters allowed in the field. Adjust the field width to suit your needs. Some field widths are pre-defined, such as Date (8), Memo (10), and Logical (1).
</description>
	<note>If you change a field width after you have placed it onto a form, the form will not show the modified width. You will have to edit the field on the form to display the new field width.</note>
	
</section>

<section>
	<title>Decimal</title>
	<description>The number of decimal places allowed for numeric fields. The Decimal specification is only available for Numeric field types.
</description>
	
	
</section>

<section>
	<title>Indexed?</title>
	<description>Create a simple one-field index (alphabetical or numerical) to speed up querying.
Alpha Anywhere automatically creates indexes for fields you specify Ascending or Descending in the Indexed? column.
For example, if you are creating a table to store customer information, you might want to create an index for a  Customer_ID field, since it is likely you'll want to order and select records based on the Customer_ID. By creating an index, you speed up queries and other operations that use the indexed field.
</description>
	<note>Creating indexes on every field is likely to slow down data entry, as each index gets updated whenever a record is entered and changed. You should only build indexes for fields that will be used for ordering and querying.</note>
	
</section>

<section>
	<title>Global Calculated Fields</title>
	<description>Clicking the 'x-y' icon displays the Define Calculated Fields dialog box. This dialog allows you to define calculations (know as Calculated fields) that will be available to all layouts based on this table. Refer to Calculated Fields for more information.
</description>
	
	
</section>

<section>
	<title>Session or Global Variables</title>
	<description>Clicking the 'v' icon displays the Define Variable dialog box. This dialog allows you to define session or global variables. Refer to Define Variable Dialog Box for more information.
</description>
	
	
</section>

<section>
	<title>Saving a Table</title>
	<description>When you finish defining the table structure, click the 'save' button or select File > Save to save the table in the database.
</description>

	
</section>
	
</sections>	
<see>
	<ref>Table and Field Names</ref>
	<ref link="Restructuring a Table">Restructuring a Table</ref>
	<ref link="Variable Data Types">Variable Data Types</ref>
</see>	
	
</page>