<page>
	<shortlink>server xb Understanding Data Types</shortlink>
	<topic>Understanding Data Types</topic>
	<description>The Xbasic programming language supports 11 types of variables (see Variable Data Types and Scope ). You will find yourself using the following types of variables.</description>
			
	<sections>
		<section>
			<cases>
				<case>
					<title>Blob</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>B</description>
						</case>
						<case>
							<title>Values:</title>
							<description>Binary data (e.g. images). Blob data cannot be directly displayed. Browsers can only display image data from a named file.
</description>
						</case>
					</cases>
					
					
				</case>
				
				<case>
					<title>Character</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>C</description>
						</case>
						<case>
							<title>Values</title>
							<description>Alpha-numeric characters. A NULL string is represented by "".</description>
						</case>
					</cases>
					
					
				</case>
				<case>
					<title>Date</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>D</description>
						</case>
						<case>
							<title>Values</title>
							<description>A date and time between where the date is between 00/00/0000 and 12/31/9999. Your browser can display date values according to your system preference.
</description>
						</case>
					</cases>
					
					
				</case>
				
				<case>
					<title>Logical</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>L</description>
						</case>
						<case>
							<title>Values</title>
							<description>TRUE (.T.) or FALSE (.F.). Your browser displays these values as "True" and "False".</description>
						</case>
					</cases>
					
					
				</case>
				
				<case>
					<title>Numeric</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>N</description>
						</case>
						<case>
							<title>Values</title>
							<description>A number of up to 19 digits, or 18 digits when there is a decimal point. Your browser displays decimal numbers with 6 digits after the decimal point.</description>
						</case>
					</cases>
					
					
				</case>
				
				<case>
					<title>Pointer</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>P</description>
						</case>
						<case>
							<title>Values</title>
							<description>A reference (pointer) to an object, or a pointer to a "dot" variable. Pointers are never displayed.</description>
						</case>
					</cases>
					
					
				</case>
				
				<case>
					<title>Time</title>
					<cases>
						<case>
							<title>Type Symbol:</title>
							<description>T</description>
						</case>
						<case>
							<title>Values</title>
							<description>A time value that stores the date, hour, minute, seconds and hundredths of a second. Your browser does not display time values.</description>
						</case>
					</cases>
					
					
				</case>
				
				
			</cases>
			
		</section>
		
		<section>
			<description>In addition, Alpha Anywhere tables support these field types.






 
</description>
			<list>
				<item>
					<name-title>Field Type</name-title>
					<description-title>Data Type to Use</description-title>
				</item>
				<item>
					<name>Image Reference</name>
					<description>Blob</description>
				</item>
				<item>
					<name>JPEG</name>
					<description>Blob</description>
				</item>
				<item>
					<name>Bitmap</name>
					<description>Blob</description>
				</item>
				<item>
					<name>Memo</name>
					<description>Character</description>
				</item>
				<item>
					<name>RTF Memo</name>
					<description>Character</description>
				</item>
				
				
			</list>
			
		</section>
		<section>
			<description>HTML displays most of the common data types without any special formatting or conversions.</description>
			
			<cases>
				<case>
					<title>Numeric</title>
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>12</name>
							<description>"12"</description>
						</item>
					</list>
				</case>
				
				<case>
					<title>Logical</title>
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>.T.</name>
							<description>"True"</description>
						</item>
					</list>
				</case>
				
				<case>
					<title>Character</title>
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>"Sam"</name>
							<description>"Sam"</description>
						</item>
					</list>
				</case>
				
				<case>
					<title>Date</title>
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>8/30/04</name>
							<description>08/30/2004</description>
						</item>
					</list>
				</case>
				
				
			</cases>
			
			
			
		</section>
		<section>
			<description>Sometimes you will have to convert data types before they will display correctly on an HTML page.</description>
			<cases>
				<case>
					<title>Numeric</title>
					<cases>
						<case>
					
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>1.234</name>
							<description>"1.234000"</description>
						</item>
					</list>
					</case>
					<case>
						<example><![CDATA[str(nVal,10,3,)]]></example>
					</case>
					<case>
						<title>See</title>
						<description>STR()</description>
					</case>
					</cases>
					
					
				</case>
				
				
				
				<case>
					<title>Numeric</title>
					<cases>
						<case>
					
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>$3.29</name>
							<description>"3.290000"</description>
						</item>
					</list>
					</case>
					<case>
						<example><![CDATA[str(nVal,10,2,"$") ]]></example>
					</case>
					<case>
						<title>See</title>
						<description>STR()</description>
					</case>
					</cases>
					
					
				</case>
				
				
				<case>
					<title>Logical</title>
					<cases>
						<case>
					
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>.T.</name>
							<description>"True"</description>
						</item>
					</list>
					</case>
				
					</cases>
					
					
				</case>
				
				
				<case>
					<title>Time</title>
					<cases>
						<case>
					
					<list>
						<item>
							<name-title>Sample Value</name-title>
							<description-title>Standard HTML Display</description-title>
						</item>
						<item>
							<name>2:46:04 PM</name>
							<description>none</description>
						</item>
					</list>
					</case>
					<case>
						<example><![CDATA[time("h:0m:0s AM", time_variable) ]]></example>
					</case>
					<case>
						<title>See</title>
						<description>TIME()</description>
					</case>
					</cases>
					
					
				</case>
				
				
			</cases>
			
		</section>
	<section>
		<title>Assigning and Using Variables</title>
		<description>When you create a variable with the DIM statement you assign it one of the data types mentioned above. Afterwards, until you delete it and DIM it again, it can store only that data type.

For example, if you have this statement.
</description>
		<example><![CDATA[dim cFirstname as C ]]></example>
		
		
	</section>
		
	<section>
		<description>The following statement will cause an error.</description>
		<example><![CDATA[cFirstname = 3 ]]></example>
		
		
	</section>
		
	<section>
		<description>The cFirstname field cannot store a different data type. This principle applies to all variable types.

If you want to assign a value to cFirstname, you can write the first statement in two different and equivalent ways.
</description>
		<example><![CDATA[dim cFirstname as C = "Fred"
dim cFirstname as C
cFirstname = "Fred" ]]></example>
		
		
	</section>
	
	<section>
		<description>The practical difference is that the first alternative provides a default value for the variable, which might be useful.

The numeric data type support integers and decimal numbers, sometime referred to as floating point, single, or double precision numbers in other programming languages. You do not have to worry about the placement of the decimal point. The following statements are valid.
</description>
		<example><![CDATA[dim nSmall as N = 2
dim nBig as N = 12000345
dim nFraction as N = -12.345
dim nVerySmall as N
nVerySmall = .000000123]]></example>
		
		
	</section>
	
	<section>
		<description>The date data type contains only the date. The time data type includes both date and time information. When assigning a value to a date variable, you must use curly braces and forward slashes as illustrated below.</description>
		<example><![CDATA[dim dPaymentDue as D = {4/15/04}
dim dAnotherPaymentDue as D
dAnotherPaymentDue = {7/17/04} ]]></example>
		
		
	</section>
	
	<section>
		<description>When assigning a value to a time variable, you must place quotes around the values.</description>
		<example><![CDATA[dim dt as T
dt = "4/15/04 2:12:03 pm"]]></example>
		
		
	</section>
	
	<section>
		<title>Choosing the Correct Data Type</title>
		<description>Choosing the correct data type should be easy if you follow these rules.</description>
		<cases>
			<case>
				<name>Character</name>
				<description>Consider the character data type to be the default.</description>
			</case>
			
			<case>
				<name>Numeric</name>
				<description>Use numeric variables to work with amounts: anything that might need to be arithmetically processed.</description>
			</case>
			
			<case>
				<name>Logical</name>
				<description>Use logical variables when you want a variable that can be "Yes" or "No", "On" or "Off", or "True" or "False".</description>
			</case>
			
			<case>
				<name>Date</name>
				<description>Use date variables to save date values or to calculate the difference between two dates.</description>
			</case>
			
			<case>
				<name>Time</name>
				<description>Use time variables to save time of day values or to calculate the difference between two time values.</description>
			</case>
			
			
		</cases>
	</section>
	
	<section>
		<title>Creating Constants</title>
		<description>Constants are a special type of variable that receive a value but cannot be changed afterwards. The data type of a constant is set by the assigned value. After executing this statement,</description>
		<example><![CDATA[CONSTANT TAXMONTH = 4]]></example>
	</section>
		
	<section>
		<description>you can treat TAXMONTH or taxmonth as equivalent to the value 4. The value of the new_value variable below will be 12.</description>
		<example><![CDATA[new_value = TAXMONTH * 3 ]]></example>
	</section>
	
	<section>
		<title>Adding comments</title>
		<description><![CDATA[Both HTML and Xbasic allow you to insert comments into a page. In both cases the comments will not appear on the page.

Precede an Xbasic comment with a single quote. Remember that an Xbasic comment has to be inside an Xbasic code block, which is defined by <%a5 and %>.

Surround an HTML comment with <!-- and ->.

Comments are a recommended technique for documenting your applications. They make it easier to go back and maintain previously developed pages and programs.
 ]]></description>
		<steps>
			<step>
				<description>Create a new A5W page with the following content.</description>
				<example><![CDATA[<html>
<head>
<meta name="generator" content="Alpha Anywhere HTML Editor">
<title>Comments</title>
</head>
<body>
<%a5
' This line is an Xbasic comment and will not appear.
? "This line will appear."
%>
<p>
<!-- This line is an HTML comment and will not appear. ->
This line will appear.
</body>
</html> ]]></example>
			</step>
			<step>
				<description>Select File > Save As.</description>
		
			</step>
			<step>
				<description>Enter "Comments" in the File name field and click Save .</description>
				
			</step>
			<step>
				<description>Click 'x' to close the HTML Editor.</description>
				
			</step>
			<step>
				<description>Display the A5W Pages page of the Web Projects Control Panel.</description>
				
			</step>
			<step>
				<description>Right click the "Comments" entry and select Publish (Local Webroot) and open. Your new page will appear in your Internet browser. The results should look like this.  </description>
				<figure><link>images/WPT_Comments.gif</link></figure>
			</step>
			
			
		</steps>
	</section>
	
	
		
	</sections>
	
	
	
	
</page>