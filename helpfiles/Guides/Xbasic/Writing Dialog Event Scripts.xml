<page>
	<shortlink>server xb Writing Dialog Event Scripts</shortlink>
	<topic>Writing Dialog Event Scripts</topic>
	<description>Web publishing applications only. Form event scripts provide an opportunity to respond to or process the input from a dialog (form) web component. You can run scripts when the following events occur.</description>
	
	<sections>
<section>
	<cases>
		<case>
			<description>OnClick - Available only for AdvancedButton objects. The OnClick script runs every time the button is clicked.</description>
		</case>
		<case>
			<description>Initialize - The Initialize event fires once, the first time the Form is run.</description>
		</case>
		<case>
			<description>Validate - The Validate event fires when a form is submitted.</description>
		</case>
		<case>
			<description>AfterValidate - The AfterValidate event fires after the Validate event.</description>
		</case>
		<case>
			<description>Activate - The Activate event fires every time the form is run.</description>
		</case>
			
		
	</cases>
	
</section>		
<section>
	<title>Initialize Events</title>
	<description>The Initialize event fires once, the first time the form is run. If the form is submitted back to itself (as is typically the case, so that the values in the Form's controls can be validated), the Initialize event is not fired.
The Initialize event is typically used to set initial values for controls on the Form.
If you need to execute code every time the Form is run, use the Activate event.
</description>
</section>		
<section>
	<title>Validate Events</title>
	<description>The Validate event fires when a form is submitted. Use this event to check that the value in a control is valid. If your script determines that an error has occurred, then you should set the following object properties:</description>
	<example><![CDATA[CurrentControl.Has_Error = .t.
CurrentControl.Error_Message = "" ]]></example>
</section>		
<section>
	<description>You can also use this syntax:</description>
	<example><![CDATA[CurrentForm.Controls..Has_Error = .t.
CurrentForm.Controls..Error_Message = "" ]]></example>
</section>	
<section>
	<description>If the CurrentControl.Has_Error property is ".T.", then the form will be redisplayed with the error message shown at the top of the form. The user can then make corrections and resubmit the form.</description>
</section>
<section>
	<title>AfterValidate Events</title>
	<description>The AfterValidate event fires after the Validate event, but only if no object on the form has had its .Has_Error property set to ".T.".
A typical use of the AfterValidate event is to redirect control to another page in the application.
For example:</description>
	<example><![CDATA[If Condition1 = .t. Then
    Response.Redirect("Page1.a5w")
Else
    Response.Redirect("Page2.a5w")
End If ]]></example>
</section>		
<section>
	<title>Activate Events</title>
	<description>The Activate event fires every time the form is run. It fires after the Validate and AfterValidate events.
A typical use of the Activate event is to programatically populate drop down list boxes on the Form.
</description>

</section>			

<section>
	<title>Declarations</title>
	<description>When you display the Form Events dialog and select "Declarations" from the Event list box, you to define any User Defined Functions that you want to be available to all Xbasic event code.</description>
	<note>Use the declarations section to define functions that you want to use in the event handlers.</note>
</section>


<section>
	<title>Redirecting to a Different Page</title>
	<description>In a dialog component, you place the code that will redirect to another page in the AfterValidate event. If the user has selected the destination from a DropDownBox, the name you assigned to the DropDownBox control is the name of the variable that contains the value. 
 You cannot use SYS_OPEN()in an event because it will hang the Application Server. You cannot use any Xbasic in an event that results in user interface being displayed. 
 Assume that the control's name was menuselect and that the entry that is associated with the URL was " assi ". Assume that the URL was " </description>
	<example><![CDATA[" http://www.nksoa.org/ftp/assignhelp/assignhelp.html ". ]]></example>
</section>		
<section>
	<description>In your AfterValidate event you would put something like the following:</description>
	<example><![CDATA[IF substr(menuselect,1,4) = "assi" 
 URL_var = "http://www.nksoa.org/ftp/assignhelp/assignhelp.html" 
 response.redirect(URL_var) 
 end if
 ]]></example>
</section>
<section>
	<steps>
		<step>
			<description>Optionally, select a different event to respond to from the Event drop-down list.</description>
		</step>
		<step>
			<description>Write your Xbasic script.</description>
		</step>
		<step>
			<description>Optionally, click Insert and select a menu entry to insert code into your script. The options are:</description>
		</step>
	</steps>
	
</section>
<section>
	<cases>
		<case>
			<title>CurrentForm
</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>An alias for the current web component dialog.</description>
					<note>Grid components use the DataSubmitted alias.</note>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Has_Error</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Logical</description>
				</case>
				<case>
					<title>Details</title>
					<description>Sets the error status of the current web component dialog.</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Error_Message</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>The error message to display.</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.RedirectTarget</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>This property allows you to specify the next page to display.</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.InitialExecution</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Logical</description>
				</case>
				<case>
					<title>Details</title>
					<description>This is a readonly variable. It is .T. if the form is executing for first time. If the form has been submitted back to itself, then it will be .F. .
</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Controls . ControlName
</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>The name of a control.</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Controls . ControlName.Value</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>The value in a control.</description>
					<note>Using only ControlName also returns the control's value.</note>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Controls . ControlName.Property</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>The name of one of the control's properties.</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Controls . ControlName.Has_Error</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Logical</description>
				</case>
				<case>
					<title>Details</title>
					<description>Sets the error status of the named control.
</description>
				</case>		
			</cases>
			
		</case>
		
		<case>
			<title>CurrentForm.Controls . ControlName.Error_Message
</title>
			<cases>
				<case>
					<title>Type</title>
					<description>Character</description>
				</case>
				<case>
					<title>Details</title>
					<description>The error message to display for the named control.
</description>
				</case>		
			</cases>
			
		</case>
		
		
	</cases>
	
	
</section>
<section>
	<title>Print Report Genie</title>
	<description>The Print Report Genie generates Xbasic code for the AfterValidate event of dialog components. However, you can use this genie to generate Xbasic code, which you can copy for use on A5W pages.
To use the Print Report Genie :
</description>
	<steps>
		<step>
			<description>From the Web Projects Control Panel open a dialog component in the Dialog Component Builder.</description>
		</step>
		<step>
			<description>Display the Form > Properties page.</description>
		</step>
		<step>
			<description>Select Server Events > AfterValidate.</description>
		</step>
		<step>
			<description>Click Insert > Genies > Print Report to display the Print Report Genie.</description>
		</step>
		<step>
			<description>Click the 'down arrow' icon in the Report Name list to select a previously created Alpha Anywhere report from your database.</description>
		</step>
		<step>
			<description>Enter a Filter Expression. To select all records enter .T. .</description>
		</step>
		<step>
			<description>Optionally, enter an Order Expression. Click the 'down arrow' icon to use the Order Builder.</description>
		</step>
		<step>
			<description>Enter a comma delimited list of all variables that you use in the filter expression into the Variables Referenced field.</description>
		</step>
		<step>
			<description>Click OK. </description>
		</step>
		
	</steps>
	
	
</section>
<section>
	<figure><link>images/WP_Print_Report_Genie.gif</link></figure>
</section>
<section>
	<description>The screen shown above inserts the code shown below. Note how the script places the PDF report in the session_folder with a default name of "tempreport.pdf" and then prints it. If you wish, you can modify this code. For more information see REPORT.SAVEAS().</description>
	<example><![CDATA[IF eval_valid("lastname") = .f. Then
    goto skipreport
end if
dim filter as c
dim order as c
Filter = lastname > 'M'
Order = "firstname"
Dim filename as c
filename = session.session_folder + chr(92) + "tempreport.pdf"
filename = report.saveas("Customer List@PathAlias.ADB_Path\customer.ddd","pdf",filter,order,filename,.f.)
if file.exists(filename)
    currentform.RedirectTarget = session.session_url + "tempreport.pdf?" +time("hms3")
end if
skipreport:
 ]]></example>
</section>

	</sections>
<see>
	<ref link="Writing Server Event Scripts">Writing Server Event Scripts</ref>
	<ref>Creating Dialog Components</ref>
	<ref link="Setting Dialog Properties">Setting Dialog Properties</ref>
</see>
</page>