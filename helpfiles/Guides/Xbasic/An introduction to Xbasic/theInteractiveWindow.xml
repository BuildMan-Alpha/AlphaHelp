<page build="0">
    <shortlink>xbasic guide interactive window</shortlink>
    <topic parent="Xbasic Guide" parentType="guide" elementName="The Interactive Window">Xbasic Guide - The Interactive Window</topic>
    <description></description>
    <sections>
        <section>
            <description>
                <p>The Xbasic Interactive Window executes code as you write it, letting you see the results of individual Xbasic commands immediately. The line-by-line interactive nature of the Interactive Window makes it easy to test Xbasic scripts and explore how an Xbasic command works. The Interactive Window is available everywhere you can add Xbasic, usually as a tab in the Xbasic editor.</p>
                <p>Let's open the Interactive Window and become familiar with it by executing some simple Xbasic expressions. Click the "Interactive Window" toolbar button on the Web Projects Control Panel to open the Xbasic Interactive Window.</p>
            </description>
            <figure>
                <link>images/image001.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Type the following in the Interactive Window and press enter:</p>
                <p>
                    <example code="xb"><![CDATA[? "Hello World"]]></example>
                </p>
                <p>You should see the following output in the Interactive Window:</p>
                <p>
                    <example code="xb"><![CDATA[="Hello World"]]></example>
                </p>
                <p>The *[xb:?]* operator prints the value of an expression in the Interactive Window. The Enter key executes the Xbasic on the line where the text cursor is located. </p>
                <p>Try this: change the message from *[xb:"Hello World"]* to your name. Then, while the mouse cursor is still on the same line as the *[xb:?]* statement, press enter. This executes the *[xb:?]* operator again and prints your name immediately after the statement.</p>
            </description>
            <figure>
                <link>images/image002.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Select all of the text in the Interactive Window and delete it. Then, type the following in the Interactive Window and press Enter, replacing *[xb:&lt;Your name here&gt;]* with your name.</p>
                <p>
                    <example code="xb"><![CDATA[name = "<Your name here>"]]></example>
                </p>
                <p>This line creates a character variable called name and assigns it the value of your *[xb:name]*. We can verify this by typing the following command to display the value of name in the Interactive Window:</p>
                <p>
                    <example code="xb"><![CDATA[? name]]></example>
                </p>
                <p>You should see your name output in the Interactive Window. </p>
                <p>When you create a variable in the Interactive Window, it is available until you close the Interactive Window or delete the variable using the DELETE statement (we discuss DELETE in a later section.) This means that you can continue to reference a variable even if you delete all of the code in the Interactive Window.</p>
                <p>Enter the next line in the Interactive Window and run it:</p>
                <p>
                    <example code="xb"><![CDATA[today = now()]]></example>
                </p>
                <p>This line of code does two things. First, the *[xb:now()]* function is called to get the current date and time. Then, a time variable called *[xb:today]* is created and assigned the return value of the *[xb:now()]* function.</p>
                <p>You can use the *[xb:typeof()]* function to determine the data type of a variable:</p>
                <p>
                    <example code="xb"><![CDATA[? typeof(today)]]></example>
                </p>
                <p>Executing this statement outputs *[xb:T]*, which stands for "Time". *[xb:T]* is the data type of the today variable. Other data types include character (*[xb:C]*), numeric (*[xb:N]*), and logical (*[xb:L]*). We discuss data types in depth later in this guide.</p>
                <p>Let's continue. Enter the following code on a new line and press enter:</p>
                <p>
                    <example code="xb"><![CDATA[dayOfWeek = time("Weekday", today)]]></example>
                </p>
                <p>The statement above creates a variable called *[xb:dayOfWeek]* and sets the value of the variable to the weekday name. The weekday name is extracted from the *[xb:today]* variable using the [time()] function.</p>
                <p>The *[xb:time()]* function converts a time value into a character string. It takes two parameters: a format string and a time value. The format string used here is *[xb:Weekday]*. *[xb:Weekday]* returns the full name of the weekday in proper case. There are other formatting options available. For example, run the following statement in the Interactive Window:</p>
                <p>
                    <example code="xb"><![CDATA[? time("Month d", today)]]></example>
                </p>
                <p>The statement prints the name of the month followed by the day of the month. Many formatting options exist for formatting date and time values. You can learn more about what format options are available in the Alpha Anywhere documentation for date and time variables. See [Date and Time Format Elements] to learn more.</p>
                <p>Enter the following in the Interactive Window, executing each line as you write it:</p>
                <p>
                    <example code="xb"><![CDATA[message = "Hello " + name + "." + crlf() 
message = message + "Today is " + dayOfWeek + "."
? message]]></example>
                </p>
                <p>The *[xb:+]* operator is used to concatenate multiple strings together into a single character string. The result is stored in the *[xb:message]* variable. The second line adds the day of the week to the message. The *[xb:crlf()]* function adds a newline to the message, breaking the text into two lines.</p>
            </description>
            <figure>
                <link>images/image003.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>There are other ways to inspect the value of a variable in the Interactive Window. One of them is using the showvar() function. showvar() displays a variable in a popup window. Let's display the message variable in a popup window. Type the code below into the Interactive Window and press Enter:</p>
                <p>
                    <example code="xb"><![CDATA[showvar(message,"Salutations")]]></example>
                </p>
                <p>This statement displays the message variable in a window with the title "Salutations":</p>
            </description>
            <figure>
                <link>images/image004.png</link>
            </figure>
        </section>
        <section>
            <title>Interactive Window Commands</title>
            <description>
                <p>The Interactive Window has several commands for running and modifying code in the window. You are already familiar with two: executing the current line using the Enter key and printing the value of an expression using the ? operator.</p>
            </description>
            <cases>
                <case>
                    <title nested="2">Run Selected</title>
                    <description>
                        <p>Multiple lines of code can be executed by highlighting multiple lines of code then right-clicking to open the context menu and selecting "Run Selected Code". Try it out: copy and paste the following code into the Interactive Window. Then select it, right-click anywhere in the whitespace of the Interactive Window, and select Run Selected Code.</p>
                        <p>
                            <example code="xb"><![CDATA[message = "This is a new message."+crlf()
message = message + "It contains two lines."
showvar(message,"Executing Multiple Lines")]]></example>
                        </p>
                    </description>
                    <figure>
                        <link>images/image005.png</link>
                    </figure>
                </case>
                <case>
                    <title nested="2">Insert Newline</title>
                    <description>
                        <p>Holding the Ctrl key while pressing Enter adds a new line to the Interactive Window without executing any statements. Inserting newlines without executing code is useful when writing multi-line statements, such as an IF statement, or in cases where you would like to insert a newline within existing statements.</p>
                        <p>Place your mouse cursor at the beginning of the first line of the Interactive Window. Then press enter while holding down the Ctrl key.</p>
                    </description>
                    <figure>
                        <link>images/image006.png</link>
                    </figure>
                </case>
                <case>
                    <title nested="2">Clear Screen</title>
                    <description>
                        <p>Typing CLE and then pressing enter on a blank line deletes all text in the Interactive Window at and below the line containing the CLE command.</p>
                        <p>Place the cursor on the first line of the Interactive Window. Then, type CLE and press Enter.</p>
                    </description>
                    <figure>
                        <link>images/image007.png</link>
                    </figure>
                </case>
                <case>
                    <description>
                        <p>Deleting the text in the Interactive Window using the CLE command does not delete variables created during the Interactive Window session.</p>
                    </description>
                </case>
            </cases>
        </section>
        <section>
            <description>
                <p>Now that you are familiar with the Interactive Window, let's start learning about the Xbasic Programming Language in the next section, Variables and Data Types.</p>
            </description>
        </section>
    </sections>
    <next>
        <link link="xbasic guide variables">Variables and Data Types</link>
    </next>
    <links>
        <link link="api%20time%20function">time()</link>
        <link link="api%20date%20and%20time%20format%20elements">Date and Time Format Elements</link>
    </links>
</page>