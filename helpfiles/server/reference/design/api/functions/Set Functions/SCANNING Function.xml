<page>
   <topic>SCANNING Function</topic>
   <syntax>Result_Flag as L = SCANNING(C tablename)</syntax>
   <arguments>
     <argument>
         <name>tablename</name>
         <description>A child table from a set.</description>
     </argument>
   </arguments>
   <description>Returns TRUE if the supplied child table is being fetched through.</description>
   <discussion><![CDATA[
SCANNING() returns .T. (TRUE) if the current composite record buffer includes data from Table_Name ; otherwise, it returns .F. (FALSE).
This function is useful for determining whether a parent record has been linked to an existing child record. If the SCANNING() function applied to the child table returns .F. (FALSE), there is no child record related to the current parent record.
For example, suppose you have a VENDOR table linked one-to-many to a PRODUCTS table. Each vendor should be related to at least one product; when a Vendor record is missing a related PRODUCTS record, you use the SCANNING() function. The expression, .NOT. SCANNING("PRODUCT"), returns TRUE (.T.) for a vendor that has no products.
You can use the SCANNING() function when working with sets that have multiple one-to-many links at the same level.
]]>
   </discussion>
   
   <sections>
       <section><title>Example</title>
            <description>Assume the following two tables, INVOICE and CUSTOMER, are linked one-to-one:</description>
           <list>
           <item>
           <name-title>CUSTOMER</name-title>
           <description-title>></description-title>
           </item>
           
           <item>
           <name>CUST_ID</name>
           <description>LAST_NAME</description>
           </item>
           
           <item>
           <name>C001</name>
           <description>Gorby</description>
           </item>
           
  
  
  
  
           <item>
           <name>C002</name>
           <description>Peabody</description>
           </item>
           
           <item>
           <name>C003</name>
           <description>Smith</description>
           </item>
           
           
           
            </list>
       </section>
           <section>
           <list>
           
           <item>
           <name-title>INVOICE</name-title>
           <description-title>></description-title>
           </item>
           
           <item>
           <name-title>INV_NO</name-title>
           <description-title>CUST_ID TOTAL</description-title>
           </item>
           
           <item>
           <name>I100</name>
           <description>C001 10.00</description>
           </item>
           
           <item>
           <name>I101</name>
           <description>C003 25.50</description>
           </item>
           
  
  
  
  
  
  
  
           <item>
           <name>I102</name>
           <description>C001 100.75</description>
           </item>
           
           <item>
           <name>I103</name>
           <description>C004 32.50</description>
           </item>
           
           <item>
           <name>I104</name>
           <description>C002 110.25</description>
           </item>
           
           <item>
           <name>I105</name>
           <description>C005 98.35</description>
           </item>
           </list>
       </section>
       
       
       
       <section>
       <description>To determine if a there is a matching customer for a particular invoice record, use the expression:
</description><example><![CDATA[
scanning("CUSTOMER") -> .F. (FALSE) for invoice records I103 and I105

]]></example>
       </section>
   </sections>
   <see>
      <ref>Set Functions and Methods</ref>
      <ref>Record Operations</ref>
   </see>
   
 

</page>