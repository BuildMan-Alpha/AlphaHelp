<html>

<head>
  <title>TransForm API XML Markup</title>
</head>

<body>
      <h1>XML templates for TransForm API XML Documentation Generation</h1>

      <p>The layout of sections in the XML document should look similar to below. Note that you can specify the version of Alpha
        Anywhere when an API method was introduced using the build=&quot;&quot; property in the &lt;page&gt; tag. The api
        property should always be &quot;transform&quot;.</p>
      <code><pre>
&#x3C;page api=&#x22;transform&#x22; build=&#x22; 4872&#x22;&#x3E;
&#x3C;shortlink&#x3E;transform {TransFormAPIMethodName} method&#x3C;/shortlink&#x3E;
&#x3C;topic&#x3E;TransForm {TransFormAPIMethodName} API Method&#x3C;/topic&#x3E;
&#x3C;description&#x3E;{description} &#x3C;/description&#x3E;
&#x3C;arguments&#x3E;
    &#x3C;argument&#x3E;
        &#x3C;name&#x3E;{InputName}&#x3C;/name&#x3E;
        &#x3C;type&#x3E;{InputType}&#x3C;/type&#x3E;
        &#x3C;description&#x3E;{InputDescription}&#x3C;/ description&#x3E;
    &#x3C;/argument&#x3E;
    &#x3C;argument optional=&#x22;true&#x22;&#x3E;
        &#x3C;name&#x3E;{OptionalInputName}&#x3C;/name&#x3E;
        &#x3C;type&#x3E;{OptionalInputType}&#x3C;/type&#x3E;
        &#x3C;description&#x3E;{OptionalInputDescription}&#x3C;/ description&#x3E;
    &#x3C;/argument&#x3E;
&#x3C;/arguments&#x3E;
&#x3C;returns&#x3E;
    &#x3C;return&#x3E;
        &#x3C;name&#x3E;{returnName}&#x3C;/name&#x3E;
        &#x3C;type&#x3E;JSON Object&#x3C;/type&#x3E;
        &#x3C;description&#x3E;Returns an object with these properties:&#x3C;/description&#x3E;
        &#x3C;properties&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;{returnProperty}&#x3C;/name&#x3E;
                &#x3C;type&#x3E;{returnPropertyType}&#x3C;/type&#x3E;
                &#x3C;description&#x3E;{returnPropertyDescription}&#x3C;/description&#x3E;
            &#x3C;/property&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;{returnProperty}&#x3C;/name&#x3E;
                &#x3C;type&#x3E;{returnPropertyType}&#x3C;/type&#x3E;
                &#x3C;description&#x3E;{returnPropertyDescription}&#x3C;/description&#x3E;
                &#x3C;properties&#x3E;
                    &#x3C;property&#x3E;
                        &#x3C;name&#x3E;{returnSubProperty}&#x3C;/name&#x3E;
                        &#x3C;type&#x3E;{returnSubPropertyType}&#x3C;/type&#x3E;
                        &#x3C;description&#x3E;{returnSubPropertyDescription}&#x3C;/description&#x3E;
                    &#x3C;/property&#x3E;
                &#x3C;/properties&#x3E;
            &#x3C;/property&#x3E;
        &#x3C;/properties&#x3E;
    &#x3C;/return&#x3E;
&#x3C;/returns&#x3E;
&#x3C;sections&#x3E;
    &#x3C;section&#x3E;
        &#x3C;tip&#x3E;{tip}&#x3C;/tip&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;example&#x3E;&#x3C;![CDATA[{exampleInputFormat}]]&#x3E;&#x3C;/example&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;description&#x3E;{extendedDescription}&#x3C;/description&#x3E;
        &#x3C;example&#x3E;&#x3C;![CDATA[{anotherInputExample}]]&#x3E;&#x3C;/example&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;title&#x3E;Scope&#x3C;/title&#x3E;
        &#x3C;description&#x3E;The required scope for this method is {scopes}&#x3C;/description&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;title&#x3E;CURL&#x3C;/title&#x3E;
        &#x3C;description&#x3E;CURL for Windows command window (may not work for long post bodies - use Bash syntax inside a Bash shell window instead of the Windows syntax)&#x3C;/description&#x3E;
        &#x3C;example&#x3E;&#x3C;![CDATA[{curlWinExample}]]&#x3E;&#x3C;/example&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;description&#x3E;CURL for Bash command window or Mac/Linux terminal:&#x3C;/description&#x3E;
        &#x3C;example&#x3E;&#x3C;![CDATA[{curlBashExample}]]&#x3E;&#x3C;/example&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;title&#x3E;Node&#x3C;/title&#x3E;
        &#x3C;example code=&#x22;js&#x22;&#x3E;&#x3C;![CDATA[{nodeExample}]]&#x3E;&#x3C;/example&#x3E;
    &#x3C;/section&#x3E;
    &#x3C;section&#x3E;
        &#x3C;title&#x3E;Xbasic&#x3C;/title&#x3E;
        &#x3C;example code=&#x22;xb&#x22;&#x3E;&#x3C;![CDATA[{xbasicExample}]]&#x3E;&#x3C;/example&#x3E;
    &#x3C;/section&#x3E;
&#x3C;/sections&#x3E;
&#x3C;annotations&#x3E;/TransForm/{TransFormAPIMethodName}.xml&#x3C;/annotations&#x3E;
&#x3C;/page&#x3E;</pre></code>
      <p>Individual templates for each element are listed below.</p>

      <h2>&lt;shortlink&gt;</h2>

      <p>Defines a URL to the doc page that can be shared and will not break if the file is moved or rename.</p>

      <pre><code>&#x3C;shortlink&#x3E;transform <span style="color:blue;">{TransFormAPIMethodName}</span> method&#x3C;/shortlink&#x3E;</code></pre>

      <p>{TransFormAPIMethodName} - the API method name.</p>

      <p>Example:</p>

      <pre><code>&#x3C;shortlink&#x3E;transform ChangeAccountDisplayName method&#x3C;/shortlink&#x3E;</code></pre>
      
      <h2>&lt;topic&gt;</h2>

      <p>Child of &lt;page&gt;. Defines the page topic. Shown in Search Results. Appears at the top of the page.</p>

      <pre><code>&lt;topic&gt;TransForm <font style="color:blue;">{TransFormAPIMethodName}</font> API Method&lt;/topic&gt;</code></pre>

      <p>{TransFormAPIMethodName} - the API method name. Example:</p>

      <pre><code>&lt;topic&gt;TransForm ChangeAccountDisplayName API Method&lt;/topic&gt;</code></pre>

      <h2>&lt;description&gt;</h2>

      <p>Child of &lt;page&gt;. Describes the method. If the description needs to contain multiple paragraphs, use the &lt;p&gt;
        tag within the description tag to add multiple paragraphs. If &lt;p&gt; tags are used, all content within the description
        must be enclosed in &lt;p&gt; tags.</p>

      <p>NOTE: If you want to specify examples interlaced with the description, you will need to use &lt;section&gt; for the
        examples and remaining discussion.</p>

      <pre><code>&lt;description&gt;<font style="color:blue;">{description}</font>&lt;/description&gt;</code></pre>

      <p>{description} - The description for the method.</p>

      <p>Examples:</p>

      <pre><code>&lt;description&gt;Change the display name for a TransForm account. The account is the account associated with the API key.&lt;/description&gt;</code></pre>

      <p>With paragraphs:</p>

      <pre><code>&#x3C;description&#x3E;
    &#x3C;p&#x3E;Change the order in which users are assigned to a TransForm account. The account is the account associated with the API key.&#x3C;/p&#x3E;
    &#x3C;p&#x3E;The order in which users are assigned to a TransForm account is relevant if your TransForm account is licensed for fewer users than are members of the account. For example, if a TransForm account has 10 members, but the TransForm account only has a license for 5 users, the first 5 users assigned to the account will be able to log-in to the TransForm account.&#x3C;/p&#x3E;
&#x3C;/description&#x3E;</code></pre>

      <h2>&lt;tip&gt;</h2>

      <p>Child of &lt;page&gt; or &lt;section&gt; -- recommend placing inside the first &lt;section&gt; in &lt;sections&gt;
        to guarantee it appears after the description but before examples. Adds a tip box with a heading of &quot;TIP&quot;.</p>

      <pre><code>&lt;tip&gt;<font style="color:blue;">{tip}</font>&lt;/tip&gt;</code></pre>

      <p>or</p>

      <pre><code>&#x3C;sections&#x3E;
    &#x3C;section&#x3E;
        &#x3C;tip&#x3E;<font style="color:blue;">{tip}</font>&#x3C;/tip&#x3E;
    &#x3C;/section&#x3E;
&#x3C;/sections&#x3E;</code></pre>

      <p>{tip} - The tip description. Supports multiple paragraphs using &lt;p&gt; tags.</p>

      <p>Example:</p>

      <pre><code>&lt;tip&gt;You can automatically generate form commands from sample JSON data using the CreateFormCommandsFromSampleJSON method.&lt;/tip&gt;</code></pre>
      
      <h2>&lt;arguments&gt;</h2>

      <p>Arguments is used to define the Inputs for the method. You can only define one &lt;arguments&gt; tag in a page but
        multiple &lt;argument&gt; tags within &lt;arguments&gt;.</p>

      <p>Specifying a Required Argument:</p>
      <pre><code>&#x3C;argument&#x3E;
    &#x3C;name&#x3E;<font style="color:blue">{InputName}</font>&#x3C;/name&#x3E;
    &#x3C;type&#x3E;<font style="color:blue">{InputType}</font>&#x3C;/type&#x3E;
    &#x3C;description&#x3E;<font style="color:blue">{InputDescription}</font>&#x3C;/description&#x3E;
&#x3C;/argument&#x3E;</code></pre>

      <p>Specifying an Optional Argument:</p>
      <pre><code>&#x3C;argument optional=&#x22;true&#x22;&#x3E;
    &#x3C;name&#x3E;<font style="color:blue">{InputName}</font>&#x3C;/name&#x3E;
    &#x3C;type&#x3E;<font style="color:blue">{InputType}</font>&#x3C;/type&#x3E;
    &#x3C;description&#x3E;<font style="color:blue">{InputDescription}</font>&#x3C;/description&#x3E;
&#x3C;/argument&#x3E;</code></pre>

      <p>{InputName} - The name of the Input</p>
      <p>{InputType} - The input type -- omit &lt;type&gt; if this information is unnecessary to specify (ie, if the types of
        all input arguments are &quot;string&quot;)</p>
      <p>{InputDescription} - The description of the input.</p>
<br>
      <p>Example:</p>

      <p>Example arguments for AddUserToTransFormAccount</p>

      <pre><code>&#x3C;arguments&#x3E;
    &#x3C;argument&#x3E;
        &#x3C;name&#x3E;userid&#x3C;/name&#x3E;
        &#x3C;description&#x3E;UserId to add to TransForm account&#x3C;/name&#x3E;
    &#x3C;/argument&#x3E;
    &#x3C;argument optional=&#x22;true&#x22;&#x3E;
        &#x3C;name&#x3E;roles&#x3C;/name&#x3E;
        &#x3C;description&#x3E;Roles for user in this TransForm account&#x3C;/name&#x3E;
    &#x3C;/argument&#x3E;
    &#x3C;argument optional=&#x22;true&#x22;&#x3E;
        &#x3C;name&#x3E;validateUser&#x3C;/name&#x3E;
        &#x3C;type&#x3E;boolean&#x3C;/type&#x3E;
        &#x3C;description&#x3E;{OptionalInputDescription}&#x3C;/name&#x3E;
    &#x3C;/argument&#x3E;
&#x3C;/arguments&#x3E;</code></pre>

      <h2>&lt;returns&gt;</h2>

      <p>Defines what the API returns. Can contain multiple &lt;return&gt; tags, though in the case of the TransForm API one
        &lt;return&gt; tag will suffice.</p>

      <p>You can describe the properties of the object returned by the API method using &lt;properties&gt;. &lt;properties&gt;
        can be nested.</p>

      <p>Specify mulitple properties using mulitple &lt;property&gt; objects inside the &lt;properties&gt; tag.</p>

      <p>If a property does not have a description and/or type, omit the corresponding XML tag.</p>

      <p>Return with Properties:</p>
      <pre><code>&#x3C;returns&#x3E;
    &#x3C;return&#x3E;
        &#x3C;name&#x3E;apiResult&#x3C;/name&#x3E;
        &#x3C;type&#x3E;JSON Object&#x3C;/type&#x3E;
        &#x3C;description&#x3E;Returns an object with these properties:&#x3C;/description&#x3E;
        &#x3C;properties&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;<font style="color:blue">{returnProperty}</font>&#x3C;/name&#x3E;
                &#x3C;type&#x3E;<font style="color:blue">{returnPropertyType}</font>&#x3C;/type&#x3E;
                &#x3C;description&#x3E;<font style="color:blue">{returnPropertyDescription}</font>&#x3C;/description&#x3E;
            &#x3C;/property&#x3E;
        &#x3C;/properties&#x3E;
    &#x3C;/return&#x3E;
&#x3C;/returns&#x3E;</code></pre>

      <p>Return with Nested Properties:</p>
      <pre><code>&#x3C;returns&#x3E;
    &#x3C;return&#x3E;
        &#x3C;name&#x3E;apiResult&#x3C;/name&#x3E;
        &#x3C;type&#x3E;JSON Object&#x3C;/type&#x3E;
        &#x3C;description&#x3E;Returns an object with these properties:&#x3C;/description&#x3E;
        &#x3C;properties&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;<font style="color:blue;">{returnProperty}</font>&#x3C;/name&#x3E;
                &#x3C;type&#x3E;<font style="color:blue;">{returnPropertyType}</font>&#x3C;/type&#x3E;
                &#x3C;description&#x3E;<font style="color:blue;">{returnPropertyDescription}</font>&#x3C;/description&#x3E;
                &#x3C;properties&#x3E;
                    &#x3C;property&#x3E;
                        &#x3C;name&#x3E;<font style="color:blue;">{returnProperty}</font>&#x3C;/name&#x3E;
                        &#x3C;type&#x3E;<font style="color:blue;">{returnPropertyType}</font>&#x3C;/type&#x3E;
                        &#x3C;description&#x3E;<font style="color:blue;">{returnPropertyDescription}</font>&#x3C;/description&#x3E;
                    &#x3C;/property&#x3E;
                &#x3C;/properties&#x3E;
            &#x3C;/property&#x3E;
        &#x3C;/properties&#x3E;
    &#x3C;/return&#x3E;
&#x3C;/returns&#x3E;</code></pre>


      <p>{returnProperty} - The property name.</p>
      <p>{returnPropertyType} - The data type for the property.</p>
      <p>{returnPropertyDescription} - A description of the property.</p>

      <p>
        <span style="line-height: 1.45;">Example:</span>
        <br/>
      </p>

      <p>Example Returns for the AddUserToTransFormAccount.</p>
<pre><code>&#x3C;returns&#x3E;
    &#x3C;return&#x3E;
        &#x3C;name&#x3E;apiResult&#x3C;/name&#x3E;
        &#x3C;type&#x3E;JSON Object&#x3C;/type&#x3E;
        &#x3C;description&#x3E;Returns an object with these properties:&#x3C;/description&#x3E;
        &#x3C;properties&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;error&#x3C;/name&#x3E;
                &#x3C;type&#x3E;boolean&#x3C;/type&#x3E;
                &#x3C;description&#x3E;true if there was an error&#x3C;/description&#x3E;
            &#x3C;/property&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;errorText&#x3C;/name&#x3E;
                &#x3C;type&#x3E;string&#x3C;/type&#x3E;
            &#x3C;/property&#x3E;
            &#x3C;property&#x3E;
                &#x3C;name&#x3E;result&#x3C;/name&#x3E;
                &#x3C;type&#x3E;object&#x3C;/type&#x3E;
                &#x3C;description&#x3E;The result object has these properties:&#x3C;/description&#x3E;
                &#x3C;properties&#x3E;
                    &#x3C;property&#x3E;
                        &#x3C;name&#x3E;rowsAddedToTransFormAccountmembershiptTable&#x3C;/name&#x3E;
                    &#x3C;/property&#x3E;
                    &#x3C;property&#x3E;
                        &#x3C;name&#x3E;rowsAddedToTransFormRolesTable&#x3C;/name&#x3E;
                    &#x3C;/property&#x3E;
                &#x3C;/properties&#x3E;
            &#x3C;/property&#x3E;
        &#x3C;/properties&#x3E;
    &#x3C;/return&#x3E;
&#x3C;/returns&#x3E;</code></pre>

      <h2>&lt;sections&gt;</h2>

      <p>Child of &lt;page&gt;. Contains ALL &lt;section&gt; blocks.</p>

      <p>Anything that is not a topic, page description, argument (i.e. input), return, or annotation (see &lt;annotations&gt;
        below) must go inside &lt;sections&gt; within &lt;section&gt; blocks. You can optionally place &lt;tip&gt; inside
        &lt;sections&gt; (recommended).</p>

      <p>The following templates were created for defining the remaining elements of the TransForm API and include the &lt;section&gt;
        tags. Place them inside &lt;sections&gt; tags as shown in at the beginning of this document.</p>
        <h3>Description Examples</h3>
        <p>Placed inside &lt;sections&gt;. Template(s) for extending the description with exaxmples and additional text.</p>
  
<pre><code>&#x3C;section&#x3E;
  &#x3C;example&#x3E;&lt;![CDATA[<font style="color:blue;">{exampleCode}</font>]]&gt;&#x3C;/example&#x3E;
  &#x3C;/section&#x3E;</code></pre>
  <p>Adding example code with a description:</p>
  <pre><code>&#x3C;section&#x3E;
      &#x3C;description&#x3E;<font style="color:blue;">{description}</font>&#x3C;/description&#x3E;
      &#x3C;example&#x3E;&lt;![CDATA[<font style="color:blue;">{exampleCode}</font>]]&gt;&#x3C;/example&#x3E;
  &#x3C;/section&#x3E;</code></pre>

        <p>{exampleCode} - The example code.</p>
        <p>{description} - Text to go with the code example. Use &lt;p&gt; tags to add multiple paragraphs.</p>
      <h3>Required Scope Template</h3>
      <p>Placed inside &lt;sections&gt;. Template for defining the scope for the API method.</p>

<pre><code>&#x3C;section&#x3E;
    &#x3C;title&#x3E;Scope&#x3C;/title&#x3E;
    &#x3C;description&#x3E;The required scope for this method is <font style="color:blue;">{scopes}</font>&#x3C;/description&#x3E;
&#x3C;/section&#x3E;</code></pre>

      <p>{scopes} - The required scope(s) for the method.</p>

      <h3>CURL Example Template</h3>
      <p>
        <span style="line-height: 1.45;">Placed inside &lt;sections&gt;. Template for adding the CURL example. Put code inside the inner most brackets of
          the &lt;![CDATA[]]&gt; tag.</span>
        <br/>
      </p>

      <p>
        <i>Single Curl Example Template:</i>
      </p>
<pre><code>&#x3C;section&#x3E;
    &#x3C;title&#x3E;CURL&#x3C;/title&#x3E;
    &#x3C;example&#x3E;&#x3C;![CDATA[<font style="color:blue;">{curlExample}</font>]]&#x3E;&#x3C;/example&#x3E;
&#x3C;/section&#x3E;</code></pre>

      <p>{curlExample} - The example code.</p>

      <p>
        <i>Curl Windows &amp; Bash example Template:</i>
      </p>
<pre><code>&#x3C;section&#x3E;
    &#x3C;title&#x3E;CURL&#x3C;/title&#x3E;
    &#x3C;description&#x3E;CURL for Windows command window (may not work for long post bodies - use Bash syntax inside a Bash shell window instead of the Windows syntax)&#x3C;/description&#x3E;
    &#x3C;example&#x3E;&#x3C;![CDATA[<font style="color:blue;">{curlWinExample}</font>]]&#x3E;&#x3C;/example&#x3E;
&#x3C;/section&#x3E;
&#x3C;section&#x3E;
    &#x3C;description&#x3E;CURL for Bash command window or Mac/Linux terminal:&#x3C;/description&#x3E;
    &#x3C;example&#x3E;&#x3C;![CDATA[<font style="color:blue;">{curlBashExample}</font>]]&#x3E;&#x3C;/example&#x3E;
&#x3C;/section&#x3E;</code></pre>
      <p>{curlWinExample} - The example code for the Windows command window.</p>
      <p>{curlBashExample} - The example code for the Bash command.</p>

      <h3>Node Example Template</h3>
      <p>Placed inside &lt;sections&gt;. Template for adding Node example. Put code inside the inner most brackets of the &lt;![CDATA[]]&gt;
        tag.</p>

<pre><code>&#x3C;section&#x3E;
    &#x3C;title&#x3E;Node&#x3C;/title&#x3E;
    &#x3C;example code=&#x22;js&#x22;&#x3E;&#x3C;![CDATA[<font style="color:blue;">{nodeExample}</font>]]&#x3E;&#x3C;/example&#x3E;
&#x3C;/section&#x3E;</code></pre>

      <p>{nodeExample} - The example code for node.</p>

      <h3>Xbasic Example Template</h3>
      <p>Placed inside &lt;sections&gt;. Template for adding Xbasic example. Put code inside the inner most brackets of the
        &lt;![CDATA[]]&gt; tag.</p>

<pre><code>&#x3C;section&#x3E;
    &#x3C;title&#x3E;Xbasic&#x3C;/title&#x3E;
    &#x3C;example code=&#x22;xb&#x22;&#x3E;&#x3C;![CDATA[<font style="color:blue;">{xbasicExample}</font>]]&#x3E;&#x3C;/example&#x3E;
&#x3C;/section&#x3E;</code></pre>

      <p>{xbasicExample} - The example code for Xbasic.</p>

      <h3>&lt;annotations&gt;</h3>
      <p>
        <b>
          <br/>
        </b>
      </p>
      <p>Child of &lt;page&gt;. Placed at end of document before closing &lt;/page&gt; tag. Annotations defines the location
        of an optional annotations file that can be defined to add additional documentation to a generated page. This tag
        should always be included in any auto-generated page so that additional information (examples, etc) can be included
        risking having the examples deleted when an auto-generated page is regenerated.</p>

      <pre><code>&#x3C;annotations&#x3E;/TransForm/<font style="color:blue;">{TransFormAPIMethodName}</font>.xml&#x3C;/annotations&#x3E;</code></pre>

      <p>{TransFormAPIMethodName} - The TransForm API Method Name.</p>

      <p>Example:</p>

      <pre><code>&#x3C;annotations&#x3E;/TransForm/AddUserToTransFormAccount.xml&#x3C;/annotations&#x3E;</code></pre>


      <h2>Full examples for TransForm API XML Documentation</h2>

      <h3>AddUserToTransFormAccount</h3>
      <pre><code>
&#x3C;page api=&#x22;transform&#x22; build=&#x22;4872&#x22;&#x3E;
    &#x3C;shortlink&#x3E;transform AddUserToTransFormAccount method&#x3C;/shortlink&#x3E;
    &#x3C;topic&#x3E;TransForm AddUserToTransFormAccount API Method&#x3C;/topic&#x3E;
    &#x3C;description&#x3E;
        &#x3C;p&#x3E;Add users to a TransForm account. The account is the account associated with the API key.&#x3C;/p&#x3E;
        &#x3C;p&#x3E;You can optionally specify a list of roles for the user in this account. If you do not specify any roles a default role of &#x27;user&#x27; is used.&#x3C;/p&#x3E;
        &#x3C;p&#x3E;You can optionally validate users before adding them to the TransForm account. If you validate users then only users with existing TransForm User Accounts will be added to the TransForm account.&#x3C;/p&#x3E;
    &#x3C;/description&#x3E;
    &#x3C;arguments&#x3E;
        &#x3C;argument&#x3E;
            &#x3C;name&#x3E;userid&#x3C;/name&#x3E;
            &#x3C;description&#x3E;UserId to add to TransForm account&#x3C;/description&#x3E;
        &#x3C;/argument&#x3E;
        &#x3C;argument optional=&#x22;true&#x22;&#x3E;
            &#x3C;name&#x3E;roles&#x3C;/name&#x3E;
            &#x3C;description&#x3E;Roles for user in this TransForm account&#x3C;/description&#x3E;
        &#x3C;/argument&#x3E;
        &#x3C;argument optional=&#x22;true&#x22;&#x3E;
            &#x3C;name&#x3E;validateUser&#x3C;/name&#x3E;
            &#x3C;description&#x3E;If true only people with valid TransForm user accounts are added&#x3C;/description&#x3E;
        &#x3C;/argument&#x3E;
    &#x3C;/arguments&#x3E;
    &#x3C;returns&#x3E;
        &#x3C;return&#x3E;
            &#x3C;name&#x3E;apiResult&#x3C;/name&#x3E;
            &#x3C;type&#x3E;JSON Object&#x3C;/type&#x3E;
            &#x3C;description&#x3E;Returns an object with these properties:&#x3C;/description&#x3E;
            &#x3C;properties&#x3E;
                &#x3C;property&#x3E;
                    &#x3C;name&#x3E;error&#x3C;/name&#x3E;
                    &#x3C;type&#x3E;boolean&#x3C;/type&#x3E;
                    &#x3C;description&#x3E;true if there was an error&#x3C;/description&#x3E;
                &#x3C;/property&#x3E;
                &#x3C;property&#x3E;
                    &#x3C;name&#x3E;errorText&#x3C;/name&#x3E;
                    &#x3C;type&#x3E;string&#x3C;/type&#x3E;
                &#x3C;/property&#x3E;
                &#x3C;property&#x3E;
                    &#x3C;name&#x3E;result&#x3C;/name&#x3E;
                    &#x3C;type&#x3E;object&#x3C;/type&#x3E;
                    &#x3C;description&#x3E;The result object has these properties:&#x3C;/description&#x3E;
                    &#x3C;properties&#x3E;
                        &#x3C;property&#x3E;
                            &#x3C;name&#x3E;rowsAddedToTransFormAccountmembershiptTable&#x3C;/name&#x3E;
                        &#x3C;/property&#x3E;
                        &#x3C;property&#x3E;
                            &#x3C;name&#x3E;rowsAddedToTransFormRolesTable&#x3C;/name&#x3E;
                        &#x3C;/property&#x3E;
                    &#x3C;/properties&#x3E;
                &#x3C;/property&#x3E;
            &#x3C;/properties&#x3E;
        &#x3C;/return&#x3E;
    &#x3C;/returns&#x3E;
    &#x3C;sections&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;Scope&#x3C;/title&#x3E;
            &#x3C;description&#x3E;The required scope for this method is ALL,EAM&#x3C;/description&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;CURL&#x3C;/title&#x3E;
            &#x3C;example&#x3E;&#x3C;![CDATA[CURL --insecure -H &#x22;apikey:Your_api_key&#x22; -H &#x22;accept: application/json&#x22; https://alphademo1-transform.cloud.alphasoftware.com/transformAPIVersion1.a5svc/addUserToTransFormAccount/?userid=value_of_userid&#x26;roles=value_of_roles&#x26;validateUser=value_of_validateUser]]&#x3E;&#x3C;/example&#x3E;;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;description&#x3E;CURL for Bash command window or Mac/Linux terminal:&#x3C;/description&#x3E;
            &#x3C;example&#x3E;&#x3C;![CDATA[{curlBashExample}]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;Node&#x3C;/title&#x3E;
            &#x3C;example code=&#x22;js&#x22;&#x3E;&#x3C;![CDATA[var https = require(&#x27;https&#x27;);
var options = {
protocol: &#x22;https:&#x22;,
hostname: &#x22;alphademo1-transform.cloud.alphasoftware.com&#x22;,
path: &#x22;/transformAPIVersion1.a5svc/addUserToTransFormAccount/?userid=value%5fof%5fuserid&#x26;roles=value%5fof%5froles&#x26;validateUser=value%5fof%5fvalidateUser&#x22;,
headers: {apikey: &#x22;Your_api_key&#x22;}
};

https.get(options, (resp) =&#x3E; {
let data = &#x27;&#x27;;
resp.on(&#x27;data&#x27;, (chunk) =&#x3E; {data += chunk;});
resp.on(&#x27;end&#x27;, () =&#x3E; {console.log(data);});
}).on(&#x22;error&#x22;, (err) =&#x3E; {console.log(&#x22;Error: &#x22; + err.message);});]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;Xbasic&#x3C;/title&#x3E;
            &#x3C;example code=&#x22;xb&#x22;&#x3E;&#x3C;![CDATA[dim apikey as c = &#x22;Your_api_key&#x22;
dim postdata as c
dim url as c = &#x22;/addUserToTransFormAccount/?userid=value%5fof%5fuserid&#x26;roles=value%5fof%5froles&#x26;validateUser=value%5fof%5fvalidateUser&#x22;
dim pr as p
pr = a5dialogHelper_transformAPIQuery(url,postdata,apikey)
if pr.error = .f. then
dim result as c
result = pr.result
else
dim errorText as c
errorText = pr.errorText
end if ]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
    &#x3C;/sections&#x3E;
    &#x3C;annotations&#x3E;/TransForm/AddUserToTransFormAccount.xml&#x3C;/annotations&#x3E;
&#x3C;/page&#x3E;
</code></pre>
        
      <h3>ChangeFormInstanceData</h3>
      <pre><code>
 &#x3C;page api=&#x22;transform&#x22; build=&#x22;4872&#x22;&#x3E;
    &#x3C;shortlink&#x3E;transform ChangeFormInstanceData method&#x3C;/shortlink&#x3E;
    &#x3C;topic&#x3E;TransForm ChangeFormInstanceData API Method&#x3C;/topic&#x3E;
    &#x3C;description&#x3E;{description}&#x3C;/description&#x3E;
    &#x3C;arguments&#x3E;
        &#x3C;argument&#x3E;
            &#x3C;name&#x3E;formInstanceId&#x3C;/name&#x3E;
            &#x3C;description&#x3E;formIntanceId of the form instance whose data should be changed&#x3C;/description&#x3E;
        &#x3C;/argument&#x3E;
        &#x3C;argument&#x3E;
            &#x3C;name&#x3E;formDataJSON&#x3C;/name&#x3E;
            &#x3C;description&#x3E;Updated form data for the form instance&#x3C;/description&#x3E;
        &#x3C;/argument&#x3E;
    &#x3C;/arguments&#x3E;
    &#x3C;returns&#x3E;
        &#x3C;return&#x3E;
            &#x3C;name&#x3E;{returnName}&#x3C;/name&#x3E;
            &#x3C;type&#x3E;JSON Object&#x3C;/type&#x3E;
            &#x3C;description&#x3E;Returns an object with these properties:&#x3C;/description&#x3E;
            &#x3C;properties&#x3E;
                &#x3C;property&#x3E;
                    &#x3C;name&#x3E;error&#x3C;/name&#x3E;
                    &#x3C;type&#x3E;boolean&#x3C;/type&#x3E;
                    &#x3C;description&#x3E;true if there was an error&#x3C;/description&#x3E;
                &#x3C;/property&#x3E;
                &#x3C;property&#x3E;
                    &#x3C;name&#x3E;errorText&#x3C;/name&#x3E;
                    &#x3C;type&#x3E;string&#x3C;/type&#x3E;
                &#x3C;/property&#x3E;
                &#x3C;property&#x3E;
                    &#x3C;name&#x3E;result&#x3C;/name&#x3E;
                    &#x3C;type&#x3E;object&#x3C;/type&#x3E;
                    &#x3C;description&#x3E;The result object has these properties:&#x3C;/description&#x3E;
                    &#x3C;properties&#x3E;
                        &#x3C;property&#x3E;
                            &#x3C;name&#x3E;rowsUpdated&#x3C;/name&#x3E;
                        &#x3C;/property&#x3E;
                    &#x3C;/properties&#x3E;
                &#x3C;/property&#x3E;
            &#x3C;/properties&#x3E;
        &#x3C;/return&#x3E;
    &#x3C;/returns&#x3E;
    &#x3C;sections&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;Scope&#x3C;/title&#x3E;
            &#x3C;description&#x3E;The required scope for this method is ALL,EI&#x3C;/description&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;CURL&#x3C;/title&#x3E;
            &#x3C;description&#x3E;CURL for Windows command window (may not work for long post bodies - use Bash syntax inside a Bash shell window instead of the Windows syntax)&#x3C;/description&#x3E;
            &#x3C;example&#x3E;&#x3C;![CDATA[CURL --insecure -H &#x22;apikey:Your_api_key&#x22; -H &#x22;accept: application/json&#x22; -d &#x22;{&#x22;&#x22;&#x22;formDataJSON&#x22;&#x22;&#x22;:{}}&#x22; https://alphademo1-transform.cloud.alphasoftware.com/transformAPIVersion1.a5svc/ChangeFormInstanceData/value_of_formInstanceId]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;description&#x3E;CURL for Bash command window or Mac/Linux terminal:&#x3C;/description&#x3E;
            &#x3C;example&#x3E;&#x3C;![CDATA[CURL --insecure -H &#x22;apikey:Your_api_key&#x22; -H &#x22;accept: application/json&#x22; -d &#x27;{&#x22;formDataJSON&#x22;:{}}&#x27; https://alphademo1-transform.cloud.alphasoftware.com/transformAPIVersion1.a5svc/ChangeFormInstanceData/value_of_formInstanceId]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;Node&#x3C;/title&#x3E;
            &#x3C;example code=&#x22;js&#x22;&#x3E;&#x3C;![CDATA[var request = require(&#x27;request&#x27;)
var path = &#x27;https://alphademo1-transform.cloud.alphasoftware.com/transformAPIVersion1.a5svc/ChangeFormInstanceData/value_of_formInstanceId&#x27;;;
var data = {&#x22;formDataJSON&#x22;: &#x22;{}&#x22;};
var dataJSON = JSON.stringify(data)
request.post(
{
headers: {apikey: &#x22;Your_api_key&#x22;}, 
url: path, 
form: dataJSON}, 
function(err,httpResponse,body){
if(err) console.log(err)
console.log(body)
}
)]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
        &#x3C;section&#x3E;
            &#x3C;title&#x3E;Xbasic&#x3C;/title&#x3E;
            &#x3C;example code=&#x22;xb&#x22;&#x3E;&#x3C;![CDATA[dim apikey as c = &#x22;Your_api_key&#x22;
dim postdata as c
postdata = &#x3C;&#x3C;%txt%
{ &#x22;formDataJSON&#x22;: &#x22;{}&#x22; }

%txt%

dim url as c = &#x22;/ChangeFormInstanceData/value_of_formInstanceId&#x22;
dim pr as p
pr = a5dialogHelper_transformAPIQuery(url,postdata,apikey)
if pr.error = .f. then
dim result as c 
result = pr.result
else
dim errorText as c 
errorText = pr.errorText
end if ]]&#x3E;&#x3C;/example&#x3E;
        &#x3C;/section&#x3E;
    &#x3C;/sections&#x3E;
    &#x3C;annotations&#x3E;/TransForm/ChangeFormInstanceData.xml&#x3C;/annotations&#x3E;
&#x3C;/page&#x3E;
</code></pre>

</body>

</html> 