<page>
	<topic>Alpha Five V8</topic>
<sections>
	
<section>
	<description>Available in the Alpha Five Version 8 Basic, Professional, and Enterprise editions.</description>
	<cases>
		<case>
			<description>User Features</description>
		</case>
		<case>
			<description>Action Scripting</description>
		</case>
		<case>
			<description>General Purpose Functions</description>
		</case>
		<case>
			<description>General Purpose Methods</description>
		</case>
		<case>
			<description>Addressing and Tracking Functions</description>
		</case>
		<case>
			<description>Security Functions</description>
		</case>
		<case>
			<description>Classes</description>
		</case>
		<case>
			<description>Xdialog</description>
		</case>
		<case>
			<description>Xdialog Commands</description>
		</case>
		
	</cases>
	
</section>	
<section>
	<description>Available in the Alpha Five Version 8 Basic and Professional editions.</description>
<cases>
	<case>
		<description>Web Publishing</description>
	</case>
	<case>
		<description>Grid Component Builder and Dialog Component Builder Features</description>
	</case>
	<case>
		<description>Web Application Security Framework</description>
	</case>
	<case>
		<description>Web Application Functions</description>
	</case>
	
	
</cases>	
	
</section>
<section>
	
	<description>Available in the Alpha Five Version 8 Enterprise Edition.</description>
	<cases>
		<case>
			<description>SQL Database Connectivity</description>
		</case>
		<case>
			<description>New AlphaDAO Objects</description>
		</case>
		<case>
			<description>New SQL Helper Functions</description>
		</case>
		
	</cases>
	
</section>

<section>
	<title>SQL Database Connectivity</title>
<description>The following features are available in the Alpha Five Version 8 Enterprise Edition.</description>	
	<cases>
		<case>
			<title>Database Explorer
</title>
			<description>The Database Explorer provides a quick way to examine the properties of the tables and sets in your database. The Local Tables section lists the tables (including passive-link tables) and sets in your database. Each table contains a link to each of its layouts. When you expand a table, you will see a list of the table's fields. The entries will contain the field type and length of each field.
</description>
		</case>
		<case>
			<title>Alpha Database Access Objects (AlphaDAO)</title>
			<description>A family of objects, each with properties and methods, that make it possible to read from and write to SQL back-end databases.
</description>
		</case>
		<case>
			<title>Supported Database Products</title>
			<description>AlphaDAO and Portable SQL provide easy Xbasic programming access to a large number of popular database products. The list includes:</description>
			<cases>
				<case>
					<description>FlexQuarters QODBC</description>
				</case>
				<case>
					<description>IBM DB2</description>
				</case>
				<case>
					<description>InterSystems Cache</description>
				</case>
				<case>
					<description>Microsoft Access</description>
				</case>
				<case>
					<description>Microsoft Excel</description>
				</case>
				<case>
					<description>Microsoft SQL Server</description>
				</case>
				<case>
					<description>MySQL</description>
				</case>
				<case>
					<description>Oracle XE, 9i, 10g</description>
				</case>
				<case>
					<description>Oracle Lite (9i, 10g)</description>
				</case>
				<case>
					<description>Quantel</description>
				</case>
				<case>
					<description>Sybase Adaptive Server Enterprise</description>
				</case>
				<case>
					<description>Sybase SQLAnywhere</description>
				</case>
				
			</cases>
		</case>
		<case>
			<title>Portable SQL</title>
			<description>While the SQL syntaxes used by leading vendors are similar, they have some some critical practical differences.  Functions, object names, and literal values are implemented and formatted inconsistently.  Complex behavior such as selecting only the first 100 rows often requires equally complex (and database specific) syntax.  Alpha Five has implemented a vendor neutral SQL syntax that is automatically portable across databases.</description>
		<cases>
			<case>
				<description>More than fifty functions that are automatically converted to the appropriate function calls for the target database.</description>
			</case>
			<case>
				<description>Object names are automatically formatted for the target database.</description>
			</case>
			<case>
				<description>Literal values are transformed to the target database syntax.</description>
			</case>
			<case>
				<description>Named arguments in queries enhance the readability of queries.</description>
			</case>
			<case>
				<description>SELECT FIRST  syntax is automatically translated to the appropriate (and sometimes complicated) construct on target databases.</description>
			</case>
			
			
		</cases>
		
		</case>
		<case>
			<description>As you would expect, Portable SQL is optional.  If you need to access the native capabilities of a specific database, simply code your SQL using native syntax and it will be passed directly to the underlying database. Portable SQL also supports named arguments, including stored procedure calls, in native syntax.
</description>
		</case>
		<case>
			<title>Passive-Link Tables
</title>
			<description>A "Passive-Link" table is a native Alpha Five table (i.e. a .dbf table) that was created by importing data from a remote database (e.g. Access, MySQL, SQL Server, Oracle, Excel, etc.). At any time, you can right-click on the table and select the 'Refresh' command and Alpha Five will update the data in the table by re-querying the remote database. To create a new Passive-Link table, right click on the white space in the Tables/Set tab. To refresh an existing Passive-Link table, right click on the table and select Utilities/Refresh data in Passive-Link table.
</description>
		</case>
		<case>
			<title>Create SQL Connection String Dialog
</title>
			<description>The Create SQL Connection String dialog makes it easy to create connection strings for SQL back-end database. You can then save the connection strings as  Named Connection Strings, which are easily reused.
</description>
		</case>
		<case>
			<title>SQL Genie
</title>
			<description>The SQL Genie makes it easy to create, test, and save SQL statements that will retrieve data from SQL back-end databases.
</description>
		</case>
		<case>
			<title>SQL Command Window
</title>
			<description>The SQL Command Window provides a way to create and test SQL statements that will retrieve data from SQL back-end databases.
</description>
		</case>
		<case>
			<title>SQL History Dialog
</title>
			<description>The SQL History dialog provides a way to revert to any previous version of a SQL statement created in your current session in the SQL Genie or SQL Command Window.
</description>
		</case>
		<case>
			<title>Working with SQL Databases
</title>
			<description>This new tutorial provides an introduction to connecting Alpha Five to SQL back-end databases.
</description>
		</case>
		
		
	</cases>
	
	
</section>

<section>
	<title>New in Web Publishing</title>
<description>These new component builders and utilities are available in the Alpha Five Version 8 Professional Edition.</description>	
	<cases>
		<case>
			<title>Login Component Builder</title>
			<description>The new Login Component Builder simplifies the process of building login dialog components and enforcing login policies. See Web Application Security Framework. This picture shows three different login component layouts. </description>
			
			<cases>
				<case>
					<figure><link>images/WP_Login_Component_Styles.gif</link></figure>
				</case>
				
			</cases>
		</case>
		<case>
			<title>Maintenance Component Builder</title>
			<description>The Maintenance Builder creates components that will pack (remove deleted files) and re-index Alpha Five tables.</description>
			
		</case>
		<case>
			<title>New HTML Editor</title>
			<description>Now allows you to open multiple documents in a single editor, with each document being displayed in its own tab. Previously, you could edit multiple documents, but each document opened a new instance of the HTML editor. The tabbed editor is much quicker and more convenient than multiple editors.
</description>
<cases>
	<case>
		<description>Format menu has 'Edit Style...' menu choice that allows you to edit embedded or linked CSS styles using the new CSS Style Builder.
</description>
	</case>
	<case>
		<description>Format menu allows you to attach CSS style sheet files to the current document.
</description>
	</case>
	<case>
		<description>Revert to Saved command
</description>
	</case>
	
</cases>
			
		</case>
		<case>
			<title>New Cascading Style Sheet Editor</title>
			<description>Powerful new builder for editing and creating CSS style sheets.</description>
			<cases>
				<case>
					<description>Two way editing - edit using visual builder, or edit CSS definition directly
</description>
				</case>
				<case>
					<description>Import CSS from one CSS file into another - allows you to import the definition of a CSS selector into a corresponding selector in the current file. After an import, the number of CSS selectors in the current CSS file is unchanged. Contrast with Merge.
</description>
				</case>
				<case>
					<description>Merge CSS from one file into current CSS file. After merge, the number of CSS selectors in the current file is equal to the number of selectors in the external file plus the number of selectors in the current file (minus duplicate CSS selector names)
</description>
				</case>
				<case>
					<description>Edit Multiple CSS Selectors at once. Options include:
</description>
				</case>
				<case>
					<description>Powerful search and replace feature.
</description>
				</case>
				
			</cases>
		</case>
		<case>
			<title>New Color Picker</title>
			<description>The new Color Picker makes it easy to assemble custom palettes of relative colors. Given one or more base colors, the Color Picker will assemble a palette by varying one of the following:</description>
			<cases>
				<case>
					<description>"Luminance"</description>
				</case>
				<case>
					<description>"Saturation"</description>
				</case>
				<case>
					<description>"Cooler"</description>
				</case>
				<case>
					<description>"Warmer"</description>
				</case>
				
			</cases>
		</case>
		
		
	</cases>
	
</section>
<section>
	<title>Grid Component Builder and Dialog Component Builder Features</title>
	<description>These new Grid Component Builder and Dialog Component Builder features are available in the Alpha Five Version 8 Professional Edition.</description>
	<cases>
		<case>
			<title>Arguments</title>
			<description>Arguments are a major new feature that allow you to more easily define filter expressions that reference variables, or cookies. Previously, if you wanted to reference a page, session or cookie variable in a filter expression, you needed to use Xbasic to override the settings for the component in the .A5W page that loaded the component. Now, you can define an argument and specify where that argument gets its value.</description>
		</case>
		<case>
			<title>Selected Fields Show in Bold</title>
			<description>The Grid Component Builder now shows selected fields in bold. This makes it easy when you have a lot of fields in a table to see which fields have been selected, and which have not been placed on the Grid. </description>
		<figure><link>images/MK_Selected_Fields_in_Bold.gif</link></figure>
		</case>
		
		<case>
			<title>Icons for Control Types</title>
			<description>The list of selected fields/controls is now shown with an icon representing the type of control that will be used to display the field. This makes it very easy to see, for example, that the Sales Rep field in a grid is being displayed in a Checkbox control. </description>
	<figure><link>images/MK_Icons_for_Control_Types.gif</link></figure>
		</case>
		
		<case>
			<title>Multi-Column Layouts</title>
			<description>When you define a Dialog Component and the Detail parts of a Grid Component, you can now specify how many columns to use for the layout. Previously, Alpha Five automatically assumed a two column layout (one column for labels, and another for controls). Formatting options include: </description>
			<cases>
				<case>
					<description>Breaks to force controls to the next row
</description>
				</case>
				<case>
					<description>Column spanning to allow controls to occupy more than one column
</description>
				</case>
				<case>
					<description>Column spacers to move controls to the next column or row
</description>
				</case>
				<case>
					<description>Row spacers to insert blank lines
</description>
				</case>
				<case>
					<description>Merge commands to groups multiple controls
</description>
				</case>
				<case>
					<figure><link>images/MK_New_Layout_Options.gif</link></figure>
				</case>
				
			</cases>
		</case>
		
		
		
	</cases>
</section>
<section>
	<title>Web Application Security Framework</title>
	<description>The following features are available in the Alpha Five Version 8 Enterprise Edition. The Web Application Security Framework provides these high level capabilities.</description>
<cases>
	<case>
		<title>Architecture</title>
		<description>The developer does not need to write any code or place any code on pages. You set your security parameters with the Security Settings , Page Security Assignment , and Login Component genies, then the Application Server tests every page and file request and handles all of the security internally. You may enable or disable security with a single setting in the Application Server Control Panel. Security settings are unique to each project.</description>
	</case>
	<case>
		<title>Login</title>
		<description>Login is an essential first step to providing any type of application security. Login identifies the user and requires a user name. Login may optionally also require a password. The new Login Component Builder simplifies the process of building login dialog components and enforcing login policies. Important password options include:</description>
		<cases>
			<case>
				<description>You may reuse existing tables to define user login permissions.
</description>
			</case>
			<case>
				<description>You may set rules for validating acceptable login names.
</description>
			</case>
			<case>
				<description>You may define when logins expire.
</description>
			</case>
			<case>
				<description>You may lock out a user after N failed login attempts.
</description>
			</case>
			<case>
				<description>You may log login activity.
</description>
			</case>
			<case>
				<description>You may set rules for recovery of lost user names.
</description>
			</case>
			<case>
				<description>When login fails, you may redirect all users to a specific page.
</description>
			</case>
			<case>
				<description>When login succeeds, you may redirect all users to the same page or each user to a specific page.
</description>
			</case>
			<case>
				<description>You may set rules for recovery of lost login names.
</description>
			</case>
			
		</cases>
	</case>
	<case>
		<title>Passwords</title>
		<description>Passwords are an optional part of the login process. Important password options include:</description>
		<cases>
			<case>
				<description>You may encrypt passwords.
</description>
			</case>
			<case>
				<description>You may set rules for validating acceptable passwords.
</description>
			</case>
			<case>
				<description>Passwords may expire after a specified period of time.
</description>
			</case>
			<case>
				<description>You may prevent passwords from being reused.
</description>
			</case>
			<case>
				<description>You may set rules for recovery of lost passwords.
</description>
			</case>
			
		</cases>
	</case>
	<case>
		<title>Groups</title>
		<description>A user may belong to one or more groups. You may grant access to a page to one or more groups. Whether or not a user belongs to a group depends on whether it is important to selectively provide access to specific pages.</description>
	</case>
	<case>
		<title>Components</title>
		<description>The Login Component Builder provides support for nearly every login option.</description>
		<cases>
			<case>
				<description>The Login View presents the familiar request for user ID and, optionally, password.
</description>
			</case>
			<case>
				<description>The optional Change Password View allows a user to change a password.
</description>
			</case>
			<case>
				<description>The optional Recover Login Information allows a user to make a request for user ID and/ or password.
</description>
			</case>
			<case>
				<description>Each view may have its own style sheet.
</description>
			</case>
			<case>
				<description>All views may have Freeform designs.
</description>
			</case>
			<case>
				<description>You may customize all text used in the login component to support non-English language applications.
</description>
			</case>
			
			
		</cases>
	</case>
	<case>
		<title>Pages</title>
		<description>There are many aspects of page security.</description>
		<cases>
			<case>
				<description>You may place the pages of your web application into one of three categories: access not defined, login not required, and login required.
</description>
			</case>
			<case>
				<description>If a page requires login, you may specify the groups of users which are allowed to access the page.
</description>
			</case>
			
		</cases>
	</case>
	<case>
		<title>Utilities</title>
		<description>Alpha Five provides the Enter / Edit Web Users dialog that you may use to enter and edit all user security information. In addition, the Configure Desktop Web Users Form dialog allows you to customize all text used in the Enter / Edit Web Users dialog to support non-English language applications.
</description>
	</case>
	<case>
		<title>Functions</title>
		<description>There is a large set of web application functions that will enable the developer to enter, edit, and validate web users from page scripts.</description>
	</case>
	<case>
		<title>Other Administrative Features</title>
		<description>The web application administrator may also lock out any user by user Id or unlock any user who is locked out.</description>
	</case>
	
	
</cases>	
	
</section>



<section>
	<title>User Features</title>
<description>The following features are available in the Alpha Five Version 8 Basic Edition.</description>	
<cases>
	<case>
		<title>Look</title>
		<description>Alpha Five Version 8 introduces a new look for its layouts. Most notable are the new button, control, toolbar, and window styles used throughout Alpha Five.</description>

	</case>
	<case>
		<title>Window Bar</title>
		<description>The Window Bar now contains tabs for each of the open windows. </description>
		<figure><link>images/UG_Window_Bar_V8.gif</link></figure>
	</case>
	<case>
		<title>Dialogs for selecting colors</title>
		<description>Alpha Five Version 8 introduces a new dialogs for selecting and defining custom colors. </description>
		<figure><link>images/UG_Color_lists.gif</link></figure>
	</case>
	<case>
		<title>Toolbars</title>
		<description>The Version 8 toolbars contain a totally new set of icons, plus a variety of gradient fill backgrounds.
</description>
		<figure><link>images/New_toolbars.gif</link></figure>
	</case>
	<case>
		<title>Themes</title>
		<description>If you modify your Windows XP theme colors, Alpha Five will use those colors. For example, here are Windows Classic, Blue, Olive, and Silver themes. </description>
		<figure><link>images/Multiple_Themes.jpg</link></figure>
	</case>
	<case>
		<title>Gradient Fills</title>
		<description>Version 8 introduces a large number of horizontal, vertical, and radial gradient fills and a new fill picker that allows you to quickly view your options and make a selection. You may create a gradient fill with any 2 colors. </description>
		<figure><link>images/UG_Two_Color_Fill_Patterns.gif</link></figure>
	</case>
	<case>
		<title>Border Style and Edge Shape Pickers</title>
		<description>Most controls that you place on a layout may have border. The new Line Style and Edge Shape pickers make it easy to view the alternative border styles and make a selection.</description>
		<cases>
			<case>
				<figure><link>images/UG_Line_Styles.gif</link>
					<title>Line Style Picker 
</title></figure>
			</case>
			<case>
				<figure><link>images/UG_Edge_Shapes.gif</link>
					<title>Edge Shape Picker 
</title></figure>
			</case>
			
		</cases>
	</case>
	<case>
		<title>Browse Buttons</title>
		<description>Alpha Five Version 8 allows you to embed buttons (and their attached Action or Xbasic scripts). This picture shows a browse with two buttons with constant text. You may place one or more buttons into any column of a browse. The button style may contain any combination of:</description>
		<cases>
			<case>
				<description>static text
</description>
			</case>
			<case>
				<description>graphic
</description>
			</case>
			<case>
				<description>dynamic text (computed from data in the current row)
</description>
			</case>
			
		</cases>
	</case>
	<case>
		<description>Each column of the browse has a .displayequation property. This property defines the button format. Here are three examples.</description>
		<cases>
			<case>
				<title>Dynamic Text</title>
				<description>If the company field is not blank, the button text displays "Edit " plus company name. It the company name is blank, no button appears. Note the custom images in the upper left corner and used for the row picker. </description>
				<figure><link>images/MK_Browse_with_Button_and_Images.gif</link></figure>
			</case>
		<case>
				<title>Static and Dynamic Text</title>
				<description>This example shows a combination of static and dynamic text. It displays the company name if it is not blank. </description>
				<figure><link>images/MK_Browse_with_Button_and_Dynamic_Text.gif</link></figure>
			</case>
			<case>
				<title>Text and Graphic</title>
				<description>This example shows a combination of static text and icon graphics. 
</description>
				<figure><link>images/MK_Browse_with_Button_and_Images2.gif</link></figure>
			</case>
			<case>
				<description>The icons and buttons have a OnFlyOver style is used for the buttons. They do not look like buttons until you put your mouse over them.
</description>
			</case>
			
		</cases>
	</case>
	<case>
		<title>Dockable Panels</title>
		<description>Alpha Five Version 8 introduces dockable panels. Dockable panels appear when you open different editors. Initially, a stack of dockable panels for an editor appear at the right edge of the Alpha Five window. A user may:</description>
		<cases>
			<case>
				<description>reposition the stack to the left edge of the window
</description>
			</case>
				<case>
				<description>selectively move any panel to the top of the stack
</description>
			</case>
				<case>
				<description>tile any number of panels vertically
</description>
			</case>
				<case>
				<description>separate any number of panels from the stack and use them as a floating toolbars
</description>
			</case>
				<case>
				<description>collapse the panels so that they only appear when you mouse-over their labels
</description>
			</case>
			
			
		</cases>
	</case>
	<case>
		<description>This picture shows four panels separated into four floating toolbars. 
</description>
		<figure><link>images/UG_Dockable_Panels.gif</link></figure>
	</case>
	<case>
		<description>This picture shows four panels tiled vertically. Picture</description>
		<figure><link>images/UG_Tiled_Panels.gif</link></figure>
	</case>
	<case>
		<description>This picture shows four panels shown above but collapsed to the right edge of the window. 
</description>
		<figure><link>images/UG_Collapsed_Panels.gif</link></figure>
	</case>
	
	<case>
		<title>Browse Banding</title>
		<description>Now, you can specify the background color and style of 2 to 4 groups of browse rows. This feature, named Green Banding is illustrated below. Each group can be any number of rows and have any fill style.
This browse has alternate bands of light green and white. 
</description>
		<cases>
			<case>
				<figure><link>images/UG_Greenband_1.gif</link></figure>
			</case>
			<case>
				<description>This browse has two bands of gradient color and one band of white. 
</description>
		<figure><link>images/UG_Greenband_2.gif</link></figure>
			</case>
			
		</cases>
	</case>
	<case>
		<title>Query Genie and Query By Expression</title>
		<description>When you run a query and there is already a query in place, Alpha Five currently gives you the choice of searching in all records, or in the currently selected records. A new option will allow you to extend the current selection of records. So, for example, if you have run a search for "State = 'MA'", and you now search for "State = 'NY'", and you chose the "Extend current selection of records" option, the resulting selection of records will have customers in both 'MA' and 'NY'. </description>

	</case>
	<case>
		<title>Email Support for SSL and TLS</title>
		<description>V8 can now send mail through SSL (Secure Sockets Layer) or TLS (Transport Layer Security). This feature is important because many SMTP servers require SSL or TLS connection when connecting remotely.</description>

	</case>
	
	
</cases>	
	
	
</section>
<section>
	<title>Action Scripting</title>
<cases>
	<case>
		<title>Prompt Using Check Box List Box</title>
		<description>Basic. Displays a list of choices as check boxes.
</description>
		
	</case>
	<case>
		<title>Connect to SQL Database</title>
		<description>Enterprise. Opens a connection to a back-end SQL database.
</description>
		
	</case>
	<case>
		<title>Close Connection to SQL Database</title>
		<description>Enterprise. Closes a connection to a back-end SQL database.
</description>
		
	</case>
	<case>
		<title>Execute DELETE Query on a SQL Database</title>
		<description>Enterprise. Executes a SQL DELETE command against a SQL back-end database.
</description>
		
	</case>
	<case>
		<title>Execute INSERT Query on a SQL Database</title>
		<description>Enterprise. Executes a SQL INSERT command against a SQL back-end database.
</description>
		
	</case>
	<case>
		<title>Execute SELECT Query on a SQL Database</title>
		<description>Enterprise. Executes a SQL SELECT command against a SQL back-end database.
</description>
		
	</case>
	<case>
		<title>Execute UPDATE Query on a SQL Database</title>
		<description>Enterprise. Executes a SQL UPDATE command against a SQL back-end database.
</description>
		
	</case>
	<case>
		<title>Property-Grid Style Xdialog</title>
		<description>Basic. Creates a property grid style dialog that can conditionally present and accept multiple values from a user. The Property-Grid Style dialog is a replacement for the Property-Sheet Style dialog.
</description>
		
	</case>
	
	
</cases>	
	
	
</section>
<section>
	<title>Xdialog</title>
	
	<cases>
		<case>
			<title>Alias Image Names</title>
			<description>Basic. 
You can define aliases for image names. This is useful because you can change the images used in your code without having to change the code itself. You just change the alias definitions. For example:
</description>
		</case>
		<case>
			<title>Property Grid Style Xdialog</title>
			<description>Basic. 
The property grid style Xdialog is a second-generation version of the property-list style Xdialog, which provides a better way to selectively present and define the values of multiple variables.
</description>
		</case>
		<case>
			<title>Tree Control X Directive</title>
			<description>Basic. 
Allows you dynamically populate branches of a tree control with a function call.
</description>
		</case>
		
	</cases>
</section>

<section>
	<title>Xdialog Commands </title>
	<description>The following commands are available in the Alpha Five Version 8 Basic Edition.</description>
	<cases>
		<case>
			<title>{BLUEFRAME}</title>
			<description>Draws a box around one or more cells of the Xdialog grid. The frame color is the standard blue used by Windows XP.</description>
		</case>
		<case>
			<title>{COLOR}</title>
			<description>Allows you to set the foreground and background color for the following controls on an Xdialog: Textbox, Frame, Line, Radio Buttons, Checkboxes and Buttons. The background color setting is only honored for textbox controls.</description>
		</case>
		<case>
			<title>{CONDITION_BEGIN}</title>
			<description>A variant of the {condition} command, which is used to control whether portions of an Xdialog box are displayed or not. The {condition_begin} command is useful when you have nested conditions.</description>
		</case>
		<case>
			<title>{CONDITION_END}</title>
			<description>Removes the most recently added condition that was added using {condition_begin}.</description>
		</case>
		<case>
			<title>{CURSOR}</title>
			<description>Allows you to specify a bitmap to use for the cursor when the mouse is over a control. Applies to controls for which a flyover format string has been defined.</description>
		</case>
		<case>
			<title>{HYPERLINK}</title>
			<description>Allows you to create buttons that look like hyperlinks.</description>
		</case>
		<case>
			<title>{EXPAND}</title>
			<description>Displays a message while waiting for a function to populate the branch of a tree control.</description>
		</case>
		<case>
			<title>{ImageViewer}</title>
			<description>The {ImageViewer} control allows you to load image from files on disk and view them in a window on an Xdialog. The control has three viewing modes for images: Absolute, Best Fit and Stretch. The control will tell you what the size is of the loaded image.</description>
		</case>
		<case>
			<title>{On_Clipboard_Change}</title>
			<description>When the contents of the clipboard changes, the specified event will fire.</description>
		</case>
		<case>
			<title>{PROPGRID}</title>
			<description>-</description>
		</case>
		<case>
			<title>{TABBAND}</title>
			<description>Inserts a line of tabs into an Xdialog control. Each tab will display a different page.</description>
		</case>
		<case>
			<title>{U}</title>
			<description>Underlines the next character in owner draw strings.</description>
		</case>
		<case>
			<title>{WFSPROPSHEET}</title>
			<description>-</description>
		</case>
		
	</cases>
</section>

<section>
	<title>AlphaDAO Objects</title>
	<description>The Alpha Five Enterprise edition provides Xbasic program access to SQL databases such as  Microsoft SQL Server, Oracle, MySQL as well as  Microsoft Access. This functionality extends the familiar Alpha Five database features that previously supported only .DBF files.
</description>
	<cases>
		<case>
			<title>SQL::Argument</title>
			<description>This object defines a single argument to be passed to a SQL function in a SQL::Arguments collection.
</description>
		</case>
		<case>
			<title>SQL::Arguments</title>
			<description>A collection of arguments to be passed to a SQL function.</description>
		</case>
		<case>
			<title>SQL::CallResult</title>
			<description>This object provides a more complete description of a function call on an object in the SQL name space.</description>
		</case>
		<case>
			<title>SQL::Connection</title>
			<description>Each instance of SQL::Connection represents a potential or active database session.</description>
		</case>
		<case>
			<title>SQL::DataTypeInfo</title>
			<description>A single column in a table or result set. The description includes the name, size, precision, Alpha Five type, the native type, and an intermediate type (see SQL::IntermediateType ) which contains more precise type information. This intermediate type makes it possible to recreate a table using the closest possible matching type in the target table.</description>
		</case>
		<case>
			<title>SQL::IndexColumnInfo</title>
			<description>A description of one of the columns in an index.
A SQL::IndexInfo contains one or more columns that make up the primary key, the foreign key, of a unique or non-unique index.
</description>
		</case>
		<case>
			<title>SQL::IndexInfo</title>
			<description>A description of an index on a SQL table. Each table in a SQL database has one or more relationships, constraints or indexes. The primary key, foreign keys, and unique and non-unique indexes are each described by a SQL::IndexInfo instance. The SQL::TableInfo object contains a list of those indexes.</description>
		</case>
		<case>
			<title>SQL::ResultSet</title>
			<description>A collection of rows returned from the execution of a query. When a SQL query returns one or more rows of data, you can use the SQL::ResultSet object to get the description of the result set and to navigate within the rows of the results to retrieve the data.</description>
		</case>
		<case>
			<title>SQL::Row</title>
			<description>The data returned by the SQL::ResultSet.NextRow() method.</description>
		</case>
		<case>
			<title>SQL::Schema</title>
			<description>A collection of SQL table definitions. SQL::Schema is a container for one or more SQL::TableInfo objects.</description>
		</case>
		<case>
			<title>SQL::TableInfo</title>
			<description>A fairly complete description of a SQL table, its columns, and its indexes. Many of the SQL functions either ask you to provide a SQL::TableInfo object, or will create one for you. Using this object, it is possible to retrieve a description of a table from one database and construct a copy of that table in the same or another database.</description>
		</case>
		
	</cases>
</section>

<section>
	<title>Classes</title>
	<description>The following classes are available in the Alpha Five Version 8 Basic Edition.</description>
	<cases>
		<case>
			<title>ImageName</title>
			<description>Useful when you want to create a logical image name and then map it to the physical image names defined in Alpha Five.</description>
		</case>
		<case>
			<title>ImageResource</title>
			<description>Useful when you want to create a logical image name and then map it to the physical image names defined in Alpha Five.</description>
		</case>
		<case>
			<title>INET::Socket</title>
			<description>Provides support for Internet reads and writes.</description>
		</case>
		<case>
			<title>INET::SSLContext</title>
			<description>Provides information about Server Certification in support of INET::SSLSocket methods.</description>
		</case>
		<case>
			<title>INET::SSLSocket</title>
			<description>Provides SSL support for Internet reads and writes.</description>
		</case>
		
	</cases>
</section>

<section>
	<title>General Purpose Methods</title>
	<description>The following methods are available in the Alpha Five Version 8 Basic Edition.</description>
	<cases>
		<case>
			<title>.Clear()</title>
			<description>Removes all image name entries from the string dictionary.</description>
		</case>
		<case>
			<title>.Exists()</title>
			<description>Determines if a logical image name exists.
</description>
		</case>
		<case>
			<title>.Get()</title>
			<description>Returns the name of the existing image that is mapped to a logical image name.</description>
		</case>
		<case>
			<title>.Initialize()</title>
			<description>Adds one or more logical image name entries to the string dictionary.
</description>
		</case>
		<case>
			<title>.Remove()</title>
			<description>Removes a logical image name entry from the string dictionary.
</description>
		</case>
		<case>
			<title>.Set()</title>
			<description>Sets the value of an existing or new logical image name in the string dictionary.</description>
		</case>
		<case>
			<title>.CleanupImages()</title>
			<description>Unloads all image resources.</description>
		</case>
		<case>
			<title>.GetBitmapNameMap()</title>
			<description>Returns an ImageName object.</description>
		</case>
		<case>
			<title>.Object.LoadImage()</title>
			<description>Loads an image into an Xdialog {ImageViewer} control.
</description>
		</case>
		<case>
			<title>.RECORD_CONTENT_GET()</title>
			<description>Returns a CR-LF delimited of selected fields from a table.</description>
		</case>
		<case>
			<title>ImageResource.Get()</title>
			<description>Returns an ImageResource object.</description>
		</case>
		<case>
			<title>ImageResource.Get()</title>
			<description>Returns an ImageResource object.</description>
		</case>
		<case>
			<title>FILE.APPEND()</title>
			<description>Appends a blob or text to the end of a file.
</description>
		</case>
		<case>
			<title>FILE.APPEND_LINE()</title>
			<description>Appends text to the end of a file.</description>
		</case>
		<case>
			<title>PropertyGrid.ExpandItem()</title>
			<description>Expands or contracts a named category.</description>
		</case>
		<case>
			<title>PropertyGrid.IsExpanded()</title>
			<description>Returns TRUE (.T.) if a category is expanded.</description>
		</case>
		<case>
			<title>PropertyGrid.SetFocus()</title>
			<description>Sets focus to an item, expanding its container category if necessary.</description>
		</case>
		<case>
			<title>STATUSBAR.ABORT_CHECK()</title>
			<description>Returns TRUE (.T.) if user hit an abort area on the Status Bar.</description>
		</case>
		<case>
			<title>STATUSBAR.ABORT_RESET()</title>
			<description>Resets the abort state. Do before abort loop and after an abort is canceled.
</description>
		</case>
	
		
	</cases>
</section>

<section>
	<title>General Purpose Functions</title>
	<description>The following functions are available in the Alpha Five Version 8 Basic Edition.</description>
	<cases>
		<case>
			<title>*AT_MULTI()</title>
			<description>Returns the position where one of a CR-LF delimited list of strings is found in another.</description>
		</case>
		<case>
			<title>*ATC_MULTI()</title>
			<description>Case insensitive version of *AT_Multi()</description>
		</case>
		<case>
			<title>*TREE_FROM_DEPENDENCIES()</title>
			<description>Takes a CR-LF delimited strings of parent-child relationships, and creates a string that can be used by the tree control in Xdialog to display tree data.</description>
		</case>
		<case>
			<title>A5_CSS_EDITOR()</title>
			<description>Displays the CSS Editor dialog and allows you edit or create a cascading style sheet.
</description>
		</case>
		<case>
			<title>A5_DownLoadFile()</title>
			<description>Downloads a file specified by a URL and saves it on the user's computer.</description>
		</case>
		<case>
			<title>A5_RepairSetStructure()</title>
			<description>Displays the Fix Table Name in Set dialog. This function allows you to fix table references in a set when the location of one or more tables in the set has changed.</description>
		</case>
		<case>
			<title>A5_TOOLBAR_OPEN()</title>
			<description>In Version 7 and earlier releases the A5_TOOLBAR_OPEN() function created global toolbars. In Version 8, by default A5_TOOLBAR_OPEN()creates local toolbars (meaning that Alpha Five will automatically hide the toolbar when the window from which they were launched loses focus). In order to make the toolbars global, you will have to use the optional Global_Flag argument in the A5_TOOLBAR_OPEN() function call.  </description>
		</case>
		<case>
			<title>A5_WildcardSelect()</title>
			<description>Displays a dialog that accepts arguments and calls FILTER_STRING_SMATCH().  </description>
		</case>
		<case>
			<title>BlobCompare()</title>
			<description>Indicates which of two blob variables is larger.</description>
		</case>
		<case>
			<title>BlobEqual()</title>
			<description>Indicates if two blob variables are identical.</description>
		</case>
		<case>
			<title>CPUCount()</title>
			<description>Returns the number of available CPUs in the computer.</description>
		</case>
		<case>
			<title>Date_FirstDayOfMonth()</title>
			<description>Given a date, returns the first day of its month.</description>
		</case>
		<case>
			<title>Date_FirstDayOfPreviousMonth()</title>
			<description>Given a date, returns the first day of the previous month.</description>
		</case>
		<case>
			<title>Date_LastDayOfMonth()</title>
			<description>Given a date, returns the last day of its month.</description>
		</case>
		<case>
			<title>Date_LastDayOfPreviousMonth()</title>
			<description>Given a date, returns the last day of the previous month.</description>
		</case>
		<case>
			<title>EVALUATE_STRING()</title>
			<description>Replaces placeholders in a string with variable values.</description>
		</case>
		<case>
			<title>PrimaryProcessor()</title>
			<description>Returns the index of the primary processor.</description>
		</case>
		<case>
			<title>ROUND_DOWN()</title>
			<description>Rounds a number down to the specified number of decimal places.</description>
		</case>
		<case>
			<title>SearchTables()</title>
			<description>Displays the Search Selected Tables for Data Value dialog box. This dialog allows you to discover the names of the tables and of their fields that contain a specified value.</description>
		</case>
		<case>
			<title>SetPrimaryProcessor()</title>
			<description>Sets the processor that will run Alpha Five.</description>
		</case>
		<case>
			<title>ShortTime_Extract()</title>
			<description>Extracts the hours, minutes, or seconds from a short time value.</description>
		</case>
		<case>
			<title>StrEqual()</title>
			<description>Compares the values contained in two character strings, optionally ignoring whitespace characters and case.</description>
		</case>
		<case>
			<title>TableFinder()</title>
			<description>Displays the Table Finder dialog. Use this dialog to find tables that contain named fields.</description>
		</case>
		<case>
			<title>UI_DLG_PARENT_GET()</title>
			<description>Returns the name of the calling dialog. This function is useful when an embedded dialog needs to know the name of the dialog that caused it to appear.
</description>
		</case>
		<case>
			<title>UI_GET_CHECK2()</title>
			<description>Creates and displays a dialog box containing check box choices.</description>
		</case>
		<case>
			<title>UI_GET_CHECK2P()</title>
			<description>Creates and displays a dialog box containing check box choices.</description>
		</case>
		<case>
			<title>UniqueNameGet()</title>
			<description>Takes a CR-LF delimited list of existing names and a suggested name and increments a counter at the end of the suggested name until it is unique.</description>
		</case>
		<case>
			<title>WIN_CREATE_SHORTCUT()</title>
			<description>Creates a Windows shortcut in the specified location.</description>
		</case>
		<case>
			<title>WIN_SPECIAL_FOLDER()</title>
			<description>Returns the path to the Windows special folder specified, such as the Desktop folder, the Start Menu folder, and the Personal Documents folder.</description>
		</case>
		
	</cases>
</section>

<section>
	<title>Security Functions</title>
	<description>The following functions are available in the Alpha Five Version 8 Basic Edition.</description>
	<cases>
		<case>
			<title>A5_Decrypt_Binary()</title>
			<description>Decodes data encoded by A5_Encrypt_Binary().</description>
		</case>
		<case>
			<title>A5_Decrypt_String()</title>
			<description>Decodes text encode by A5_Encrypt_String().</description>
		</case>
		<case>
			<title>A5_Encrypt_Binary()</title>
			<description>Encodes binary data using a variety of 64 bit encryption algorithms.</description>
		</case>
		<case>
			<title>A5_Encrypt_String()</title>
			<description>Encodes text using a variety of 64 bit encryption algorithms.</description>
		</case>
		
	</cases>
</section>
	
	<section>
	<title>Addressing and Tracking Functions</title>
	<description>The following functions are available in the Alpha Five Version 8 Basic Edition.
</description>
	<cases>
		<case>
			<title>FEDEX_Delivery_Status()</title>
			<description>Returns the status of a shipment sent via FEDEX.</description>
		</case>
		<case>
			<title>UPS_Delivery_Status()</title>
			<description>Returns the status of a shipment sent via the United Parcel Service (UPS).</description>
		</case>
		<case>
			<title>USPS_City_From_ZIP()</title>
			<description>Returns the city that contains the specified ZIP code.</description>
		</case>
		<case>
			<title>USPS_CityState_From_ZIP()</title>
			<description>Returns the state and city that contains the specified ZIP code.</description>
		</case>
		<case>
			<title>USPS_Delivery_Status()</title>
			<description>Returns the status of a shipment sent via the United States Post Office (USPS).
</description>
		</case>
		<case>
			<title>USPS_State_From_ZIP()</title>
			<description>Returns the state that contains the specified ZIP code.</description>
		</case>
		<case>
			<title>USPS_ZipCode_Lookup()</title>
			<description>Returns a ZIP code for a specified address.</description>
		</case>
		
	</cases>
</section>
	
	<section>
	<title>Web Application Functions</title>
	<description>The following features are available in the Alpha Five Version 8 Professional Edition.</description>
	<cases>
		<case>
			<title>A5WS_Get_Group_Assignments()</title>
			<description>Return a CR-LF delimited list of groups assigned to a particular userid in the current project. </description>
		</case>
		<case>
			<title>A5WS_Get_Groups()</title>
			<description>Return a CR-LF list of web groups for the current project.</description>
		</case>
		<case>
			<title>A5WS_Get_GUID_From_User()</title>
			<description>Returns a user GUID from a userid.</description>
		</case>
		<case>
			<title>A5WS_Get_Page_List()</title>
			<description>Get a List of Pages Currently allowed by the Web Security settings in CR-LF list.</description>
		</case>
		<case>
			<title>A5WS_Get_Security_Ques()</title>
			<description>Get Web Security Questions in CR-LF list.</description>
		</case>
		<case>
			<title>A5WS_Get_User_Assignments()</title>
			<description>Return a CR-LF delimited list of groups assigned to a particular userid in the current project. 
</description>
		</case>
		<case>
			<title>A5WS_Get_User_From_GUID()</title>
			<description>Returns a userid from a user_guid in the current project.
</description>
		</case>
		<case>
			<title>A5WS_Get_User_Values()</title>
			<description>Return values from web user table as CurrentForm..value for each field in user table.</description>
		</case>
		<case>
			<title>A5WS_Get_Users()</title>
			<description>Show a CR-LF list of users for the current project.</description>
		</case>
		<case>
			<title>A5WS_LockOutUserRelease()</title>
			<description>Release a web user that is currently locked out. May be used on a Web Page, desktop script, or UDF.</description>
		</case>
		<case>
			<title>A5WS_LockOutUserSet()</title>
			<description>Lock out a user for a specified period of time. May be used on a Web Page. May be used in a desktop script or UDF.
</description>
		</case>
		<case>
			<title>A5WS_Logged_In_User_Values()</title>
			<description>Show available field values for current loggin in user. </description>
		</case>
		<case>
			<title>A5WS_LogoutUser()</title>
			<description>Remove all login information for current logged in user. May be used on a Web Page.</description>
		</case>
		<case>
			<title>A5WS_OpenWebSecurity()</title>
			<description>Display the Web Security options Menu for this project.
</description>
		</case>
		<case>
			<title>A5WS_Pagesecurity()</title>
			<description>Set security for web pages. May be used on a Web Page. May be used in a script or UDF.</description>
		</case>
		<case>
			<title>A5WS_Save_User_Values()</title>
			<description>Save values in the CurrentForm controls that match fields in the user table.</description>
		</case>
		<case>
			<title>A5WS_SecurityActive()</title>
			<description>Determine if web security is active.</description>
		</case>
		<case>
			<title>A5WS_SecurityQuestions()</title>
			<description>Opens a list of current security questions for project. May be used in a script or UDF.</description>
		</case>
		<case>
			<title>A5WS_User_File_Field_List()</title>
			<description>Retrieve a list of active fields in CR-LF list for web user table.</description>
		</case>
		<case>
			<title>A5WS_User_Groups_Dialog()</title>
			<description>Displays the add user and groups dialog for the current Web project.</description>
		</case>
		
	</cases>
</section>
	
	<section>
	<title>SQL Helper Functions</title>
	<description>The following features are available in the Alpha Five Version 8 Enterprise Edition.
</description>
	<cases>
		<case>
			<title>A5_BatchPassiveLinkCreate()</title>
			<description>Creates multiple passive-link tables based on data in a SQL back-end database.</description>
		</case>
			<case>
			<title>A5_CreateLayoutFromDataSource()</title>
			<description>Creates a new layout based on a DataSource definition.
</description>
		</case>
			<case>
			<title>A5_CreatePassiveLinkTable()</title>
			<description>Updates the data in a 'Passive-Link' table.</description>
		</case>
			<case>
			<title>A5_SQLResultSetPreview()</title>
			<description>Displays up to 100 rows of data stored in a SQL::ResultSet object.</description>
		</case>
			<case>
			<title>A5_SQL_BatchImportTables()</title>
			<description>Imports multiple standard Alpha Five .DBF tables from a back-end database.</description>
		</case>
			<case>
			<title>A5_SQL_ImportDataSource()</title>
			<description>Imports the data specified by a Data Source name to an Alpha Five table.</description>
		</case>
			<case>
			<title>A5_SQL_QuerySaveAs()</title>
			<description>-</description>
		</case>
			<case>
			<title>SQL_Query_Builder()</title>
			<description>Displays the SQL Genie to help you define a SQL SELECT statement.
</description>
		</case>
			<case>
			<title>SQL_ResultSet_Preview()</title>
			<description>Displays up to 100 rows from a SQL::ResultSet.</description>
		</case>
			<case>
			<title>SQL_TableExport()</title>
			<description>Copies a local .DBF table to a back-end database.</description>
		</case>
			<case>
			<title>SQL_TableInfoOfDBF()</title>
			<description>Creates a SQL::TableInfo object from a local .DBF table.</description>
		</case>
			<case>
			<title>SQL_TableInfoToOpenTable()</title>
			<description>Creates a local table from a SQL::TableInfo object.</description>
		</case>
		
	</cases>
</section>

	
</sections>
	
	
	
</page>