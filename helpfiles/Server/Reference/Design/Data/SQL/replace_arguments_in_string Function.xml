<page>
	<shortlink>server ref sql replace arguments in string Function</shortlink>
	<topic>replace_arguments_in_string Function</topic>
	<description>Takes a string that contains SQL::Arguments in it (e.g. ":Arg1") and replaces the arguments with actual values.
 This is used internally by Alpha Anywhere but may also be useful in applications.</description>
<syntax>C Result = replace_arguments_in_string(C filter ,sql::Arguments args )
</syntax>	
	<arguments>
<argument>
	<name>C Result </name>
	<description>Revised String with arguments replaced </description>
</argument>		
<argument>
	<name>C filter </name>
	<description>String with replaceable arguments prefixed with :</description>
</argument>	
<argument>
	<name>sql::Arguments args </name>
	<description>Arguments structure with values to use for replacement</description>
</argument>	
		
	</arguments>
	
	<sections>

<section>
	<title>Examples</title>
	<example><![CDATA[dim filter as c 
dim args as sql::arguments
args.add("city","Burlington")
filter = "city = :city"
filter = replace_arguments_in_string(filter,args)
?filter
= city = "Burlington"]]></example>
</section>
	<section>
		<title>Notes:</title>
		<description>There are several other ways to process templates:
 The replace_placeholders_with_argument_values Function Replaces placeholders (enclosed in curly parens, e.g. {arg1}, {arg2}) in a string with values in a SQL::Arguments object.
 The replace_variables_in_string Function substitutes the values of dot variables in a string, e.g. "p.firstname" becomes "Jim"
 The evaluate_string Function replaces placeholders in a string with variable values and returns a transformed string.
 The compilestringtemplate Function is much more efficient than the evaluate_string Function when used inside a loop.
</description>
	</section>
		
	</sections>
	
<see>
	<ref link="replace_placeholders_with_argument_values Function">replace_placeholders_with_argument_values Function</ref>
	<ref link="REPLACE_VARIABLES_IN_STRING Function">replace_variables_in_string Function</ref>
	<ref link="EVALUATE_STRING Function">evaluate_string Function </ref>
	<ref link="CompileStringTemplate Function">compilestringtemplate Function</ref>
	<ref link="EVALUATE_STRING Function">evaluate_string Function</ref>
	
</see>	
	
	
	
	
	
	
	
</page>