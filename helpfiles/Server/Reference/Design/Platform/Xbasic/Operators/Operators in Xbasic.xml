<page>
	<topic>Operators in Xbasic</topic>
<groups>
	<group background="true">
		<sections>
			<section>
				<title>Operator Precedence</title>
				<description>A logical expression can include multiple comparison operations that are connected logically through the .AND. and .OR. operators. To control the order in which the expression is evaluated, use parentheses. Alpha Anywhere uses the following order of precedence when evaluating comparisons in logical expressions:
</description>
				<cases>
					<case>
						<description>1. All arithmetic operations</description>
					</case>
					<case>
						<description>2. Operations enclosed in parentheses</description>
					</case>
					<case>
						<description>3. .NOT</description>
					</case>
					<case>
						<description>4. Substring inclusion ($)</description>
					</case>
					<case>
						<description><![CDATA[5. Relative and relative or equal (<=, >=, <, >)]]></description>
					</case>
					<case>
						<description><![CDATA[6. Equal, Exactly Equal, Not Equal, and Not Exactly Equal (=, = =, < >, !=)]]></description>
					</case>
					<case>
						<description>7. .AND</description>
					</case>
					<case>
						<description>8. .OR</description>
					</case>
					
				</cases>
				
			</section>
			
		</sections>
		
	</group>
	<group>
		<sections>
			<section>
				<description>Including operators in order according to their precedence allows parenthesis to be implied when combining operations. For example, the expression:
</description>
				<example><![CDATA[A >= 5 .AND. B = 10 .OR. A >= 50
 ]]></example>
			</section>
			<section>
				<description>is equivalent to:
</description>
				<example><![CDATA[(A >= 5 .AND. B = 10) .OR. A >= 50
 ]]></example>
			</section>
			<section>
				<description>since the .AND. operator has precedence over the .OR. operator.
When multiple operations have the same precedence, they are evaluated from left to right. For example:
</description>
				<example><![CDATA[.6 < 10 .AND. "Apple"="Apple" .AND. "Alpha" < "Beta"  ?span>  TRUE
 ]]></example>
			</section>
			
		</sections>
		
	</group>
	
	<group>
		<sections>
			<section>
				<title>Using Operators</title>
				<description>An operator is a symbol you use to represent a mathematical, relational, logical, or string operation. For example, the asterisk (*) represents the mathematical operation of multiplication. You can combine functions, field names, and constants with operators to form more complex expressions.
Most operators use the following syntax: expression operator expression

Each data type (Character, Date, Logical, And Numeric) has a corresponding list of operators so that you can combine multiple values of that type together into a single value. The resulting data type is determined by the operator and the data type of its operands.
You can choose from several types of operators:
</description>
			</section>
			
		</sections>
		
		
		
	</group>
	
	<group>
		<sections>
			<section>
				<list>
			<item>
				<name-title>Operator Type</name-title>
				<description-title>Resulting Data Type</description-title>
			</item>
			<item>
				<name>Arithmetic</name>
				<description>Numeric</description>
			</item>
			<item>
				<name>Character</name>
				<description>Character</description>
			</item>
			<item>
				<name>Date</name>
				<description>Date</description>
			</item>
			<item>
				<name>Logical</name>
				<description>All types</description>
			</item>
			<item>
				<name>Comparison</name>
				<description>All types</description>
			</item>
			
			
		</list>
		
		
				
				
			</section>
			
			
			
			
			
		</sections>
		
		
	</group>
	<group>
		<sections>
		<section>
				<title>Site Map</title>
				<cases>
					<case>
						<description>Arithmetic Operators </description>
						<cases>
							<case>
								<description>^ (Exponent Operator) 
</description>
							</case>
							<case>
								<description>** (Exponent Operator) 
</description>
							</case>
						</cases>
					</case>
					<case>
						<description>Character Operators </description>
						<cases>
							<case>
								<description>+ Concatenation 
</description>
							</case>
							<case>
								<description>- (Concatenation with Trim Operator) 
</description>
							</case>
						</cases>
					</case>
					<case>
						<description>Date Operators </description>
						<cases>
							<case>
								<description>- (Date Subtraction) 
</description>
							</case>
							<case>
								<description>+ (Date Addition) 
</description>
							</case>
							<case>
								<description>- (Date Time Subtraction) 
</description>
							</case>
							<case>
								<description>+ (Date Time Addition) 
</description>
							</case>
								<case>
								<description>- (Time Subtraction) 
</description>
							</case>
						</cases>
					</case>
					<case>
						<description>Logical Operators </description>
							<cases>
							<case>
								<description>Logical .AND. 
</description>
							</case>
							<case>
								<description>Logical .OR. 
</description>
							</case>
							<case>
								<description>Logical .NOT. 
</description>
							</case>
							<case>
								<description>Logical .XOR. 
</description>
							</case>
						</cases>
					</case>
					<case>
						<description>Comparison Operators </description>
							<cases>
							<case>
								<description><![CDATA[< Less Than]]> 
</description>
							</case>
							<case>
								<description><![CDATA[<= Less than or Equal to ]]>
</description>
							</case>
							<case>
								<description><![CDATA[> Greater Than ]]>
</description>
							</case>
							<case>
								<description><![CDATA[>= Greater than or Equal to ]]>
</description>
							</case>
							<case>
								<description>= (Equals Operator) 
</description>
							</case>
							<case>
								<description>== (Exactly Matching Operator) 
</description>
							</case>
							<case>
								<description><![CDATA[<> Not Equal To ]]>
</description>
							</case>
							<case>
								<description>!= (Not Exactly Matching Operator) 
</description>
							</case>
							<case>
								<description>!$ (Substring Exclusion Operator) 
</description>
							</case>
							<case>
								<description>$ (Substring Inclusion Operator)
</description>
							</case>
							
						</cases>
					</case>
					<case>
						<description>Additional Opreators</description>
							<cases>
							<case>
								<description>:= (Assignment Operator) 
</description>
							</case>
							<case>
								<description>\ (Backslash) 
</description>
							</case>
							<case>
								<description>: (Argument Designator) 
</description>
							</case>
							<case>
								<description>:: (Namespace Designator) 
</description>
							</case>
						</cases>
					</case>
					
					
				</cases>
				
			</section>
		
		</sections>
	</group>
	
	
	
	
	
	
</groups>
	

	

	
</page>