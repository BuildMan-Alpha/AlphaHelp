<page>
	<topic>Application Server - Server.ClearA5iCache() Method</topic>
<sections>
	<section>
		<note>This method is obsolete and has been removed from the software as of Version 11. The server now actively monitors all a5_application.a5i files for changes and automatically refreshes the cache as needed. This negates the need to use Server.ClearA5ICache() or restart the server when A5I files are updated.</note>
	</section>
	<section>
		<description>This method clears the server's Application cache, causing it to re-read and execute the a5_application.a5i file upon the next request. When making changes to the Application settings, such as connection strings, the cache must be cleared, either by using this method or by restarting the server.

 For example, say you have published your application and you are testing it. You then edit the Publishing Profile and change a connection string and publish any file (causing an updated a5_application.a5i file with the new connection string definition in it to be published), and you then continue testing your application. You will find that the new connection string is NOT being used because the Application Server has cached the connection strings. To force the Application Server to use the new connection strings, you previously had to stop and restart the server. Now you can call an .a5w page that executes the new Server.ClearA5iCache() method.

</description>
		<note>Clearing the A5i cache also clears the AEX cache. As such, you will not be able to use a function from your AEX until the next request. This is most easily accomplished with a Response.Redirect() call immediately after Server.ClearA5iCache().

Change in behavior: As of build 3639, when you clear the A5i cache, the AEX cache is not cleared until the current page completes executing.</note>
	</section>
	
	
</sections>	
	
</page>