<page>
	<topic>What is a Variable?</topic>
	<description>Variables are used to store values for later use. To hold these values, you must declare locations in memory where each of these values can be stored. This memory location is called a variable. A variable contains any unit of information like a number, a date, or a sequence of alphanumeric characters (called a string). The type of information a variable contains is always the same, but its contents can be changed easily and quickly.</description>
	
<sections>

<section>
	<title>More about Variables</title>
	<cases>
		<case>
			<description>A description of the different Variable Data Types supported by Alpha Anywhere.</description>
		</case>
		<case>
			<description>An explanation of the way variables should be named.</description>
		</case>
		<case>
			<description>The syntax for fully qualified variable? names.</description>
		</case>
		<case>
			<description>A variable is implicitly defined by assigning it a value with the assignment operator (" = ").</description>
		</case>
		<case>
			<description>Explicit Type Declaration : an explanation of why to use the DIM statement.</description>
		</case>
		<case>
			<description>An explanation of the ways Alpha Anywhere automatically assigns the type of variables created by combining 2 variables of different types.</description>
		</case>
		<case>
			<description>How and when to define variables in an AUTOEXEC script.</description>
		</case>
		<case>
			<description>The duration of a variable definition, and the extent to which it is accessible from other places, is called the variable's scope.</description>
		</case>
		<case>
			<description>A definition of local variables.</description>
		</case>
		<case>
			<description>A definition of session and global variables.</description>
		</case>
		
		<case>
			<description>An explanation of addin variables.</description>
		</case>
		<case>
			<description>An explanation of calculated fields.</description>
		</case>
		<case>
			<description>An explanation of pointer variables.</description>
		</case>
		<case>
			<description>An explanation of dot variables.</description>
		</case>
		<case>
			<description>A graphical illustration of the persistence of different variable types.</description>
		</case>
		<case>
			<description>How to use arrays and collections of variables.</description>
		</case>
		<case>
			<description>An explanation of variable indirection and the EVAL() function.</description>
		</case>
		<case>
			<description>How to pass variables by reference to functions.</description>
		</case>
		<case>
			<description>How to create a variable of type F (function).</description>
		</case>
		
		<case>
			<description>An explanation of how to execute an Xbasic command stored in a variable using EVALUATE_TEMPLATE().</description>
		</case>
		<case>
			<description>How to read and write variables in other namespaces.</description>
		</case>
		<case>
			<description>Understanding the scope of variables created within WHILE ... END WHILE statements.</description>
		</case>
		<case>
			<description>Using the WITH ... END WITH statement to select a variable in the local variable frame.</description>
		</case>
		<case>
			<description>A description of Alpha Five system variables.</description>
		</case>
		<case>
			<description>How to use ASK variables.</description>
		</case>
		<case>
			<description>Testing variables for NULL values.</description>
		</case>
		<case>
			<description>How to use session variables in an A5W web page.</description>
		</case>
		<case>
			<description>How to use protected variables in an A5W web page.</description>
		</case>
		
	</cases>
	
</section>	
	
</sections>	
<see>
	<ref>Language Reference?</ref>
</see>
	
</page>