<page>
<topic>SHOPCART.A5W</topic>	
<description>A customer views the SHOPCART.A5W to see the items selected for purchase.</description>	
<sections>
<section>
	<title>Discussion</title>
	<description>The SHOPCART.A5W page verifies the shopping cart information is current. This test is done by including SHOPCART_UDF.A5W and running shopcart_chk().
</description>
	
</section>	
<section>
	<title>Links</title>
	<description>The Shopping Cart > View Cart entry of the NAV_MAIN navigation component displays the SHOPCART.A5W page.
</description>
	
</section>	
		
<section>
	<title>Edits to the Page Source</title>
	<description>When you look at SHOPCART.A5W with the Source tab of the HTML Editor, you will see a large amount of HTML and Xbasic code. The HTML Editor placed almost all of it there automatically, as we used the WYSIWYG tab to place the tables, text, graphics, and components on the page. There are a few interesting exceptions, where we changed the page code through the Source tab.
The a5w_include("loggedinvalues.a5w") statement runs the code on the LOGGEDINVALUES.A5W page. This page creates and sets the values of session.protectedpUser.userid, session.protectedpUser.type, and session.protectedpUser.name.
</description>
	<example><![CDATA[a5w_include("loggedinvalues.a5w")
]]></example>
</section>	
<section>
	
	<description>Next, the code defines the welcome message for the current user. If no name was found for the current user, welcome is set to NULL. If a user name was found, the welcome message includes the session.protectedpUser.name.
</description>
	<example><![CDATA[if session.protectedpUser.name = ""
    welcome = "" ' welcome message for current user shown below product navigation list
else
    welcome = "Welcome "+session.protectedpUser.name+"!"
end if
 ]]></example>
</section>			
<section>
	
	<description>The code stores "shopcart" style in the pgstyle variable. It will be needed to format the welcome and header messages.
</description>
	<example><![CDATA[pgstyle = "shopcart"
]]></example>
</section>			
<section>
	
	<description>The cart_id value is unique for each browser session and identifies the current instance of the open browser. This is different from session.sessionID, which is same for every browser session from the same computer. If the cart_id variable does not exist or its value is NULL, the API_UUIDCREATE() function generates a unique number to identify the cart (or order). The RESPONSE.ADD_COOKIE() saves this value in a cookie.
</description>
	<example><![CDATA[if eval_valid("cart_id") = .F.
    cart_id = api_uuidcreate()
    response.add_cookie("cart_id", cart_id, 0)
elseif cart_id = ""
    cart_id = api_uuidcreate()
    response.add_cookie("cart_id", cart_id, 0)
end if ]]></example>
</section>		
<section>
	
	<description>The page script calls shopcart_chk() loaded by a5w_include("shopcart_UDF.a5w"). This function will return a NULL value if there is no old cart. It will return shopcart_chk.html if old cart data was found. The following code prepares for the function call.
</description>
	<example><![CDATA[a5w_include("shopcart_UDF.a5w") ' include UDF page
request.variables.cart_id = cart_id
dim cartparms as P
cartparms.style_name = pgstyle
cartparms.DBF.table_name = "PathAlias.ADB_Path\shop_cart.dbf"
cartparms.product_table = "PathAlias.ADB_Path\product.dbf"
cartparms.product_table_display_fld = "description"
cartparms.product_table_id_fld = "prod_id"
cartparms.owner_id = loginid    
cartparms.user_type = logintype
cartparms.session = session
cartparms.request = request
cartparms.response = response
cartparms.popup = 0
cartparms.RedirectURL = "index.a5w"
cartparms.product_id = ""
cartparms.quantity = 1
cartparms.input_value_missing = ""
cartparms.emptycart_message = .T. ]]></example>
</section>		
<section>
	
	<description>If data from an old cart is returned, code is returned in the shopcart_chk.html parameter.
</description>
	<example><![CDATA[dim tmpl_cart as P
tmpl_cart = shopcart_chk(cartparms)
if tmpl_cart.RedirectURL <> "" then
    response.redirect(tmpl_cart.redirectURL)
    end
end if ]]></example>
</section>		
<section>
	
	<description>The location = "" statement clears all highlights from the menu.
</description>
	<example><![CDATA[with tmpl_NAV_MAIN
    location = ""
    componentName = "NAV_MAIN"
end with ]]></example>
</section>		
<section>
	
	<description>The pgstyle saves the style of the GRD_PRODNAV grid component for later use.
</description>
	<example><![CDATA[pgstyle = tmpl_GRD_PRODNAV.style_name]]></example>
</section>		
<section>
	
	<description>The page script now tests to see if there was any HTML returned from shopcart_chk() function. If there was HTML returned, the script skips building a new component. It uses the output from the dot variable to populate the variables normally built by the component.
</description>
	<example><![CDATA[if tmpl_cart.html <> ""
    delete x_grd_cart
    dim x_grd_cart as p
    x_grd_cart.Output.Body.Grid_HTML = tmpl_cart.html
    x_grd_cart.Output.Body.UpdateErrors = ""
    goto show_page ' skip shop cart list component
end if]]></example>
</section>		
<section>
	
	<description>The following code overrides properties of the grid. The filter expression causes the grid to display only those records for the current value of cart_Id where the quantity is greater than zero. The order expression is set to descending. The style is set to match the navigation component.</description>
	<example><![CDATA[with tmpl_grd_cart
    DBF.filter = "Cart_Id = \"" + cart_id + "\" .and. Quantity > 0"
    DBF.order = "Desc"
    style_name = pgstyle
    componentName = "DLG_CART"
end with]]></example>
</section>		
<section>
	
	<description>Later the pgstyle variable styles the heading of the page.
</description>
	<example><![CDATA[Since 1982, Your Preferred Sporting Goods Supplier! Now with Many New Products]]></example>
</section>		
<section>
	
	<description>If the welcome message is not NULL, the pgstyle variable styles the welcome message.
</description>

</section>		
<section>
	<title>Page Security Information</title>
	<description>Always Allowed</description>
</section>
</sections>	
	
<see>
	<ref>Web Pages</ref>
</see>	
</page>