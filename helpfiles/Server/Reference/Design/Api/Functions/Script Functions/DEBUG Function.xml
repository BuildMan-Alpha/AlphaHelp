<page>
   <topic>DEBUG Function</topic>
   <syntax>N DEBUG(N switch)</syntax>
   <arguments>
     <argument>
         <name>switch</name>
         <description>Numeric</description>
         <list><item><name>
          -2 = Toggle Debugger
</name></item><item><name>
 -1 = Ask if Debugger is on
</name></item><item><name>
 0 = Turn off Debugger
</name></item><item><name>
 1 = Turn on Debugger 
</name></item>
         
         </list>
     </argument>
   </arguments>
   <description>Forces the application to break in the XBASIC debugger 1 debug next line of xbasic, -1 ask if debugger is on, -2 toggle debugger.</description>
   <discussion>
The DEBUG() function is used to turn on or off the Alpha Anywhere Debugger. The Debugger is used to trace through an Xbasic script, to watch the flow of execution. You can use the Debugger to find run-time errors and logical errors in your scripts. For more information, see "Finding Errors in Scripts".
Use the On/Off Switch parameter to turn the Debugger on or off. To turn on and display the Debugger window, use debug(1). To close the Debugger window, use debug(0).
Limitations: Desktop applications only.
   </discussion>
  
   <sections>
       <section><title>Example</title>
            <description>When running this script, the Debugger will appear after the word "Start" is printed to the Trace window.
</description>
            <example><![CDATA[
function process as C (param as N)
    select
      case param = 0
            process = "Zero"
        case param = 1
            process = "One"
        case param = 2
            process = "Two"
        case else
    
process = "Error"
    end select
end function
dim result as C
trace.writeln("Start")
debug(1)
x = 0
for x = 1 TO 10
    y = mod(x,3)
    result = process(y)
    trace.writeln(result)
next x
trace.writeln("End")

]]></example>
       </section>
   </sections>
   <see>
      <ref>Script Functions</ref>
      <ref>ON ERROR GOTO</ref>
   </see>
 
</page>