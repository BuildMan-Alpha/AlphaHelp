<page>
   <topic>ARRAY.INITIALIZE_FROM_TABLE Function</topic>
   <syntax>V initialize_from_table(C tablename[,C filter[,C order[,L append[,C columns]]]])</syntax>
   <arguments>
     <argument>
         <name>tablename</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>order</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>append</name>
         <description>Logical</description>
     </argument>
     <argument>
         <name>columns</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Initialize property array subfields from a table.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Array Functions and  Methods</ref>
      <ref>TABLE.OPENMAP()</ref>
   </see>
   <original><![CDATA[&ltARRAY>.INITIALIZE_FROM_TABLE()
Syntax
&ltARRAY>.INITIALIZE_FROM_TABLE( Table_Name as C [, Filter as C [, Order as C ]] )
&ltARRAY>.INITIALIZE_FROM_TABLE( Table_Pointer as P [, Filter as C [, Order as C ]] )
&ltARRAY>.INITIALIZE_FROM_TABLE( Map_Table_Pointer as P [, Filter as C [, Order as C ]] )
ArgumentDescription
Table_NameThe fully qualified name of a table.
Table_PointerA pointer to an open table.
Map_Table_PointerA pointer created with the TABLE.OPENMAP() method.
FilterOptional. Default = all records. A character  filter expression that evaluates to a logical value. Selects records from the table.
OrderOptional. Default = record order. A character  order expression that sorts selected records.
ColumnsOptional. A crlf delimited list of fieldnames in the source table to use when populating the array.

Description
The &ltARRAY>.INITIALIZE_FROM_TABLE() method loads field values from a table into a property array. If an optional Filter and Order parameter are specified, only records that satisfy the Filter are loaded. The records are loaded in the order specified by Order.
Example
Assume a table (Names.dbf) contains the following entries:
NameCityAgeHobby
JohnSudbury40Skiing
FrankBoston24Diving
JoanneLincoln28Karate
dim names[5] as P
Names.initialize_from_table("c:\program files\a5\data\name.dbf")

This initializes an array with a Name, City, Age and Hobby property. For example:
? Names[3].city ? "Lincoln"

The full array looks like this:
ElementNameCityAgeHobby
Name[1]JohnSudbury40Skiing
Name[2]FrankBoston24Diving
Name[3]JoanneLincoln28Karate

To sort the array by city:
Name.sort("", "city")

Filter and Order Expressions
The following example shows how to use filter and order expressions.
dim tbl as P
dim arr_count as N
dim indx as P
tbl = table.open("travel time")
query.filter = "office_time&lt>\"\" .and. start_time&lt>\"\" .and. date&lt>{}"
indx = tbl.query_create()
arr_count = indx.records_get()
indx.close()
tbl.close()
dim raw[arr_count] as P
raw.initialize_from_table("travel time", "office_time&lt>\"\" .and. start_time&lt>\"\" .and. date&lt>{}", "date")

See Also
Array Functions and  Methods, TABLE.OPENMAP()]]></original>
</page>