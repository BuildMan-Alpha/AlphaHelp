<page>
   <topic>ARRAY.DUMP_PROPERTIES Function</topic>
   <syntax>C Dump_Properties(C format[,C filter])</syntax>
   <arguments>
     <argument>
         <name>format</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Dump the properties array to a string of newline separated entries.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Array Functions and  Methods</ref>
   </see>
   <original><![CDATA[&ltARRAY>.DUMP_PROPERTIES()
Syntax
String as C = &ltARRAY>.DUMP_PROPERTIES( Format_String as C [, Filter as C ] )
ArgumentDescription
Format_StringDefines which of the array's properties you want to dump, and the format of the output string. The string has the format: " Prop1 [| Prop2...[| PropN ]]" where Prop1 ... PropN are the names of array properties.
Format_String has the format: " Prop1 [| Prop2...[| PropN ]][| *Index ]". The *Index optional argument retrieves the array number of the entry. Note : In version 6 you cannot use the period "." character in the Format_String.
FilterOptional. Default = all elements. A logical ex<x>pression that uses any of the array properties.

Description
The &ltARRAY>.DUMP_PROPERTIES() method creates a CR-LF delimited string of a single dimensional property array's contents. This is the reverse of the <ARRAY>.INITIALIZE_PROPERTIES() method.
Used in conjunction with the &ltARRAY>.INITIALIZE_PROPERTIES() method, this method can be used to copy one array's contents to another.
The Format_String defines which of the array's properties you want to dump, and the format of the output string. For example, the Format_String "Name|Age|Position" will create a CR-LF delimited string with the name, age, and position properties of an array with the "|" character between elements. Each element in the Format_String can be followed by an optional ":*" directive. This causes Alpha Anywhere to dump out that array element with a one character prefix indicating the element's data type.
The optional Filter allows you to specify a filter expression that involves any of the array properties.
Example
Assume an array "A" contains the following elements:
ElementNameAgeBirthDay
A1Fred2012/3/1980
A2Tom4011/3/1960
A3Joanne504/1/1950
? a.dump_properties("Name|Age|BirthDay")
= "Fred|20|12/03/1980
Tom|40|11/03/1960
Joanne|50|04/01/1950"
? a.dump_properties("Name:*|Age:*|BirthDay:*")
= "CFred|N20|D12/03/1980
CTom|N40|D11/03/1960
CJoanne|N50|D04/01/1950"
? a.dump_properties("Name","Age>20")
= "Tom
Joanne"
dim a[5] as p 
a.initialize_properties("name,state",&lt
cian,NY 
eavan,NY 
selwyn,MA 
lachlan,NY 
richard,MA 
%str%) 

? a.dump_properties("name|*index","state='NY'") 
= cian|1 
eavan|2 
lachlan|4 

? a.dump_properties("name|*index","state='MA'") 
= selwyn|3 
richard|5


See Also
Array Functions and  Methods]]></original>
</page>