<page>
   <topic>ARRAY.DUMP_PROPERTIES Function</topic>
   <syntax>String as C = Dump_Properties(C format[,C filter])</syntax>
   <arguments>
     <argument>
         <name>format</name>
         <description>
Defines which of the array's properties you want to dump, and the format of the output string. The string has the format: " Prop1 [| Prop2...[| PropN ]]" where Prop1 ... PropN are the names of array properties.
format has the format: " Prop1 [| Prop2...[| PropN ]][| *Index ]". The *Index optional argument retrieves the array number of the entry. Note : In version 6 you cannot use the period "." character in the format.
</description>
     </argument>
     
     <argument>
         <name>filter</name>
         <description>Optional. Default = all elements. A logical expression that uses any of the array properties.
</description>
     </argument>
     
   </arguments>
   <description>Dump the properties array to a string of newline separated entries.</description>
<discussion>
<![CDATA[
The <ARRAY>.DUMP_PROPERTIES() method creates a CR-LF delimited string of a single dimensional property array's contents. This is the reverse of the <ARRAY>.INITIALIZE_PROPERTIES() method.
Used in conjunction with the <ARRAY>.INITIALIZE_PROPERTIES() method, this method can be used to copy one array's contents to another.
The Format_String defines which of the array's properties you want to dump, and the format of the output string. For example, the Format_String "Name|Age|Position" will create a CR-LF delimited string with the name, age, and position properties of an array with the "|" character between elements. Each element in the Format_String can be followed by an optional ":*" directive. This causes Alpha Anywhere to dump out that array element with a one character prefix indicating the element's data type.
The optional Filter allows you to specify a filter expression that involves any of the array properties.
]]>
</discussion>
   
<sections>
<section>
<description>Assume an array "A" contains the following elements:</description>
<list>
<item>
<name-title>
Element----
 
 </name-title>
<description-title>
Name-------
 
Age--------
 
BirthDay---
 </description-title>
</item>
<item>
<name>A1</name>
<description>
Fred----------
 
20---------
 
12/3/1980
 </description>
</item>

<item>
<name>A2
</name>
<description>
Tom-----------
 
40---------
 
11/3/1960
 </description>
</item>


<item>
<name>A3
</name>
<description>
Joanne-------
 
50---------
 
4/1/1950
 </description>
</item>


</list>
   
   </section>
<section>
<example><![CDATA[
? a.dump_properties("Name|Age|BirthDay")
= "Fred|20|12/03/1980
Tom|40|11/03/1960
Joanne|50|04/01/1950"
? a.dump_properties("Name:*|Age:*|BirthDay:*")
= "CFred|N20|D12/03/1980
CTom|N40|D11/03/1960
CJoanne|N50|D04/01/1950"
? a.dump_properties("Name","Age>20")
= "Tom
Joanne"
dim a[5] as p 
 a.initialize_properties("name,state",<<%str% 
 cian,NY 
 eavan,NY 
 selwyn,MA 
 lachlan,NY 
 richard,MA 
 %str%) 
 ? a.dump_properties("name|*index","state='NY'") 
 = cian|1 
 eavan|2 
 lachlan|4 
 ? a.dump_properties("name|*index","state='MA'") 
 = selwyn|3 
 richard|5
]]></example>   
   
   </section>
</sections>
  <see>
      <ref>Array Functions and  Methods</ref>
   </see>
   
</page>