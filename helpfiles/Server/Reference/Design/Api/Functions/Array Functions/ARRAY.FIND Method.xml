<page>
   <topic>ARRAY.FIND Function</topic>
   <syntax>N find(A key[,C options[,N Starting]])</syntax>
   <arguments>
     <argument>
         <name>key</name>
         <description>Any type</description>
     </argument>
     <argument>
         <name>options</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>Starting</name>
         <description>Numeric</description>
     </argument>
   </arguments>
   <description>Find a value in the array, return the index of the entry, or 0 if not found.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Array Functions and  Methods</ref>
   </see>
   <original><![CDATA[&ltARRAY>.FIND()
Syntax
Index as N = &ltARRAY>.FIND( Key as A [, Options as C  [, Starting as N ] ] )
ArgumentDescription
KeyA value to find in the array.
OptionsAn Xbasic expression that processes the array element before the find operation.
StartingThe index of the first array element to search.

Description
The &ltARRAY>.FIND() method finds an element in a single dimensional array and returns its Index number.
In the case of a character, numeric, or logical array, Options can be used to search on a value derived from the array entry. For example, setting options to " word(value, 1) " searches on the first word of each entry. Setting Options to " lower(value) " makes the search case in-sensitive. ( Note : "Value" is a special keyword that refers to the value in the current array element.)
In the case of a property array, options specifies which array property to search. For example:
dim a[2] as P
a[1].NAME = "sam"
a[1].city = "boston"
a[2].NAME = "celine"
a[2].city = "ithaca"
? a.find("celine","name") ? 2.000000

As of Version 11, a simpler syntax that does a case-insensitive search is supported if the keyword is "index".
dim a[3] as P
a[1].index = "alpha"
a[2].index= "beta"
a[3].index = "Gamma"
? a.find(ut("gamma"),"ut(index)") 'old style
= 3

? a.find("gamma")  'new style
= 3


Examples
dim A[2] as C
A[1] = "fred"
A[2] = "john"
? A.find("john") ? 2

Assume you have the following array and want to search for sub-strings.
dim company[2] as C
company[1] = "Alpha Software Corporation"
company[2] = "International Computer Machines"

The following command searches for the array entry that contains the word "Software".
string = "Software"
? company.find(string,"word(value,word_FROM_pos(value,at(string,value)))") ? 1
string = "software"
? company.find(string,"word(value,word_FROM_pos(value,at(string,value)))") ? 0
'above does not find the string because search is case-sensitive
'to perform a case-insensitive search use atc()
? company.find(string,"word(value,word_FROM_pos(value,atc(string,value)))") ? 1
'The following command search for a substring.
string = "uter"
? company.find(string,"iif(occurs(string,value)>0,string,\"\")") ? 2

See Also
Array Functions and  Methods]]></original>
</page>