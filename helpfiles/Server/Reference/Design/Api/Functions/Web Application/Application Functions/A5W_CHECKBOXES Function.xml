<page>
   <topic>A5W_CHECKBOXES Function</topic>
   <syntax>HTML_Input_Code as C = a5w_CheckBoxes(C choices ,C name [,C selected [,C style [,C orientation [,C events [,C id [,C separator [,L flagUseArraySyntaxForSingleChoice [,C class [,L flagDisabled [,C spanClass ]]]]]]]]]])</syntax>
   <arguments>
     <argument>
         <name>HTML_Input_Code</name>
         <description>Formatted HTML code ready to be inserted into a HTML check box array.</description>
     </argument>
     <argument>
         <name>choices</name>
         <description>A CR-LF delimited list of choices to appear in the HTML check box array. Choices can be in this format:
</description>
         <list>
         <item><name>
          choice1
          </name></item><item><name>
 choice2
 </name></item><item><name>
 choice3
 </name></item><item><name>
or
</name></item><item><name>
 choice1|c1
 </name></item><item><name>
 choice2|c2
 </name></item><item><name>
 choice3|c3
 </name></item><item><name>
Optionally, you can include a list of attributes following a final pipe.
</name></item><item><name>
 choice1|c1|autocomplete="on" attribute2="off"
</name></item><item><name>
 choice2|c2
 </name></item><item><name>
 choice3|c3
 </name></item>
         
         </list>
         
     </argument>
     <argument>
         <name>name</name>
         <description>Optional. The value array that captures multiple selections.</description>
     </argument>
     <argument>
         <name>selected</name>
         <description>Optional. Default = "". The checked (default) value for the HTML check box array.</description>
     </argument>
     <argument>
         <name>style</name>
         <description>Optional. Default = "".</description>
     </argument>
     <argument>
         <name>orientation</name>
         <description>Optional. Default = "" (horizontal).</description>
<list><item><name>
 "Horizontal"
</name></item><item><name>
 "Vertical "
</name></item><item><name>
 "COLUMNS:LRTB:count"
</name></item><item><name>
 "COLUMNS:TBLR:count"
 </name></item><item><name><![CDATA[
 where LRTB indicates that the choices snake from left-to-right, then top-to-bottom in &ltcount> columns and TBLR indicates that the snaking direction is top-to-bottom, then left-to-right in <count> rows  
]]></name></item></list>
     </argument>
     <argument>
         <name>events</name>
         <description>Optional. Default = "".</description>
     </argument>
     <argument>
         <name>id</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>separator</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>flagUseArraySyntaxForSingleChoice</name>
         <description>Logical</description>
     </argument>
     <argument>
         <name>class</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>flagDisabled</name>
         <description>Logical</description>
     </argument>
     <argument>
         <name>spanClass</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Generate code for Checkbox controls.</description>
   <discussion><![CDATA[
The A5W_CHECKBOXES() function generates <INPUT TYPE="check box" CHECKED VALUE="display_value" NAME="value_array[]" display_value code for insertion into an HTML check box array.
Limitations: Web publishing applications only.
  ]]> </discussion>
   <example><![CDATA[
dim str as C
str = <<%a%
a
b
c
d
e
%a%
? a5w_check boxes(str,"fred","d")
= <input type="check box" value="a" name="fred[]" >a
<input type="check box" value="b" name="fred[]" >b
<input type="check box" value="c" name="fred[]" >c
<input type="check box" checked value="d" name="fred[]" >d
<input type="check box" value="e" name="fred[]" >e

]]></example>
   
   <see>
      <ref>Web Application Functions</ref>
   </see>
  



</page>