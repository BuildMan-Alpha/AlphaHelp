<page>
   <topic>STUFF Function</topic>
   <syntax>Output_String as C = STUFF(C character,N start_position,N number_of_characters,C insert_string)</syntax>
   <arguments>
     <argument>
         <name>character</name>
         <description>The character string to be modified.</description>
     </argument>
     <argument>
         <name>start_position</name>
         <description>The position within a character string to begin the replacement of characters. Numeric</description>
     </argument>
     <argument>
         <name>number_of_characters</name>
         <description>The number of characters to replace in a character string. If the Number_Of_Characters parameter is 0, Alpha Anywhere inserts the Insert_String at the given start_position. Numeric</description>
     </argument>
     <argument>
         <name>insert_string</name>
         <description>The character string to insert into a character string. If Insert_String is empty, the specified Number_Of_Characters is deleted at the start_position.
</description>
     </argument>
   </arguments>
   <description>Alters a string by deleting characters and replacing them with another string.</description>
   <discussion>
Replaces the specified Number_Of_Characters in a character string, beginning at the specified start_position, with the Insert_String.
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>STUFF() enables you to insert a string within another string, without the extra steps involved in dividing the target string into two pieces (using the SUBSTR() command), and then reconstructing it by concatenating the two original pieces with the new string.
</description>
            <example><![CDATA[
stuff("Let them eat duck", 14, 4, "cake") -> "Let them eat cake"
]]></example>
       </section>
   
   <section>
   <description>Here is how the expression works:</description>
   <list>
	   <item>
		   <name>1</name>
		   <description>The initial string: " Let them eat duck"
</description>
	   </item>
	   <item>
		   <name>2</name>
		   <description>The 14th character in the string: "d"
</description>
	   </item>
	   <item>
		   <name>3</name>
		   <description>The string with four characters removed: "Let them eat "
</description>
	   </item>
	   <item>
		   <name>4</name>
		   <description>The final string: "Let them eat cake" </description>
	   </item>
   </list>
   </section>
   
   <section>
   
   <description>Here is a more practical example. Assume your table contains a field called FULLNAME, which contains names in the format "Ken Smith." You want to print a report showing each person's first initial and last name (e.g., "K. Smith."). You can define and place a calculated field that uses the following expression:
</description>
   <example>stuff(FULLNAME, 2, (at(" ", FULLNAME) - 2), ".")</example>
   
   </section>
   
    <section>
   
   <description>Another expression that achieves the same result is:</description>
   <example>substr(FULLNAME, 1, 1) + ". " + " " + word(FULLNAME, 2)</example>
   
   </section>
   </sections>
   
   <see>
      <ref>Character Replacement Functions</ref>
      <ref>Character Formatting Functions</ref>
   </see>
</page>