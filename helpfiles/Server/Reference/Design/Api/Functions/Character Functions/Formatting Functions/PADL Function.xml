<page>
   <topic>PADL Function</topic>
   <syntax>Formatted_String as C = PADL(C,N length,C pad_string)</syntax>
   <arguments>
     <argument>
         <name>C</name>
         <description>A character string.</description>
     </argument>
     <argument>
         <name>length</name>
         <description>A positive integer representing the length of the Formatted_String. If Length is less than len(Unformatted_String), then Unformatted_String will be truncated to Length. Numeric</description>
     </argument>
     <argument>
         <name>pad_string</name>
         <description>The character string to append to the beginning of Unformatted_String to position it within Formatted_String.
</description>
     </argument>
   </arguments>
   <description>Pads the left side of a string with another string.</description>
   <discussion>
PADL() pads a C_string on the left with a Pad_String, and returns a string of the specified Length. If the length of Pad_String + C_string is less than Length, the Pad_String is repeated to fill the remainder of the string.
Note : PADL() or PADR()  replicates the string specified as  Pad_String to create a string of the specified length.
   </discussion>
 
   <sections>
       <section><title>Example</title>
            <description>The following expressions replicate a message to create a line for an invoice or receipt:
</description>
            <example><![CDATA[
? padl(" ", 77, "Thank You ! ")
= "Thank You ! Thank You ! Thank You !  Thank You ! Thank You ! Thank You ! "
? padl("$" + ltrim( str(200) ), 10, "*")
= ******$200
? padl(str(3,1),8,"0")
= "00000003"

 Note : PADL() is often the best function for zero filling a field.
 dim myfield as C = " 100"
? myfield
= " 100"
? padl(alltrim(myfield), len(myfield), "0")
= "000000100"
]]></example>
       </section>
   </sections>
   <see>
      <ref>Character Formatting Functions</ref>
   </see>
</page>