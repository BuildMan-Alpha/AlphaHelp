<page>
	<group>JSON Functions</group>
	<topic>
json_sample_array()
	</topic>
	<syntax>
json_sample_array(c jsontext[, format [,n limit]])
	</syntax>
	
<description>
Enumerate top level properties in array entries and return name+count. 
</description>
<discussion>
Uses format spec parameters	
</discussion>
<sections>
  <section>
	<list>
	<item><name>$n</name><description>name</description></item>
	<item><name>$i</name><description>case insensitive name,</description></item>
	<item><name>$t</name><description>type (C-charcter/N-number/L-logical/Z-null/?-unknown)</description></item>
	<item><name>$c</name><description>count - occurences of field,</description></item>
	<item><name>$m</name><description>records sampled,</description></item>
	<item><name>$s</name><description>field is sparse (true or false).</description></item>
	<item><name>$r</name><description>Recurse into child objects.</description></item>
	</list>	
	<example>
	<![CDATA[
dim json as c 
json = <<%json%
[
	{"Firstname" : "Fred", "Lastname" : "Smith"},
	{"Firstname" : "Harry", "Lastname" : "Jones","age" : 30},
]
%json%
? json_sample_array(json)
= Firstname
Lastname
age

? json_sample_array(json,"$n - $t")
= Firstname - C
Lastname - C
age - N
]]>
	</example>
 </section>
 <section>
    <discussion> Example showing recursion into name.</discussion>
	<example>
	<![CDATA[
dim json as c 
json = <<%json%
[
	{"Firstname" : "Fred", "Lastname" : "Smith" , "address" : { "city" : "Boston" , "state" : "ma" } },
	{"Firstname" : "Harry", "Lastname" : "Jones","age" : 30},
]
%json%
? json_sample_array(json,"$r")
= Firstname
Lastname
address.city
address.state
age
]]>
	</example>
  </section>
</sections>  




	<see>
		<ref>json_reformat_safe()</ref>
		<ref>a5_sql_schema_to_json()</ref>
		<ref>JSON Data</ref>
	</see>
</page>