<page>
   <topic>BLOB.POKEC Function</topic>
   <syntax>N pokec(N position,C String)</syntax>
   <arguments>
     <argument>
         <name>position</name>
         <description>Numeric</description>
     </argument>
     <argument>
         <name>String</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Set the value of a substring to the blob.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Blob Functions and  Methods</ref>
   </see>
   <original><![CDATA[ .POKEC()
Syntax
.POKEC( Position as N,  Input_String as C )
ArgumentDescription
PositionThe position to write the data.
Input_StringThe character string to be written.

Description
The .POKEC() method sets characters in a blob starting at  specified Position to the Input_String.  The  first position is 1. The .POKEC() method does not change the  size of the blob. Use the <BLOB>.RESIZE()  method to change the size of a blob.
Examples
This example overwrites the first 3 character positions in the blob.
dim b2 as B
b2 = "fred"
? b2
= fred
b2.pokec(1,"tom")
? b2
= tomd

Here is an example of code that dumps out all the bytes in a blob to  the Trace window:
dim shared blob as b
' Write all the bytes to the trace window
for i = 1 to blob.size()
   trace.writeln(blob.peek(i))
next i

See Also
Blob Functions and  Methods]]></original>
</page>