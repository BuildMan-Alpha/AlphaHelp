<page>
   <topic>RUN_COUNT Function</topic>
   <syntax>Running_Count_Value as A = run_count(A subexpr[,G over[,G each])</syntax>
   <arguments>
     <argument>
         <name>subexpr</name>
         <description>Any valid expression that includes a field or a combination of fields from the current table or set that specifies what you want to examine.
</description>
     </argument>
     <argument>
         <name>over</name>
         <description>Optional. When to use the function (instead of on every record).</description>
     </argument>
     <argument>
         <name>each</name>
         <description>Optional. When to reset the value produced by the function to 0 (instead at the end of all records).
</description>
     </argument>
   </arguments>
   <description>Get the running count of subexpression over group 'over' sampled each group 'each'</description>
   <discussion>
The Group and Sub_Group are optional parameters that define the range of records to summarize, and may or may not be required, depending upon the context of the summary calculation. Possible values for GRP  �  >Group and GRP  �  >Sub_Group include:

 
   </discussion>
   <sections>
   <section><list>
   <item>
   <description>GRAND (all records)</description>
	<item>
	</item>
 <description>The name of the current table</description>
</item><item>
 <description>The name of a table in the current set</description>
</item><item>
 <description>The name of a grouping level that is defined in a report layout</description>
</item><item>
 <description>DETAIL (over the records in the detail section) </description>
 </item>
   </list>
   </section>
   </sections>
   
   <sections>
   <section>
   <description>RUN_COUNT() is used in the Detail section of a report to return the running count of records of the Expression evaluated from the first record to the current record related to the group. The expression is evaluated from the sub-group's first record to the current record, and the resulting count is returned.
For example, to summarize the line-items in an invoice set, the Group parameter might be GRP  �  >INV_HEAD and the Sub_Group parameter GRP  �  >INV_ITEM. This means the Summary operation includes only those child records in INV_ITEM related to the current parent record in the INV_HEAD table. To summarize all the records in a table or set, use the name GRAND as the Group name. The Group GRP  �  >GRAND and Sub_Group GRP  �  >INV_ITEM will produce a summary result based on all invoices.
Limitations: This function is a report writer function, not intended for table level field rules or other expressions. While the function may perform in some areas outside of the report writer, its use there is not supported.
</description>
   
   </section>
   </sections>
   
   

   <sections>
       <section>
       <title>Examples</title>
            <description>Assume that an invoicing set consists of two tables. One holds the invoices (INVOICE), and the other holds each invoice's line-items (INV_ITEM):
</description>

            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Report Functions and Methods</ref>
   </see>

 INVOICE
 INV_NO CUST_ID INV_TOTAL
 I100 C001 10.00
 I101 C003 25.50
 I102 C001 100.75
 I103 C004 32.50
 I104 C002 110.25
 I105 C005 98.35
 INV_ITEM
 INV_NO AMOUNT
 I100 4.50
 I100 5.50
 I101 25.50
 I102 3.25
 I102 35.25
 I102 62.25
 I103 32.50
 I104 110.25
 I105 98.35

 INVOICE is related to INV_ITEM through a one-to-many link on the INV_NO field. To find the running count of line-item records, use the following expressions:
 run_count(INV_ITEM->AMOUNT) -> 9, if the current INV_NO is "I105"
run_count(INV_ITEM->AMOUNT) -> 8, if the current INV_NO is "I104"

 See Also
 Report Functions and Methods]]></original>
</page>