<page>
   <topic>COLLECTION.GET Function</topic>
   <prototypes><prototype>A Get(A key)</prototype>
   <prototype><![CDATA[Data as A = <COLLECTION>.GET( Key as A ) [. Child_Name as C ]]]></prototype>
   <prototype><![CDATA[Data as A = <COLLECTION>.GET( Key as D )]]></prototype>
   <prototype><![CDATA[Data as A = <COLLECTION>.GET( Key as N )]]></prototype>
   </prototypes>
   <arguments>
     <argument>
         <name>key</name>
         <description>Any type</description>
     </argument>
   </arguments>
   <description>Get element from collection.</description>
   <discussion><![CDATA[
The <COLLECTION>.GET() method returns the Data associated with a specified Key.
Note : Trailing spaces in key are considered.
 ]]>  </discussion>
   <example><![CDATA[
dim mycollection as u
mycollection.set("FJ", "Fred Jones")
mycollection.set("BB", "Bryan Boyd")
mycollection.set("KL", "Kim Lee")
mycollection.set("KB", "Karen Boyd")
mycollection.set("EL", "Erica Loyd")
? mycollection.get("BB")
= "Bryan Boyd"
' The key is not case sensitive
? mycollection.GET("bb")
= "Bryan Boyd"
? mycollection.get("b")
= <No data returned>
x = mycollection.get("somekeythatdoesnotexist")
?typeof(x)
="Z"
]]></example>
   <sections>
       <section>
            <description>The "value" that you assign to a collection entry does not have to be a scalar. It can be a dot variable with multiple children, as shown in the following example.</description>
            <example><![CDATA[
dim a as P
dim b as P
dim u as U
a.name = "Fred"
a.city = "Boston"
a.company = "Alpha"
b.name = "Ed"
b.city = "Nashua"
b.company = "Beta
u.set("Fred", a)
u.set("Ed", b)
? u.get("Ed").company
= "Beta"
? u.get("Fred").city
= "Boston"
]]></example>
       </section>
   </sections>
   <see>
      <ref>Collection Methods</ref>
   </see>
   
</page>