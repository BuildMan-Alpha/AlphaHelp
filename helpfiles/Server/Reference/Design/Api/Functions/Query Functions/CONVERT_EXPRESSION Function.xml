<page>
   <topic>CONVERT_EXPRESSION Function</topic>
   <syntax>Output_String as C = CONVERT_EXPRESSION(C expression,C convert_expression_flags[,C tablename[,P variable_frame]])</syntax>
   <arguments>
     <argument>
         <name>expression</name>
         <description>An expression.</description>
     </argument>
     <argument>
         <name>convert_expression_flags</name>
         <description>"V" = Expand vars. Substitute values for variable names.

 "C" = Expand calcs. Substitute values for calculated value names

 "L" = Force long names. Expand object names to their full addresses.

 "S" = Force short names. Remove object name address information. </description>
     </argument>
     <argument>
         <name>tablename</name>
         <description>Optional. Default = the current table. The table context of the variables or objects. The name of a table.
</description>
     </argument>
     <argument>
         <name>variable_frame</name>
         <description>An expression that defines the scope of the variables. See Variable Data Types.
</description>
     </argument>
   </arguments>
   <description>Converts elements of an expression based on flags 'V'-expand vars 'C'-expand calcs, 'L' force longnames , 'S' force shortnames.</description>
   <discussion>
CONVERT_EXPRESSION() returns a character string by converting elements of an expression based on flags.

   </discussion>
 
   <sections>
       <section><title>Example</title>
            <description>The following example substitutes the value of the variable var->name for the expression "var->name".
</description>
            <example><![CDATA[
dim shared name as C
name = "ed"
filter = "myname = var->name"
convert_expression(filter, "V") -> myname = "ed"
]]></example>
       </section>
   </sections>
   <see>
      <ref>Query Functions and Methods</ref>
   </see>
  
 <terms>query,conversion,defaults,expand,expressions,function,object,string,variable</terms>
</page>