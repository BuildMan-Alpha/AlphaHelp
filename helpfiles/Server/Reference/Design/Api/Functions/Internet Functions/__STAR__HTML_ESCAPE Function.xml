<page>
    <topic>*HTML_ESCAPE Function</topic>
    <syntax>Encoded_Text as C = *HTML_ESCAPE(C text[,C flags])</syntax>
    <arguments>
        <argument>
            <name>Encoded_Text</name>
            <description>Text encoded for HTML use.</description>
        </argument>
        <argument>
            <name>text</name>
            <description>Text as Displayed on a monitor.</description>
        </argument>
        <argument>
            <name>flags</name>
            <description>Optional. Default = "". HTML encoding rules. Character</description>
            <list>
                <item>
                    <name><![CDATA["" = Escape all characters with values above 127 and some of the other low punctuation characters (i.e. like dash & back-quote).]]></name>
                </item>
                <item>
                    <name><![CDATA["B" = encode space characters as non-breaking spaces ()]]></name>
                </item>
                <item>
                    <name><![CDATA["S" = short list of characters to encode. Only escape & , ' , " ,
                        < ,>characters.]]></name>
                </item>
                <item>
                    <name><![CDATA["SC" = encode with hexadecimal values (used on command lines)]]></name>
                </item>
                <item>
                    <name><![CDATA["Q" = an alternative to the "S" option to omit encoding the single quote character.]]></name>
                </item>
                <item>
                    <name><![CDATA["E" = Do not encode encoded unicode characters (e.g. &#x0* pattern). If you use the 'E' flag, the '&' in the text that matches the encoded unicode character pattern is not encoded.]]></name>
                </item>
            </list>
        </argument>
    </arguments>
    <description>
        <![CDATA[Escape HTML characters, flags - 'B'lanks translated, 'S'hort list (&,",',<,>), 'Q'uotes excluded short (&,",<,>), 'D'ouble quotes only("), 'L' - label format.]]>
    </description>
    <discussion><![CDATA[The *HTML_ESCAPE() function encodes text for HTML use.]]></discussion>
    <sections>
        <section>
            <title>Examples</title>
            <description>This conversion uses no flags.</description>
            <example>
                <![CDATA[ 
? *html_escape("This is <...> text")
= "This is < > text"
]]>
            </example>
        </section>
        </sections>
        
        
        
          <sections>
        <section>
            <description> <![CDATA[This conversion encodes space characters as non-breaking spaces.]]></description>
            <example>
<![CDATA[ ? *html_escape("This is <...> text","b")
= "This is < > text"
]]>
            </example>
        </section>
        <section>
        <description> <![CDATA[This conversion defines a short list of characters to encode]]></description>
        <example>
<![CDATA[ ? *html_escape("This is <...> text","s")
= "This is <...> text"
]]>
        </example>
        </section>
        <section>
     
        <description> <![CDATA[SC - encode with hexadecimal values]]></description>
        <example>
<![CDATA[ ? *html_escape("This is <...> text","sc")
= "This#20is#20<#FA>#20text"
]]>
        </example>
        </section>
    </sections>
      
    <see>
        <ref> <![CDATA[Internet Functions]]></ref>
        <ref><![CDATA[*html_unescape Function]]></ref>
    </see>
    
    <terms>internet,conversion,defaults,function,html,text</terms>
    
    
</page>