<page>
   <topic>COMPILE_TEMPLATE Function</topic>
   <syntax>P COMPILE_TEMPLATE(C template[,C Macro1[,...C MacroN]])</syntax>
   <arguments>
     <argument>
         <name>template</name>
         <description>A string variable containing the code for one or more functions.</description>
     </argument>
     <argument>
         <name>Macro1</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>MacroN</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Create a compiled xbasic code object.</description>
   <discussion>
The COMPILE_TEMPLATE() function allows you to define a series of functions that are stored in a string. You would use this function when you want to use a function in more than one script, but do not want to redefine it as part of each script. This technique is a very powerful alternative to creating global functions.

   </discussion>
  
   <sections>
       <section>
       <title>Example</title>
            <description>Step 1: Define a string that contains one or more functions.</description>
            <example><![CDATA[
dim ptr as P
dim script as C
script = 
function foo as C (msg as C)
    ui_msg_box("Favorite Database", msg)
end function
%code%
]]></example>
       </section>
       
       <section>
            <description>Step 2: Compile the code the string and return an object pointer to the compiled code.</description>
            <example><![CDATA[
ptr = compile_template(script)
]]></example>
       </section>
       
       <section>
            <description>Step 3: This is how you call a function from the compiled code. Note that the function name is prefixed with the object pointer.</description>
            <example><![CDATA[
ptr.foo("Alpha Five")
]]></example>
       </section>
       
   </sections>
   <see>
      <ref>User Defined Functions</ref>
      <ref>COMPILE_LIBRARY()</ref>
      <ref>Developer Functions</ref>
   </see>
   <terms>developer,contains,function,object,pointer,string,template,templates,user defined functions,users,variable,xbasic</terms>
</page>