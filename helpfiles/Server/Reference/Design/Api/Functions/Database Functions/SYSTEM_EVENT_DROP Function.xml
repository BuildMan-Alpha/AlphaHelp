<page>
   <topic>SYSTEM_EVENT_DROP Function</topic>
   <syntax>V SYSTEM_EVENT_DROP(C system_event,C name)</syntax>
   <arguments>
     <argument>
         <name>system_event</name>
         <description>"database_exit". Character</description>
     </argument>
     <argument>
         <name>name</name>
         <description>The name of an event registered by CAN_DATABASE_EXIT()or ON_DATABASE_EXIT(). Character</description>
     </argument>
   </arguments>
   <description>Drop a defined system event.</description>
   <discussion>
The SYSTEM_EVENT_DROP() function removes an event registered by CAN_DATABASE_EXIT()or ON_DATABASE_EXIT().

   </discussion>
  
   <sections>
       <section>
            <description>The following script registers events.</description>
            <example><![CDATA[
code = 
ui_msg_box("Notice", "The database is about to close - First warning")
%code%
on_database_exit(code)
Code2 = 
Ui_msg_box("Notice", "The database is now closing - Second warning")
%code%
on_database_exit(code2)
]]></example>
       </section>
       
       <section>
            <description>This code returns the registered events.</description>
            <example><![CDATA[
dim ptr as P
ptr = system_event_data_get()
? ptr.database_exit
= +1.
+2.
? ptr.database_exit.1
= code = ui_msg_box("Notice", "The database is about to close - First warning")
level = "Application"
? ptr.database_exit.2
= code = ui_msg_box("Notice", "The database is now closing - Second warning")
level = "Application"
]]></example>
       </section>
       
       <section>
            <description>This code drops the second database_exit event.</description>
            <example><![CDATA[
system_event_drop("database_exit", "2")
]]></example>
       </section>
       
   </sections>
   <see>
      <ref>Database Functions</ref>
      <ref>SYSTEM_EVENT_DATA_GET()</ref>
      <ref>CAN_DATABASE_EXIT()</ref>
      <ref>ON_DATABASE_EXIT()</ref>
   </see>
</page>