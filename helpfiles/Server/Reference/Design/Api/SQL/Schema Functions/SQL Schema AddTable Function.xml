<page>
   <topic>SQL::Schema AddTable Function Function</topic>
   <syntax>L AddTable(Table as SQL::TableInfo)</syntax>
   <arguments>
     <argument>
         <name>Table</name>
         <description>SQL::TableInfo</description>
     </argument>
   </arguments>
   <description>Add a Table.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Schema Object</ref>
      <ref>Limitations</ref>
   </see>
   <original> SQL::Schema::AddTable()
Syntax
.AddTable(  as SQL::TableInfo  )
ArgumentDescription
A SQL::Schema created  with a DIM statement.
A SQL::TableInfo object that defines the new table to  create.

Description
The AddTable() method adds a table to a database.
Example
This example shows how to copy a table.
dim conn as SQL::Connection
dim ti as SQL::TableInfo
dim sch as SQL::Schema
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
   ui_msg_box("Error",  conn.CallResult.text)
   end
end if
if .not. conn.GetTableInfo(ti, "customer")
   ui_msg_box("Error",  conn.CallResult.text)
   conn.close()
   end
end if
ti.name = "CustomerCopy"
sch.AddTable(ti)
ui_msg_box("Tables", conn.ListTables())
conn.close()

See Also
SQL::Schema Object
Limitations</original>
</page>