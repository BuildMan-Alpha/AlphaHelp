<page>
   <topic><![CDATA[SQL::Arguments Add Function Function]]></topic>
   <syntax><![CDATA[Result_Flag as L =  <SQL::Arguments>.Add(Name as C [,Value as A [, Usage as SQL::ArgumentUsage [,IsNull as L = .f.]]])]]></syntax>
   <arguments>
   
   <argument>
         <name>Result_Flag</name>
         <description><![CDATA[TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).]]></description>
   </argument>
   
   <argument>
         <name><![CDATA[<SQL::Arguments>]]></name>
         <description><![CDATA[A SQL::Arguments object.]]></description>
  </argument>
  
   <argument>
         <name>Name</name>
         <description><![CDATA[The unique name of an argument. See the SQL::Argument object.]]></description>
     </argument>
     
     <argument>
         <name>Value</name>
         <description>Optional. Data of any of the following types:</description>
<list>
<item>
<name>"Blob"</name>
</item>

<item>
<name>"Character"</name>
</item>

<item>
<name>"Date"</name>
</item>

<item>
<name>"Logical"</name>
</item>

<item>
<name>"Numeric"</name>
</item>

<item>
<name>"Short Time"</name>
</item>

<item>
<name>"Time"</name>
</item>

</list>
</argument>
     
     <argument>
         <name> Usage</name>
         <description><![CDATA[Optional. A SQL::ArgumentUsage object.]]></description>
     </argument>
     
     <argument>
         <name>IsNull</name>
         <description><![CDATA[Optional, default FALSE (.F.). If TRUE (.T.), set this argument to a NULL value. (Requires V10.5 or later)]]></description>
     </argument>
     
     <argument>
     <name><![CDATA[<Argument>]]></name>
     <description><![CDATA[A SQL::Argument object with (at a minimum) a defined name or data property.]]></description>
     </argument>
     
     
     
   </arguments>
   <description><![CDATA[Add an argument to the collection or L Add(SQL::Argument Argument)]]></description>
   
   <discussion><![CDATA[
The Add() method adds a new argument to a SQL::Arguments object.]]>
   </discussion>
  
   <example><![CDATA[
dim args as SQL::Arguments
? args.add("city", "Boston")
= .T.
? args.add("state", "MA")
= .T.
? args.ArgumentNumber("state")
= 2
]]></example>

   <sections>
       <section>
            <description>This script prompts for a value, then returns a filtered list of records.</description>
            <example><![CDATA[
dim conn as SQL::Connection
dim sql as C
dim vCity as C
dim args as SQL::Arguments
vCity = ui_get_text("City", "Show Companies in what city?")
sql = "select lastname, firstname from customer where bill_city = :city Order By Company"
if .not. conn.open("{A5API=Access,FileName='C:\Program Files\a5v8\MDBFiles\Alphasports.mdb', UserName='Admin'}")
ui_msg_box("Error", conn.CallResult.text)
end
end if
if .not. args.Add("city", vCity)
end
end if
if .not. conn.execute(sql, args)
ui_msg_box("Error", conn.CallResult.text)
end
end if
sql_resultset_preview(conn.resultset)
]]></example>
       </section>
   </sections>
   
   
   
   
   
   <see>
      <ref><![CDATA[SQL::Arguments Object]]></ref>
   </see>
 
</page>