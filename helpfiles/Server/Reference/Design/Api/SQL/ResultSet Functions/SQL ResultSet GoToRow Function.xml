<page>
   <topic>SQL::ResultSet GoToRow Function Function</topic>
   <syntax>L GoToRow(RowIndex as N)</syntax>
   <arguments>
     <argument>
         <name>RowIndex</name>
         <description>Numeric</description>
     </argument>
   </arguments>
   <description>Position to the row requested (Note:  Backward movement is not supported by all databases).</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::ResultSet Object</ref>
      <ref>Limitations</ref>
   </see>
   <original> SQL::ResultSet::GoToRow()
Syntax
Result_Flag as L = .GoToRow(  Row_Index as N )
ArgumentDescription
Result_FlagTRUE (.T.) if the operation was successful; otherwise  FALSE (.F.).
A SQL::ResultSet object created with a DIM statement.
Row_IndexThe number of the row.

Description
The GoToRow() method positions to the row in a SQL::ResultSet.
Note : Some databases  do not support backward positioning.
Example
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim connString as C
dim select_exp as C
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select Lastname from customer where bill_state_region  = 'ma'"
if .not. conn.open(connString)
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
if .not. conn.execute(select_exp)
    ui_msg_box("Error",  conn.CallResult.text)
    conn.close()
    end
end if
rs = conn.ResultSet
if .not. rs.GoToRow(2) then
    ui_msg_box("Error",  rs.callresult.text)
end if
conn.close()

See Also
SQL::ResultSet Object
Limitations</original>
</page>