<page>
   <topic>SQL::ResultSet FormatData Function Function</topic>
   <syntax>C FormatData(ColumnIndex as N | ColumnName as C | Definition as SQL::DataTypeInfo [, FormatName as C [, UserContext as P [,FirstRowOnPage as N]]])</syntax>
   <arguments>
     <argument>
         <name>ColumnIndex</name>
         <description>N | ColumnName</description>
     </argument>
     <argument>
         <name> FormatName</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> UserContext</name>
         <description>Pointer</description>
     </argument>
     <argument>
         <name>FirstRowOnPage</name>
         <description>Numeric</description>
     </argument>
   </arguments>
   <description>Format the data for the column name, index or definition specified.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::ResultSet Object</ref>
      <ref>Limitations</ref>
   </see>
   <original><![CDATA[ SQL::ResultSet::FormatData()
Syntax
Formatted_Data as C = &ltSQL::ResultSet>.FormatData(  ColumnIndex as N | ColumnName as C  | &ltDefinition> as SQL::DataTypeInfo  [, DisplayFormat as C [, UserContext as P [, FirstRowOnPage as N  ]]] )
ArgumentDescription
Formatted_DataA string representation of a data value in a result  set row.
&ltSQL::ResultSet>A SQL::ResultSet object created with a DIM statement.
ColumnIndexThe number of the column in the selected table.
ColumnNameThe name of the field in the selected table.
&ltDefinition>Optional. A SQL::DataTypeInfo object created with a DIM statement.
DisplayFormatOptional.
UserContextOptional. The user context is passed into the evaluation  of the expression when data is formatted.
FirstRowOnPageOptional.

Description
The SQL::ResultSet.FormatData() method returns a string representation  of a data value in a result set row depending on the contents of the two  properties (see below).
The FormatData() method works as follows.

If the caller requests  a format, FormatData()looks to see if the format is defined. If so,  it evaluates the right-hand-side expression and returns the result.

If the caller does  not request a format, and a default (unnamed format) exists, FormatData()evaluates  the default expression and returns the result.

If the type of the  data is numeric and a DisplayFormat is defined, FormatData()uses that  format when calling the str() function.

If no condition above  is satisfied, FormatData()converts the value to the default string format  and returns the result. 
PropertyDescription
.NamedFormatExpressionsThis property is a CR-LF delimited list of Xbasic expressions.  One of those expressions can be unnamed, subsequent expressions should  be prefixed with ?&ltname>=?. The Xbasic expression part of each line  is executed in the context of a generated function that has three arguments:
ArgumentDescription
.CurrentRowSQL::Row
.ColumnDefinitionSQL::DataTypeInfo
.ContextThis value is provided by the caller and typically will  be a dot variable with additional contextual information required by the  expression.
.DisplayFormatUsed to specify a numeric format (where appropriate)  using the values you would pass to the Xbasic str() function.
.ExternalFileNameExpressionIf this string is defined when FormatData()is called:

FormatData()evaluates  this expression to get the name of the file to create.

FormatData()stores  the data in the file named by the expression. If the data is binary, the  function stores it in binary form. The function stores all other values  in string form. 

See Also
SQL::ResultSet Object
Limitations]]></original>
</page>