<page>
   <topic>SQL::ResultSet NextRow Function Function</topic>
   <syntax>L NextRow()</syntax>
   <description>Position to the next row in the ResultSet.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::ResultSet Object</ref>
      <ref>SQL::ResultSet.Data()</ref>
      <ref>Limitations</ref>
   </see>
   <original> SQL::ResultSet::NextRow()
Syntax
Result_Flag as L = .NextRow()
ArgumentDescription
Result_FlagTRUE (.T.) if the operation was successful; otherwise  FALSE (.F.).
A SQL::ResultSet object created with a DIM statement.

Description
The NextRow() method fetches the next row in the SQL::ResultSet.
Examples
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim connString as C
dim select_exp as C
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select * from customer"
if .not. conn.open(connString)
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
if .not. conn.execute(select_exp)
    ui_msg_box("Error",  conn.CallResult.text)
    conn.close()
    end
end if
rs = conn.ResultSet
rs.NextRow()
ui_msg_box("Some data", rs.data(2) + " "  + rs.data(3))
conn.close()

The following script fetches through a ResultSet and places the contents  of the FieldName field into the FieldValue variable.
while (rs.NextRow())
    FieldValue = rs.Data(FieldName)
    ... do something
end while

The following script builds a list of lastname field values.
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim connString as C
dim select_exp as C
dim names as C
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select * from customer"
if .not. conn.open(connString)
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
if .not. conn.execute(select_exp)
    ui_msg_box("Error",  conn.CallResult.text)
    conn.close()
    end
end if
rs = conn.ResultSet
while rs.NextRow()
    names  = names + rs.data(3) + crlf()
end while
ui_msg_box("Some data", names)
conn.close()

See Also
SQL::ResultSet Object, SQL::ResultSet.Data()
Limitations</original>
</page>