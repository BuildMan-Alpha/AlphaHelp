<page>
   <topic>SQL::Connection GenerateCreateDatabaseStatement Function Function</topic>
   <syntax>GenerateCreateDatabaseStatement as C (Database as C)</syntax>
   <arguments>
     <argument>
         <name>Database</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Generate a SQL Create Database statement for the table passed in.
 Note: Not all databases vendors support creating a database through SQL.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::GenerateCreateDatabaseStatement()
Syntax
SQL_Statement as C = SQL::Connection::GenerateCreateDatabaseStatement(  Name as C )
ArgumentDescription
SQL_StatementAn add user group statement appropriate for the database.
NameThe name of the database to create.

Description
The .GenerateCreateDatabaseStatement() method returns the  SQL statement that create a database.
Limitations
Example
dim conn as SQL::Connection
conn.open("{A5API=Access,FileName='C:\Program Files\A5V8\MDBFiles\Alphasports.mdb',UserName='Admin'}")
? conn.GenerateCreateDatabaseStatement("Albany")
= ""

See Also
SQL::Connection Object</original>
</page>