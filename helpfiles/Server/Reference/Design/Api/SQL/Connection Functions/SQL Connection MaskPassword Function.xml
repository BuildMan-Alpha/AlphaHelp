<page>
   <topic>SQL::Connection MaskPassword Function Function</topic>
   <syntax>C MaskPassword(Password as C)</syntax>
   <arguments>
     <argument>
         <name>Password</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Changes the characters in a password string so they will not display well.
Please Note! 
This is not a form of encryption!!!
The purpose of masking a password is to prevent it from displaying in a readable form.
If you choose to embed a password in a script, it is only as secure as your script.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::MaskPassword()
Syntax
String as C = .MaskPassword(  [ Password as C ] )
ArgumentDescription
StringUnreadable string.
A SQL::Connection object.
PasswordA password that needs to be hidden.

Description
The MaskPassword() method produces an unreadable version of a password.  AlphaDAO drivers can unmask the password if they need it to connect to  a database.
Note : This is not  a form of encryption. This method simply makes the password unreadable.
Limitations
Example
dim conn as SQL::Connection
dim connString as C
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
ui_msg_box("Masked Password", conn.MaskPassword("MyPassword"))
conn.close()

See Also
SQL::Connection Object</original>
</page>