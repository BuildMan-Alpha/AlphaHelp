<page>
   <topic>SQL::Connection ToOpenTable Function Function</topic>
   <syntax>L ToOpenTable(SQLStatement as C, [Arguments as SQL::Arguments,] LocalTable as P [, Append = .t. as L [, EventScript =  as C [, MapByPosition = .f. as L ]]]])</syntax>
   <arguments>
     <argument>
         <name>SQLStatement</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> Arguments</name>
         <description>SQL::Arguments</description>
     </argument>
     <argument>
         <name> LocalTable</name>
         <description>Pointer</description>
     </argument>
     <argument>
         <name> Append = .t.</name>
         <description>Logical</description>
     </argument>
     <argument>
         <name> EventScript = </name>
         <description>Character</description>
     </argument>
     <argument>
         <name> MapByPosition = .f.</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Fetch data to an open .DBF table using a SQL query
Note:
The column types returned for each column by the query must match the respective column in the local table.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original><![CDATA[ SQL::Connection::ToOpenTable()
Syntax
Result_Flag as L = .ToOpenTable(  Query as C [,  as SQL::Arguments  ], Table as P [, Append as L  [, EventScript as C [, MapByPosition as L ]]] )
ArgumentDescription
Result_FlagTRUE (.T.) if the operation was successful; otherwise  FALSE (.F.).
A SQL::Connection object.
QueryThe SQL query that selects the data to retrieve.
Optional. A SQL::Arguments object.  One or more arguments to be resolved when the SELECT statement is executed.
TableA pointer to an open Alpha Anywhere table.

Description
The ToOpenTable() method fetches results from a SQL database to an existing  and open .DBF table. Columns in the query must match the type of the columns  in the table. The query must not have more columns than the table.
Limitations
Examples
Because the args argument precedes the tbl argument, this example dims and passes it.
dim conn as SQL::Connection
dim args as SQL::Arguments
dim connString as C
dim query as C
dim tbl as P
query = "select firstname, lastname from customer where  lastname > 'm'"
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString) then
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
tbl = table.open("customer")
if .not. conn.ToOpenTable(query, args, tbl, .t.) then
    ui_msg_box("Error",  conn.CallResult.text)
end if
conn.close()

See Also
SQL::Connection Object]]></original>
</page>