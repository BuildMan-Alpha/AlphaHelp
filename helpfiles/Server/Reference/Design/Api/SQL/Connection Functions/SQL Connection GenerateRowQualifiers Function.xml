<page>
   <topic>SQL::Connection GenerateRowQualifiers Function Function</topic>
   <syntax>GenerateRowQualifiers as C (TableInfo as SQL::TableInfo [, LocalTableInfo as SQL::TableInfo,])</syntax>
   <arguments>
     <argument>
         <name>TableInfo</name>
         <description>SQL::TableInfo</description>
     </argument>
     <argument>
         <name> LocalTableInfo</name>
         <description>SQL::TableInfo</description>
     </argument>
     <argument>
         <name></name>
         <description></description>
     </argument>
   </arguments>
   <description><![CDATA[Generate a crlf delimited list of row qualifiers in the format: 

  <field_name><tab>argument_name<crlf>
Note:  If the table has no primary key, row qualifiers are meaningless and no qualifiers are returned.]]></description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::GenerateRowQualifiers()
Syntax
List as C = .GenerateRowQualifiers(   as SQL::TableInfo  )
ArgumentDescription
ListA CR-LF delimited list of key columns in the format: 
 A SQL::Connection object.
A SQL::TableInfo object for the table created with the DIM statement.

Description
The GenerateRowQualifiers() method generates a list of key columns for  a table based on the primary key. This list is used by linked tables to  map the column data to the refresh row query generated by the GenerateRefreshRowQuery() method.  If the table has no primary key columns, an empty string is returned.
Limitations
Examples
dim conn as SQL::Connection
dim connString as C
dim ti as SQL::TableInfo
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
if .not. conn.GetTableInfo(ti, "customer")
    ui_msg_box("Error",  conn.CallResult.text)
end if
ui_msg_box("Key Column(s)", conn.GenerateRowQualifiers(ti))
conn.close()

See Also
SQL::Connection Object</original>
</page>