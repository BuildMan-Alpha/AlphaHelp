<page>
   <topic>SQL::Connection GenerateRevokeAccessStatement Function Function</topic>
   <syntax>GenerateRevokeAccessStatement as C (User as C, Resource as C, AccessType as C)</syntax>
   <arguments>
     <argument>
         <name>User</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> Resource</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> AccessType</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Generate a SQL Revoke Access statement.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::GenerateRevokeAccessStatement()
Syntax
SQL_Statement as C = SQL::Connection::GenerateRevokeAccessStatement()
ArgumentDescription
SQL_StatementAn add user group statement appropriate for the database.
UserThe user that will receive the new permission.
ResourceA database table or view.
AccessTypeThe type of permission to set.

Description
The SQL::Connection::GenerateRevokeAccessStatement() method  removes a permission to a resource in a database from a user.
Limitations
Example
dim conn as SQL::Connection
conn.open("{A5API=Access,FileName='C:\Program Files\A5V8\MDBFiles\Alphasports.mdb',UserName='Admin'}")
? conn.GenerateRevokeAccessStatement("Tom", "Customer",  "Read")
= "REVOKE Read ON Customer FROM Tom"

See Also
SQL::Connection Object</original>
</page>