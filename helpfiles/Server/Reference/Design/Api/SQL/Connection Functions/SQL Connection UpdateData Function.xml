<page>
   <topic>SQL::Connection UpdateData Function Function</topic>
   <syntax>L UpdateData(TableOwner as C,  TableName as C, ResultSet as SQL::ResultSet [, EventScript as C])</syntax>
   <arguments>
     <argument>
         <name>TableOwner</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>  TableName</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> ResultSet</name>
         <description>SQL::ResultSet</description>
     </argument>
     <argument>
         <name> EventScript</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Apply changes to existing rows in a table in the currently connected database using a result set.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::UpdateData()
Syntax
Result_Flag as L = .UpdateData(  TableOwner as C, TableName as C,   as SQL::ResultSet  [, EventScript as C ] )
ArgumentDescription
Result_FlagTRUE (.T.) if the operation was successful; otherwise  FALSE (.F.).
A SQL::Connection object.
TableOwnerThe owner of the table.
TableNameThe name of the table containing the data.
A SQL::ResultSet object that contains transactions to apply.
EventScriptOptional. Default = "". An Xbasic Script implementing  any of the following functions:

UpdateBegin()

UpdateProgress()

UpdateEnd() 
In each case, the Context argument is the connection itself.

Description
The UpdateData() method applies changes to existing rows in a table in  the currently connected database using a result set.
Limitations
Examples
 

See Also
SQL::Connection Object</original>
</page>