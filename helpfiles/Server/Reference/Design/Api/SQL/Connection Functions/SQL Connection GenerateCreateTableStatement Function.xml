<page>
   <topic>SQL::Connection GenerateCreateTableStatement Function Function</topic>
   <syntax>GenerateCreateTableStatement as C (TableInfo as SQL::TableInfo)</syntax>
   <arguments>
     <argument>
         <name>TableInfo</name>
         <description>SQL::TableInfo</description>
     </argument>
   </arguments>
   <description>Generate a SQL CREATE TABLE statement for the table passed in.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::GenerateCreateTableStatement()
Syntax
Statement as C = .GenerateCreateTableStatement(   as SQL::TableInfo  )
ArgumentDescription
StatementA SQL CREATE TABLE statement.
A SQL::Connection object.
A SQL::TableInfo object.

Description
The GenerateCreateTableStatement() method generates a SQL CREATE TABLE  statement for the table defined by .
Limitations
Examples
dim conn as SQL::Connection
dim ti as SQL::TableInfo
dim statement as C
if .not. sql_TableInfoOfDBF("c:\program files\a5v8\samples\alphasports\product.dbf",  ti)
    ui_msg_box("Error",  "Could not create SQL::TableInfo")
    end
end if
if .not. conn.open("{A5API=Access, FileName='C:\Databases\Northwind\northwind.mdb',  UserName='Admin'}") then
    ui_msg_box("Error",  conn.CallResult.text)
    end
end if
statement = conn.GenerateCreateTableStatement(ti)
ui_msg_box("Create Table Statement", statement)

See Also
SQL::Connection Object</original>
</page>