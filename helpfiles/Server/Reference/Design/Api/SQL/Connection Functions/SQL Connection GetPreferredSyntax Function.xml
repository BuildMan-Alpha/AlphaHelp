<page>
   <topic>SQL::Connection GetPreferredSyntax Function Function</topic>
   <syntax>C GetPreferredSyntax(ServerName as C, DataSource as C = "")</syntax>
   <arguments>
     <argument>
         <name>ServerName</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> DataSource</name>
         <description>C = ""</description>
     </argument>
   </arguments>
   <description>Return a the most appropriate syntax for the server specified or an empty string if not known.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::GetPreferredSyntax()
Syntax
Syntax as C = .GetPreferredSyntax(  ServerName as C )
ArgumentDescription
SyntaxThe name of a syntax.
A SQL::Connection object.
ServerNameThe name of the server hosting the database.

Description
When using the ODBC API, the data source name may not be sufficient  to determine the appropriate syntax. The GetPreferredSyntax() method finds  the driver name and scans it for a string close to an available syntax  name. If no syntax matches, an empty string is returned. All drivers that  support a single syntax will return that name.
Limitations
Examples
dim conn as SQL::Connection
dim connString as C
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Preferred Syntax", conn.GetPreferredSyntax("localhost"))
conn.close()

See Also
SQL::Connection Object</original>
</page>