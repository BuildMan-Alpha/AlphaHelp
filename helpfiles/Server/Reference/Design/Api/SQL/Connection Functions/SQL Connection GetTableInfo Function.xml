<page>
   <topic>SQL::Connection GetTableInfo Function Function</topic>
   <syntax>L SQL::TableInfo GetTableInfo(Info BYREF as SQL::TableInfo, TableName as C [, Owner as C[, Schema as C]])</syntax>
   <arguments>
     <argument>
         <name>Info BYREF</name>
         <description>SQL::TableInfo</description>
     </argument>
     <argument>
         <name> TableName</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> Owner</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> Schema</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Get the definition of a table.
</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
   <original> SQL::Connection::GetTableInfo()
Syntax
Result_Flag as L = .GetTableInfo(  BYREF  as SQL::TableInfo,  TableName as C, [ TableOwner as C  ] )
ArgumentDescription
Result_FlagTRUE (.T.) if the operation was successful; otherwise  FALSE (.F.).
A SQL::Connection object.
A SQL::TableInfo object to define TableName.
TableOwnerThe owner of the table.
TableNameOptional. Default = "". The name of the table  containing the data.

Description
The GetTableInfo() method retrieves the definition of a table.
Limitations
Example
dim conn as SQL::Connection
dim ti as SQL::TableInfo
dim connString as C
connString = "{A5API='Access', FileName='c:\program  files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.GetTableInfo(ti, "customer")
    ui_msg_box("Error", conn.CallResult.text)
end if
ui_msg_box("Table Information", ti.xml)
conn.close()

See Also
SQL::Connection Object</original>
</page>