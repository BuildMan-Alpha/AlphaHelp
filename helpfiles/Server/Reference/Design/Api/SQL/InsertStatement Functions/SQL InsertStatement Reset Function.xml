<page>
   <topic>SQL::InsertStatement Reset Function Function</topic>
   <syntax>V Reset()</syntax>
   <description>Reset the query as if it had just been created.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::InsertStatement Object</ref>
      <ref>Limitations</ref>
   </see>
   <original> SQL::InsertStatement::Reset()
Syntax
 .Reset()
 Argument Description
 A SQL::InsertStatement object.

 Description
The Reset() function resets the values in the SQL::InsertStatement object as if it had just been created.
Example
 dim conn as SQL::Connection
dim connString as C
dim ins as SQL::InsertStatement
dim sql_insert as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
sql_insert = "insert into customer (firstname, lastname, bill_city, bill_postal_code,bill_state_region) values ('George', 'Jones', 'Arlington', '02000', 'VA')"
? conn.open(connString)
= .T.
? ins.parse(sql_insert)
= .T.
? ins.SQLStatement
= "INSERT INTO customer(firstname, lastname, bill_city, bill_postal_code, bill_state_region) VALUES ('George', 'Jones', 'Arlington', '02000', 'VA')"
ins.reset()
? ins.SQLStatement
= "INSERT INTO"

 See Also
 SQL::InsertStatement Object
Limitations</original>
</page>