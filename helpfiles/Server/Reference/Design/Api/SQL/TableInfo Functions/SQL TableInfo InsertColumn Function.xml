<page>
   <topic>SQL::TableInfo InsertColumn Function Function</topic>
   <syntax>L InsertColumn(Column as SQL::DataTypeInfo [, InsertBefore as N = 1])</syntax>
   <arguments>
     <argument>
         <name>Column</name>
         <description>SQL::DataTypeInfo</description>
     </argument>
     <argument>
         <name> InsertBefore</name>
         <description>N = 1</description>
     </argument>
   </arguments>
   <description>Insert a new Column.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::TableInfo Object</ref>
      <ref>Limitations</ref>
   </see>
   <original> SQL::TableInfo::InsertColumn()
Syntax
Result_Flag as L = .InsertColumn(   as SQL::DataTypeInfo  [, InsertBefore as N ] )
ArgumentDescription
Result_FlagInicates whether the operation was successful.
A SQL::TableInfo object.
A SQL::DataTypeInfo object.
InsertBeforeOptional. The column before which to insert the new  column.

Description
The InsertColumn() method inserts a new column into the column property  before the column specified by InsertBefore.
Note : Names must not  duplicate ("" counts as a name).
Example
dim ti as SQL::TableInfo
dim co1 as SQL::DataTypeInfo
dim co2 as SQL::DataTypeInfo
co1.Name = "Customer"
co1.AlphaType = "Character"
col2.Name = "Product"
col2.AlphaType = "Character"
? ti.AddColumn(co1)
= 1
? ti.InsertColumn(co2,1)
= .T.
? ti.ColumnNumber("Customer")
= 2

See Also
SQL::TableInfo Object
Limitations</original>
</page>