<page>
   <topic>SQL::Query Format Function Function</topic>
   <syntax>C Format([AddCrLf = .t. as L])</syntax>
   <arguments>
     <argument>
         <name>AddCrLf = .t.</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Format the original source (by default, lines are broken at significant keywords)..</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Query Object</ref>
      <ref>Limitations</ref>
   </see>
   <original> SQL::Query::Format()
Syntax
 Formatted_Statement as C = .Format( [ CR-LF as L ] )
 Argument Description
 Formatted_Statement A formatted version of the SQL statement.
 A SQL::Query object created with a DIM statement.
 CR-LF Optional. Default = .T.

 .T. = Insert a CR-LF at the end of each parsed element.

 .F. = Do not insert a CR-LF at the end of each parsed element. 

 Description
The SQL::Query::Format() method formats a SQL statement, optionally placing each element on its own line.
Examples
 dim qry as SQL::Query
qry.parse("select firstname, lastname, phone from foo where lastname = 'ed'")
? qry.format()
= SELECT firstname, lastname, phone
FROM foo

WHERE (lastname = 'ed')
? qry.format(.f.)
= "SELECT firstname, lastname, phone FROM foo

WHERE (lastname = 'ed')"

 See Also
 SQL::Query Object
Limitations</original>
</page>