<page>
   <topic>SQL::Statement Parse Function Function</topic>
   <syntax>L Parse([SQLStatement as C])</syntax>
   <arguments>
     <argument>
         <name>SQLStatement</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Parse the SQLStatement passed (or the value previously set into the SQLStatement property).</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Statement Object</ref>
      <ref>Limitations</ref>
   </see>
   <original><![CDATA[ SQL::Statement::Parse()
Syntax
 Result_Flag as L = .Parse( [ SQL_Statement as C ] )
 Argument Description
 Result_Flag TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
 SQL_Statement Optional. A Portable SQL statement.

 Description
The .Parse() method parses the SQL_Statement string (or the value previously set into the SQL::Statement.SQLStatement property).
Example
 dim stat as SQL::Statement
dim sql_query as C
sql_query = "SELECT * FROM Customer WHERE len(lastname) > 6"
? stat.parse(sql_query)
= .T.

 See Also
 SQL::Statement Object
Limitations]]></original>
</page>