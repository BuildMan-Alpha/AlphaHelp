<page>
   <topic>OBJECT.NAME Function</topic>
   <syntax>.Name([N options])</syntax>
   <arguments>
     <argument>
         <name>options</name>
         <description>Numeric</description>
     </argument>
   </arguments>
   <description>Returns the name of the A5 object (I.e. "A5").</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Form Functions and  Methods</ref>
      <ref>Browse  Functions and Methods</ref>
   </see>
   <original><![CDATA[&ltOBJECT>.NAME() 
Syntax
Object_Name as C = &ltOBJECT>.NAME( [ Flag as N ] )
ArgumentDescription
FlagOptional.

 1 = Actual object name (not alias).

 16 = Fully qualified object name is returned. E.g. :invoice:browse1:lastname. 

Description
The &ltOBJECT>.NAME() method applies to:

 Alpha Anywhere (for &ltOBJECT> use the keyword "A5")

 Control Panel (for &ltOBJECT> use the keyword "CONTROLPANEL")

 Browses (for &ltOBJECT> use either the &ltBROWSE> pointer or the name of the browse)

 Forms (for &ltOBJECT> use either the &ltFORM> pointer or the name of the form)

 Form Controls (for &ltOBJECT> use the &ltCONTROL> pointer or the address of the control) 
The &ltOBJECT>.NAME() method returns the object's name.
Limitations
Desktop applications only.
Example
This script finds the name of the first object on the "Customer" form:
dim frm as P
frm = form.view("Customers")
obj = frm.child(1)
name = obj.name()
? name -> "Customers"

If Flag is 1, the actual name of the layout is returned (not the alias). For example, if two instances of the "customer" form are open, topparent.name() would return "customer" for the first instance, and "customer0" (or some other unique name) for the second instance. However, topparent.name(1) returns "customer" for both instances.
See Also
Form Functions and  Methods, Browse  Functions and Methods]]></original>
</page>