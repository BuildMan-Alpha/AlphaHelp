<page>
   <topic>OBJECT.MODE_GET Function</topic>
   <syntax>Mode as C = .Mode_Get()</syntax>
   
   <arguments><argument>
   <name>Mode</name>
   <description>Possible modes are:</description>
   
   <list>
   <item>
   <name>"VIEW" = 0</name>
   </item>
   
    <item>
   <name>"CHANGE" = 1</name>
   </item>
   
    <item>
   <name>"ENTER" = 2</name>
   </item>
   
    <item>
   <name>"QUERY" = 3</name>
   </item>
   
    <item>
   <name>"FIND" = 4</name>
   </item>
   </list>
   
   </argument></arguments>
   
   
   <description>Returns the mode (VIEW, CHANGE, ENTER, QUERY, FIND) of the current window.</description>
   <discussion><![CDATA[
The <OBJECT>.MODE_GET() method applies to:]]>
   </discussion>
    <sections>
    
    
       <section>
<list>
<item>
<name><![CDATA[Browses (for <OBJECT> use either the <BROWSE> pointer or the name of the browse)]]></name>
</item>

<item>
<name><![CDATA[Forms (for <OBJECT> use either the <FORM> pointer or the name of the form)]]></name>
</item>


</list>
       </section>
        <section>
            <description><![CDATA[The <OBJECT>.MODE_GET() method returns the current mode of the layout.
Limitations: Desktop applications only.]]></description>
           
       </section>
       
       
   </sections>
   <sections>
       <section><title>Example</title>
            <description>This script is attached to a button on a layout. It saves the current record if the layout is in change or enter mode. If the layout is in Query or Find mode, it exits to View mode.</description>
            <example><![CDATA[
Mode = parent.mode_get()
select
   case mode = "CHANGE" .or. mode = "ENTER"
       parent.commit()
   case mode = "QUERY"
       parent.query_exit()
   case mode = "FIND"
       parent.find_exit()
end select
]]></example>
       </section>
   </sections>
   <see>
      <ref>Form Functions and  Methods</ref>
      <ref>Browse  Functions and Methods</ref>
   </see>
 
</page>