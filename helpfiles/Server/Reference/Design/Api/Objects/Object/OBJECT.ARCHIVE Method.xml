<page>
   <topic>OBJECT.ARCHIVE Function</topic>
   <syntax>.Archive(c layoutname [,c filter [,c order ]])</syntax>
   <arguments>
     <argument>
         <name>layoutname</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>order</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>method</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Form Functions and  Methods</ref>
      <ref>Browse  Functions and Methods</ref>
   </see>
   <original><![CDATA[&ltOBJECT>.ARCHIVE()
Syntax
Object_Type.ARCHIVE( Layout_Name as C [, Filter_Expression as C [, Order_Expression as C [, Argument as SQL::Arguments ]]] )
ArgumentDescription
Object_TypeThis word can be any of the following:

"Browse"

"Form"

"Label"

"Letter"

"Report" 
Layout_NameThe name of a form, browse, label, letter, or report layout.
Filter_ExpressionOptional. Default = all records. An expression that selects records.
Order_ExpressionOptional. Default = record order number. An expression that order the selected records.
ArgumentOptional. Default = NULL_VALUE(). Arguments that retrieve value(s) from variable(s) or prompts for value(s) at runtime. Only applicable to SQL  Reports. Refer to SQL::Arguments  Object.
OptionsOptional. Default = NULL_VALUE(). Sets filter (WHERE) and order (ORDER BY) expressions for a query against a passive-linked  table. A pointer dot variable with 2 elements. Refer to Using  the Options Argument.

.filter = Adds to the WHERE clause in the underlying SQL expression.

.order = Replaces the ORDER BY clause in the underlying SQL expression. 

Description
The &ltOBJECT>.ARCHIVE() method prints Layout_Name to file in the .PDF format.  Filename is the name of the archive file created. The format of filename is " layoutname (mm-dd-yy hh-mm AM).pdf ".
The archive file is stored in a folder called "Archive" off the folder in which the current .adb file is stored. Use the Adobe Acrobat Reader to view these archived files.
Limitations
Desktop applications only.
Examples
This script creates an archived copy of the Invoice report.
:Report.archive("Invoice")

This script creates an archived copy of the Invoice report with an argument. You can add as many arguments to the arguments collection as you want.
:Report.archive("Invoice")
DIM myargs as SQL::arguments 
myargs.add("whatcity","London") 

report.preview("report1", "", "", .f., .f., myargs)


See Also
Form Functions and  Methods, Browse  Functions and Methods]]></original>
</page>