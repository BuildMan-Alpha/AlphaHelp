<page>
   <topic>OBJECT.TYPE Function</topic>
   <syntax>.Type()</syntax>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Form Functions and  Methods</ref>
      <ref>Browse  Functions and Methods</ref>
   </see>
   <original><![CDATA[&ltOBJECT>.TYPE() 
Syntax
Data_Type as C = &ltOBJECT>.TYPE()
Description
The &ltOBJECT>.TYPE() method applies to:

 Browses (for &ltOBJECT> use either the &ltBROWSE> pointer or the name of the browse)

 Forms (for &ltOBJECT> use either the &ltFORM> pointer or the name of the form)

 Form Controls (for &ltOBJECT> use the &ltCONTROL> pointer or the address of the control) 
The &ltOBJECT>.TYPE() method returns the type of data bound to an object. Valid types are:
TypeMeaning
CCharacter
NNumeric
MMemo, Bitmap, Rich Text Memo, OLE
LLogical
DDate
VNot bound to anything

Limitations
Desktop applications only.
Example
This script is attached to a button on a form. It prints out to the Trace window the name of each object on the form and the type of the data that object is bound to.
f = parentform.this
count = f.children()
for i = 1 to count
    object = f.child(i)
    name = object.name()
    type = object.type()
    :trace.writeln(name + " " + type)
next i

See Also
Form Functions and  Methods, Browse  Functions and Methods]]></original>
</page>