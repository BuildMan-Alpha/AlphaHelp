<page>
   <topic>StringScanner.SkipOverToken Function</topic>
   <syntax>Chars_Skipped as N = SkipOverToken as n(kind as c)</syntax>
   <arguments>
   <argument>
         <name>Chars_Skipped</name>
         <description>The number of characters the offset has been moved.
</description>
     </argument>
     <argument>
         <name>kind</name>
         <description>The type of token to skip over. The allowed types are:</description>
<list>
<item>
<name>"I" = identier</name>
</item>

<item>
<name>"F" = function</name>
</item>


<item>
<name>"S" = string</name>
</item>


<item>
<name>"D" = date</name>
</item>


<item>
<name>"N" = number</name>
</item>


<item>
<name>"L" = logical</name>
</item>


<item>
<name>"U" = unary operator</name>
</item>


<item>
<name>"B" = binary</name>
</item>

<item>
<name>"A" = array operator</name>
</item>

<item>
<name>"*" = all</name>
</item>

</list>
  
  
  
  
     </argument>
   </arguments>
   <description>Skip over a sequence of tokens . (I-identier,F-function,S-string,D-date,N-number,L-logical,U-unary operator,B-binary,A-array operator or '*' for all), Returns number of characters skipped.</description>
   <discussion><![CDATA[
The <StringScanner>.SkipOverToken() function moves the offset to the next token of the specified type, and returns the characters moved.
  ]]> </discussion>
   <example><![CDATA[
dim scanner as P
dim t as C
t = <<%txt%
result[1] = foo( x + y , "Some text" ) .or. (lookfor = .F.) .or. ( date()= {10/10/2005}
complex[1].subelement[1].property
%txt%
scanner = stringscanner.create(t)
? scanner.SkipToToken("L")
= .T.
? scanner.getremainder()
= .F.) .or. ( date()= {10/10/2005}
complex[1].subelement[1].property
? scanner.SkipOverToken("L")
= 3
? scanner.getremainder()
= ) .or. ( date()= {10/10/2005}
complex[1].subelement[1].property
]]></example>
   
   <see>
      <ref>StringScanner</ref>
   </see>
   
</page>