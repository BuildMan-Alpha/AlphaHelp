<page>
   <topic>TABLE.GET_SOURCE_TYPE Function</topic>
   <syntax>C Get_Source_type(C Filename[,L getLocation])</syntax>
   <arguments>
     <argument>
         <name>Filename</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>getLocation</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Returns the type of source the table is - Native, ODBC , Native-Encrypted.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
   </see>
   <original><![CDATA[TABLE.GET_SOURCE_TYPE()
Syntax
Type as C = TABLE.GET_SOURCE_TYPE( DBF_Filename as C )
ArgumentDescription
DBF_FilenameThe name of table file.

Description
The TABLE.GET_SOURCE_TYPE() method returns the type of table referenced by DBF_Filename.
Possible types are:

Native : Native Alpha Anywhere table

ODBC : ODBC table (i.e. the .dbf file is a link table that references an ODBC data source. 
The "Native" type can be further qualified with these sub-types:

Shadowed : Table is a shadow to a different table. i.e. the table was created by a Network Optimize command.

Encrypted : Table is encrypted.

Private : Table is encrypted with a private key. 
Example
Test the type of a shadow table.
? table.get_source_type("c:\a5\shadow\invoice\customer.dbf") -> "Native-Shadowed"

Test the type of an ODBC table.
? table.get_source_type("c:\a5\data\customer_link.dbf") -> "ODBC"

See Also
Table Functions and  Methods]]></original>
</page>