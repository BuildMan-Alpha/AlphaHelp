<page>
   <topic>table.ORDER Function</topic>
   <syntax>P Table.order(C Order [,C filter [,C flags ]])</syntax>
   <arguments>
     <argument>
         <name>Order</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>flags</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Public user defined function.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Index  Functions and Methods</ref>
      <ref>Writing  Expressions</ref>
   </see>
   <original><![CDATA[&ltTBL>.ORDER()
Syntax
&ltINDEX> as P = &ltTBL>.ORDER( Order_Expression as C [, Filter_Expression as C ] )
ArgumentDescription
Order_ExpressionA character  order expression that sorts selected records.
Filter_ExpressionOptional. Default = ".T." (all records). A character  filter expression that evaluates to a logical value. Selects records in the table.

Description
The &ltTBL>.ORDER() method orders, and optionally filters, data from the table referenced by &ltTBL>.
An object pointer, &ltINDEX>, is returned. &ltINDEX> will reference either:

an index that matches Order_Expression and Filter_Expression

if no index matches, a new query list. 
Use this method as an alternative to <TBL>.INDEX_PRIMARY_PUT() when you want to specify order and filter expressions, rather than index tag names.
An advantage of this method over &ltTBL>.INDEX_PRIMARY_PUT()is that &ltTBL>.INDEX_PRIMARY_PUT()could fail if the data dictionary file for a table is missing. The data dictionary contains the long index tag names.
In addition to using an index if one is available, &ltTBL>.ORDER()does not use the global query variables ( query.filter,  query.order, etc.).
Example
Following is from the Interactive window.
dim tbl as P
tbl = table.open("customer")
i = tbl.order("lastname")
i.type_get() ? 2.00000  'indicates that Alpha Anywhere selected an index
i = tbl.order("address2")
? i.type_get() ? 6.00000   'indicates that Alpha Anywhere built a query because no index existed
i = tbl.order("lastname","city = 'boston'")
i = tbl.order("recno()")   'puts table in record number order
i = tbl.order("")   'puts table in record number order

See Also
Table Functions and  Methods, Index  Functions and Methods, Writing  Expressions]]></original>
</page>