<page>
   <topic>table.INDEX_RECORD_GET Function</topic>
   <syntax>P Index_Record_Get()</syntax>
   <description>Get the record number order index object for a table.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Index  Functions and Methods</ref>
   </see>
   <original><![CDATA[.INDEX_RECORD_GET()
Syntax
 as P = .INDEX_RECORD_GET()
Description
The .INDEX_RECORD_GET() method returns an object pointer,  that references the built-in record number order index tag for the table referenced by . Record number order is the physical order in which records are added to the table. For many batch operations in which you fetch records one by one from a table, processing the data in record number order is fastest.
You can use .INDEX_RECORD_GET()in conjunction with <TBL>.INDEX_PRIMARY_PUT() to set the primary index of a table to record number order.
Example
This script sets the primary index of the current table to record order.
dim tbl as P
tbl = table.current()
indx = tbl.index_record_get()
indx2 = tbl.index_primary_put(indx)

This script does the same as above, but it is much simpler. Specifying no parameter for .INDEX_PRIMARY_PUT()selects record number order.
dim tbl as P
tbl = table.current()
indx = tbl.index_primary_put()

See Also
Table Functions and  Methods, Index  Functions and Methods]]></original>
</page>