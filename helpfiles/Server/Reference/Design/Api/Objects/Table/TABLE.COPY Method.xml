<page>
   <topic>table.COPY Function</topic>
   <syntax>V Copy()</syntax>
   <description>Copy all or some of the fields from the table to another table or set.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Table Operation  Methods</ref>
   </see>
   <original><![CDATA[&ltTBL>.COPY()
Syntax
Specify the required values in the Copy dot variable, then use the following command:
&ltTBL>.COPY()
VariableTypeDescription
Copy.setCIf copying a table, set copy.set to a NULL string (""). If copying a set, specify the name of the set in the copy.set parameter.
Copy.dbCDestination table filename.
Copy.ddC
.T. (TRUE) = Copy the data dictionary (field rules, layouts, saved settings, etc.).

.F. (FALSE) = Do not copy the data dictionary. 
Copy.recordsL
.T. (TRUE) = Copy all of the currently selected records (i.e., the active range, index, or query).

.F. (FALSE) = Do not copy records (i.e., an empty destination table is created). 
Copy.delete_o_ddLThe target table that you specify may already exist, and may have a data dictionary. If you specify that the data dictionary from the source table should not be copied, you can specify whether the target table's pre-existing dictionary (if any) should be retained, or deleted.

.T. (TRUE) = Delete the target table's pre-existing dictionary.

.F. (FALSE) = Retain the pre-existing dictionary. 
Copy.fieldsNThe number of fields to be copied.
Copy.field1 ... Copy.fieldNCThe name of each field to be copied

Description
The &ltTBL>.COPY() method is a high-level utility used to copy all or some of the fields from a table or set to a new table. The table to be copied is specified by the object pointer, &ltTBL>. In the case of a set, the &ltTBL> object pointer refers to the primary table in the set.
Example
This script copies the selected fields from the current table to a new table.
dim tbl as P
dim filename as C
filename = ui_get_file("Copy To:","Tables(*.DBF)","","N")
if filename = "" then
    end
end if
tbl = table.current()
copy.db = filename
copy.set = ""
copy.dd = .T.
copy.records = .T.
copy.delete_o_dd = .T.
copy.fields = 8
copy.field1 = "SALUTATION"
copy.field2 = "FIRST_NAME"
copy.field3 = "LAST_NAME"
copy.field4 = "ADDRESS_1"
copy.field5 = "ADDRESS_2"
copy.field6 = "CITY"
copy.field7 = "STATE_PROV"
copy.field8 = "ZIP"
tbl.copy()

This script copies selected fields from a set to a new table.
dim tbl as P
tbl = table.open("c:\a5\a_sports\invoice.set")
copy.db = "c:\a5\a_sports\copy.dbf"
copy.set = "c:\a5\a_sports\invoice.set"
copy.dd = .T.
copy.records = .T.
copy.delete_o_dd = .T.
copy.fields = 5
copy.field1 = "inv_head->inv_no"
copy.field2 = "customer->last_name"
copy.field3 = "inv_item->prod_no"
copy.field4 = "inv_item->quantity"
copy.field5 = "product->description"
tbl.copy()

See Also
Table Functions and  Methods, Table Operation  Methods]]></original>
</page>