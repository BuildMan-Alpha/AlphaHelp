<page>
   <topic>TABLE.CREATE_SHADOW Function</topic>
   <syntax>C Create_Shadow(C Shadowfilename,C ActualFilename[,L shadow_associated_files])</syntax>
   <arguments>
     <argument>
         <name>Shadowfilename</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>ActualFilename</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>shadow_associated_files</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Create a shadow table - the shadowfilename is the table created, it points to the actualfilename.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>CREATE_SHADOW()</ref>
   </see>
   <original>TABLE.CREATE_SHADOW()
Syntax
TABLE.CREATE_SHADOW( Shadow_Filename as C, Physical_Filename as C [, Flag as L ] )
ArgumentDescription
Shadow_FilenameThe name to give to the new shadow copy of the table or set.
Physical_FilenameThe name of the table or set being shadowed.
FlagOptional

.T. = If you are creating a shadow for a set, then all of the tables in the set are shadowed as well.

.F. = If you are creating a shadow for a set, then only the primary table is shadowed. 

Description
The TABLE.CREATE_SHADOW() method creates a shadow table or set that points to a physical table or set.
The implication of this command is important in situations where you have Forms, Reports, etc. that you want to use with different tables, or sets (all of which have the same structure), because it allows you to build your Forms and Reports for the "shadow" table or set, and then just dynamically point the shadow to the physical table of set that you want to use.
Examples
tfn = table.filename_get("a1")
sfn = "c:\data\shadow_a1.DBF"
'create a shadow table called 'shadow_a1' that points to the physical table 'a1'
table.create_shadow(sfn, tfn)
file_add_to_db(sfn)
t2fn = table.filename_get("a2")
table.create_shadow(sfn, t2fn)
'now the same shadow table 'shadow_a1' points to the physical table 'a2'.

See Also
Table Functions and  Methods, CREATE_SHADOW()</original>
</page>