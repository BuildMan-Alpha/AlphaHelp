<page>
   <topic>table.RELATION_DROP Function</topic>
   <syntax>V Relation_Drop(P Table)</syntax>
   <arguments>
     <argument>
         <name>Table</name>
         <description>Pointer</description>
     </argument>
   </arguments>
   <description>Remove a relation from a table.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Set Functions  and Methods</ref>
   </see>
   <original><![CDATA[&ltTBL>.RELATION_DROP()
Syntax
&ltTBL>.RELATION_DROP( &ltChild_Table> as P )
ArgumentDescription
&ltChild_Table>A pointer to a table that is a child to parent table &ltTBL> in a set.

Description
The &ltTBL>.RELATION_DROP() method removes the link between a parent table (referenced by the object pointer, &ltTBL>) and a child table (referenced by the object pointer, &ltChild_Table> ) in a set design. If the child table of this link is itself related to one or more child tables, these child links are also removed.
Example
parent = table.open("c:\a5\a_sports\inv_head.dbf")
child_tbl = table.open("c:\a5\a_sports\inv_item.dbf")
relation.link_type = LINK_MANY
child_index = child_tbl.index_get("inv_no")
relation.index_child = child_index
relation.order_parent = "inv_no"
relation.ref_integrity = 1
parent.relation_add(child)
parent.set_create("c:\a5\a_sports\myset.set")
parent.relation_drop(child)

See Also
Table Functions and  Methods, Set Functions  and Methods]]></original>
</page>