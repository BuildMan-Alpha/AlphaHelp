<page>
   <topic>table.QUERY_PRIMARY_PUT Function</topic>
   <syntax>P Query_Primary_Put(C query_name)</syntax>
   <arguments>
     <argument>
         <name>query_name</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Returns existing query if already run, else runs and returns saved query.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Query  Functions and Methods</ref>
   </see>
   <original><![CDATA[&ltTBL>.QUERY_PRIMARY_PUT()
Syntax
&ltINDEX> as P = &ltTBL>.QUERY_PRIMARY_PUT( Query_Name as C)
ArgumentDescription
Query_NameThe name of a previously defined query.

Description
The &ltTBL>.QUERY_PRIMARY_PUT() method runs the saved query specified by Query_Name for the table referenced by the object pointer, &ltTBL>. The table referenced by &ltTBL> must be the primary table in the session. It returns the &ltINDEX> pointer, which will reference either:

a previously created query list that satisfies the query definition, or

an index with the same definition as the query, or

a new query list. 
See <TBL>.QUERY_CREATE() for more details on what &ltINDEX> will reference.
Example
Build a query list using the query defined in the saved query called "Overdue customer accounts".
dim tbl as P
dim indx as P
tbl = table.current()
indx = tbl.query_primary_put("Overdue customer accounts")
rec_count = indx.records_get()
ui_msg_box("", "Number of records selected:" + ltrimrec_count,5,0?)
parent.refresh()

See Also
Table Functions and  Methods, Query  Functions and Methods]]></original>
</page>