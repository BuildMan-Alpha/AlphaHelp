<page>
   <topic>TABLE.IMPORT Function</topic>
   <syntax>V Import()</syntax>
   <description>Import records from specified input file to the table.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Table Operation  Methods</ref>
   </see>
   <original><![CDATA[TABLE.IMPORT()
Syntax
Specify the required values in the Import dot variable, then use the following command:
TABLE.IMPORT()
VariableTypeDescription
import.typeNYou use the Import Type Codes to specify the file format of the source file:
 
Export Format Type CodeNumberDescriptionExt
FILE_FORMAT_ASCII0Character-Separated ASCII.ASC
FILE_FORMAT_TABLE_ASCII1Table ASCII.TBL
FILE_FORMAT_RICH_TEXT2Rich Text Format (RTF).RTF
FILE_FORMAT_EXCEL_VERSION_33Microsoft Excel, Version 3.0.XLS
FILE_FORMAT_EXCEL_VERSION_4Microsoft Excel, Version 4.0.XLS
FILE_FORMAT_123_VERSION_15Lotus 1-2-3, Version 1.0/1A.WKS
FILE_FORMAT_123_VERSION_26Lotus 1-2-3, Version 2.0.WK1
FILE_FORMAT_123_VERSION_37Lotus 1-2-3, Version 3.0.WK3
FILE_FORMAT_SYMPHONY_VERSION_18Lotus Symphony, Version 1.0.WRK
FILE_FORMAT_SYMPHONY_VERSION_29Lotus Symphony, Version 2.0.WR1
import.namesCOptional. Default = NONE. The data in the source file is often preceded by the field names. If the file does have field names, you can specify one of the following options:

"USE" = use field names

"IGNORE" = ignore field names 
import.fileCThe name of the file to be imported.
import.dbCThe name you assign for the resulting table file.
import.skip_linesNOptional. Default = 0. For ASCII-import and damaged table files to set the number of lines at the beginning of the source file that should be ignored.
import.skip_bytesNOptional. Default = 0. For ASCII-import and damaged table files to set the number of bytes at the beginning of the source file that should be ignored.
import.field_sep
import.rec_sepCDefine how the end of fields and records are denoted in the source file. These strings can include any characters, including the following special separator characters:
 
SeparatorDescription
&ltCR> &ltLF>Carriage return and line feed combination
&ltCR>Carriage return
&ltLF>Line feed
&ltESC>Escape
&ltTAB>Tab
import.record_lenCSpecifies the character length (including spaces and carriage returns) of one record in a source file that is in ASCII table format.
import.rem_blanksLSpecifies whether or not leading blanks should be imported along with the data.

.T. (TRUE) = Import leading blanks

.F. (FALSE) = Do not import leading blanks 
import.text_qualifierCSpecify the character in which fields in a character-separated file are enclosed. The import.text_qualifier parameter is used to specify the character in which fields in a character-separated file are enclosed. For example, if your import file looks like this:
"Alpha Software","168 Middlesex Tpke","01803"
you would specify " \" " as the Text Qualifier. (NOTE: The quote qualifier is prefixed with a \ to distinguish it from the enclosing quotes.)
If the import file looks like this:
'Alpha Software','168 Middlesex Tpke','01803'
you would specify "'" as the Text Qualifier. (A single quote between double quotes.) If the text is not enclosed in qualifiers, then specify a NULL string (e.g., "").
import.fieldsNSpecifies how many fields are to be imported.
import.field1 ... import.fieldNCSpecify the field name, type, offset, width, and decimal values in a comma delimited string for each of the field(s) to be imported. Refer to the example below for the format.
In the case of a table ASCII file, the offset is the starting position of the field. In the case of all other files, the offset if the field number. The field number starts with 0. i.e., for import.field1, the offset is 0.

Description
The TABLE.IMPORT() method is a high-level utility function you use to import the records of a file of a different format into a new table file. Most parameters passed to import through the Import function variable correspond directly with the prompts and options appearing on the Import Builder.
Example
This script imports a character separated ASCII file into the desired table.
filename = ui_get_file("File To Import","ASCII(*.asc)",
"c:\a5\a_sports\customer.asc","X")
choice = ui_get_radio("Field Name Status",1,"use","ignore","none")
import.type = 0
import.names = choice
import.file = filename
import.db = "c:\a5\a_sports\cust_new.dbf"
import.skip_lines = 0
import.skip_bytes = 0
import.field_sep = ","
import.record_sep = "&ltCR>&ltLF>"
import.record_len = 0
import.rem_blanks = .T.
import.text_qualifier = ""
import.fields = 5
import.field1 = "cust_id,c,0,8,0"
import.field2 = "salutation,c,1,11,0"
import.field3 = "first_name,c,2,19,0"
import.field4 = "last_name,c,3,19,0"
import.field5 = "home_phone,c,4,15,0"
Table.import()

See Also
Table Functions and  Methods, Table Operation  Methods]]></original>
</page>