<page>
   <topic>table.POST Function</topic>
   <syntax>V Post()</syntax>
   <description>Replace, add, or subtract fields values in the table using fields from a transaction database.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Table Operation  Methods</ref>
      <ref>Writing Expressions</ref>
   </see>
   <original><![CDATA[&ltTBL>.POST()
Syntax
Specify the required values in the Post dot variable, then use the following command:
&ltTBL>.POST()
VariableTypeDescription
Post.t_dbCThe filename of the secondary, Transaction table.
Post.m_keyCContains expression strings that describe how fields or combinations of fields form the linking key in the primary, master table.
Post.t_keyCContains expression strings that describe how fields or combinations of fields form the linking key in the secondary, transaction table.
Post.m_filterLOptional. Default = .T. (All records).
A character  filter expression that specifies the records in the Master table that can be changed during the Post operation.
Post.t_filterLOptional. Default = .T. (All records).
A character  filter expression that specifies which records from the secondary, transaction table will be posted. Only the subset of records that pass through the Post.t_filter are filter are used when searching for existing records.
Post.m_countNIndicates how many fields are being mapped for the Post operation.
Post.m_field1 ... Post.m_fieldNCN fields (1 ... N) that specify the names of the fields in the primary, master table, which is the target of the Post operation.
Post.m_exp1 ... Post.m_expNAN fields (1 ... N) that contain the value, field, or expression used to add, subtract, or replace values in the Master table. You must prefix the transaction table name with @ in expressions (e.g., @inv_items -> quantity ). The following table shows examples of how to form the expression for Replace, Add and Subtract posting operations:
Master FieldTransaction FieldOperationExpression
On_handInv_items->QtyReplace@inv_items -> qty
On_handInv_items->QtyAddOn_hand + @inv_items -> qty
On_handInv_items->QtySubtractOn_hand-@inv_items -> qty
Post.t_countNUpdating the secondary, transaction table lets you change records used during the Post operation. as in the master mapping, each Transaction mapping is expressed through a group of parameters. post.t_count indicates how many fields are being mapped for the Post operation.
Post.t_case1 ... Post.t_caseNCN fields (1 ... N) that specify the conditions under which the Transaction table will be updated. The following values are allowed.
"Posted" = Records that successfully posted a value(s) 
"No-match" = Records that do not match any Master records 
"Violated" = Records that failed during the operation

Post.t_field1 ... Post.t_fieldNCN fields (1 ... N) that specify the name of the secondary, transaction Field to be updated
Post.t_exp1 ... Post.t_expNAN fields (1 ... N) that contains a value, field, or expression assigned to the secondary, transaction field. You must prefix the transaction table name with @ in expressions (e.g., @inv_items -> quantity ).

Description
The &ltTBL>.POST() method is a high-level utility used to replace, add, or subtract field values in the Master table using field values from a Transaction table.
Example
This script subtracts values from a transaction table ( Inv_item ) to the inventory table ( Product ). Only records not previously posted are posted (i.e. records for which POSTED = .f.).
dim tbl as P
tbl = table.open("c:\a5\a_sports\product.dbf")
post.t_db = "c:\a5\a_sports\inv_item"
post.m_key = "PROD_NO"
post.t_key = "PROD_NO"
post.m_filter = ""
post.t_filter = ".not. POSTED"
post.m_count = 1
post.m_field1 = "QTY_ON_HAND"
post.m_exp1 = "QTY_ON_HAND - @INV_ITEM->QTY"
post.t_count = 0
tbl.post()
ui_msg_box("Note To User","Operation Complete")

See Also
Table Functions and  Methods, Table Operation  Methods, Writing Expressions]]></original>
</page>