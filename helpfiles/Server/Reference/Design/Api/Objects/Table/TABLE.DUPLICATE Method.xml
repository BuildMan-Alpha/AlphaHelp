<page>
   <topic>table.DUPLICATE Function</topic>
   <syntax>V Duplicate(C tablename[,N flags])</syntax>
   <arguments>
     <argument>
         <name>tablename</name>
         <description>Character</description>
     </argument>
     <argument>
         <name>flags</name>
         <description>Numeric</description>
     </argument>
   </arguments>
   <description>Create a copy of the table, with all records and layouts.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
   </see>
   <original><![CDATA[&ltTBL>.DUPLICATE()
Syntax
&ltTBL>.DUPLICATE( Filename as C [, Flags as N ] )
ArgumentDescription
FilenameThe resulting table's path, filename and extension (.dbf).
FlagsOptional. Default = 0. The Flags parameter allows you to control the options to the duplication.
FlagRecordsLayouts/ OperationsField RulesIndexes
0NoNoNoNo
1NoNoNoYes
2NoYesYesNo
3NoYesYesYes
4YesNoNoNo
5YesNoNoYes
6YesYesYesNo
7YesYesYesYes
8NoNoYesNo
9NoNoYesYes
12YesNoYesNo
13YesNoYesYes

Description
The &ltTBL>.DUPLICATE() method makes a duplicate copy of the table. You must specify the resulting table's path, filename and extension (.dbf) in the Filename parameter.
Note : If you select a flag of 0, the dictionary is not copied. However, any fields in the source &ltTBL> that are defined as auto-increment in field rules are kept as auto-increment fields in Filename.
If you want to copy all of the fields and all of the records in a table to a new table, the &ltTBL>.DUPLICATE() method is appropriate. However, if you want to select which fields and records to copy, use the &ltTBL>.COPY() method.
Example
This script duplicates the structure of the current table (but does not copy the dictionary, records or indexes) then copies the current record to the new table.
dim tbl as P
tbl_source = table.current()
'Use the 0 paremeter to copy structure only
tbl_source.duplicate("c:\A5\new.dbf",0)
'Open the new table
tbl_new = table.open("c:\A5\new.dbf")
'Put new table into enter mode
tbl_new.enter_begin()
'Clone the record from the current table
tbl_new.record_clone(tbl_source)
tbl_new.enter_end(.T.)
tbl_new.close()

See Also
Table Functions and  Methods]]></original>
</page>