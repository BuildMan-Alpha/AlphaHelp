<page>
   <topic>table.CHANGE_BEGIN Function</topic>
   <syntax>V Change_Begin([L honor_field_rules])</syntax>
   <arguments>
     <argument>
         <name>honor_field_rules</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Begin changes to tables current record.</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
   </see>
   <original><![CDATA[&ltTBL>.CHANGE_BEGIN()
Syntax
&ltTBL>.CHANGE_BEGIN( [ Field_Rules_Flag as  L ] )
ArgumentDescription
Field_Rules_FlagOptional. Default = .F.

.T. = UI Level and Engine Level field rules are enforced when the record is changed.

.F. = Alpha Anywhere does not enforce these "UI level" field rules. 

Description
The &ltTBL>.CHANGE_BEGIN() method initiates a Change operation on the current (most recently fetched) record in the table referenced by the specified table pointer (&ltTBL>). You complete the Change operation by calling <TBL>.CHANGE_END() with the same table pointer.
Field Rule Enforcement
If Field_Rules_Flag is .T., then UI Level field rules are enforced when the record is changed. If the Field_Rules_Flag is .F., then Alpha Anywhere does not enforce these UI Level field rules.
UI Level field rules are rules such as:

trigger events

capitalization

minimum and maximum values

masks/templates

lookup fill-ins 
Engine Level rules, such as auto-increment values are always enforced.
One or more Change operations can occur simultaneously, each on a different open table. The number of active Change operations cannot exceed the number of open tables.
Once a table is in Change mode, values can be assigned to the table fields in the record buffer. For example, the following operation changes the LAST_NAME and FIRST_NAME fields in the last record:
dim tbl as P
tbl = table.open("c:\data\customers")
tbl.change_begin()
tbl.last_name = "Washington"
tbl.first_name = "George"
tbl.change_end(.T.)
tbl.close()

The &ltTBL>.CHANGE_BEGIN()must be followed by a corresponding &ltTBL>.CHANGE_END()to save the new field values to the record. For more information, see the &ltTBL>.CHANGE_END() method.
Note : You cannot use the &ltTBL>.CHANGE_BEGIN() method or &ltTBL>.ENTER_BEGIN() methods on a table that is already in either Change or Enter mode. To determine the current mode, use the <TBL>.MODE_GET() method.
Note : You cannot move the record pointer (using any of the fetch methods) in a table that is already in either Change or Enter mode.
See Also
Table Functions and  Methods]]></original>
</page>