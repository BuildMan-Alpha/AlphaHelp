<page>
   <topic>table.UNDELETE Function</topic>
   <syntax>N table.undelete([N start_rec [,N end_rec [,L mark_rec ]]])</syntax>
   <arguments>
     <argument>
         <name>start_rec</name>
         <description>Numeric</description>
     </argument>
     <argument>
         <name>end_rec</name>
         <description>Numeric</description>
     </argument>
     <argument>
         <name>mark_rec</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Un-delete records in a table</description>
   <discussion>
      ...put discussion here....
   </discussion>
   <example><![CDATA[
...put example code here....
]]></example>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
      ...put example here....
]]></example>
       </section>
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
   </see>
   <original><![CDATA[&ltTBL>.UNDELETE()
Syntax
Records_Undeleted as N = &ltTBL>.UNDELETE( [ Starting_Record as N, Ending_Record as N, Mark_Deleted as L ] )
ArgumentDescription
Records_UndeletedThe number of records that were undeleted.
Starting_RecordOptional. Default = first deleted record of table. The number of the first deleted record to be undeleted.
Ending_RecordOptional. Default = last deleted record of table. The number of the last deleted record to be undeleted.
Mark_DeletedOptional. Default = .F. (FALSE). Specifies whether to mark undeleted records.

.T. = mark undeleted records

.F. = do not mark undeleted records 

Description
The &ltTBL>.UNDELETE() method undeletes a range of records in a table. The operation is performed on the records in the table pointed to by the object pointer, &ltTBL>. If Starting_Record and Ending_Record are not supplied, then Alpha Five undeletes all of the records in the table.
Note : Records can only be undeleted before the table has been packed.
Example
Type the following in the Interactive window.
t = table.open("Customer")
t.records_get()-> 60
'delete all records
t.delete_range(".T.")
t.records_get()-> 0
'Undelete records 10 through 20
t.undelete(10,20)
t.records_get()-> 11
'Undelete all records
t.undelete()
t.records_get()-> 60
'undelete all records, and mark those that are undeleted
'(assume that 99999999 will be more that total records in table)
t.undelete(1,99999999,.T.)

See Also
Table Functions and  Methods]]></original>
</page>