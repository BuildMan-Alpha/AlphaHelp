<page>
   <topic>SET.OPEN_SESSION Function</topic>
   <syntax>P Open_Session(C setname[,N file_open_mode|SQL::Arguments args[,C encryption key]])</syntax>
   <arguments>
     <argument>
         <name>setname</name>
         <description>The name of a set. The extension ".set" is assumed.
 </description>
     </argument>
     <argument>
         <name>file_open_mode|SQL</name>
         <description>Optional. Determines the access privileges that apply to the open set file. You can use one of the following system variables:
</description>
<list>
<item>
<name-title>Variable
</name-title>
<description-title>Function
</description-title>
</item>

<item>
<name>FILE_RO_EXCLUSIVE
</name>
<description>Read Only (Exclusive)
</description>
</item>

<item>
<name>FILE_RW_EXCLUSIVE
</name>
<description>Read or Write (Exclusive)
</description>
</item>

<item>
<name>FILE_RO_SHARED
</name>
<description>Read Only (Shared)
</description>
</item>

<item>
<name>FILE_RW_SHARED
</name>
<description>Read or Write (Shared)
</description>
</item>


</list>
     </argument>
     <argument>
         <name>encryption</name>
         <description>Optional. Needed if the set has been encrypted, and the default encryption key has not been set (using the DEFAULT_ENCRYPTION_KEY_SET() function), of if the set was encrypted using a different encryption key than the default encryption key.
</description>
     </argument>
   </arguments>
   <description>Open an existing set in its own session - the session will be closed when the set is closed.</description>
   <discussion>
SET.OPEN_SESSION()opens a set in a new session and returns a pointer to the set. Returns the  pointer to the set.
Contrast this with the SET.OPEN() method which opens the set in the current session, making the primary table of the set into the primary table of the session.
See TABLE.OPEN() for a description of the Open_Mode and Password parameters.
Once the set has been opened, you can use the  pointer variable to get pointers to the individual tables in the set. The syntax is:
   </discussion>
   <sections>
       <section>
            <description>put description here</description>
            <example><![CDATA[
= .alias
]]></example>
       </section>
 <section>
            <description>where alias is the alias of the table in the set.
Note : If you want to open a set from a button or event on a form, you must use SET.OPEN_SESSION(), and not SET.OPEN().
</description>
            </section>
   </sections>
   <sections>
       <section><title>Example</title>
            <description>Assume this script is attached to a button on a form.</description>
            <example><![CDATA[
dim s as P
dim t1 as P
dim t2 as P
s = set.open_session("invoice")
t1 = s.invoice_header
'get a pointer to the customer table
t2 = s.customer
'move to the last record in the invoice set
t1.fetch_last()
ui_msg_box("Note","Last order was placed by: " + t2.lastname
'close the set
s.close()
]]></example>
       </section>
   </sections>
   <see>
      <ref>Set Functions and Methods</ref>
   </see>
   
</page>