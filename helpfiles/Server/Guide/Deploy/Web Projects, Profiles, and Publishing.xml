<page>
	<topic>Web Projects, Profiles, and Publishing</topic>
	<sections>
		<section>
			<description>Web publishing applications only. A web project is a name for a collection of pages, images, and files that will publish as a group - typically to a web server. When you create a new project (e.g. the Order_Processing.WebProject ) in the Web Projects Control Panel, Alpha Anywhere creates the appropriate sub folder to store the files you will create.</description>
		</section>
<section>
	<title>Creating a New Project</title>
	<description>A project is a container that organizes all of the files (web components, HTML pages, images, etc.) that are part of one or more related web pages.</description>
	<cases>
		<case>
			<description>Click New Project.</description>
			<figure><link>images/New_Web_Project.gif</link></figure>
		</case>
		<case>
			<description>Enter the name of the new project and click OK.</description>
		</case>
	</cases>
</section>		
<section>
	<title>Web Projects Directory Structure</title>
	<description>When you reference the location of a file, by default it is relative to its WebProject folder. For example, if you created an image folder under Order_Processing.WebProject named Order_Processing.WebProject\images, the default path to the folder would be \images.
You may have as many projects as you need.
</description>
	<note>When you create a new project in the Web Projects Control Panel, Alpha Anywhere automatically creates its new folder. When you add files to a project, Alpha Anywhere places them in its WebProject folder.</note>
</section>		
<section>
	<title>Profiles</title>
	<description>Files are often located under the application's program folder or in totally separate directories. In these cases, you create path aliases that define folder locations. A Profile defines the exact meaning of each alias and the location where files will be published. The virtue of this design approach is that your application can always refer to files without naming absolute directory paths or disk drives. This makes you application easily portable to other web server computers.
You may have as many profiles as you need.
</description>
	
</section>
<section>
	<title>Publishing</title>
	<description>Publishing is the process of copying the files in a project to a location specified by a profile. The Web Projects Control Panel will publish projects locally to your web root, across your network using Windows file services, or remotely using FTP (File Transfer Protocol). If you are hosting your web application, you will probably be publishing locally. If you are using the services of an ISP to host your web application, you will probably be publishing remotely.
When you publish an Alpha Anywhere web project, you publish both the web pages and the supporting database files. Typically, these files go to two different locations.
</description>
	<cases>
		<case>
			<description>web pages and components - under the web root folder that is exposed to the outside world</description>
		</case>
		<case>
			<description>database files - under a database folder that is hidden from the outside world </description>
		</case>
		
	</cases>
	
	
</section>
<section>
	<description>The publishing process automatically copies all folders and files under the web project to corresponding folders and files under the web root folder.
</description>
	<note>Publishing resolves all aliases and inserts the true directory paths into components. as a result, the published component is no longer editable by its associated builder.</note>
</section>
		
<section>
	<title>Publishing Data</title>
	<description>When you publish to a server, you also publish the Alpha Anywhere or Microsoft Access data files that are part of the application. If you have additional folders containing data, they are published under the database folder. 
The publishing process automatically created the sub-folders under these folders. 
</description>
	
</section>		
<section>
	<title>Virtual Hosting</title>
	<description>The Application Server does not support virtual hosting. Virtual hosting would be where you have http://www.site1.com and http://www.site2.com map to two different directories under the same webroot. If you need to support two or more different websites under the same webroot, you need to have two different directories (e.g. /site1 and /site2 ) on your server and send your users to http://www.site.com/site1 and http://www.site.com/site2.</description>
</section>
		
		
		
		
	</sections>
	<see>
		<ref>Path and Connection String Aliases</ref>
		<ref>Publishing a Web Project</ref>
		<ref>Publishing a Page to a Server</ref>
	</see>
	
	
	
</page>