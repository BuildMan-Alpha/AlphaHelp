<page>
	<topic>Developing Applications with Xbasic</topic>
	<groups>
		<group background="true">
			
			<title>About Xbasic</title>
			<sections>
				<section>
					<description>Xbasic is not a necessary component of your Alpha Anywhere application. It is quite possible for you to develop sophisticated applications without consciously using any Xbasic. You might, in fact, be using some behind the scenes when you use Action Scripting, but that is a topic for another book ( Introduction to Action Scripting ).
Xbasic is an interpreted language much like Basic, which is found in many versions throughout the programming world. Xbasic has a similar vocabulary and syntax, and it is easy to learn. Its many built-in functions have intuitive, easy to understand names.
This book is for the more adventurous developer, who wants to customize an application, beyond where the many interactive tools would normally take it. It is also for the developer, who wants to turbo-charge an application.
</description>
					
					
				</section>
	
			</sections>
			
			
		</group>
	<group>
<sections>
	<section>
		<title>About Developing a Database Application</title>
		<description>The Xbasic Reference is organized to present reference material in an orderly sequence, from the topics that everyone should understand to the topics that will stretch your technical skills. Having said that, we will attempt to provide relevant samples of working code that you can use as templates to speed your application development.</description>
		
	</section>
<section>
	<cases>
		<case>
			<title>Researching application requirements</title>
			<description>Database requirements are not always intuitively obvious. A structured approach to database development is always recommended.</description>
			<note>Where to find information: There are libraries full of relevant reference material. One book this author likes is Database Design for Mere Mortals, written by Michael J. Hernandez, printed by ADDISON-WESLEY.</note>
			
		</case>
		
		<case>
			<title>Design your tables and sets.</title>
			<description>This is critical. Bad design makes for poor performance, difficult maintenance, and lots of re-work.</description>
			
			<note>Where to find information: There are libraries full of relevant reference material. One book this author likes is Database Design for Mere Mortals, written by Michael J. Hernandez, printed by ADDISON-WESLEY.</note>
			
		</case>
		
		<case>
			<title>Build your tables and sets.</title>
			<description>This is the first step to implementation.</description>
		<note>Where to find information: Getting Started with Alpha Anywhere</note>	
			
		</case>
		
		<case>
			<title>Build your forms and browses.</title>
			<description>Forms provide the record level user interface into the database. They provide a convenient way to make data entry, editing, and retrieval efficient and user friendly. Browses provide list views of the database (like a spreadsheet) and give the user a good way to scan multiple records at one time.</description>
			
			<cases>
				<case>
					<title>Attach scripts to form or browse events.</title>
					<description>Xbasic scripts allow you to respond to data or events in ways that the Alpha Anywhere developers could not predict (and build into Field Rules). They allow you to consider sequences or combinations of data or events and respond in a customized manner: i.e. making a control appear or disappear, doing a calculation, or displaying a dialog box that asks for more information.</description>
				</case>
				<case>
					<title>Add help to forms and controls.</title>
					<description>Both bubble help and compiled help make your application easier to use and less costly to support.</description>
				</case>
		
			</cases>
			
			
			
		</case>
		
		<case>
			<title>Build reports.</title>
			<description>Alpha Anywhere allows you to generate reports that you print and mail, in the time-honored traditional. It also allows you generate reports in PDF format, and let your users print them (if they need to).</description>
				<cases>
					<case>
						<title>Integrate Email.</title>
						<description>Email integration allows you to build data driven messaging applications: i.e. mail invoices, after pulling the address and detail information from your database. You can also receive messages via email, extract data, and store into your database.</description>
						
					</case>
					
					
				</cases>
		
		
		</case>
		
		<case>
			<title>Enhance the user interface.</title>
			<cases>
				<case>
					<title>Build custom menus. </title>
				</case>
				<case>
					<title>Build custom toolbars.</title>
				</case>
				<case>
					<title>Add charts and graphs.</title>
				</case>
				<case>
					<title>Use Rich Text Fields.</title>
				</case>
				<case>
					<title>Use BLOBs and images.</title>
				</case>
				<case>
					<title>Use Xdialog forms.</title>
				</case>
				
				
			</cases>
		</case>
		
		<case>
			<title>Security</title>
			<cases>
				<case>
					<title>Implement user and group limitations.</title>
				</case>
				<case>
					<title>Control how your application starts and ends.</title>
				</case>
				<case>
					<title>Control user and group preferences.</title>
				</case>
				
			</cases>
		</case>
		
		
		<case>
			<title>Maintenance</title>
			<cases>
				<case>
					<title>Automate operations.</title>
				</case>
				<case>
					<title>Build dynamic connections to external databases.</title>
				</case>
				<case>
					<title>Integrate with other Windows applications.</title>
				</case>
				
			</cases>
		</case>
		
		<case>
			<title>Build your own functions.</title>
			<cases>
				<case>
					<title>Understand Alpha Anywhere development tools.</title>
				</case>
					<case>
					<title>Objects, addressing, and referencing objects.</title>
				</case>
					<case>
					<title>Understanding events.</title>
				</case>
					<case>
					<title>Understanding properties.</title>
				</case>
					<case>
					<title>Understanding variables: types, Ask variables, Dot variables, pointers, collections, system variables, and arrays.</title>
				</case>
					<case>
					<title>Dot variables: tools and techniques.</title>
				</case>
					<case>
					<title>Ask variables: tools and techniques.</title>
				</case>
					<case>
					<title>Handling errors.</title>
				</case>
				
			</cases>
		</case>
		
		
		<case>
			<title>Programming with tables and sets.</title>
			<cases>
				<case>
					<title>Table/set/form architecture.</title>
				</case>
				<case>
					<title>Tools for reading and writing data.</title>
				</case>
				<case>
					<title>How indexes and queries work.</title>
				</case>
				<case>
					<title>Tools for using, creating, and managing indexes.</title>
				</case>
				<case>
					<title>Tools for using, creating, and managing queries.</title>
				</case>
				<case>
					<title>Techniques for table lookups.</title>
				</case>
				<case>
					<title>Tools for working with records.</title>
				</case>
				<case>
					<title>Tools for working with fields.</title>
				</case>
				
				
			</cases>
		</case>
		
		<case>
			<title>Programming with forms, browses, and controls.</title>
			<cases>
				<case>
					<title>Tools for working with controls.</title>
				</case>
				<case>
					<title>Creating Xdialog forms.</title>
				</case>
			</cases>
		</case>
		
		
		
	</cases>
	
	
	
</section>	
	
</sections>		
		
		
	</group>	
		
		
		
		
		
	</groups>
	
	
	
</page>