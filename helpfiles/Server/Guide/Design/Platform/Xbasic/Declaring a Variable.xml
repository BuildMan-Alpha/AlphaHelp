<page>
	<topic>Declaring a Variable</topic>
	<sections>
<section>
	<description>Before a variable is used either by a script or in an expression, it must be declared. A variable can be declared either explicitly (as a formal declaration in a script, a table, a set, a form, or an application) or implicitly (by assigning it a value for the first time in a script). In general, a variable declaration must specify two things: the name of the variable, and the type of data the variable will contain.
</description>
	<note>If you place the OPTION STRICT command at the top of a script then you must declare variables explicitly using the DIM command.</note>
	
</section>		
<section>
	<title>Legal Variable Names</title>
	<description><![CDATA[A variable name must start with a letter (from A to Z, a to z). Subsequent characters can be alphanumeric or an underscore (A to Z, a to z, 0 to 9, _). Variable names are not case-sensitive, so the names "GONZO" and "Gonzo" refer to the same thing. Variable names cannot contain space characters.
Some variable names cannot be used because they conflict with the names of Xbasic functions, methods, or command statements. These pre-defined names are called reserved words. You cannot use a reserved word as a variable name.
Variables names that include a period (.) are called dot variables. Dot variables are used extensively by certain Xbasic methods such as  <TBL>.QUERY_CREATE().
]]></description>
	
	
</section>

<section>
	<title>Implicit Declaration</title>
	<description>A variable is implicitly defined by assigning it a value with the assignment operator (" = "), using it in a for loop statement, or declaring it as a parameter of a user-defined function. The general formats are:</description>
	<example><![CDATA[VariableName = expression
VariableName[Subscript] = expression
for VariableName = Start Value TO End Value
FUNCTION FunctionName as DataType (Parameter as Datatype, Parameter as DataType, ...)
]]></example>
	
</section>

<section>
	<title>Explicit Declaration</title>
	<description>It is often important to explicitly define a variable before it is used. This is done with the DIM statement. Refer to the section describing the DIM statement for details on the syntax.
Explicit declaration is necessary if the operation in which the variable is to be used is ambiguous. The DIM statement is also necessary if the variable is an array or is to be defined as a global or shared variable.
A variable can also be explicitly declared in a table or set definition, or as Part of a layout.
</description>
	
	
</section>

<section>
	<title>Automatic Typecasting</title>
	<description>When you append Variable2 to Variable1, Alpha Five will automatically change the type of one of the variables to match the type of the other. If one of the variables is a character variable, typically that will be the resulting type. For example:</description>
	<list>
		<item>
			<name-title>Expression</name-title>
			<description-title>Value and Type</description-title>
		</item>
		<item>
			<name>1 + "one"</name>
			<description>"1one"
Type: C
</description>
		</item>
		<item>
			<name>"one" + 1</name>
			<description>"one1"
Type: C
</description>
		</item>
		<item>
			<name>"" + 1</name>
			<description>"1"
Type: C
</description>
		</item>
		<item>
			<name>"today is " + date()</name>
			<description>"today is 09/15/2004"
Type: C
</description>
		</item>
		<item>
			<name>date()+ " is today"</name>
			<description>"09/15/2004 is today"
Type: C
</description>
		</item>
		<item>
			<name>"" + .T.</name>
			<description>"True"
Type: C
</description>
		</item>
		<item>
			<name>.F. + ""</name>
			<description>"False"
Type: C
</description>
		</item>
		<item>
			<name>date()+ 1</name>
			<description>{09/16/2004}
Type: D
</description>
		</item>
		
	</list>
	
</section>
	<section>
		<title>Use the AUTOEXEC Script to Define Variables
</title>
<description>If you want to have variables available from the start of your application, and available regardless of which forms have been opened, define them in an AUTOEXEC script.
</description>		
		
		
	</section>
	</sections>
	<see>
		<ref>What is a Variable?</ref>
	</see>
</page>