<page>
	<topic>DotNet Example: Image metadata class</topic>
	<sections>
		<section>
		<description>When writing an Xbasic function that uses the .NET Framework, you always have the option of writing or using a custom .NET class that gives you a simplified interface compared to using the .NET Framework classes directly. In DotNet Example: Image metadata function we tackled the problem of extracting EXIF metadata from a JPEG file using the .NET Framework classes directly. In this article we'll use a freely available .NET library, Exifacto(external link).

 It is interesting to note that while DotNet Example: Image metadata function used the System.Windows.Media.Imaging namespace(external link) (WPF), Exifacto(external link) uses the System.Drawing.Imaging namespace(external link) (Windows Forms). Windows Presentation Foundation and the older Windows Forms system have a large amount of duplication, so this is not really too surprising.

 The following script assumes that you have either checked out the project from googlecode.com using Subversion as described in the project pages, or downloaded and unzipped the attached DLL.
</description>
		<example><![CDATA[dim sv as dotnet::services
dim assy as dotnet::assemblyreference
 
'edit the path to the DLL in the next line
assy.FileName = "&lt;path&gt;\exifacto.dll" 
sv.RegisterAssembly("exif",assy)
 
'edit the path to the image in the next line
filename="&lt;full path to image file&gt;"
 
ex = new exif::Exifacto::exifdata(filename)
 
CameraMake=ex.CameraMake
CameraModel=ex.CameraModel
Copyright=ex.Copyright
DateTimeOriginal=ex.DateTimeOriginal
ImageDescription=ex.ImageDescription
Orientation=ex.Orientation.value__
ExposureProgram=ex.ExposureProgram.value__
Software=ex.Software
 
'show selected properties
exif_data = filename + \
  crlf()+"Camera: "+CameraMake+" "+CameraModel+" taken "+DateTimeOriginal+ \
  crlf()+"Description: "+ImageDescription+crlf()+"Copyright: "+Copyright+ \
  crlf()+"Orientation: "+Orientation+" ExposureProgram: "+ExposureProgram+ \
  crlf()+"Software: "+Software
ui_msg_box("exif",exif_data)
 
showvar(ex) 'show all properties]]></example>
</section>
	</sections>
	<see>
<ref>.NET Framework Support in Alpha Anywhere </ref>
<ref>DotNet::AssemblyReference</ref>
<ref>DotNet::Services</ref>
<ref>CreateObject Method</ref>
<ref>CallStaticFunction Method</ref>
<ref>ConstructGenericTypeName Method</ref>
<ref>GetStaticProperty Method</ref>
<ref>SetStaticProperty Method</ref>
<ref>RegisterClass Method</ref>
<ref>RegisterAssembly Method</ref>
<ref>RegisterNamespace Method</ref>
<ref>GenerateWebServiceClientFromURL Method</ref>
<ref>GenerateWebServiceClientFromWSDL </ref>
<ref>Preloaded .NET Classes </ref>
<ref>Writing Xbasic wrapper classes for .NET classes </ref>
<ref>DotNetPath Function</ref>
<ref>DotNet Examples </ref>
<ref>DotNet Example: Image metadata function</ref>
		
		
		
		
	</see>
	
</page>