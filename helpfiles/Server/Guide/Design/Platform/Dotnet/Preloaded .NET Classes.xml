<page>
	<topic>Preloaded .NET Classes</topic>
	<description>The following .NET assemblies are loaded automatically, and all exported types are registered under either the System or Microsoft namespace. Click on any of the links to see the Microsoft documentation for the namespace that corresponds most closely with each assembly. See the full list of preloaded .NET Classes for more detail, and use the listed class names as search terms for the documentation at http://msdn.microsoft.com.</description>

<sections>

	
<section>
	<description>In addition to checking the full list of preloaded .NET Classes, you can determine whether a given class you would like to use is preloaded simply by DIMming the class in the Alpha Anywhere interactive window. If it is not preloaded, then you can register it yourself using the RegisterClass Method.

 mscorlib (The most common classes in the System and Microsoft namespaces)
 PresentationCore (WPF(http://msdn.microsoft.com/en-us/library/ms754130.aspx), Windows.Media(http://msdn.microsoft.com/en-us/library/system.windows.media.aspx), etc.)
</description>
	
</section>
<section>
	<cases>
		<case>
			<description>System. "http://msdn.microsoft.com/en-us/library/system.aspx"</description>
		</case>
		<case>
			<description>System.Core (More common classes in the System and Microsoft namespaces)
</description>
		</case>
		<case>
			<description>System.Data. "http://msdn.microsoft.com/en-us/library/gg145028.aspx"
</description>
		</case>
		<case>
			<description>System.Data.DataSetExtensions. "http://msdn.microsoft.com/en-us/library/gg145028.aspx"
</description>
		</case>
		<case>
			<description>System.Net. "http://msdn.microsoft.com/en-us/library/gg145039.aspx"
</description>
		</case>
		<case>
			<description>System.Web. "http://msdn.microsoft.com/en-us/library/gg145018.aspx"
</description>
		</case>
		<case>
			<description>System.Xaml (and System.Windows.Markup). "http://msdn.microsoft.com/en-us/library/gg145048.aspx"
</description>
		</case>
		<case>
			<description>System.XML. "http://msdn.microsoft.com/en-us/library/gg145036.aspx"
</description>
		</case>
		<case>
			<description>System.XML.Linq. "http://msdn.microsoft.com/en-us/library/system.xml.linq.aspx"
</description>
		</case>
		<case>
			<description>windowsbase (Basic wrappers for Windows APIs)
</description>
		</case>
		
		
	</cases>
	
	
</section>

<section>
	<description>You can DIM preloaded classes without registering them, for example
</description>
	<example><![CDATA[dim s as System::Text::Stringbuilder
]]></example>
	
</section>


<section>
	<description>At this point all the methods and properties of the System.Text.Stringbuilder class ("http://msdn.microsoft.com/en-us/library/system.text.stringbuilder.aspx")are instantiated and belong to the variable s.
You can also call preloaded static methods without even DIMming them, for example
</description>
	<example><![CDATA[System::GC::Collect()
]]></example>
</section>









	
</sections>	
	
<see>
<ref>Full list of preloaded .NET Classes (Long! Search the page to find what you need)</ref>
<ref>.NET Framework Support in Alpha Anywhere </ref>
<ref>DotNet::AssemblyReference</ref>
<ref>DotNet::Services</ref>
<ref href="/documentation/index?search=DotNet::Services.CreateObject Method">CreateObject Method</ref>
<ref href="/documentation/index?search=DotNet::Services.CallStaticFunction Method">CallStaticFunction Method</ref>
<ref href="/documentation/index?search=DotNet::Services.ConstructGenericTypeName Static Method">ConstructGenericTypeName Method</ref>
<ref href="/documentation/index?search=DotNet::Services.GetStaticProperty Method">GetStaticProperty Method</ref>
<ref href="/documentation/index?search=SetStaticProperty Method">SetStaticProperty Method</ref>
<ref href="/documentation/index?search=DotNet::Services.RegisterClass Method">RegisterClass Method</ref>
<ref href="/documentation/index?search=DotNet::Services.RegisterAssembly Method">RegisterAssembly Method</ref>
<ref href="/documentation/index?search=DotNet::Services.RegisterNamespace Method">RegisterNamespace Method</ref>
<ref href="/documentation/index?search=DotNet::Services.GenerateWebServiceClientFromURL Method">GenerateWebServiceClientFromURL Method</ref>
<ref href="/documentation/index?search=DotNet::Services.GenerateWebServiceClientFromWSDL Method">GenerateWebServiceClientFromWSDL Method</ref>
<ref href="/documentation/index?search=Preloaded .NET Classes">Preloaded .NET Classes </ref>
<ref href="/documentation/index?search=Writing Xbasic wrapper classes for .NET classes">Writing Xbasic wrapper classes for .NET classes </ref>
<ref href="/documentation/index?search=DotNetPath Function">DotNetPath Function</ref>
<ref>DotNet Examples</ref>
	
	
</see>	
	
</page>