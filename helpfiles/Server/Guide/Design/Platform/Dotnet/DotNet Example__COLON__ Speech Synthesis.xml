<page>
	<topic>DotNet Example: Speech Synthesis</topic>
	<sections>
		<section>
			<description>This sample demonstrates loading, registering and using a .NET class from a DLL in the standard location.
 Paste the code below into an Xbasic script and run it. Make sure the sound on your computer is turned on.
 We need specify the assembly filename for System.Speech.dll because its assembly is not preloaded. If you take the assy parameter out of the RegisterClass call, the registration will fail.
</description>
			<example><![CDATA[dim Sv as DotNet::Services
dim assy as DotNet::AssemblyReference
assy.filename = DotNetPath()+"WPF\System.Speech.dll"
dim Text as C = "This is a test. It is only a test." \
              + "If this had been a real emergency..."\
              + " I wouldn't be playing with Alpha Anywhere!"
 
If Sv.RegisterClass("Speech", "Synth", \
    "System.Speech.Synthesis.SpeechSynthesizer", assy)
  dim TestTalker as Speech::Synth
  TestTalker.SpeakAsync(Text)
else
  ui_msg_box("Speech Demo","Synth class not registered")
end if]]></example>
		</section>
		<section>
			<description>The MSDN documentation for speech recognition and speech synthesis is here(external link) http://msdn.microsoft.com/en-us/library/gg145021.aspx.
 This sample runs on the desktop. To create sound on a Web site that will play in a browser is somewhat more complicated.
 The logic of this sample has been wrapped up in the new Xbasic TextToSpeech Function.</description>
		</section>
	</sections>
	
	
	<see>
		
<ref>.NET Framework Support in Alpha Anywhere </ref>
<ref>DotNet::AssemblyReference</ref>
<ref>DotNet::Services</ref>
<ref>CreateObject Method</ref>
<ref>CallStaticFunction Method</ref>
<ref>ConstructGenericTypeName Method</ref>
<ref>GetStaticProperty Method</ref>
<ref>SetStaticProperty Method</ref>
<ref>RegisterClass Method</ref>
<ref>RegisterAssembly Method</ref>
<ref>RegisterNamespace Method</ref>
<ref>GenerateWebServiceClientFromURL Method</ref>
<ref>GenerateWebServiceClientFromWSDL Method</ref>
<ref>Preloaded .NET Classes </ref>
<ref>Writing Xbasic wrapper classes for .NET classes </ref>
<ref>DotNetPath Function</ref>
<ref>DotNet Examples 		</ref>
		<ref>TextToSpeech Function</ref>
		
	</see>
	
	
	
	
	
	
	
</page>