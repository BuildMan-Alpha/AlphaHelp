<page>
	<shortlink>server Responding to User Input on a Grid</shortlink>
	<topic>Responding to User Input on a Grid</topic>
	<description>Step by step instructions for responding to user input in  a grid component. </description>
<sections>
	<section>
		<note>This example describes a technique that was necessary before grid components supported validation of user input.</note>
		
		
	</section>
	<section>
		<description>In this example, the grid:
</description>
		<cases>
			<case>
				<description>does not access new records</description>
			</case>
			<case>
				<description>has a single editable row
</description>
			</case>
		</cases>
		
	</section>
<section>
	<title>Creating the Test_Field_Values Grid Component
</title>
	<steps>
		<step>
			<description>Create a new grid component.
</description>
		</step>
		<step>
			<description>On the Component Type page select Updateable.
</description>
		</step>
		<step>
			<description>On the Grid > Data Source menu select .dbf Tables.
</description>
		</step>
		<step>
			<description>On the Grid > Query (DBF) menu select "user_names" in the Table name list.
</description>
		</step>
		<step>
			<description>Click Calculated Fields, enter Password2 = Password and click OK.
</description>
		</step>
		<step>
			<description>Display the Grid > Fields menu.
</description>
		</step>
		<step>
			<description>Select "User_Name", "Password", "Password2", and "Level" in the Available Fields list and click .
</description>
		</step>
		<step>
			<description>Move "Level" to the bottom of the Selected Fields list.
</description>
		</step>
		<step>
			<description><![CDATA[Change the Column Properties > Column heading value of the Password2 field to Repeat<br>Password.
]]></description>
		</step>
		<step>
			<description>Set the Column Properties > Heading in-line style values of all four fields to text-align: left; vertical-align: bottom;.
</description>
		</step>
		<step>
			<description>Display the Grid > Properties menu.
</description>
		</step>
		<step>
			<description>Set the Layout Options > Rows of data value to 1.
</description>
		</step>
		<step>
			<description>Display the Grid Update Settings page.
</description>
		</step>
		<step>
			<description>Select "False" in the Permissions > Allow insert list (de-select the check box).
</description>
		</step>
		<step>
			<description>Click File > Save As, enter Test_Field_Values, and click Save.
</description>
		</step>
		
		
	</steps>
	
</section>	
<section>
	<title>Creating the Test_Field_Values Page
</title>
	<steps>
		<step>
			<description>Display the Web Project Control Panel.
</description>
			
		</step>
		<step>
			<description>Click New > Alpha Anywhere Web Page (A5W) > OK.
</description>
			
		</step>
		<step>
			<description>Click File > Save As, enter Test_Field_Values, and click Save.
</description>
			
		</step>
		<step>
			<description>Click Insert Component > Select, select the Test_Field_Values grid, and click OK.
</description>
			
		</step>
		<step>
			<description>Display the Source tab of the HTML Editor.
</description>
			
		</step>
		<step>
			<description><![CDATA[Enter the following code after the <head> tag.]]>
</description>
			<example><![CDATA[<%a5
if eval_valid("Test_Field_Valu_Button_Submit") then
    if (v.r1.password <> v.r1.password2) .or. (val(v.r1.level) < 0) .or. (val(v.r1.level) > 20) then
        response.redirect("error_page.a5w?password="+v.r1.password+"&password2="+v.r1.password2+"&level="+v.r1.level)
        end
    end if
end if
%>
 ]]></example>
 <note>The variable name Test_Field_Valu_Button_Submit is a combination of the value defined for the componentName variable and _Button_Submit.</note>
		</step>
		
		
	</steps>
	
</section>
	<section>
<description>The values that the script is testing are v.r1.password, v.r1.password2,and v.r1.level. The "v.r1." prefix indicates that the values are coming from the first row of the grid. If the values are not satisfactory, the page uses RESPONSE.REDIRECT()) method to display error_page.a5w. The URL passes the value of the variables so the receiving page can display them.
The values that the script is testing are v.r1.password, v.r1.password2,and v.r1.level. The "v.r1." prefix indicates that the values are coming from the first row of the grid. If the values are not satisfactory, the page uses RESPONSE.REDIRECT() method to display error_page.a5w. The URL passes the value of the variables so the receiving page can display them.
</description>		
<example><![CDATA[response.redirect("error_page.a5w?password="+v.r1.password+"&password2="+v.r1.password2+"&level="+v.r1.level)
 ]]></example>		
	</section>
<section>
<title>Creating the Show_Field_Values UX Component
</title>	
<steps>
	<step>
		<description>Display the Web Project Control Panel.
</description>
	</step>
		<step>
		<description>Click New > Alpha Anywhere Web Component > Dialog > OK.
</description>
	</step>
		<step>
		<description>On the Form > Controls menu add 3 Textboxes to the dialog.
</description>
	</step>
		<step>
		<description>Click File > Save As, enter Show_Field_Values, and click Save.
</description>
	</step>
	
</steps>	
	
</section>
<section>
	<title>Creating the Error_Page Page</title>
	<steps>
		<step>
			<description>Display the Web Project Control Panel.
</description>
		</step>
		<step>
			<description>Click New > Alpha Anywhere Web Page (A5W) > OK.
</description>
		</step>
		<step>
			<description>Click File > Save As, enter Error_Page, and click Save.
</description>
		</step>
		<step>
			<description>Click Insert Component > Select, select the Show_Field_Values dialog, and click OK.
</description>
		</step>
		<step>
			<description>Display the Source tab of the HTML Editor.
</description>
		</step>
		<step>
			<description><![CDATA[Enter the following code after the <body> tag.]]>
</description>
			<example><![CDATA[<p><font face=Verdana>
<%a5
if (password <> password2) then
? "Passwords do not match"
end if
if (val(level) < 0) then
? "The Level cannot be negative"
end if
if (val(level) > 20) then
? "The Level cannot be greater than 20"
end if
%>
</p></font> ]]></example>
		</step>
		
		
	</steps>
	
</section>
<section>
	<title>Displaying the Pages</title>
	<steps>
		<step>
			<description>Display the Web Project Control Panel.
</description>
		</step>
		<step>
			<description>Display the A5W Pages tab.
</description>
		</step>
		<step>
			<description>Right select the "Error_page" entry and click Publish (Local Webroot).
</description>
		</step>
		<step>
			<description>Right select the "Test_Field_Values" entry and click Publish (Local Webroot) and open.
</description>
		</step>
		<step>
			<description>After entering two passwords that do not match and clicking Submit, the following screens appear. 
</description>
<figure><link>images/WPT_Grid_Validate_1.gif</link></figure>
<figure><link>images/WPT_Grid_Validate_2.gif</link></figure>
		</step>
		<step>
			<description>After entering a value for Level that is greater than 20, the following screens appear. </description>
			<figure><link>images/WPT_Grid_Validate_3.gif</link></figure>
<figure><link>images/WPT_Grid_Validate_4.gif</link></figure>
		</step>
	</steps>
	
</section>
	
</sections>	
</page>