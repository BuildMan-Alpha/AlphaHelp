<page>
	<topic>Setting UX Properties</topic>
	<description>A run down on how to set different UX properties.</description>
<sections>
<section>
	<steps>
		<step>
			<description>Selecting Layout Options > Style name > '...' button > Select style displays the Select style dialog box. You can preview and select the Cascading Style Sheet that you would like to apply to the grid.</description>
		</step>
		<step>
			<description>Selecting Layout Options > Style name >'...' button > Edit Style displays the Webform Style Builder. Here you can save a style with a new name, then edit its characteristics to create a new stylesheet that will appear in the Select style dialog box.</description>
		</step>
	</steps>
	
</section>	
<section>
	<description>
Clicking the 'up' button on the Style drop down list displays the Select style dialog box. You can preview and select the Cascading Style Sheet that you would like to apply to the grid.
Clicking Edit Style displays the Webform Style Builder. Here you can save a style with a new name, then edit its characteristics to create a new stylesheet that will appear in the Select style dialog box.

</description>
	
</section>	
<section>
	<title>Advanced Properties</title>
	<cases>
		<case>
			<title>Layout Calculation Mode</title>
			<description>Enables alternate processing modes that can enhance performance. The options are:</description>
			<cases>
				<case>
					<description>"Standard"</description>
				</case>
				<case>
					<description>"Precalculate Layout"</description>
				</case>
			</cases>
			<example><![CDATA[tmpl.PreCalcMode as C ]]></example>
		</case>
		
		
	</cases>
	
</section>
<section>
	<title>Other Properties</title>
	<cases>
		<case>
			<title>Stylesheet</title>
			<description>Specifies the name of the stylesheet.</description>
			<example><![CDATA[tmpl.style_name as C ]]></example>
		</case>
			<case>
			<title>Component Name</title>
			<description>Specifies the name of the component.</description>
			<example><![CDATA[tmpl.ComponentName as C ]]></example>
		</case>
		
	</cases>
	
</section>

<section>
	<title>Client Events</title>
	<cases>
		<case>
			<title>Validate before submit</title>
			<description>This setting allows you to validate data on the form before the form is submitted. This requires Javascript to be enabled on the client browser. Rules for each control are defined in the Validation Rules for each control. Enable client side validation for each control by checking the Client side validation check box on the Controls page.</description>
			<example><![CDATA[tmpl.ValidateBeforeSubmit as L ]]></example>
		</case>
		
		
	</cases>
	
</section>


<section>
	<title>Dialog Footer Layout</title>
	<cases>
		<case>
			<title>Freeform layout</title>
			<description>Will there be a freeform layout?</description>
			<example><![CDATA[tmpl.dialogFooterHasFreeformLayout as L ]]></example>
		</case>
		<case>
			<title>Dialog footer template</title>
			<description>Specifies the buttons and formatting of the dialog footer.</description>
			<example><![CDATA[tmpl.dialogFooterTemplate = <<%html%
' code here
%html% ]]></example>
		</case>
		
	</cases>
	
</section>


<section>
	<title>Freeform Edit Regions</title>
	<cases>
		<case>
			<title>Above dialog</title>
			<description>HTML to appear above the dialog component.</description>
			<example><![CDATA[tmpl.EditRegion.Dialog.Top = <<%txt%
' code here
%txt% ]]></example>
		</case>
		<case>
			<title>Below dialog</title>
			<description>HTML to appear below the dialog component.</description>
			<example><![CDATA[tmpl.EditRegion.Dialog.Bottom = <<%txt%
' code here
%txt% ]]></example>
		</case>
		<case>
			<title>Left of dialog</title>
			<description>HTML to appear to the left of the dialog component.</description>
			<example><![CDATA[tmpl.EditRegion.Dialog.Left = <<%txt%
' code here
%txt% ]]></example>
		</case>
		<case>
			<title>Right of dialog</title>
			<description>HTML to appear to the right of the dialog component.</description>
			<example><![CDATA[tmpl.EditRegion.Dialog.Right = <<%txt%
' code here
%txt% ]]></example>
		</case>
		
		
	</cases>
	
</section>

<section>
	<title>Layout Options</title>
	<cases>
		<case>
			<title>Font size</title>
			<description>Specify if the fonts in the Web Component should be scaled to make the Web Component larger or smaller. Select 'Medium' for no scaling (i.e. the fonts shown will match those defined in the style sheet). The options are:</description>
			<cases>
				<case>
					<description>"Smallest"</description>
				</case>
				<case>
					<description>"Smaller"</description>
				</case>
				<case>
					<description>"Medium"</description>
				</case>
				<case>
					<description>"Larger"</description>
				</case>
				<case>
					<description>"Largest"</description>
				</case>
				
			</cases>
			
			<example><![CDATA[tmpl.fontsize as C
 ]]></example>
		</case>
		<case>
			<title>Show row labels
</title>
			<description>Enables or disables the display of labels next to each control.</description>
			<example><![CDATA[tmpl.show_row_labels as L ]]></example>
		</case>
		<case>
			<title>Position of field error messages</title>
			<description>Specify whether field validation error messages should be grouped together in the form header, or shown underneath the controls that have errors. The options are:</description>
			<cases>
				<case>
					<description>"Form Header"</description>
				</case>
				<case>
					<description>"Next to Control"</description>
				</case>
			</cases>
			<example><![CDATA[tmpl.Position_Field_Error_Messages as C ]]></example>
		</case>
		<case>
			<title>Number of "Layout" Columns</title>
			<description>Display the controls of the dialog in more than 1 column.</description>
			<example><![CDATA[tmpl.LayoutColumns as N ]]></example>
		</case>
		<case>
			<title>Use Free-Form Layout
</title>
			<description>Indicate that you want to create a free-form layout.</description>
			<example><![CDATA[tmpl.flagFreeForm as L ]]></example>
		</case>
		<case>
			<title>Free-Form Layout</title>
			<description>The HTML that defines the free-form layout.</description>
			<example><![CDATA[tmpl.FreeFormHTML as C]]></example>
		</case>
		
		
	</cases>
	
</section>

<section>
	<title>Submit/Reset Buttons</title>
	<cases>
		<case>
			<title>Has Submit button</title>
			<description>Does this dialog have a Submit button?</description>
			<example><![CDATA[tmpl.has_submit_button as L ]]></example>
		</case>
		<case>
			<title>Submit button label</title>
			<description>Label for the Submit button.</description>
			<example><![CDATA[tmpl.submit_button_label as C ]]></example>
		</case>
		<case>
			<title>Submit button in-line style</title>
			<description>Specify style attributes that override the settings inherited from the style sheet. Click  to display the Style Editor.</description>
			<example><![CDATA[tmpl.Variable_Info
.submit_button_inlinestyle as C ]]></example>
		</case>
		<case>
			<title>Has Reset button</title>
			<description>Does this dialog have a Reset button?</description>
			<example><![CDATA[tmpl.has_reset_button as L ]]></example>
		</case>
		<case>
			<title>Reset button label</title>
			<description>Label for the Reset button.</description>
			<example><![CDATA[tmpl.reset_button_label as C ]]></example>
		</case>
		<case>
			<title>Reset button in-line style</title>
			<description>Specify style attributes that override the settings inherited from the style sheet. Click  to display the Style Editor.</description>
			<example><![CDATA[tmpl.Variable_Info
.reset_button_inlinestyle as C ]]></example>
		</case>
		<case>
			<title>Align</title>
			<description>Specifies whether to align buttons at the left or right edge of the dialog.</description>
			<example><![CDATA[tmpl.button_alignment as C]]></example>
		</case>
		
		
	</cases>
	
</section>

<section>
	<title>Server Events</title>
	<cases>
		<case>
			<title>Declarations</title>
			<description>Use the Declarations section to define any User Defined Functions that you want to be available to all Xbasic event code. Click '...' to open the Form Events dialog box.</description>
			<example><![CDATA[tmpl.Declarations = <<%code%
' code here
%code% ]]></example>
		</case>
		<case>
			<title>Initialize</title>
			<description>The Initialize event fires the first time the form is run. The Initialize event is not fired when the form is run the second and subsequent times or when the form is submitted to itself. Click '...' to open the Form Events dialog box.</description>
			<example><![CDATA[tmpl.Initialize = <<%code%
' code here
%code% ]]></example>
		</case>
		<case>
			<title>Validate</title>
			<description>The Validate event fires every time the form is submitted. It is the first event that fires when the form is submitted to itself. If the code in the Validate event sets the Has_Error property of any object on the form to .T., Alpha Anywhere re-displays the form so that the user can correct errors, and then re-submit the form. Click '...' to open the Form Events dialog box.</description>
			<example><![CDATA[tmpl.Validate = <<%code%
' code here
%code%]]></example>
		</case>
		<case>
			<title>AfterValidate</title>
			<description>The AfterValidate event fires after the Validate event, but only if the Validate event code did not set any control's Has_Error property to .T. Click '...' to open the Form Events dialog box.</description>
			<example><![CDATA[tmpl.AfterValidate = <<%code%
' code here
%code% ]]></example>
		</case>
		<case>
			<title>Activate</title>
			<description>The Activate event fires every time the form is run. The Activate event fires after the Validate and AfterValidate events. Click '...' to open the Form Events dialog box.</description>
			<example><![CDATA[tmpl.Activate = <<%code%
' code here
%code% ]]></example>
		</case>
		
		
	</cases>
	<note>If you are writing your own Xbasic on a .A5W page, then to redirect to another page you use the RESPONSE.REDIRECT() method. However, if you are writing code in a Version 6 dialog event handler (such as  AfterValidate ) in a component, you cannot use RESPONSE.REDIRECT(). Instead you must set the currentform.redirectTarget = "target url" property.</note>
</section>
<section>
	<description>Web publishing applications only.</description>
</section>

	
</sections>	
	<see>
		<ref link="Setting Dialog Control Properties">Setting Dialog Control Properties</ref>
		<ref>Creating Dialog Components</ref>
	</see>
</page>