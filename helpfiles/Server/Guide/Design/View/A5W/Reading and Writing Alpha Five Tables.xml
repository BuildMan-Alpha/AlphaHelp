<page>
	<topic></topic>
<sections>
	<section>
		<description>One of the most common uses of the Application Server is displaying data from a database. This is quite easy to do now that you know how to include Xbasic in our pages. All that is needed is to use the Xbasic commands to open a table and retrieve data from it.</description>
		<note>The Publishing AlphaMovies topic describes techniques appropriate for Alpha Anywhere database users.</note>
	</section>
	
<section>
	<title>Displaying Data From a Table</title>
<steps>
	<step>
		<description>Create a new A5W page with the following content.</description>
		<example><![CDATA[&lthtml>
&lthead>&lttitle>Reading from a Table</title></head>
&ltbody>
<%A5
dim pTbl as P
pTbl = table.open("customer")
pTbl.fetch_first()
%>
&ltfont size=2 face=Verdana>Data from the Customer table</font>
&lttable BORDER="1">
     &lttr> 
         &lttd>&ltfont size=2 face=Verdana>Customer ID</font></td> 
         &lttd>&ltfont size=2 face=Verdana> <%A5 ? pTbl.customer_id %> </font></td> 
     </tr> 
     &lttr> 
         &lttd>&ltfont size=2 face=Verdana>First name</font></td> 
         &lttd>&ltfont size=2 face=Verdana> <%A5 ? pTbl.firstname %> </font></td> 
     </tr> 
     &lttr> 
         &lttd>&ltfont size=2 face=Verdana>Last name</font></td> 
         &lttd>&ltfont size=2 face=Verdana> <%A5 ? pTbl.lastname %> </font></td> 
     </tr> 
</table> 
<%A5
pTbl.close()
%>
</body> 
</html> 
 ]]></example>
	</step>
	<step>
		<description>Click the 'lightning' icon to run the page in Live Preview.
</description>

	</step>
	<step>
		<description>Select an entry from the list box and click Select. Things to note in this page include:
</description>
		<cases>
			<case>
				<description>pTbl is a Pointer variable. The process of opening a table returns a pointer variable, which thereafter is used to run all table methods.
</description>
			</case>
			<case>
				<description>The pTbl.fetch first() method returns the first record in the table.
</description>
			</case>
			<case>
				<description>The pTbl.close() method closes the table and makes it accessible to other persons and/or applications.
</description>
			</case>
			
		</cases>
	</step>
	<step>
		<description>Select File > Save As and name the page "Reading_from_a_Table".
</description>
		
	</step>
	<step>
		<description>Click  to run the page in Live Preview. 
</description>
		<figure><link>images/WPT_Reading_from_a_Table.gif</link></figure>
	</step>
	
	
</steps>	
	
</section>	
	<section>
		<description>The page opens the customer table, reads the first record, displays the values of three fields, then closes the table.
</description>
	</section>
	
	
	<section>
		<title>About Objects and Pointers
</title>
		<description>For those new to programming, it may be easy to understand the idea of a variable that contains a number or a character string. Understanding a pointer variable may be more challenging.
Pointers can be thought of as the "names" of objects (in reality to describe a pointer as the "location" of an object would be more precise).
When you refer to a particular object in Alpha Anywhere, you are defining that particular object as belonging to a category of objects that have similar characteristics that you can edit and that react to actions that you can create and control.
You can specify the appearance or display of an object by manipulating its characteristics and you can determine how an object reacts to user input by writing Xbasic scripts that control what happens when an object does something or is accessed by a user.
For example, you can think of a car as an object. You may own two cars which have similar properties and actions, but, of course, behave differently according to what those properties and actions are.
Lets say your two cars are:
</description>
<cases>
	<case>
		<description>Car1: Ford Focus
</description>
	</case>
	<case>
		<description>Car2: Masserati
</description>
	</case>
	
</cases>
	</section>
	
	<section>
		<description>Now, both of these are objects are particular objects of a certain type. They are cars. Since they are both cars you know, by definition, that they share certain characteristics. For example, a few of their shared characteristics are:</description>
		<cases>
	<case>
		<description>name</description>
	</case>
	<case>
		<description>color</description>
	</case>
	<case>
		<description>gas_Accepted</description>
	</case>
	<case>
		<description>top Speed</description>
	</case>
	<case>
		<description>current_Speed</description>
	</case>
	<case>
		<description>passenger_Capacity</description>
	</case>
</cases>
	</section>
	<section>
		<description>Characteristics of objects are referred to as  properties. The properties of your two car objects have values appropriate to their own characteristics. Some property values are shown below for the two cars.</description>
	</section>
	
	
	<section>
		<title>Object Type: Car</title>
		<cases>
			<case>
				<title>Car Object 1</title>
				<list>
					<item>
						<name-title>Property Name</name-title>
						<description-title>Property Value</description-title>
					</item>
					<item>
						<name>Name</name>
						<description>Ford Focus</description>
					</item>
					<item>
						<name>Color</name>
						<description>Blue</description>
					</item>
					<item>
						<name>Gas_Accepted</name>
						<description>Regular</description>
					</item>
					<item>
						<name>Top Speed</name>
						<description>95</description>
					</item>
					<item>
						<name>current_Speed</name>
						<description>0</description>
					</item>
					<item>
						<name>passenger_Capacity</name>
						<description>5</description>
					</item>
					
					
				</list>
				
			</case>
			<case>
				<title>Car Object 2</title>
				<list>
					<item>
						<name-title>Property Name</name-title>
						<description-title>Property Value</description-title>
					</item>
					<item>
						<name>Name</name>
						<description>Masserati</description>
					</item>
					<item>
						<name>Color</name>
						<description>Red</description>
					</item>
					<item>
						<name>Gas_Accepted</name>
						<description>Premium</description>
					</item>
					<item>
						<name>Top Speed</name>
						<description>195</description>
					</item>
					<item>
						<name>current_Speed</name>
						<description>0</description>
					</item>
					<item>
						<name>passenger_Capacity</name>
						<description>2</description>
					</item>
					
					
				</list>
				
			</case>
			
			
		</cases>
		
	</section>
	<section>
		<description>Objects 1 and 2 are both objects of type car and they both have the same collection of properties (as would all objects that are defined as Cars), though its the values of those properties that distinguish one object of the same type from another.
Objects of the same type also share actions or methods. These are things the objects do, rather than what the objects are.
In this example, all cars (or, in other words, all objects of type car) perform certain actions. These are:
</description>
	</section>
	
</sections>	
	
	
</page>