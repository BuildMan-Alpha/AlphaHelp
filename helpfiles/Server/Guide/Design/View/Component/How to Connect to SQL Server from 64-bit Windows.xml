<page>
	<topic>How to Connect to SQL Server from 64-bit Windows</topic>
<sections>
	
<section>
	<note>If you are running on a 64 bit operating system, the instructions are not intuitive. Alpha Anywhere is a 32-bit application and must connect through the 32-bit ODBC driver.</note>
</section>	
<section>
	<description>Alpha Anywhere SQL Server interface is a wrapper around Microsoft s SQL Server ODBC drivers (there are now three versions). If you are able to create a DSN with the Microsoft ODBC manager, then you will be able to connect with Alpha Anywhere as well.</description>
	<note>The instance name you use in your connection string must match the instance name of the server. You can use SQL Server Configuration Manager or SQL Server Management Studio to browse your instances.</note>
	
</section>

<section>
	<description>Please confirm that the following are in place:
</description>
<steps>
	<step>
		<description>The Microsoft ODBC driver for SQL Server is installed on the machine where Alpha Anywhere is running. Note that there are three different drivers from Microsoft. This is new since SQL Server 2005. Previously, updating the MDAC (Microsoft Data Access Components) package kept things current.
</description>
		<cases>
			<case>
				<description>SQL Server 2000 - MDAC (the classic ODBC driver)
</description>
			</case>
			<case>
				<description>SQL Server 2005 - Native Client version 9
</description>
			</case>
			<case>
				<description>SQL Server 2008 - Native Client version 10
</description>
			</case>
			
		</cases>
	</step>
	
	<step>
		<description>Make sure that TCP/IP is enabled as a protocol on both the client and the server machines. This part is more complicated. I suspect that Microsoft sets it up for local use deliberately.</description>
		<cases>
			<case>
				<description>1. Select the Administrative Tools option on the Windows Control Panel.</description>
			</case>
			<case>
				<description>2. From there, choose Computer Management and open the item in the tree labeled  Services and Applications .</description>
			</case>
			<case>
				<description>3. Finally, select SQL Server Configuration Manager .
</description>
			</case>
			<case>
				<title>On the Client Side</title>
				</case>
				<case>
					<description>1. Select SQL Native Client 10.0 Configuration (32bit) (for SQL Server 2008). Again, you want to make changes to the 32-bit configuration.</description>
				</case>
				<case>
					<description>2. Select the Client Protocols item.</description>
				</case>
				<case>
					<description>3. Make sure TCP/IP is enabled (you can right-click on the item to enable it).</description>
				</case>
				<case>
					<description>4. Double-click on the item to open the properties dialog.</description>
				</case>
				<case>
					<description>5. There will be a single dialog showing the port this should default to 1433, but you may want to check it.</description>
				
			</case>
			<case>
				<title>On the Server Side
</title>
				<description>1. Select SQL Server Network Configuration (32bit). Again, you want to make changes to the 32-bit configuration.
</description>
				
			</case>
			<case>
				<description>2. Select the Protocols for SQLEXPRESS item, or whatever name is appropriate for the instance you are configuring.
</description>
			</case>
			<case>
				<description>3. Make sure TCP/IP is enabled (you can right-click on the item to enable it).
</description>
			</case>
			<case>
				<description>4. Double-click on the item to open the properties dialog.
</description>
			</case>
			<case>
				<description>5. On the Protocol tab, make sure Enabled is set to Yes and  Listen All is set to  Yes 
</description>
			</case>
			<case>
				<description>6. There is a separate tab labeled IP Addresses . Note that this is plural.
</description>
<cases>
	<case>
		<description>You will need to make sure that the various IPV4 and the IPV6 ports are both Active and Enabled.</description>
	</case>
	<case>
		<description>This is especially true of the machine address IP (not just localhost 127.0.0.1).</description>
	</case>
	
</cases>
			</case>
	
		</cases>
	</step>
	<step>
		<description>You are able to create a connection from the Microsoft ODBC Data Source Administrator to SQL Server working locally on the server.
Do this by creating a System DSN for the driver you have installed. The driver will prompt you for connection information. Use the test button at the end to confirm you have a connection.
</description>
<note>If you are running a 64 bit version of Windows, you will need to run the 32-bit version of the ODBC Data Source Administrator typically found in c:\windows\syswow64\odbcad32.exe
</note>
	</step>
	
</steps>	
	
</section>

	
</sections>	
	
	
</page>