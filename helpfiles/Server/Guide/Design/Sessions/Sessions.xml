<page>
	<topic>Sessions</topic>
	<description>Web requests are stateless, that is each request from a client (web browser) to a server is separate from any previous requests and no information about previous requests is available to the current request. </description>
<sections>
	<section>
		<description>
			You should think of each page as a separate Xbasic script - once one is finished, the next knows nothing about the previous. This can make the building of web applications quite difficult as the developer needs to track this state information within each web page returned by the server.
			
			The Application Server uses sessions and Session Variables (as explained below) to overcome this limitation of web servers. as long as the server is licensed for a sufficient number of sessions, a request from a client will cause a new session to be created. The server will then associate future requests from that client with the same session until the session expires. A session expires when a request has not been received from the associated client within the time period set by Session Lifetime.

Sessions are normally tracked with cookies. However, clients are not required to accept cookies. Furthermore, you can turn off the use of cookies for session tracking altogether in the Application Server Control Panel. However when cookies are turned off or cookies are not enabled on a specific client computer, the server must work harder to track the session state, which has a performance impact. The recommendation is to leave cookies on and let the server automatically fall back to the cookieless operation only when required by a specific client connection.

When a session is created by the server, some information is automatically stored in it - the session ID and a timestamp. as an application developer, you can also store other information in the session in order to make it available to subsequent requests without explicitly passing it to that request.

To create a "session" level variable, simply name it session.varname. It will then be persistent across all page views and can be later referenced as  session.varname in subsequent pages.
To illustrate this limitation of web programming and the session solution, look at the following example.
</description>
		<example><![CDATA[<%A5 greeting = "Hello World" %>
<%A5 ? greeting %>
 ]]></example>
	</section>
	
</sections>	
	
</page>