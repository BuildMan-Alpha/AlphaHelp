<page>
	<topic>DotNet::Services.RegisterNamespace Method</topic>
	<syntax>RegisterNamespace as L (ParentNamespace as C, AssemblyNamespace as C, Assembly as DotNet::AssemblyReference)
</syntax>
	<arguments>
		<argument>
			<name>ParentNameSpace</name>
			<description>Optional. If an empty string is provided, the class is registered under the "DotNet" namespace.
</description>
		</argument>
	</arguments>
	<description>Connects a .NET namespace within an assembly, and all of its classes, to the Alpha Anywhere type system</description>
	
	<discussion>RegisterNamespace() connects a .NET namespace within an assembly, and all of its classes, to the Alpha Anywhere type system within an Alpha Anywhere namespace.

 The basic idea is that you can "register" a .NET assembly in an Alpha Anywhere namespace and use it as if it were built in. This type can be dimmed in any script after the type is registered. This can be useful where you only want a single namespace tree from an assembly to be visible, or when you have an assembly with multiple namespaces that belong in different trees.

 Once the assembly namespace is registered, which is required once per execution of Alpha Anywhere, instances can be DIMmed for each of its classes in any script.
</discussion>
	
<sections>
	<section>
		<title>Example</title>
		<description>Adding an assembly namespace from the global assembly cache to the XBasic type system.
</description>
		<example><![CDATA[Dim Assy as DotNet::AssemblyReference
Dim Services as DotNet::Services
Dim SourceNamespace as C = "SourceNamespaceInAssembly"
 
Assy.Name = "SampleAssembly"
Assy.Version = "1.0.2004.0"
Assy.Culture = "neutral"
Assy.PublicKeyToken = "8744b20f8da049e3"
 
If .not. Services.RegisterNamespace("MyNameSpace",  SourceNamespace, Assy) 
    UI_Msg_Box("Error registering assembly  namespace " + SourceNamespace \
      + " in " + Assy.Name, Services.CallResult.Text)
    End 
End if
 
Dim Instance as MyNameSpace::SourceNBamespaceInAssembly::MyClass]]></example>
	</section>
	
	
</sections>
<see>
	<ref>.NET Framework Support in Alpha Anywhere</ref>
	<ref>DotNet::AssemblyReference</ref>
	<ref>DotNet::Services</ref>
	<ref>CreateObject Method</ref>
	<ref>CallStaticFunction Method</ref>
	<ref>ConstructGenericTypeName Method</ref>
	<ref>GetStaticProperty Method</ref>
	<ref>SetStaticProperty Method</ref>
	<ref>RegisterClass Method</ref>
	<ref>RegisterAssembly Method</ref>
	<ref>RegisterNamespace Method</ref>
	<ref>GenerateWebServiceClientFromURL Method</ref>
	<ref>GenerateWebServiceClientFromWSDL Method</ref>
	<ref>Preloaded .NET Classes </ref>
	<ref>Writing Xbasic wrapper classes for .NET classes </ref>
	<ref>DotNetPath Function</ref>
	<ref>DotNet Examples </ref>
</see>
		
	
	
	
	
	
	
	
</page>