<page>
   <topic>SQL::DeleteStatement::Validate Function</topic>
   <syntax>Result_Flag as L = Validate([SQLConnection as SQL::Connection | SQLConnectionString as C] [UpdateStatistics as L])</syntax>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>SQL::DeleteStatement</name>
         <description>A SQL::DeleteStatement object.
</description>
     </argument>
     
     
     <argument>
         <name>SQLConnection</name>
         <description>

 
Optional. A SQL::Connection object and with a defined .ConnectionString property.
 </description>
     </argument>
   
   <argument>
         <name>SQLConnectionString</name>
         <description>
 
Optional. A connection string.
 </description>
     </argument>
   
   </arguments>
   <description>Execute the current statement using the current or passed connection.</description>
   <discussion>
The .Validate() method prepares the query and validates it, but does not execute it. (In some implementations the query is executed with a limit on rows set to 1). The intent is to force the query through a server side parse and report problems.
The method connects to the back-end database using the information in the SQL::Connection::ConnectionString property or in the ConnectString string, then executes the current SQL statement stored in the SQL::DeleteStatement.SQLStatement property.
Note: Not every database is thorough about validation.
   </discussion>
  
   <see>
      <ref>SQL::DeleteStatement Object</ref>
      <ref>About Validation</ref>
      <ref>Limitations</ref>
   </see>
 
</page>