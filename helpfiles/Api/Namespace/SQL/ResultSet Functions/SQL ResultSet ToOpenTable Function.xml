<page>
   <topic>SQL::ResultSet::ToOpenTable Function</topic>
   <syntax>Result_Flag as L = ToOpenTable(Table as P [, EventScript =  as C [, Rows = -1 as N [, StartRow = -1 as N [, Append = .t. as L [, MapByPosition = .f. as L ]]]]])</syntax>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>SQL::ResultSet</name>
         <description>A SQL::ResultSet object created with a DIM statement.
</description>
     </argument>
     
     
     <argument>
         <name>Table</name>
         <description>A pointer to an open Alpha Five .DBF table.
</description>
     </argument>
     <argument>
         <name> EventScript</name>
         <description>Optional. Default = "". An Xbasic Script implementing any of the following functions. In each case, the Context argument is the connection itself.
</description>
<list>
<item>
<name>UpdateBegin()</name>
</item>

<item>
<name>UpdateProgress()</name>
</item>

<item>
<name>UpdateEnd()</name>
</item>

</list>

     </argument>
     <argument>
         <name> Rows</name>
         <description>Optional. Default = -1 (all). The number of rows to copy.
</description>
     </argument>
     <argument>
         <name> StartRow</name>
         <description>Optional. Default = -1 (first). The first row to copy.
</description>
     </argument>
     <argument>
         <name> Append</name>
         <description>Optional. Default = .T. . Whether to append the data to the Table.
</description>
     </argument>
     <argument>
         <name> MapByPosition</name>
         <description>Optional. Default = .F. . If MapByPosition is false, AlphaDAO only copies column names in the result set that match a local table column.
</description>
     </argument>
   </arguments>
   <description>Fetch data from a result set to an open .DBF table
Notes:
1. If MapByPosition is false (the default) only column names in the result set that match a local table column will be copied.
2. The column types in the result set must match the respective column in the local table.</description>
   <discussion>
The ToOpenTable() method fetches data from the current SQL::ResultSet to an existing and open .DBF table. Columns in the query must match the type of the columns in the table. The query must not have more columns than the table.
Note : If this query had been SELECT * FROM customer, it would not have worked. The reason is that the data types of the customer_id columns in the Access customer and Alpha Anywhere customer tables are different.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim connString as C
dim select_exp as C
dim tbl as P
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select firstname, lastname, phone from customer where bill_state_region = 'ny'"
tbl = table.open("customer")
if .not. conn.open(connString)
   ui_msg_box("Error", conn.CallResult.text)
   end
end if
if .not. conn.execute(select_exp)
   ui_msg_box("Error", conn.CallResult.text)
   goto close_script
end if
rs = conn.ResultSet
if .not. rs.ToOpenTable(tbl, "", -1, -1, .T., .T.)
   ui_msg_box("Error", rs.CallResult.text)
end if
close_script:
tbl.close()
conn.close()
]]></example>
   
   <see>
      <ref>SQL::ResultSet Object</ref>
     
   </see>
 
</page>