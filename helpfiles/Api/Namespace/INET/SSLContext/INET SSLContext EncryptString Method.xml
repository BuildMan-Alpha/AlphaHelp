<page>
   <topic>INET::SSLContext::EncryptString Method</topic>
   <syntax>Result_Flag as C = EncryptString(ResultString as C, SourceString as C, Key as C | Key as B [, Algorithm as C [, Initializer as B]])</syntax>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>ResultString</name>
         <description>The plain text string.
</description>
     </argument>
     <argument>
         <name> SourceString</name>
         <description>The encoded string.
</description>
     </argument>
     <argument>
         <name>Key</name>
         <description>A binary value used to encode SourceString.
</description>
     </argument>
     <argument>
         <name> Algorithm</name>
         <description>Optional. Default = "Blowfish". The encoding algorithm to use. Refer to Encryption Algorithms.
</description>
     </argument>
     <argument>
         <name> Initializer</name>
         <description>Optional. An advanced feature requiring knowledge of the specific algorithm, much of which is not
clearly documented. Additional information to be provided by advanced users depending on the algorithm they use. Refer to the OpenSSL site at www.openssl.org for more information.
</description>
     </argument>
   </arguments>
   <description>Encrypts the string provided and encodes the encryption result using base64 encoding.
Note: This function is optional.  Use it if you want to verify a context.</description>
   <discussion>
The INET::SSLContext::EncryptString() encodes text using a variety of base64 encryption algorithms.
Note: The customer is responsible for verifying that they have met all legal requirements when using any algorithms other than the default.
Limitations: Desktop applications only.
   </discussion>
  
   <see>
      <ref>INET::SSLContext Object</ref>
   </see>
<terms>INET,socket,encryption,function,object,operation,string,users</terms>
</page>