<page>
   <topic>table.POST Function</topic>
   <syntax>V Post(), Specify the required values in the Post dot variable, then use the following command:</syntax>

<sections>
<section>
<list>
<item>
<name-title>Variable</name-title>
<description-title>Type and Description</description-title>
</item>

<item>
<name>Post.t_db
</name>
<description>
Type "C". The filename of the secondary, Transaction table.
 </description>
</item>

<item>
<name>Post.m_key
</name>
<description>Type "C". Contains expression strings that describe how fields or combinations of fields form the linking key in the primary, master table.
 </description>
</item>

<item>
<name>Post.t_key
</name>
<description>
Type "C". Contains expression strings that describe how fields or combinations of fields form the linking key in the secondary, transaction table.
 </description>
</item>

<item>
<name>Post.m_filter
</name>
<description>
Type "L". Optional. Default = .T. (All records). A character filter expression that specifies the records in the Master table that can be changed during the Post operation.
 </description>
</item>

<item>
<name>Post.t_filter
</name>
<description>
Type "L". Optional. Default = .T. (All records). A character filter expression that specifies which records from the secondary, transaction table will be posted. Only the subset of records that pass through the Post.t_filter are filter are used when searching for existing records.
 </description>
</item>

<item>
<name>Post.m_count
</name>
<description>Type "N". Indicates how many fields are being mapped for the Post operation.
 </description>
</item>

<item>
<name>Post.m_field1 ... Post.m_fieldN
</name>
<description>Type "C". N fields (1 ... N) that specify the names of the fields in the primary, master table, which is the target of the Post operation.
 </description>
</item>

<item>
<name>Post.m_exp1 ... Post.m_expN</name>
<description><![CDATA[N fields (1 ... N) that contain the value, field, or expression used to add, subtract, or replace values in the Master table. You must prefix the transaction table name with @ in expressions (e.g., @inv_items -> quantity ). The following table shows examples of how to form the expression for Replace, Add and Subtract posting operations:
]]></description>

<list>
<item>
<name-title>Master Field and Transaction Field</name-title>
<description-title>Operation and Expression</description-title>
</item>

<item>
<name>On_hand,     Inv_items->Qty</name>
<description><![CDATA[Replace, @inv_items -> qty]]>
 </description>
</item>

<item>
<name>On_hand,     Inv_items->Qty</name>
<description><![CDATA[Add, On_hand + @inv_items -> qty]]></description>
</item>

<item>
<name>On_hand,     Inv_items->Qty</name>
<description><![CDATA[Subtract, On_hand-@inv_items -> qty]]></description>
</item></list>
</item>
<item>
<name>Post.t_count</name>
<description><![CDATA[
Type "N". Updating the secondary, transaction table lets you change records used during the Post operation. as in the master mapping, each Transaction mapping is expressed through a group of parameters. post.t_count indicates how many fields are being mapped for the Post operation.
 ]]></description>
</item>

<item>
<name>Post.t_case1 ... Post.t_caseN
</name>
<description><![CDATA[Type "C". N fields (1 ... N) that specify the conditions under which the Transaction table will be updated. The following values are allowed.
]]></description>
<list>
<item><name>
"Posted" = Records that successfully posted a value(s) 
</name></item><item><name>
 "No-match" = Records that do not match any Master records 
 </name></item><item><name>
 "Violated" = Records that failed during the operation
 </name></item></list>
</item>

<item>
<name>Post.t_field1 ... Post.t_fieldN
</name>
<description><![CDATA[Type "C". N fields (1 ... N) that specify the name of the secondary, transaction Field to be updated
]]></description>
</item>

<item>
<name>Post.t_exp1 ... Post.t_expN

</name>
<description>Type "A". N fields (1 ... N) that contains a value, field, or expression assigned to the secondary, transaction field. You must prefix the transaction table name with @ in expressions (e.g., @inv_items -> quantity ). 
 </description>
</item>

</list>

</section>
</sections>

<sections>
<section><title>Description</title>
   <description>Replace, add, or subtract fields values in the table using fields from a transaction database.</description>
</section>
</sections>
   
<sections>
<section>
   <title>Discussion</title>
   <example><![CDATA[
   The <TBL>.POST() method is a high-level utility used to replace, add, or subtract field values in the Master table using field values from a Transaction table.
]]></example>
   </section>
   </sections>
   
   
   
   
<sections>
<section>
       <title>Example</title>
            <description><![CDATA[This script subtracts values from a transaction table ( Inv_item ) to the inventory table ( Product ). Only records not previously posted are posted (i.e. records for which POSTED = .f.).
]]></description>
            <example><![CDATA[
dim tbl as P
tbl = table.open("c:\a5\a_sports\product.dbf")
post.t_db = "c:\a5\a_sports\inv_item"
post.m_key = "PROD_NO"
post.t_key = "PROD_NO"
post.m_filter = ""
post.t_filter = ".not. POSTED"
post.m_count = 1
post.m_field1 = "QTY_ON_HAND"
post.m_exp1 = "QTY_ON_HAND - @INV_ITEM->QTY"
post.t_count = 0
tbl.post()
ui_msg_box("Note To User","Operation Complete")
]]></example>
</section>
</sections>
   
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Table Operation  Methods</ref>
      <ref>Writing Expressions</ref>
   </see>
  <terms>table,contains,defaults,expressions,field,filename,filter,forms,function,operation,record,searching,string,transactions,writing</terms>
</page>