<page>
   <topic>table.UNMARK_DUPS Function</topic>
   <syntax>V Unmark_Dups(C Dup_Key_Expression,C Filter_Expression)</syntax>
   <arguments>
     <argument>
         <name>Dup_Key_Expression</name>
         <description>Optional. Default = .T. (all records). A character  filter expression that evaluates to a logical value. Selects the records that will be checked for duplicates.
</description>
     </argument>
     <argument>
         <name>Filter_Expression</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description>Unmarks the duplicate records in the table.</description>
   <discussion><![CDATA[
The <TBL>.UNMARK_DUPS() method is a high-level utility method you use to unmark duplicate records in a table. The operation is performed on the records in the table pointed to by the object pointer, <TBL>.
A Duplicate_Key_Expression is a field or a combination of fields that Alpha Anywhere uses to determine which records in the table are considered duplicates. For example, if you consider a record with the same values in the Firstname, Lastname and Address1 fields to be a duplicate, the Duplicate_Key_Expression would be: Firstname + Lastname + Address1.
In order to unmark a subset of duplicate records, you can add a Filter to the script. Only records that satisfy the filter are checked for duplicates. If no Filter is specified, then all records are checked for duplicates, regardless of any query that might currently be applied to <TBL>.
Note : If you are unmarking records in a set with one-many child links off the parent table in which you are unmarking records, remember that if referential integrity is enabled, unmarking a parent record will result in all matching child records being unmarked as well.
 ]]>  </discussion>
  
   <sections>
       <section><title>Example</title>
            <description>This script unmarks all records in the current table that have the same PROD_ID field.</description>
            <example><![CDATA[
tbl = table.current()
tbl.unmark_dups("PROD_ID")
]]></example>
       </section>
       <section>
            <description>This script unmarks all records with PRICE > 100 in the current table that have the same PROD_ID field.</description>
            <example><![CDATA[
tbl = table.current()
tbl.unmark_dups("PROD_ID", "PRICE > 100")
]]></example>
       </section>
       
   </sections>
   <see>
      <ref>Table Functions and  Methods</ref>
      <ref>Writing Expressions</ref>
   </see>
<terms>table,defaults,expressions,filter,function,logical,record,script,writing</terms>
</page>