<page>
   <topic>table.COPY Function</topic>
   <syntax><![CDATA[V Copy(), Specify the required values in the Copy dot variable, then use the following command:
<TBL>.COPY()]]></syntax>
<arguments>

<argument>
<name>Copy.set

</name>
<description><![CDATA[
Type "C". If copying a table, set copy.set to a NULL string (""). If copying a set, specify the name of the set in the copy.set parameter.
]]> </description>
</argument>

<argument>
<name>Copy.db
</name>
<description>Type "C". Destination table filename.
</description>
</argument>

<argument>
<name>Copy.dd
</name>
<description>Type "C"</description>
<list><item>
<name>.T. (TRUE) = Copy the data dictionary (field rules, layouts, saved settings, etc.).</name>
</item>
<item>
<name>.F. (FALSE) = Do not copy the data dictionary.</name>
</item>
</list>

</argument>

<argument>
<name>Copy.records
</name>
<description>Type "L"</description>
<list><item>
<name>.T. (TRUE) = Copy all of the currently selected records (i.e., the active range, index, or query).</name>
</item>
<item>
<name>.F. (FALSE) = Do not copy records (i.e., an empty destination table is created).</name>
</item>
</list>
</argument>

<argument>
<name>Copy.delete_o_dd
</name>
<description>Type "L". The target table that you specify may already exist, and may have a data dictionary. If you specify that the data dictionary from the source table should not be copied, you can specify whether the target table's pre-existing dictionary (if any) should be retained, or deleted.</description>
<list><item>
<name>.T. (TRUE) = Delete the target table's pre-existing dictionary.</name>
</item>
<item>
<name>.F. (FALSE) = Retain the pre-existing dictionary.</name>
</item>
</list>
</argument>

<argument>
<name>Copy.fields
</name>
<description>Type "N". The number of fields to be copied.
</description>
</argument>


<argument>
<name>Copy.field1 ... Copy.fieldN
</name>
<description>Type "C". The name of each field to be copied
</description>
</argument>


</arguments>



   <description>Copy all or some of the fields from the table to another table or set.</description>
   <discussion><![CDATA[
The <TBL>.COPY() method is a high-level utility used to copy all or some of the fields from a table or set to a new table. The table to be copied is specified by the object pointer, 
<TBL>. In the case of a set, the &ltTBL> object pointer refers to the primary table in the set.
  ]]> </discussion>
 
   <sections>
       <section><title>Example</title>
            <description>This script copies the selected fields from the current table to a new table.</description>
            <example><![CDATA[
dim tbl as P
dim filename as C
filename = ui_get_file("Copy To:","Tables(*.DBF)","","N")
if filename = "" then
    end
end if
tbl = table.current()
copy.db = filename
copy.set = ""
copy.dd = .T.
copy.records = .T.
copy.delete_o_dd = .T.
copy.fields = 8
copy.field1 = "SALUTATION"
copy.field2 = "FIRST_NAME"
copy.field3 = "LAST_NAME"
copy.field4 = "ADDRESS_1"
copy.field5 = "ADDRESS_2"
copy.field6 = "CITY"
copy.field7 = "STATE_PROV"
copy.field8 = "ZIP"
tbl.copy()
]]></example>
       </section>
       
 <section>
            <description>This script copies selected fields from a set to a new table.</description>
            <example><![CDATA[
dim tbl as P
tbl = table.open("c:\a5\a_sports\invoice.set")
copy.db = "c:\a5\a_sports\copy.dbf"
copy.set = "c:\a5\a_sports\invoice.set"
copy.dd = .T.
copy.records = .T.
copy.delete_o_dd = .T.
copy.fields = 5
copy.field1 = "inv_head->inv_no"
copy.field2 = "customer->last_name"
copy.field3 = "inv_item->prod_no"
copy.field4 = "inv_item->quantity"
copy.field5 = "product->description"
tbl.copy()
]]></example>
       </section>       
       
   </sections>
   <see>
      <ref href="/Api/Functions/Document Types/DBF/Table Functions/Table Functions and Methods.html">Table Functions and  Methods</ref>
      <ref href="/Api/Objects/Table/Table Operation Methods.html">Table Operation  Methods</ref>
   </see>
  <terms>table,delete,dictionary,field,function,number,operation,record,script,set</terms>
</page>