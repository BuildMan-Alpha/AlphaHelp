<page>
   <topic>A5.APPEND_ENUM Function</topic>
   <prototypes><prototype>.Append_Enum(C lastname|N object_enum_flags)</prototype>
   
   <prototype>Operation_List as C = :A5.APPEND_ENUM( [ object_enum_flags N ] )</prototype>
   <prototype>Character Next_Operation= :A5.APPEND_ENUM(lastname as C)</prototype>
   </prototypes>
   <arguments>
   
 <argument>
         <name>Operation_List </name>
         <description>Full filenames for the append operations stored in the currently open table.
</description>
     </argument>
   
 <argument>
         <name>Next_Operation</name>
         <description>The next operation of the type.
</description>
     </argument>
 <argument>
         <name>object_enum_flags</name>
         <description>Optional. Default = Null.</description>
<list>
<item><name>
Null = Operation name, full path, and filename.
</name></item><item><name>
2 = Operation name
</name></item><item><name>
4 = Operation type, Object name, full path, and filename
</name></item><item><name>
8 = Quoted operation name, full path, and filename.
</name></item><item><name>
12 = Operation type, quoted operation name, full path, and filename formatted for tree control.         
</name></item>
</list>
     </argument>
   
     <argument>
         <name>lastname</name>
         <description>The quoted name of an operation.
</description>
     </argument>
     
     
     
     
     
   </arguments>
   <description>Returns name of next saved Append operation.</description>
   <discussion>
The APPEND_ENUM() method returns the name of the next saved append operation.
   </discussion>
 
   <sections>
       <section><title>Example</title>
            <description>This script populates an array with all of the append operations in a database.</description>
            <example><![CDATA[
dim operation_names 100 as C
operations_names.initialize(:a5.append_enum())
]]></example>
       </section>
       
       <section>
            <description>This script brings up a list of the append operations and then runs the append if the user selects one</description>
            <example><![CDATA[
dim operation_names 100 as C
append_name = :a5.append_enum("")
if (append_name <>"") then
    i = 1
    'While the append_enum method returns nonblank names, get next name
    while append_name <>""
        operation_names i= append_name
        append_name = :a5.append_enum(append_name)
        i = i + 1
    end while
    'sort the array, otherwise names will be in order in which operations were created.
    operation_names.sort()
    ' Show the user a list of names
    result = ui_get_list_array("Select append", 1, "operation_names")
    ' If the user selects an append, then run it
    if (result <>"") then
        :append.run(result)
    end if
else
    message = "Cannot perform a saved append operation "
    message = message + "because there are no saved appends defined"
    ui_msg_box("No append operations", message, UI_ATTENTION_SYMBOL)
end if
? a5.Append_Enum("Append3@c:\databases\expressions test\ed2.ddd")
= "Append2@c:\databases\expressions test\ed2.ddd"
? a5.Append_Enum(12)
= APPEND."Append3@c:\databases\expressions test\ed2.ddd"
APPEND."Append2@c:\databases\expressions test\ed2.ddd"
APPEND."Append1@c:\databases\expressions test\ed2.ddd"
? a5.Append_Enum(4)
= APPEND Append3@c:\databases\expressions test\ed2.ddd
APPEND Append2@c:\databases\expressions test\ed2.ddd
APPEND Append1@c:\databases\expressions test\ed2.ddd
? a5.Append_Enum(2)
= Append3
Append2
Append1
? a5.Append_Enum()
= Append3@c:\databases\expressions test\ed2.ddd
Append2@c:\databases\expressions test\ed2.ddd
Append1@c:\databases\expressions test\ed2.ddd
]]></example>
       </section>
       
       
       
       
   </sections>
   <see>
      <ref>A5 Enumeration Methods</ref>
      <ref href="/Api/Objects/Table/Table Operation Methods.html">Table Operation Methods</ref>
   </see>
  <terms>a5,array,enumeration,filename,function,list,object,operation,script</terms>
</page>