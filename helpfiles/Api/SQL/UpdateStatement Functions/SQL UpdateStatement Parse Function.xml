<page>
   <topic>SQL::UpdateStatement::Parse Function</topic>
   <syntax>Result_Flag as L = Parse([SQLStatement as C])</syntax>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>SQL::UpdateStatement</name>
         <description>A SQL::UpdateStatement object.
</description>
     </argument>
     
     
     <argument>
         <name>SQLStatement</name>
         <description>Optional. A Portable SQL statement.
</description>
     </argument>
   </arguments>
   <description>Parse the SQLStatement passed (or the value previously set into the SQLStatement property).</description>
   <discussion>
The .Parse() method parses the SQL_Statement string (or the value previously set into the SQL::UpdateStatement.SQLStatement property).
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim upd as SQL::UpdateStatement
dim sql_update as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
sql_update = "update customer set bill_city = 'Phoenix', bill_postal_code = '08000', bill_state_region = 'AZ' where customer_id = 1"
if .not. conn.open(connString) then
    end
end if
if .not. upd.parse(sql_update) then
    ui_msg_box("Error", upd.callresult.text)
    end
end if
if .not. upd.execute(conn) then
    end
end if
]]></example>
   
   <see>
      <ref>SQL::UpdateStatement Object</ref>
     
   </see>
 
</page>