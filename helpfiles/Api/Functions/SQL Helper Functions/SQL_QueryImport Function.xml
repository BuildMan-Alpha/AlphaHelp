<page>
   <topic>SQL_QueryImport Function</topic>
   <syntax>ResultObject as P = SQL_QueryImport(P SqlConn ,C query ,C localfilename [,* TableInfo  [,L ShowProgress [,L AllowCancel [,L AddTableToDatabase [,* ArgumentsPassedIn [,C StatusBarFormatString ]]]]]])</syntax>
   <arguments>
     <argument>
         <name>ResultObject</name>
         <description>Returns the result of the action. The following properties are returned:</description>
  <list>
  <item><name>
  .HasError = .T. if there was an error, .F. if the query was imported
</name></item><item><name>
.ErrorText = contains the error text if there was an error
</name></item><item><name>
.UserCancelled =  .T. if the user cancelled before the import completed
  </name></item>
  </list>
     </argument>
     <argument>
         <name>SqlConn</name>
         <description>A SQL::Connection object.</description>
     </argument>
     <argument>
         <name>query</name>
         <description>A SQL SELECT query that selects records from the target database.</description>
     </argument>
     <argument>
         <name>localfilename</name>
         <description>The path and name of the local Alpha Anywhere .DBF table to create.</description>
     </argument>
     <argument>
         <name>TableInfo</name>
         <description>A SQL::TableInfo object. If you do not need to specify a value for this argument enter null_value().
</description>
     </argument>
     <argument>
         <name>ShowProgress</name>
         <description>Logical. Optional. Indicates whether to show a progress dialog. Default is .T.</description>
     </argument>
     <argument>
         <name>AllowCancel</name>
         <description>Logical. Optional. Indicates whether the user is allowed to cancel the import before it has completed. Default is .T.
</description>
     </argument>
     <argument>
         <name>AddTableToDatabase</name>
         <description>Logical. Optional. Indicates whether the local table should be added to the local Database (i.e. the .adb file). Default is .T. (If you don't need the table to be part of the local Database, you can save time by setting this flag to .F.)
</description>
     </argument>
     <argument>
         <name>ArgumentsPassedIn</name>
         <description>If your query references any arguments, you can pass in values for these arguments. If you do not need to specify a value for this argument, enter null_value().
</description>
     </argument>
     <argument>
         <name>StatusBarFormatString</name>
         <description>Character</description>
     </argument>
   </arguments>
   <description> Import a SQL query into a native Alpha Five (.dbf) table. Optionally adds the table to the current database.</description>
   <discussion>
The SQL_QueryImport() function imports a table from a back-end SQL database into an Alpha Anywhere .DBF table.
Limitations: Desktop applications only..
   </discussion>
   <example><![CDATA[
dim cn as sql::connection
dim cs as c 
cs = "Your connection string goes here"
dim sqlquery as c 
sqlquery = "select * from customers where city = :whatCity"
dim args as sql::arguments
args.set("whatCity","London")

dim flag as l 
flag = cn.open(cs)
if flag = .f. then 
     ui_msg_box("Error","Could not connect: " + cn.callresult.text)
     end 
end if 

dim resultP as p 
resultP = SQL_QueryImport(cn,sqlquery,"c:\data\customers.dbf",null_value(),.t.,.t.,.t.,Args)

]]></example>
   
   <see>
      <ref>SQL_TableImport()</ref>
      <ref>SQL_TableImportDialog()</ref>
   </see>
 
<terms>sql helper,contains,database,error,function,import,query,save,sql,sql database,sql query,time</terms>
</page>