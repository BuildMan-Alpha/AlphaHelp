<page>
   <topic>System Functions</topic>
   <description>File system, HTTP ,FTP and operating system functions.</description>
   <!--list:.-->
   
   <sections>
     <section>
       <title>Related Directory Functions</title>
       
     </section>
     <section>
       <description>A5.GET_EXE_PATH()
Returns the path of the Alpha Anywhere executable.</description>
     </section>
      <section>
       <description>A5.GET_MASTER_PATH()
Returns the path of the master database from which the current shadow database was derived.
</description>
     </section>
      <section>
       <description>A5.GET_MASTER_NAME()
Returns the path of the master database from which the current shadow database was derived.
</description>
     </section>
      <section>
       <description>A5.GET_PATH()
Returns the path of the currently open .ADB database file. It is a useful function when you want to make an application portable between computers.
</description>
     </section>
      <section>
       <description>A5.GET_PRIVATE_PATH()
Returns the current user's local path. This is where the queries that the user runs get stored.
</description>
     </section>
      <section>
       <description>A5.GET_SHARED_PATH()
Returns the shared Alpha Anywhere path. This is where the help files and executables for Alpha Anywhere are stored.
</description>
     </section>
      <section>
       <description>A5_GET_WRITABLE_DRIVES()
Returns a list of writable drives.
</description>
     </section>
      <section>
       <description>DIR_REMOVE_RECURSE()
Recursively removes directories and files from the current directory and its child directories.
</description>
     </section>
      <section>
       <description><FILEFIND>.IS_DIRECTORY()
Returns .T. if the file referenced by the object pointer is a directory.
</description>
     </section>
      <section>
       <description>FILE.COPY_FOLDER()
Copies all files and subfolders from Source_Folder to Target_Folder.
</description>
     </section>
      <section>
       <description>FILE.DIR_CREATE()
Creates a new directory.
</description>
     </section> 
     <section>
       <description>FILE.DIR_CREATE_RECURSE()
Creates a folder, creating as many subfolders as necessary.
</description>
     </section>
      <section>
       <description>FILE.DIR_GET()
Returns the current directory.
</description>
     </section>
      <section>
       <description>FILE.DIR_PUT()
Changes the current location to the specified directory.</description>
     </section>
      <section>
       <description>FILE.FILENAME_PARSE()
Returns the directory component of a file name.</description>
     </section>
      <section>
       <description>FILE.TEMP_PATH_GET()
Returns the path of your temporary directory.</description>
     </section>
      <section>
       <description>FILE.WATCH_CREATE()
Allows you to monitor the activity in a particular folder on your computer, and automatically execute Xbasic code when events occur.
</description>
     </section>
      <section>
       <description>FILEFIND.FIRST()
The FILEFIND.FIRST() method creates the object pointer that can be used to find all of the files in a directory.
</description>
     </section>
      <section>
       <description>FILEFIND.GET()
The FILEFIND.GET() method creates a CR-LF delimited string with information about the files in a directory that match a pattern.
</description>
     </section>
      <section>
       <description>WIN_CREATE_SHORTCUT()
Creates a shortcut to a specified program.
</description>
     </section>
      <section>
       <description>WIN_SPECIAL_FOLDER()
Returns the path to the specified Windows special folder, such as the Desktop folder.
</description>
     </section>
   </sections>
   
   
   <sections>
     <section>
       <title>Related Email Functions</title>
       <description>SET.SEND()
Emails a set using either the Alpha Five internal email client or a third party email client.</description>
     </section>
     <section>
       <description>TABLE.SEND()
Emails a table using either the Alpha Five internal email client or a third party email client.</description>
     </section>
      <section>
       <description>UI_EMAIL_SETTINGS()
Displays the Email Settings dialog box.</description>
     </section>
      <section>
       <description>UI_GET_EMAIL_TEMPLATES()
Displays the Retrieve Email Message dialog box and returns the selected profile.
</description>
     </section>
      <section>
       <description>email_send_noprofile()
Sends an email message, doing its own setup and teardown of the SMTP connection. Can use Alpha Five or .NET Framework SMTP.</description>
     </section>
     </sections>
     
     <sections>
      <section>
   
       <description>The following table contains Netmailer functions.</description>
     </section>
      <section>
       <description>A5_RUN_EMMJ()
Choose a Netmailer Maintenance Job from a table or set and run it.</description>
     </section>
     
   </sections>
   
   
   
   
   <sections>
     <section>
       <title>Related Encryption Functions</title>
       <description>API_UUIDCREATE() - Returns a Universally Unique Identifier (UUID...otherwise known as a Globally unique ID or GUID).
</description>
       
     </section>
     <section>
       <description>CCVALID() - CCVALID()returns .T. (TRUE) if a field contains a valid Credit_Card_Number. DEFAULT_ENCRYPTION_</description>
     </section>
     
      <section>
       <description>KEY_SET() - Sets the default key that Alpha Anywhere will use to encrypt and decrypt tables.
</description>
     </section>
     
      <section>
       <description><![CDATA[<TBL>.DECRYPT() - Decrypts a table. ]]></description>
     </section>
     
      <section>
       <description><![CDATA[ <TBL>.ENCRYPT() - Encrypts a table.]]></description>
     </section>
     
      <section>
       <description><![CDATA[<TBL>.ENCRYPTED() - Returns .T. (TRUE) if the table is encrypted.]]></description>
     </section>
     
      <section>
       <description></description>
     </section>
     
     
   </sections>
   
   
   <sections>
     <section>
       <title>Related File Functions</title>
      <description>FILE.APPEND()
Appends character or blob data to a file.</description>       
     </section>
     <section>
       <description>FILE.APPEND_LINE()
Appends character data to a file.</description>
     </section>
      <section>
       <description>.ATTRIBUTES_SET()
Sets the attributes for filename.</description>
     </section>
      <section>
       <description>.ATTRIBUTES_GET()
Gets the attributes of filename.</description>
     </section>
      <section>
       <description>.COPY()
Copies Source Filename to the Destination Filename.</description>
     </section>
      <section>
       <description>.COPY2()
Copies a file to a new location, creating the target folder(s) if they do not exist.</description>
     </section>
      <section>
       <description>.COPY_FOLDER()
Copies files and subfolders from one folder to another.</description>
     </section>
      <section>
       <description>.CREATE()
Creates and opens a new file, returning the object pointer reference to the file.</description>
     </section>
      <section>
       <description>.CREATE_TIME()
Returns the date/time that Filename was created.</description>
     </section>
      <section>
       <description>.DEPENDENCIES()
Determines if the master file, which is based on transaction files, is out of date.</description>
     </section>
      <section>
       <description>.DIR_CREATE()
Creates a new directory.</description>
     </section>
      <section>
       <description>.DIR_CREATE_RECURSE()
Creates a new directory, creating all the intermediate directories that are required.</description>
     </section>
      <section>
       <description>.DIR_GET()
Gets the current directory.</description>
     </section>
     
      <section>
       <description>.DIR_PUT()
Moves to a directory.</description>
     </section>
     
     <section>
       <description>.DIR_REMOVE()
Deletes a directory.</description>
     </section>
     
     <section>
       <description>.DRIVE_SPACE_AVAIL()
Returns the number of bytes of available space on Drive.</description>
     </section>
     <section>
       <description>.DRIVE_SPACE_TOTAL()
Returns the size in bytes of Drive.</description>
     </section>
     <section>
       <description>.DRIVE_TYPE()
Returns the type of Drive.</description>
     </section>
     <section>
       <description>.DRIVES_GET()
Returns a list of all of the logical drives.</description>
     </section>
     <section>
       <description>.EXISTS()
Determines if a file exists on disk.</description>
     </section>
     <section>
       <description>.FILENAME_PARSE()
Returns the specified component (drive, path, name or extension) of Filename.</description>
     </section>
     <section>
       <description>.FROM_BLOB()
Creates a file from binary data.</description>
     </section>
     <section>
       <description>.FROM_PROPERTY()
Creates a file from a pointer (dot) variable.</description>
     </section>
     <section>
       <description>.FROM_STRING()
Creates a file from a character string.</description>
     </section>
     <section>
       <description>.FTP_PARSE()</description>
     </section>
     <section>
       <description>.LONGNAME_TO_</description>
     </section>
     
     <section>
       <description>SHORTNAME()
Converts Windows long path names to the old style 8.3 Windows filename format.</description>
     </section>
     <section>
       <description>.MACHINES_GET()
Returns a list of network drives, machines, and printers.</description>
     </section>
     <section>
       <description>.OPEN()
Opens a data file for input or output and returns the object pointer to the file.</description>
     </section>
     <section>
       <description>.READ_TIME()
Returns the date/time that Filename was last read.</description>
     </section>
     <section>
       <description>
.REMOVE()
Erases a particular file, removing it from the disk.</description>
     </section>
     <section>
       <description>.RENAME()
Changes the name of a file.</description>
     </section>
     <section>
       <description>.SEND()
Sends multiple files via the current MAPI email client, or the built-in Alpha Anywhere email client.</description>
     </section>
      <section>
       <description>.SHORTNAME_TO_</description>
     </section>
     <section>
       <description>LONGNAME()
Converts an old style 8.3 Windows filename to a long name.</description>
     </section>
      <section>
       <description>
.SIZE()
Returns the size of a file.</description>
     </section>
     <section>
       <description>.TEMP_CREATE()
Creates a temporary data file with a unique name.</description>
     </section>
      <section>
       <description>.TEMP_PATH_GET()
Returns the path to the temporary directory.</description>
     </section>
     <section>
       <description>.TO_BLOB()
Reads a binary file from disk into a blob variable.</description>
     </section>
      <section>
       <description>
.TO_PROPERTY()
Reads a file created by the FILE.FROM_PROPERTY() method and returns its contents as a string.</description>
     </section>
     <section>
       <description>
.TO_STRING()
Reads a file from disk into a text variable.</description>
     </section>
      <section>
       <description>
.UNZIP()
Extracts the files that match the mask from Zip_Filename, and places the files in the Output_Directory.</description>
     </section>
     <section>
       <description>.UPDATE_TIME()
Returns the date/time that filename was last updated.</description>
     </section>
     <section>
       <description>
.WATCH_CREATE()
Allows you to monitor the activity in a particular folder on your computer, and automatically execute Xbasic code when events occur.</description>
     </section>
     <section>
       <description>.WATCH_DESTROY()
Removes a watch set by FILE.WATCH_CREATE().</description>
     </section>
     <section>
       <description>
.WATCH_ENUMERATE()
Lists the "watches" set by the FILE.WATCH_CREATE() method.</description>
     </section>
     <section>
       <description>.ZIP()
Adds a file or files to a zip file called Zip_Filename.</description>
     </section>
     <section>
       <description>.ZIPLIST()
Returns a character string with all of the files in Zip_Filename, formatted according to the Format_String.</description>
     </section>
     
     <section>
       <description>Prefix the following methods with the object pointer. Use the FILE.OPEN() to retrieve the object pointer.</description>
     </section>
     
     <section>
       <description>.BYTES_GET()
Returns the number of bytes in a file.</description>
     </section>
     <section>
       <description>.CHARS_GET()
Returns the number of characters in a file.</description>
     </section>
   </sections>
   
    <section>
       <description>.CLASS()
Returns the class of the file.</description>
     </section>
     <section>
       <description>.CLOSE()
Closes the file referenced by the object pointer.</description>
     </section>
   </sections>
   
    <section>
       <description>
.EOF()
Returns TRUE if the end of the file.</description>
     </section>
     <section>
       <description>.FLUSH()
Flushes output held in the disk cache, to assure all output is stored safely in the file.</description>
     </section>
   </sections>
   
    <section>
       <description>.IS_VALID()
Determines if the file pointer is valid.</description>
     </section>
     <section>
       <description>.POS_GET()
Returns the position in the file of the file pointer.</description>
     </section>
   </sections>
   
    <section>
       <description>.READ()
Retrieves a specified Number of Characters from a file starting at the current file offset.</description>
     </section>
     <section>
       <description>
.READ_LINE()
Retrieves text data from the current file offset to the end of the line.</description>
     </section>
     <section>
       <description>.READB()
Retrieves a specified Number of Bytes from a file starting at the current file offset.
</description>
     </section>
      <section>
       <description>.SEEK()
Sets the position of the file pointer to a Byte Offset (measured in bytes) in relation to the beginning of the file.
</description>
     </section>
      <section>
       <description>.TEXT_ENCODING()
Returns the text encoding method.
</description>
     </section>
      <section>
       <description>.WRITE()
Transfers the contents of a Text string to the location of the current file pointer in the open file.
</description>
     </section>
      <section>
       <description>.WRITE_LINE()
Writes a line of text data (Text Line) to the location of the current file pointer.
</description>
     </section>
      <section>
       <description>.WRITEB()
Transfers the contents of a blob to the location of the current file pointer.
</description>
     </section>
      <section>
       <description>Alpha Anywhere provides the following useful file functions.</description>
     </section>
      <section>
       <description>A5_AddTempFile()
Registers a temporary file that Alpha Anywhere will delete when you exit Alpha Anywhere.
</description>
     </section>
      <section>
       <description>A5_FileAttributeHelp()
Displays the FileFind Attribute Codes dialog and returns the selected attribute codes.
</description>
     </section>
      <section>
       <description>A5_FileAttributeHelper()
Displays the Select File Attribute dialog and returns the selected attribute codes.
</description>
     </section>
      <section>
       <description>A5_PROMPT_FILES_IN_DB()
Displays a selection dialog and returns a list of database and web publishing files.
</description>
     </section>
      <section>
       <description>A5_SYNCHRONIZE_FOLDERS()
Returns a dot variable containing lists of the files and folders in Folder1 and Folder2 that have different update times.
</description>
     </section>
      <section>
       <description>COPY_FOLDER()
Copies all of the files in the Source_Folder to the Target_Folder.
</description>
     </section>
     
      <section>
       <description>EOF()
Returns .T. (TRUE) if the record pointer is at the end of the file for the table specified by its Table Handle; otherwise, it returns .F. (FALSE).
</description>
     </section>
      <section>
       <description>FILE_COPY()
Copies Source Filename to Destination Filename.</description>
     </section>
      <section>
       <description>FILES_IN_SET()
Creates a CR-LF delimited character string containing the fully qualified names of the components of the set.</description>
     </section>
       <section>
       <description>LIST_FILES_IN_SET()
Creates a CR-LF delimited character list containing the fully qualified names of the components of the set.
</description>
     </section>
       <section>
       <description>UI_GET_FILE()
Allows the user to select a path and filename.
</description>
     </section>
       <section>
       <description>UI_GET_FILES_</description>
     </section>
       <section>
       <description>MULTIPLE()
Allows the user to select files.
</description>
     </section>
       <section>
       <description>UNZIP_FILELIST()
Extracts all or specified files from a ZIP file to a specified directory.
</description>
     </section>
     
   </sections>
   
   
   
   
   <sections>
     <section>
       <title>Related Filename Functions</title>
       <description>A5.GET_MASTER_NAME()
Returns the name of the master database if the workstation is shadowed.</description>
     </section>
     <section>
       <description>A5.GET_NAME()
Returns the filename of the current database.</description>
     </section>
         <section>
       <description>FILE.ATTRIBUTES_GET()
Gets the attributes of Filename.</description>
     </section>
         <section>
       <description>FILE.ATTRIBUTES_SET()
Sets the attributes of Filename.</description>
     </section>
         <section>
       <description>FILE.FILENAME_PARSE()
Returns the name component of a filename.</description>
     </section>
         <section>
       <description>FILES_IN_SET()
Creates a CR-LF delimited character string containing the fully qualified names of the components of the set.</description>
     </section>
         <section>
       <description>FILES_IN_TABLE()
Creates a CR-LF delimited character string list containing the fully qualified names of the components of the table.</description>
     </section>
         <section>
       <description>LIST_FILES_IN_SET()
Creates a CR-LF delimited character list containing the fully qualified names of the components of the set.</description>
     </section>
       
   </sections>
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   <sections>
       <section>
           <title>Related System Functions</title>
       </section>
       <section>
           <description>A5_GET_WRITABLE_DRIVES()
Returns a list of drives that are writeable.
</description>
       </section>
         <section>
           <description>API_GETUSERS()
Returns a list of the users of a computer or domain.</description>
       </section>
         <section>
           <description>FILE.DRIVE_SPACE_AVAIL()
Returns the number of bytes of available space on Drive.</description>
       </section>
         <section>
           <description>FILE.DRIVE_SPACE_TOTAL()
Returns the size in bytes of Drive.</description>
       </section>
         <section>
           <description>FILE.DRIVE_TYPE()
Returns the type of Drive.</description>
       </section>
         <section>
           <description>FILE.DRIVES_GET()
Returns a list of all of the logical drives.</description>
       </section>
         <section>
           <description>FILE.MACHINES_GET()
Returns a list of network drives, machines, and printers.</description>
       </section>
         <section>
           <description>SYS_ID_ENUM()
Creates a CR-LF delimited character string that lists the windows currently available on your system.</description>
       </section>
         <section>
           <description>SYS_ID_GET()
Obtains the Window_Handle of a program that is identified by its Window_Title.</description>
       </section>
         <section>
           <description>SYS_ID_HIDE()
Hides the window specified by Window_Name.</description>
       </section>
         <section>
           <description>SYS_ID_MAXIMIZE()
Maximizes the window named Window_Name and brings it to the foreground.</description>
       </section>
         <section>
           <description>SYS_ID_MINIMIZE()
Minimizes the window named Window_Name.</description>
       </section>
        <section>
           <description>SYS_ID_MOVE()
Moves the window named Window_Name to the new location on the screen specified by Left_Position and Top_Position.</description>
       </section>
         <section>
           <description>SYS_ID_POSITION_GET()
Returns a character string the contains the location of Window_Name.</description>
       </section>
        <section>
           <description>SYS_ID_RESIZE()
Resizes the window named Window_Name to the dimensions specified by Width and Height.</description>
       </section>
         <section>
           <description>SYS_ID_RESTORE()
Returns Window_Name to the size and screen coordinates that it has before a SYS_ID_MAXIMIZE()or SYS_ID_MINIMIZE()command.</description>
       </section>
       <section>
           <description>SYS_ID_SHOW()
Opens the window specified by Window_Name.</description>
       </section>
       <section>
           <description>SYS_ID_SIZE_GET()
Returns a character string containing the width and height in inches of Window_Name.
</description>
       </section>
       <section>
           <description>WIN_TIME()
Returns information about a computer's time settings.</description>
       </section>
           
       
   </sections>
   
   
   
   
   <sections>
       <section>
           <title>Related Thread Functions</title>
           <description>THREAD.CURRENT()
Returns a pointer to the current thread.</description>
       </section>
       <section>
           <description>THREAD.GET()
Returns a pointer to the named thread.</description>
       </section>
         <section>
           <description>THREAD.UI_DISABLED()
Returns the disabled status of the current thread.</description>
       </section>
       
       
   </sections>
   <see>
       <ref>THREAD.traceMapping Property</ref>
       <ref>Using Threads</ref>
       <ref>Developer Functions</ref>
       <ref>Window Functions and Methods</ref>
       <ref>FILEFIND Methods</ref>
       <ref>File Functions and Methods</ref>
       <ref>Database Functions</ref>
       <ref>Filename Functions</ref>
       <ref><![CDATA[<EMAIL> Pointer Properties]]></ref>
       <ref><![CDATA[Netmailer Overview]]></ref>
       <ref>Security Functions</ref>
       <ref>Database Functions</ref>
       <ref>Directory Functions</ref>
       <ref>Filename Functions</ref>
       <ref>FILEFIND Methods</ref>
       <ref>File Functions and Methods</ref>
     
   </see>
   
</page>