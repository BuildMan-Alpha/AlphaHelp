<page>
   <topic>CROSSLEVEL Function</topic>
   <syntax>L crosslevel(filter)</syntax>
   <arguments>
     <argument>
         <name>filter</name>
         <description>A character filter expression that evaluates to a logical value and selects records from the set.
</description>
     </argument>
   </arguments>
   <description>Returns the record numbers of the parent level tables for records found when querying a set with one-many links.</description>
   <discussion>
The CROSSLEVEL() function is useful when you have a form view of a set which has a one-many relationship. With the CROSSLEVEL() function you can filter the list of records using fields from the one-many child tables.
 Note : CROSSLEVEL()  rcreates an intermediate index file of type .ASX. For this reason you must open the set with write access.

   </discussion>
   
   <sections>
       <section>
       <title>Example</title>
            <description>For example, you might define the following query:</description>
            <example><![CDATA[
crosslevel("invoice_items->description = \"Techelon Safety Glasses\"")

]]></example>
       </section>
       
        <section>
            <description>This might find that there were 3 invoices that had these line items. When you viewed these 3 invoices, however, the embedded browse would show all of the line items for that invoice (not just the line items for Techelon Safety Glasses). Contrast this with the FLATTENQUERY() function which treats a multi-level set as a flat table.
</description>
            
       </section>
   </sections>
   <see>
      <ref>Query Functions and Methods</ref>
      <ref>Set Functions and Methods</ref>
      <ref>FLATTENQUERY and CROSSLEVEL Compared</ref>
      <ref>Writing Expressions</ref>
   </see>
 <terms>query,browse,expressions,field,file,filter,forms,function,index,item,list,logical,number,record,set,writing</terms>
 
</page>