<page>
	<topic>Matching Clauses in Regular Expressions</topic>
	<sections>
		<section>
			<description>\d
</description>
			<cases>
				<case>
					<description>
 
Any digit from 0 to 9
 </description>
					<example><![CDATA[
 
\d\d matches 59, but not ab or 5a
 ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\D
</description>
			<cases>
				<case>
					<description>Any character not a digit
</description>
					<example><![CDATA[
 
\D\D\D matches abc, but not 123 or 12b
  ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\w
</description>
			<cases>
				<case>
					<description>Any word character: A-Z, a-z, 0-9, and underscore "_"
</description>
					<example><![CDATA[\w\w\w\w matches 12a4, but not $123
 ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\W
</description>
			<cases>
				<case>
					<description>Any non-word character
</description>
					<example><![CDATA[\W matches $, but not A ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\s
</description>
			<cases>
				<case>
					<description>Any white space character, including tab, newline, carriage return, formfeed, and vertical tab
</description>
					<example><![CDATA[\s matches the tab character, but not A
]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\S
</description>
			<cases>
				<case>
					<description>Any non-white space character</description>
					<example><![CDATA[\S matches A, but not the tab character
 ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>.
</description>
			<cases>
				<case>
					<description>Any single character
</description>
					<example><![CDATA[. matches a, 1, and $
 ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>...
</description>
			<cases>
				<case>
					<description>Any one of the characters between the brackets
</description>
					<example><![CDATA[abc matches a, b, or c
a-z matches any character a through z ]]></example>
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>^...</description>
			<cases>
				<case>
					<description>Any one character not between the brackets
</description>
					<example><![CDATA[abc matches any character except a, b, or c
a-z matches any character except a through z
 ]]></example>
				</case>
				
			</cases>
		</section>
		<section>
			<description>\<
</description>
			<cases>
				<case>
					<description>
 
The NULL string at the start of a word.
 </description>
				
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\>
</description>
			<cases>
				<case>
					<description>
 
The NULL string at the end of the word.
 </description>
					
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\b
</description>
			<cases>
				<case>
					<description>The NULL string at either the start or the end of a word.
</description>
		
				</case>
				
			</cases>
		</section>
		
		<section>
			<description>\B
</description>
			<cases>
				<case>
					<description>
 
A NULL string within a word.
 </description>
			
				</case>
				
			</cases>
		</section>
		
		
		
	</sections>
<sections>
	<section><title>Example</title>
		<description>This example looks for a telephone number. The area code must be enclosed in parentheses and there also must be a hyphen.</description>
		<example><![CDATA[? regex_split("Our phone number is (781)229-4500.", "(\(\d\d\d\)\d\d\d-\d\d\d\d)")
= "(781)229-4500"
 ]]></example>
	</section>
	<section>
		<description>This example looks for the area code telephone number.</description>
		<example><![CDATA[? regex_split("Our phone number is (781)229-4500.", "(\(\w\w\w\))")
= "(781)"
]]></example>
	</section>
	<section>
		<description>This example looks for value of a dollar amount. Note that the "\" before the period "." indicates that the period is the actual character being looked for.</description>
		<example><![CDATA[? regex_split("the price is $123.45.", "(\d\d\d\.\d\d)")
= "123.45"]]></example>
	</section>
	
</sections>
	<see>
		<ref>Regular_Expressions</ref>
		
	</see>
	
</page>