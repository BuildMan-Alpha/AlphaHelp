<page>
   <topic>WORD_CHANGE Function</topic>
   <syntax>Output_List as C = WORD_CHANGE(C change_word_format,C text[,C separator[,C pattern[,L match_pattern]]])</syntax>
   <arguments>
     <argument>
         <name>change_word_format</name>
         <description>Special commands that govern how the data in Input_List is transformed. These commands are:
</description>
		<list>
		<item>
		<name>Command</name>
		<description>Description</description>
		</item>
		
		<item>
		<name>start_position [, end_position ]</name>
		<description>Selects text in the input word from start_position, to end_position. Start_position and end_position can be an expression, or be derived using the $ operator.
</description>
		</item>
		
		<item>
		<name><![CDATA[$(string)]]></name>
		<description>Returns the position in the string where string occurs.</description>
		</item>
		
		<item>
		<name><![CDATA[#]]></name>
		<description>Returns the word number in the input word list</description>
		</item>
		
		<item>
		<name><![CDATA[&]]></name>
		<description>Concatenates text</description>
		</item>
		
		</list>
     </argument>
     <argument>
         <name>text</name>
         <description>A character string list of words.</description>
     </argument>
     <argument>
         <name>separator</name>
         <description>Optional. Default = CR-LF.  Character string that delimits the words in Input_List.</description>
     </argument>
     <argument>
         <name>pattern</name>
         <description>Optional. Pattern is an optional filter that can include the * and ? wildcard characters. If each word in the Input_List matches the pattern, then the word is changed.
</description>
     </argument>
     <argument>
         <name>match_pattern</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>Perform operation across a group of words, if pattern is specified, only change those words matching the pattern.</description>
   <discussion>
Transforms each word in Input_List into a new word based on a format string.
 Note : The commands in the Format_String are the same as are used in owner-draw strings in XDialog.
   </discussion>
   
   <sections>
       <section>
       <title>Examples</title>
            <description>Assume that the input string, "words", is a CR-LF delimited list with these values:</description>
            <example><![CDATA[
Smith,Jenny
Jones,Michelle
Amira,Stone
Krayzelberg,Lawson
]]></example>
       </section>
       
       <section>
       <title>Examples</title>
            <description>Assume that "format" contains this string:</description>
            <example><![CDATA[
&' Firstname: '&$(,) + 1&', Lastname: '&1,$(,)-1
WORD_CHANGE(format, words, crlf() ) ->
1 Firstname: Jenny, Lastname: Smith
2 Firstname: Michelle, Lastname: Jones
3 Firstname: Stone, Lastname: Amira
4 Firstname: Lawson, Lastname: Krayzelberg
WORD_CHANGE("1,$(,)-1",words,crlf() ) ->
Smith
Jones
Amira
Krayzelberg
WORD_CHANGE("$(,) + 1,99999",words,crlf() ) ->
Jenny
Michelle
Stone
Lawson
WORD_CHANGE ("1,3",words,crlf() )->
Smi
Jon
Ami
Kra
WORD_CHANGE ("$(,) + 1",words,crlf() )->
Jenny
Michelle
Stone
Lawson

]]></example>
       </section>
       
       
   </sections>
   <see>
      <ref href="/Api/Functions/Data Type/Character Functions/List Processing Functions/index.xml">List Processing Functions</ref>
   </see>
  
 <terms>list processing,contains,defaults,filter,function,list,logical,number,operation,string,text</terms>

</page>