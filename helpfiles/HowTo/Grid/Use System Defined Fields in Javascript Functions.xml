<page>
    <shortlink>How to use System Javascript Fields in User Defined Javascript Functions</shortlink>
    <topic>How to use System Javascript Fields in User-Defined Javascript Functions</topic>
    <description>Built-in system fields used for defining client-side expressions can be used in Javascript functions using the {grid.object}._getGridVariables method to get the variables from the Grid Component.</description>
    <discussion>When you define client-side expressions (e.g. calculated fields, show/hide expressions, enable expressions, dynamic images, conditional styles, etc.) you can use certain 'built-in' system fields in your expressions. However, when you define an arbitrary Javascript function you cannot use the system fields in your Javascript code. These system fields are:</discussion>
    <sections>
        <section>
            <list>
                <item>
                    <name-title>System Field</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>grid.rowState</name>
                    <description>Contains the state of the row. Value can be 'view', 'change', or 'enter'.</description>
                </item>
                <item>
                    <name>grid.isRowDirty</name>
                    <description>A true/false value indiciating if the row contains unsaved changes.</description>
                </item>
                <item>
                    <name>grid.isDirty</name>
                    <description>A true/false value indicating whether or not the Grid Component contains unsaved changes.</description>
                </item>
                <item>
                    <name>grid.pageNumber</name>
                    <description>The current active page number in the Grid Component.</description>
                </item>
                <item>
                    <name>grid.pagesInGrid</name>
                    <description>The number of pages in the Grid Component.</description>
                </item>
                <item>
                    <name>grid.logicalRecordNumber</name>
                    <description>The logical record number for the row.</description>
                </item>
                <item>
                    <name>grid.hasDetailView</name>
                    <description>A true/false value that indiciates whether or not the Grid Component has a detail view.</description>
                </item>
                <item>
                    <name>grid.isOnFirstPage</name>
                    <description>A true/false value that indicates whether or not the current page of records is the first page in the Grid Component.</description>
                </item>
                <item>
                    <name>grid.isOnLastPage</name>
                    <description>A true/false value that indicates whether or not the current page of records is the last page in the Grid Component.</description>
                </item>
                <item>
                    <name>grid.hasNextPage</name>
                    <description>A true/false value that indicates if there is a next page to navigate to from the current page in the Grid Component.</description>
                </item>
                <item>
                    <name>grid.hasPrevPage</name>
                    <description>A true/false value that indicates if there is a previous page to navigate to from the current page in the Grid Component.</description>
                </item>
                <item>
                    <name>grid.isNewRecordRow</name>
                    <description>A true/false value that indicates whether or not the row is a new record row.</description>
                </item>
                <item>
                    <name>grid.checkedRowCount</name>
                    <description>The number of checked rows in a Grid Component with a Checkbox Selector Column.</description>
                </item>
                <item>
                    <name>grid.rowIsChecked</name>
                    <description>A true/false value that, for a Grid Component with a Checkbox Selector Column, indicates whether or not the row is checked.</description>
                </item>
                <item>
                    <name>detailView.isDirty</name>
                    <description>A true/false value that indicates whether or not the detail view contains unsaved changes.</description>
                </item>
                <item>
                    <name>detailView.rowState</name>
                    <description>Contains the state of the row. Value can be 'view', 'change', or 'enter'.</description>
                </item>
                <item>
                    <name>detailView.isOnFirstRecord</name>
                    <description>A true/false value that indicates if this is the first record in the Grid Component.</description>
                </item>
                <item>
                    <name>detailView.isOnLastRecord</name>
                    <description>A true/false value that indiciates if this is the last record in the Grid Component.</description>
                </item>
                <item>
                    <name>detailView.hasNextRecord</name>
                    <description>A true/false value that indiciates if there is a record after this record in the Grid Component.</description>
                </item>
                <item>
                    <name>detailView.hasPrevRecord</name>
                    <description>A true/false value that indicates if there is a record before this record in the Grid Component.</description>
                </item>
                <item>
                    <name>detailView.mode</name>
                    <description>Contains the detail view's current mode. Values can be 'view', 'change', or 'enter'.</description>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>There may, however, be situations when you would like to refer to these system variables in your own Javascript function handlers.</p>
                <p>You can do so, but you must first call a grid method to populate these system fields.</p>
                <p>The following example show how you can use these system fields to create a button that will:</p>
            </description>
            <steps>
                <step>
                    <description>Submit the Detail View to the server to save the current record if the record is dirty, or </description>
                </step>
                <step>
                    <description>If the record is not dirty, will redirect to another page in your application. </description>
                </step>
            </steps>
            <example code="js"><![CDATA[function myOwnUserDefinedFunction() {
    var detailView = {};
    var grid = {};
    //populate the 'system' variables
    {grid.object}._getGridVariables(grid,detailView);
 
    if(detailView.isDirty) {
        {grid.object}.submitDetailView();
    } else {
        location.href = 'mytargetpage.a5w';
    }
}]]></example>
        </section>
        <section>
            <description>
                <p>After the record in the Detail View has been sucessfully saved, you can then redirect to your target page.</p>
                <p>For example, in the 'afterDetailViewSubmit' system event, you could add this code:</p>
            </description>
            <example code="js"><![CDATA[if (e.hasErrors) { 
    location.href = 'mytargetpage.a5w';
}]]></example>
        </section>
    </sections>
    <see>
        <ref link="grid component _getgridvariables method">{grid.object}._getGridVariables Method</ref>
    </see>
</page>