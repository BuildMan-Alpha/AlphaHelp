<page>
    <shortlink>server grid ux and Custom Components Storing state information</shortlink>
    <topic>How to Store State Information in Grid, UX, and Custom Components</topic>
    <description>The Grid, UX and Custom Components have two new methods, .setStateInfo() and .getStateInfo(), which allow you to store arbitrary information in the Grid object. Any information stored in the state object will be automatically submitted to the server on every Ajax callback. The UX and Custom component also have the same two methods.</description>
    <sections>
        <section>
            <description>The .setStateInfo() method is useful for persisting information for use in all Ajax callbacks.</description>
        </section>
        <section>
            <description>
                <p>To explain the use of the .setStateInfo() method using a practical example, consider the case of a Grid with an updatable Detail View. When the user enters a new record, and sets the value of a field such as 'lastname', you would like to use the value that the user entered for 'lastname' as the default value for the subsequent new record that the user might enter.</p>
                <p>Here is how this could be done.</p>
            </description>
        </section>
        <section>
            <description>In the AfterInsertRecord event in the Grid builder, return JavaScript to populate the state information from a JSON object:</description>
            <example>
                <![CDATA[dim js as c 
dim ar as p
ar.defaultValue_LastName = e.dataSubmitted.lastname
dim json as c 
json = vartojson(ar,.f.,.t.)
 
'Construct the javascript command that sets the 
'defaultValue_Lastname' variable in the 'state' info object
js = "{grid.object}.setStateInfo(" + json + ");"
e.rtc.A_AjaxResponses[].text = js
 
'This defines the order in which the Javascript responses are emitted. 
'In this case the order is not important, so we just set a value of 1
e.rtc.A_AjaxResponses[..].id = 1 ]]>
            </example>
        </section>
        <section>
            <description>In the [onInitialValueCalculate] event, initialize the value "defaultValue_LastName" in the state info object, referred to as *[xb:__si2]* in this event:</description>
            <example>
                <![CDATA[dim defaultValue as c = ""

'Any data that was stored in the stateInfo object is submitted in the __si2 object.
if eval_valid("Request.Variables.__si2.defaultValue_LastName") then 
 defaultValue = Request.Variables.__si2.defaultValue_LastName
end if 

if defaultValue <> ""
 e.newvalues.lastname = defaultValue
end if ]]>
            </example>
            <note>Every time the user clicks the New Record hyperlink to enter a new record in the Detail View, this event is fired</note>
        </section>
        <section>
            <description>
                <![CDATA[The .getStateInfo() method can be used in your Javascript code to read the values in the State info object. The data is returned as a text string of name value pairs, delimited with '&' characters. For example:]]>
            </description>
            <example>
                <![CDATA[myvar1=Value of myvar1&myvar2=Value of myvar2&myvar3=Value of myvar3 ]]>
            </example>
        </section>
        <section>
            <description>
                Your Javascript code can read the stateInfo object directly, For example:
            </description>
            <example>
                <![CDATA[var si = this.stateInfo;
alert(si.myvar1) ]]>
            </example>
        </section>
        <section>
            <description>JavaScript can also be used to set the value of variables in the stateInfo object. For example:</description>
            <example>
                <![CDATA[var si = this.stateInfo;
si.myvar1 = 'new value for myvar1'; ]]>
            </example>
        </section>

        <section>
            <title>A Shortcut for UX Component Server-side events</title>
            <description>
                <p>In a UX Component you can also store state in a server-side event handler simply by setting values in e._state.</p>
                <p>For example, writing</p>
            </description>
            <example>
                <![CDATA[e._state.myvar = "alpha" ]]>
            </example>
        </section>
        <section>
            <description>This is much easier than writing the Xbasic code to generate the Javascript to send back as part of the response generated by the server side event.</description>
        </section>
    </sections>
    <see>
        <ref link="grid component getStateInfo method">{grid.object}.getStateInfo()</ref>
        <ref link="grid component setStateInfo method">{grid.object}.setStateInfo()</ref>
        <ref link="ux component getStateInfo Method">{dialog.object}.getStateInfo()</ref>
        <ref link="ux component setStateInfo Method">{dialog.object}.setStateInfo()</ref>
    </see>
</page>