<page>
    <topic>How to Create and Read Cookies</topic>
    <description>Cookies can be created and read using the Context object.</description>
    <discussion>Cookies are a way to store information in your web application. You can store data in cookies using the Context object. Context.Request and Context.Response contain methods for adding cookies and checking to see if a cookie exists.</discussion>
    <sections>
        <section>
            <title>Reading a Cookie</title>
            <description>To read cookies, you must use the [Context.Request] object. The Cookies property for Context.Request contains all the cookies for your web application. Using the [Context.Request.Cookies.Get method], you can a specific cookie from the Context.Request.Cookies object. For example, suppose you have the following code in an .a5w page:</description>
            <example><![CDATA[dim cookieName as c
cookieName = "CustomCookie"
if Context.Request.HasCookie(cookieName) then
    ?"The cookie exists." + crlf()
    ?Context.Request.Cookies.Get(cookieName)
else
    ?"The cookie doesn't exist." + crlf()
end if]]></example>
        </section>
        <section>
            <description>The [Context.Request.HasCookie method] is used to determine whether or not a cookie exists. If the cookie doesn't exist, the message "The cookie doesn't exist" will be printed on the page. If the cookie does exist, however, the message "The cookie exists." along with the cookie's value will be displayed.</description>
            <note>If you call *[xb:Context.Request.Cookies.Get]* method and the requested cookie doesn't exist, the cookie will be created. Prefer to check for the cookie's existence using the *[xb:Context.Request.HasCookie]* method before getting the cookie from the *[xb:Context.Request.Cookies]* object.</note>
        </section>
        <section>
            <title>Creating a Cookie</title>
            <description>To create a cookie, you must use the [Context.Response] object. You can add cookies by calling the [Context.Response.AppendCookie method]. *[xb:Context.Response.AppendCookie]* takes a [System::Web::HttpCookie] object as a parameter. System::Web::HttpCookie is a .NET object. The code below demonstrates how to create a new System::Web::HttpCookie .NET object that can be added using the *[xb:Context.Response.AppendCookie]* method.</description>
            <example><![CDATA[dim newCookie as System::Web::HttpCookie = new System::Web::HttpCookie(cookieName)
newCookie.HttpOnly = .t.
newCookie.Value = "This is the cookie's value."
Context.Response.AppendCookie(newCookie)]]></example>
        </section>
    </sections>
    <limitations>Web Applications Only</limitations>
    <links>
        <link link="api objects context request object">Context.Request</link>
        <link link="api objects request object has cookie method">Context.Request.HasCookie method</link>
        <link link="api objects context response object">Context.Response</link>
        <link link="api objects response object append cookie method">Context.Response.AppendCookie method</link>
        <link href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.aspx">System::Web::HttpCookie</link>
        <link href="https://msdn.microsoft.com/en-us/library/ezy11xy2(v=vs.110).aspx">Context.Request.Cookies.Get method</link>
    </links>
    <see>
        <ref link="api objects request object has cookie method">Context.Request.HasCookie Method</ref>
        <ref link="api objects response object append cookie method">Context.Response.AppendCookie Method</ref>
        <ref href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.aspx">System::Web::HttpCookie Documentation</ref>
    </see>
</page>