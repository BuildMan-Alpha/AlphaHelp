<page>
    <shortlink>howto create and read cookies</shortlink>
    <topic>How to Create and Read Cookies</topic>
    <description>Cookies can be created and read using the Context object.</description>
    <discussion>Cookies are a way to store information in your web application. You can store data in cookies using the Context object. Context.Request and Context.Response contain methods for adding cookies and checking to see if a cookie exists.</discussion>
    <sections>
        <section>
            <title>Creating a Cookie</title>
            <description>To create a cookie, you must use the [Context.Response] object. You can add cookies by calling the [Context.Response.AppendCookie method]. *[xb:Context.Response.AppendCookie]* takes a [System::Web::HttpCookie] object as a parameter. System::Web::HttpCookie is a .NET object. The code below demonstrates how to create a new System::Web::HttpCookie .NET object that can be added using the *[xb:Context.Response.AppendCookie]* method.</description>
            <example code="xb"><![CDATA[dim cookieName as C = "CustomCookie"
dim newCookie as System::Web::HttpCookie = new System::Web::HttpCookie(cookieName)
newCookie.HttpOnly = .t.
newCookie.Value = "This is the cookie's value."
Context.Response.AppendCookie(newCookie)]]></example>
        </section>
        <section>
            <title>Reading a Cookie</title>
            <description>To read cookies, you must use the [Context.Request] object. The Cookies property for Context.Request contains all the cookies for your web application. Using the [Context.Request.GetCookie method], you can get a specific cookie from the Context.Request.Cookies object. For example, suppose you have the following code in an .a5w page:</description>
            <example code="xb"><![CDATA[dim cookieName as c
cookieName = "CustomCookie"
if Context.Request.HasCookie(cookieName) then
    ? "The cookie exists." + crlf()
    ? Context.Request.GetCookie(cookieName)
else
    ? "The cookie doesn't exist." + crlf()
end if]]></example>
        </section>
        <section>
            <description>The [Context.Request.HasCookie method] is used to determine whether or not a cookie exists. If the cookie doesn't exist, the message "The cookie doesn't exist" will be printed on the page. If the cookie does exist, however, the message "The cookie exists." along with the cookie's value will be displayed.</description>
        </section>
        <section>
            <title>Updating a Cookie</title>
            <description>
                <p>To create a cookie, you must use the [Context.Response] object. You can update a cookie using the [Context.Response.AppendCookie method]. For example:</p>
            </description>
            <example code="xb"><![CDATA[dim cookieName as c
cookieName = "CustomCookie"
if Context.Request.HasCookie(cookieName) then
    dim cookie as System::Web::HttpCookie = Context.Request.GetCookie(cookieName)
    cookie.HttpOnly = .t.
    cookie.Value = "My new cookie value."
    Context.Response.AppendCookie(cookie)
end if]]></example>
        </section>
    </sections>
    <limitations>Web Applications Only</limitations>
    <links>
        <link link="api objects context request object">Context.Request</link>
        <link link="api objects request object has cookie method">Context.Request.HasCookie method</link>
        <link link="api objects context response object">Context.Response</link>
        <link link="api objects response object append cookie method">Context.Response.AppendCookie method</link>
        <link href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.aspx">System::Web::HttpCookie</link>
        <link href="https://msdn.microsoft.com/en-us/library/ezy11xy2(v=vs.110).aspx">Context.Request.Cookies.Get method</link>
    </links>
    <see>
        <ref link="howto delete cookies">How to Delete Cookies</ref>
        <ref link="list cookies in an app">How to List All Cookies for a Web Application</ref>
        <ref link="api objects request object has cookie method">Context.Request.HasCookie Method</ref>
        <ref link="api objects response object append cookie method">Context.Response.AppendCookie Method</ref>
        <ref href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.aspx">System::Web::HttpCookie Documentation</ref>
    </see>
</page>