<page>
    <shortlink>Programmatically Enable and Disable Buttons</shortlink>
	<topic>How to Programmatically Enable and Disable Buttons</topic>
    <description>Buttons in a UX component can be enabled and disbled using the button object's *[js:setDisabled()]* method.</description>
	<discussion>Buttons on the UX component are rendered as 'Advanced Buttons'. Advanced buttons are implemented as Javascript objects. In order to enable or disable buttons programmatically, you need to get a pointer to the object and then call the object's *[js:setDisabled()]* method.</discussion>
    <sections>
	    <section>
            <note>All Javascript controls, not just buttons, in the UX control (List, ButtonList, SpinList, Tree, etc.) support the *[js:setDisabled()]* method.</note>
	    </section>
	    <section>
            <title>Calling setDisabled on a Button</title>
            <steps>
                <step>
                    <description>Get a pointer to the button object from the UX component.</description>
                    <example code="js"><![CDATA[var bObj = {dialog.object}.getControl('BUTTON_1');]]></example>
                </step>
                <step>
                    <description>Call the *[js:setDisabled()]* method for the button object.</description>
        	        <example code="js"><![CDATA[//set the button disabled
bObj.setDisabled(true);

//now enable the button
bObj.setDiabled(false);]]></example>
                </step>
            </steps>
        </section>
        <section>
            <title>Calling setDisabled() on a Button in a Repeating Section</title>
            <description>If the button is in a Repeating Section, you can pass in an optional parameter to the *[js:setDisabled()]* method that specifies what button instance in the repeating section should be enabled or disabled. For example, suppose you have a repeating section with a button called 'BUTTON_2' and you wanted to disable 'BUTTON_2' in the third row of the repeating section. The process for disabling 'BUTTON_2' in the third row is described below:</description>
            <steps>
                <step>
                    <description>Get a pointer to the button element in a row in the Repeating Section. The code below demonstrates getting the button element for "BUTTON_2" in the third row of a Repeating Section. To get the button from other rows, replace the "3" in "A5INSTANCE3" with the row number for the row with the button.</description>
                    <example code="js"><![CDATA[var eles = {dialog.object}.getControl('BUTTON_2_A5INSTANCE3');]]></example>
                </step>
                <step>
                    <description>Get a pointer to the button object from the UX component. The button in the repeating section is 'BUTTON_2':</description>
                    <example code="js"><![CDATA[var bObj = {dialog.object}.getControl('BUTTON_2');]]></example>
                </step>
                <step>
                    <description>Call the *[js:setDisabled()]* method for the button object, passing the eles variable that contains the instance of the button in the repeating section you want to enable ro disable:.</description>
                    <example code="js"><![CDATA[bObj.setDisabled(true,eles);]]></example>
                </step>
            </steps>
        </section>
        <section>
            <description>If you omit the optional parameter, all buttons in the Repeating Section will be disabled (or enabled) when you call the *[js:setDisabled()]* method. For example, the code below would disable all instances of 'BUTTON_2' in a repeating section:</description>
            <example code="js"><![CDATA[var bObj = {dialog.object}.getControl('BUTTON_2');
bObj.setDisabled(true);]]></example>
        </section>
        <section>
            <description>
                <p>When working with repeating sections, the row that is visible may not directly reflect the row number for the instance of a control. This is due to the fact that when rows in a repeating section are deleted, they are actually hidden. Once the data for the repeating section is submitted, the control instances will be updated and the hidden "deleted" rows removed.</p>
                <p>To get the instance number for the visible row, use the *[js:{dialog.object}._repeatingSectionLogicalToPhysicalRow()]* method. For example:</p>
            </description>
            <example code="js"><![CDATA[//Get the Instance Number for the first visible row in RSECTION_1:
var row = {dialog.object}._repeatingSectionLogicalToPhysicalRow('RSECTION_1',1);]]></example>
        </section>
    </sections>
    <note>In older versions of Alpha Anywhere, a button could either be 'standard' or 'advanced'.</note>
    <see>
        <ref link="ux component getcontrol method">{dialog.object}.getControl Method</ref>
        <ref link="ux component getpointer method">{dialog.object}.getPointer Method</ref>
        <ref link="ux component _repeatingSectionLogicalToPhysicalRow method">{dialog.object}._repeatingSectionLogicalToPhysicalRow Method</ref>
    </see>
    <terms>show/hide</terms>
</page>