<page>
    <shortlink>Populate List Columns and Data</shortlink>
    <topic>How to Dynamically Populate List Columns and Data</topic>
    <description>A List control can be dynamically repopulated with data from different tables.</description>
    <discussion>
        <p>The List control can be dynamically populated with data from tables in a SQL Database. Both the columns shown and data in the List can be specified at run-time. This is different from specifying the data source at design time, wherein you may define a set of static data or a SQL query against a database that is used to determine the fields and data shown in the List.</p>
        <p>The *[js:{dialog.object}.setListColumnsAndPopulate]* method can be used to define the columns and data in a List control. For example, assume you have a List and you have a JavaScript variable with this data:</p> 
    </discussion>
    <sections>
        <section>
            <example code="json"><![CDATA[[
    {
        "Firstname": "John",
        "Lastname": "Smith",
        "City": "Boston",
        "State": "MA"
    },
    {
        "Firstname": "Henry",
        "Lastname": "Rhodes",
        "City": "New York",
        "State": "NY"
    },
    {
        "Firstname": "Allison",
        "Lastname": "Berman",
        "City": "Los Angeles",
        "State": "CA"
    }

]]]></example>
        </section>
        <section>
            <description>
                <p>The 'columns' in the above data are Firstname, Lastname, City and State.</p>
                <p>You might want to populate the List with this data and simultaneously set the display columns in the List to Firstname, Lastname, City and State.</p>
                <p>At some later point you might have another Javascript variable with this data:</p>
            </description>
            <example code="json"><![CDATA[[
    {"Name" : "Fred Smith", "Age" : 30},
    {"Name" : "Tim King", "Age" : 23}
]]]></example>
        </section>
        <section>
            <description>
                <p>The 'columns' in the above data are Name and Age. You might want to populate the same List with this data and simultaneously set the display columns in the List to Name and Age.</p>
                <p>The *[js:{dialog.Object}.setListColumnsAndPopulate(listName,data,options)]* method can be used to populate the List and set the List columns (based on the columns in the first row of data).</p>
            </description>
        </section>
        <section>
            <example code="js"><![CDATA[var data = [
    {
        "Firstname": "Kathy",
        "Lastname": "Morton",
        "City": "New York",
        "State": "NY"
    }
];

//populate List 'mylist' with the first 3 columns in data
var ops = {columnCount: 3};
{dialog.object}.setListColumnsAndPopulate('mylist',data,ops);

//specify columns
var ops = {columns: ['Firstname','State']};
{dialog.object}.setListColumnsAndPopulate('mylist',data,ops);]]></example>
        </section>
        <section>
            <description>For full step-by-step instructions on dynamically populating a List with data from a SQL database, watch the video below:</description>
            <videos>
                <video>
                    <name>Dynamically Populating a List's Columns and Data - Generic SQL Table Viewer</name>
                    <link>https://share.vidyard.com/watch/R6KkWwbbwW5gsovGDLM7sM</link>
                </video>
            </videos>
        </section>
        <section>
            <description>[Click here] to download the component used in the videos.</description>
        </section>
    </sections>
    <links>
        <link href="https://www.ajaxvideotutorials.com/V12Videos/GenericSQLTableViewer.zip">Click here</link>
    </links>
    <see>
        <ref link="ux component setlistcolumnsandpopulate method">{dialog.object}.setListColumnsAndPopulate Method</ref>
    </see>
    <terms>list control,ux component,generic table viewer</terms>
</page>