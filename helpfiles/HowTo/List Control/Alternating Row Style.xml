<page build="0">
    <shortlink>howto alternating row style</shortlink>
    <topic>How to add Alternating Row Colors to a List Control Using CSS Selectors</topic>
    <description>
        <p>Learn how to create alternating row colors for a List using an Alpha-based web theme using CSS classes instead of the Conditional Row Style List properties.</p>
    </description>
    <discussion>
        <p>CSS selectors can be used to easily apply alternating row colors to the a List control. The *[extlink::nth-child()@https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child]* is a special keyword that can be combined with a selector, such as a class name, to apply a style to an element based on it's position. For example, suppose you have defined a class called "alternate" that you've assigned to the [List item class name] property that sets the background color and you would only like to apply this background color to every other row in the List:</p>
        <p>
            <example code="css"><![CDATA[.alternate {
    background-color: #f26968;
}]]></example>
        </p>
        <p>By adding the pseudo-class *[css::nth-child(even)]* to the CSS selector, *[css:.alternate]* (this is a *[extlink:class selector@https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors]*), you can specify that the background color should only be applied to every other List row that has the "alternate" class.</p>
        <p>
            <example code="css"><![CDATA[.alternate:nth-child(even) {
    background-color: #f26968;
}]]></example>
        </p>
        <p>*[css:even]* is a special keyword used with *[css::nth-child()]* that represents all elements in the selection with an even position. The "selection" is the class selector, *[css:.alternate]*. Since the class is applied using the *[ui:]* List property, the selector can be interpreted as each even row in the list -- row 2, row 4, row 6, etc.</p>
        <p>The keyword *[css:odd]* does the same thing as *[css:even]*, however the rule is applied to odd rows -- row 1, row 3, row 5, etc.</p>
        <p>In addition to these two keywords, *[css::nth-child()]* also supports a function notation, *[css:An+B]* where A is the interval and B is the offset from the first row, which lets you create rules to apply a repeating row color using any interval you'd like. For example, to apply the background to every third row you can use *[css:3n]*:</p>
        <p>
            <example code="css"><![CDATA[.alternate:nth-child(3n) {
    background-color: #f26968;
}]]></example>
        </p>
    </discussion>
    <sections>
        <section>
            <title>Preserving Row Highlighting Behavior</title>
            <description>
                <p>When the user hovers a mouse over a List row, a highlighting class is applied when using the built-in Alpha Anywhere web themes. When you define a CSS class to apply an alternating row color, the background color applied by the hover class will not be applied. This is because of *[extlink:how CSS rules work@https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity]*. CSS defined in the List control is loaded after the web theme. When the styles are resolved, the locally defined classes used to apply alternating background colors will be used regardless of the background defined in the highlighting class.</p>
                <p>One approach to preserving the row highlighting behavior provided by the web them is to use the *[css::not()]* CSS pseudo-class. For example:</p>
                <p>
                    <example code="css"><![CDATA[.alternate:not(.listItemHover):nth-child(even) {
    background-color: #f26968;
}]]></example>
                </p>
                <p>*[css:.alternate:not(.listItemHover):nth-child(even)]* is a CSS selector that reads selects every even count element with the class "alternate" that do not also have the class "listItemHover" beginning with the second element found in the layout. In other words, the background color will only be applied to every other row in the list that isn't be hovered over with the mouse cursor.</p>
                <p>You can create a similar rule for odd rows using the *[css::nth-child(odd)]* selector in place of *[css::nth-child(even)]*. For example:</p>
                <p>
                    <example code="css"><![CDATA[.alternate:not(.listItemHover):nth-child(odd) {
    background-color: #f26968;
}]]></example>
                </p>
                <p>To learn more about the selectors, check out *[extlink:CSS selectors (MDN)@https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors]* and *[extlink:Pseudo-classes (MDN)@https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes]*.</p>
            </description>
        </section>
    </sections>
    <links>
        <link link="ux%20list%20builder%20layoutprop%20properties#section1_List%20item%20class%20name">List item class name</link>
    </links>
    <see>
        <ref link="ux%20list%20builder%20condrowstyle%20properties">List Control - Conditional Row Style</ref>
        <ref href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity" target="_blank">Specificity (MDN)</ref>
        <ref href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors" target="_blank">CSS selectors (MDN)</ref>
        <ref href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes" target="_blank">Pseudo-classes (MDN)</ref>
    </see>
</page>