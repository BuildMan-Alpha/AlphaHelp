<page>
	<topic>Record List - List Box Control Syntax
</topic>
<description>The Record List - List Box Control provides a dynamic view of selected records and fields from a table or set.
</description>	
<prototypes>
	<prototype>[%KL= Index_Query_Name % [. Width [, Height ]] Variable_Name [ ! rl_* ][ ? Enabled ] ]
</prototype>
	<prototype>[%@ FormatVariable % [. Width [, Height ]] Variable_Name [ ! rl_* ][ ? Enabled ] ]
</prototype>
	
	
</prototypes>
	<arguments>
<argument>
	<name>Index_Query_Name</name>
	<description>Character. The name of the index or query ( query.description ).</description>
</argument>		
<argument>
	<name>FormatVariable</name>
	<description>>Character. When combined with "@" allows the control to read its formatting instructions from the variable named FormatVariable.
</description>
</argument>		
		<argument>
	<name>Width</name>
	<description>Numeric. The width of the control.
</description>
</argument>		
		<argument>
	<name>Height</name>
	<description>Numeric. The height of the control.</description>
</argument>		
		<argument>
	<name>Variable_Name</name>
	<description>>Character. The name of a character variable to receive the user selection, or a numeric variable to receive the index value of the selected radio button. The index of the top-most button is 1. An initial NULL value places the selection line at the top of the list. When Variable_Name has a value found in the list, the selection line will be placed on that value.
</description>
</argument>		
		<argument>
	<name>rl_*</name>
	<description>>Character. Optional. See Event Syntax.</description>
</argument>		
		<argument>
	<name>Enabled</name>
	<description>Logical. Optional. See Enabled Syntax.</description>
</argument>		
				
		
	</arguments>
	
	<sections>
<section>
	<note>You must not have any space characters in the finished command.</note>
</section>		
<section>
	<title>Example
</title>
<description>For example, the following script creates a list box 50 characters wide and 10 lines tall based on the query named "Keylist" ( query.description ): 
</description>	
<example><![CDATA[tbl = table.reset("clients")
tbl.query_detach_all()
query.order = "lastname+firstname"
query.filter = ".t."
query.description = "Keylist"
indx = tbl.query_create()
ui_dlg_box("Simple Record List",<<%dlg%
Print a mailing label for which customer?;
{lf};
Select customer lastname:;
%KL=keylist%.50,10key_selected;
{lf};
<*15&OK!ok> <15&Cancel!cancel>
%dlg%,<<%code%
if a_dlg_button = "ok" then
filter_expression = "lastname+firstname = '"+key_selected+"'"
label.Preview("mail_labels",filter_expression)
end if
%code%) ]]></example>	
	<figure><link>images/XD_Record List box.gif</link></figure>
</section>		
<section>
	<title>Macro Expansion Symbol
</title>
	<description>If you created an Xdialog with a record list list box, you would typically use this syntax.
</description>
	<example><![CDATA[ui_dlg_box("Alpha Five",<<%dlg% 
{region} 
[%kl=customer,{keylist_build("H=.025,1:25Customer_Id,2:25Firstname,3:25Lastname,4:25Bill_State_Region",+Customer_id,left(+Customer_id,25),left(+Firstname,25),left(+Lastname,25),left(''+Bill_state_region,25))}{Bill_state_region = "ma"}"%.100,10rl]; 
{endregion}; 
{line=1,0}; 
{region} 
{endregion}; 
%dlg%)]]></example>
	
</section>
<section>

	<description>You will notice that the syntax for the record list is %format string%.100,10rl. This creates a record list that is 100 columns wide, and 10 lines high. The format string that defines the record list is:
</description>
	<example><![CDATA[kl=customer,{keylist_build("H=.025,1:25Customer_Id,2:25Firstname,3:25Lastname,4:25Bill_State_Region",+Customer_id,left(+Customer_id,25),left(+Firstname,25),left(+Lastname,25),left(''+Bill_state_region,25))}{Bill_state_region = "ma"}"
]]></example>
	
</section>
<section>

	<description>If the control definition is writtenÂ as  %@formatStringVariable%.100,10rl, then Alpha Anywhere sees that the format definition for the control ( all controls on an Xdialog have an optional format specification that is contained between pairs of % signs) is @formatStringVariable. 
The @ tells Alpha Anywhere that the format string is not defined here directly, but instead by a variable called formatStringVariable, and to evaluate that variable to get the actual format string. 
There are a limited number of places in an Xdialog format string where the @ (macro expansion) symbol is recognized. Record list controls are one of those places.
</description>

	
</section>

	</sections>
<see>
	<ref href="/documentation/index?search=Xdialog Language Directives and Operators">Xdialog Language Directives and Operators</ref>
	<ref href="/documentation/index?search=Xdialog Control Reference">Xdialog Control Reference</ref>
	
</see>	
	
	
	
</page>