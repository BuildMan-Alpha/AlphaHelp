<page>
	<topic>List Box (Single Field Single Column) Control Syntax
</topic><description>One or more List Box objects may appear inside the Format section of a UI_DLG_BOX() function. To clear or repopulate a list box, simply redefine its Choices variable.</description>	


<syntax>[ [ %Directives% ]. Width [ " ][, Height [ " ]] Variable_Name ^# Choices [ ! Event ][ ? Enabled ] ]
</syntax>	
<arguments>
	<argument>
		<name>%Directives%</name>
		<description>Refer to Xdialog Language Directives and Operators.</description>
	</argument>
	<argument>
		<name>^#</name>
		<description>Character. The leading [ and trailing ] and the ^# characters are required.</description>
	</argument>
	<argument>
		<name>Width</name>
		<description>Numeric. The width of the control.</description>
	</argument>
	<argument>
		<name>Height</name>
		<description>Numeric. The height of the control.</description>
	</argument>
	<argument>
		<name>Variable_Name</name>
		<description>Character. The name of a character variable to receive the user selection, or a numeric variable to receive the index value of the selected radio button. The index of the top-most button is 1.</description>
	</argument>
	<argument>
		<name>Choices</name>
		<description>Character. See Choices Syntax. You must either use the use {DATA} command or the K Directive to preserve the formatting of selected items.</description>
	</argument>
	<argument>
		<name>Event</name>
		<description>Character. Optional. See Event Syntax.</description>
	</argument>
	<argument>
		<name>Enabled</name>
		<description>Logical. Optional. See Enabled Syntax. The control is grayed out when disabled.</description>
	</argument>
	
	
</arguments>	

<sections>
	<section>
		<note>You must not have any space characters in the finished command, except those that may be inside entries in the Choices list.</note>
	</section>
	<section>
		<note>You must have an Event if you want to respond to the user's selection in the Code section of the dialog box.</note>
	</section>
	<section>
		<title>Example
</title>
	<description>For example, the following script creates a list box ten characters wide and five lines tall: 
</description>	
		<example><![CDATA[mode = 1
choices = <<%dlg%
Shared
Read only
Exclusive
%dlg%
result=ui_dlg_box("Title",<<%dlg%
Filename:| .32filename;
Open as:;
Mode:| .10,5mode^#choices;

%dlg% )
]]></example>
<figure><link>images/XD_List_Box.gif</link></figure>
	</section>
<section>
	<description>You can also use an array of character variables to populate the list box.
</description>
	<example><![CDATA[dim mode as N
dim choices3 as C
choices1 = "Shared"
choices2 = "Read only"
choices3 = "Exclusive"
mode = 1
result=ui_dlg_box("Title",<<%dlg%
Filename:| .32filename;
Open as:;
Mode:| .10,5mode^#choices;

%dlg% )
 ]]></example>
</section>	
	
<section>
	<description>This approach produces the same result. Note the uses of the \ (Backslash) character to distinguish between the "]" in the choices[] variable and the list box syntax.
</description>
	<example><![CDATA[dim mode as N
dim choices3 as P
choices1.mode = "Shared"
choices2.mode = "Read only"
choices3.mode = "Exclusive"
mode = 1
result=ui_dlg_box("Title",<<%dlg%
Filename:| .32filename;
Open as:;
Mode:| [.10,5mode^#choices\.mode];

%dlg% ) ]]></example>
</section>		
	
</sections>

<see>
	<ref link="Xdialog Language Directives and Operators">Xdialog Language Directives and Operators</ref>
	<ref link="Xdialog Control Reference">Xdialog Control Reference</ref>
</see>
	
</page>