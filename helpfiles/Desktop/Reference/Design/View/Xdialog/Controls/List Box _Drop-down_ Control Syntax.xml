<page>
	<shortlink>list box dropdown control syntax</shortlink>
	<topic>List Box (Drop-down) Control Syntax
</topic><description>The value of Variable_Name is a base-1 index if the variable is declared as Numeric. If undeclared or left un-initialized, the variable is a string that returns the text of the choice that is selected.
</description>	
<syntax>[ [ Max_Chars ][. Width [ " ]] Variable_Name ^= Choices [ ! Event ][ ? Enabled ] ]
</syntax>	
<arguments>
	<argument>
		<name>[ ^= ]</name>
		<description>Character. Indicates that this is an drop-down list box.</description>
	</argument>
	<argument>
		<name>Max_Chars</name>
		<description>Numeric. Optional. Default = "" (No limit). The maximum number of characters that will be returned.</description>
	</argument>
	<argument>
		<name>Width</name>
		<description>Numeric. Optional. The width of the field.
</description>
	</argument>
	<argument>
		<name>Variable_Name</name>
		<description>Character. The name of a character variable to receive the user selection, or a numeric variable to receive the index value of the selected radio button. The index of the top-most button is 1.</description>
	</argument>
	<argument>
		<name>Choices</name>
		<description>Character. See Choices Syntax.</description>
	</argument>
	<argument>
		<name>Event</name>
		<description>Character. Optional. See Event Syntax.</description>
	</argument>
	<argument>
		<name>Enabled</name>
		<description>Logical. Optional. See Enabled Syntax.</description>
	</argument>
	
	
</arguments>	

	<sections>
		
		<section>
			<note>You must have an Event if you want to process the user's selection in the Code section of the dialog box.</note>
		</section>
	<section>
		<title>Example</title>
		<description>The following script demonstrates a combo box in which the choices are explicitly stated by enclosing the choices between the '{' and '}' characters.
</description>
		<example><![CDATA[mode = "Shared"
result=ui_dlg_box("Title",<<%dlg%
Filename:| [.32filename];
Open as:;
Mode:| [.10 mode^={Shared,Read only,Exclusive}];

%dlg% )]]></example>
	</section>	
<section>
	<description>This script creates this dialog: 
</description>
	<figure><link>images/XD_combo_box.gif</link></figure>
</section>	
<section>
	<description>The following script is identical to the previous script, except that the choices displayed by the combo box come from a variable, which contains a CR-LF delimited list of choices. In addition, mode is declared as a numeric variable. Therefore, the dialog box will set its value to 1, 2, or 3.
</description>
	<example><![CDATA[mode = 1
choices = <<%dlg%
Shared
Read only
Exclusive
%dlg%
result=ui_dlg_box("Title",<<%dlg%
Filename:| [.32filename];
Open as:;
Mode:| [.10 mode^=choices];

%dlg% )]]></example>
</section>
	
	
	
		
	</sections>
	
	<see>
		<ref link="Xdialog Language Directives and Operators">Xdialog Language Directives and Operators</ref>
		<ref link="Xdialog Control Reference">Xdialog Control Reference</ref>
	</see>
	
	
</page>