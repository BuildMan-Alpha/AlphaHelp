<page>
	<topic>Multi-User Alpha Anywhere Applications</topic>
	<description>This topic is a collection of recommendations by experienced Alpha Anywhere developers about the best way to create multi-user applications. The following is a diagram of an "optimal" multi-user architecture. The most critical point is the distinction between the computers with real databases and shadow databases. 
</description>
<sections>
<section>
	
	<figure><link>images/Network_Architecture.gif</link></figure>
	
</section>	

<section>
	<cases>
		<case>
			<title>Shared folders</title>
			<cases>
				<case>
					<title>Comment</title>
					<description>Make sure that the folders for the shared databases are shared for full control by all users.
Define the drive letters and folder names of the shared folders using addin variables in the autoexec scripts. This provides a common variable pointing to proper paths. If you ever need to move your tables, then all you need to do is to change the reference in one place.
Place shadow databases in subfolders in the shadow folder within the a5v5runtime folder.
</description>
					<note>When Alpha Anywhere updates a shadow database, it does not create new subfolders.</note>
				</case>
				
				
			</cases>
			
		</case>
		
			<case>
			<title>Minimizing Network Overhead</title>
			<cases>
				<case>
					<title>Comment</title>
					<description>Use Shadow Databases and Lightning Query Optimization. For more thoughts from Jim Chapman, see Minimizing Network Overhead.</description>
					
				</case>
				
				
			</cases>
			
		</case>
		
			<case>
			<title>Development</title>
			<cases>
				<case>
					<title>Comment</title>
					<description>It is a good idea to take backup "snapshots" at frequent stages of the development.</description>
					
				</case>
				
				
			</cases>
			
		</case>
		
			<case>
			<title>Maintenance</title>
			<cases>
				<case>
					<title>Comment</title>
					<cases>
						<case>
							<description>Know how to distribute A5 patches to all workstations.
</description>
						</case>
						<case>
							<description>Install the real and the shadow databases in the same-named directory on every workstation.
</description>
						</case>
						<case>
							<description>Know how to produce a shadow refresh: both a system-side method as well as a single-workstation method.
</description>
						</case>
						
					</cases>
					
				</case>
				
				
			</cases>
			
		</case>
		
			<case>
			<title>Administration</title>
			<cases>
				<case>
					<title>Comment</title>
					<description>These are just a few issues to consider from someone who has built a large multi-user database:</description>
					<cases>
						<case>
							<description>Who will maintain the network?
</description>
						</case>
						<case>
							<description>Who will set and maintain security for users?
</description>
						</case>
						<case>
							<description>What level of access will users have?
</description>
						</case>
						<case>
							<description>If you are a remote developer, how do you plan on getting into the system from where you are?
</description>
						</case>
						<case>
							<description>If the system is up and running all day, when do you schedule routine maintenance tasks?
</description>
						</case>
						<case>
							<description>How strong is your server, does it require a lot of hands-on babysitting?
</description>
						</case>
						<case>
							<description>If there is more than one database, which one or ones get shadowed on different machines?
</description>
						</case>
						
					</cases>
				</case>
				
				
			</cases>
			
		</case>
		
			<case>
			<title>Unique IDs</title>
			<cases>
				<case>
					<title>Comment</title>
					<description>Most applications need to generate unique record IDs. Some developers prefer to generate their own unique numbers, rather than using the autonumber feature of field rules. Peter Wayne suggests a comprehensive solution in this article: Program your own Autoincrement field.</description>
					
				</case>
				
				
			</cases>
			
		</case>
		
	</cases>
	
	
	
</section>
<section>
	<title>Thanks To</title>
	<description>Russ Boehle, Tom Cone Jr., Thomas Henkel, Barry Rochford, Peter Wayne, Steve Workings</description>
</section>	
	
	
</sections>	
<see>
	<ref link="Network Optimization">Network Optimization</ref>
	<ref>Minimizing Network Overhead</ref>
</see>
	
</page>