<page>
	<topic>Supported APIs and Syntaxes</topic>
	<description>The Application Programming Interface (API) and dialogs requiring syntax where ODBC is selected.</description>
<sections>
	<section>
		<title>APIs</title>
		<description>The Application Programming Interface (API) is the way Alpha Anywhere talks to the database. API's in Alpha Anywhere are pluggable drivers (DLLs) that communicate with a database through linked software written by database vendors. Some of them are vendor specific and some of them are generic (like ODBC).
There are many ways to communicate with a database (ODBC, ADO, OLE/DB, OCI, MySQL, CLI, JDBC, Managed Providers, etc.). The implementation in Alpha Anywhere supports ODBC, MySQL native, and a native Oracle driver using OCI (Oracle Call Interface).</description>
		<note>In addition, to the three APIs already mentioned, there are two variants on the ODBC API that have been customized for specific products ( Access and Oracle Lite ). These pseudo-drivers are referred to as APIs because they each have their own dynamically loadable driver and connection dialog. The main motivation for these pseudo-drivers is that the connection strings (and dialogs) know that they are connecting to an Access .MDB file or an Oracle Lite .ODB file and present a dialog accordingly. We bypass the ODBC data source entirely.</note>
	</section>
	
	<section>
		<title>Syntax</title>
		<description>Right now, the only dialogs that ask for syntax are those where you select ODBC. This is because ODBC (Open Database Connectivity) can talk to different databases. Each database vendor uses a slightly different SQL syntax and data dictionary format (how we know what tables are available and what they look like). Syntax handlers (written in Xbasic) create native SQL statements (both DDL - Data Definition Language and DML - Data Manipulation Language {SELECT, INSERT, UPDATE, DELETE}), get table information, convert types, and do things like wrapping names correctly.
Although all of the existing handlers are part of our executable image, you can write your own handler in Xbasic, install it in the executable directory, and it will be recognized as a valid syntax.
</description>
		
	</section>
	
	<section>
		<title>API + Syntax</title>
		<description>When using the ODBC API, you must identify the API and the Syntax you want to use. The Access, MySQL, Oracle, and Oracle Lite drivers all support only the syntax with the same name. The ODBC dialogs use the SQL::Connection::GetPreferredSyntax() function to default to the most likely syntax (using the driver name stored in the registry).</description>
		
	</section>
	
	
</sections>	
<limitations>Desktop applications only.</limitations>

<see>
	<ref>SQL::Connection Methods and Properties</ref>
	
</see>
	
	
</page>