<page>
<topic>Calculated Fields</topic>	
		<description>Alpha Anywhere supports two similar capabilities:
</description>
	
<sections>
	<section>
		
		<cases>
			<case>
				<description>Calculated Fields - where Alpha Anywhere uses a field rule to calculate the value of a table field
</description>
			</case>
			<case>
				<description>Calculated Variables - which you may place on a layout or use in computations
</description>
			</case>
		</cases>
		
	</section>
	<section>
		<description>If you define a calculated field for a table, you can use it in any layout or operation defined for that table. 
</description>
		<figure><link>images/UG_Calculated_Fields.gif</link></figure>
	</section>
	
<section>
<title>Creating a Calculated Field Rule</title>	
<description>See also Calculated Fields.
</description>	
<steps>
	<step>
		<description>In the Control Panel select the table and click Table > Edit Field Rules.
</description>
	</step>
	
	<step>
		<description>On the Field Types tab in the In the Extended field types group, click the Calculated radio button.
</description>
	</step>
	
	<step>
		<description>Optionally, change the Default descriptive name for this calculated field.
</description>
	</step>
	
	<step>
		<description>Optionally, change the Field description.
</description>
	</step>
	
	<step>
		<description>Enter the expression that computes the field value in the Calculated field expression field. The expression must return the same data type as the table field. Click  to use the Expression Builder to help you define the expression.
</description>
	</step>
	
	
</steps>	
	
	
</section>	


<section>
	<title>A Calculated Field Rule Example</title>
	<description>A calculated field rule defines how Alpha Anywhere will calculate the value of a field in your table. You can then place this field on a layout, just as you would place any other field.
The following procedure shows how the Extension field was calculated for the invoice_items table of the AlphaSports database.
</description>
	<steps>
		<step>
			<description>Display the Tables/Sets tab of the Control Panel.
</description>
		</step>
		
		<step>
			<description>Select the "invoice_items" table and click Design > Field Rules.
</description>
		</step>
		
		<step>
			<description>Select the "invoice_items->Extension" field from the list box.
</description>
		</step>
		
		<step>
			<description>Display the Field Types tab.
</description>
		</step>
		
		<step>
			<description>Select the Calculated radio button.
</description>
		</step>
		
		<step>
			<description>Click the 'x-y' icon in the Calculated field expression control to display the Expression Builder.
</description>
		</step>
		
		<step>
			<description>Double click Field Name in the upper left corner of the dialog. Select "Price" and click Insert.
</description>
		</step>
		
		<step>
			<description>Place a multiplication symbol after "Price", so the expression is "Price*".
</description>
		</step>
		
		<step>
			<description>Double click Field Name in the upper left corner of the dialog. Select "Quantity" and click Insert, so the expression is "Price*Quantity".
</description>
		</step>
		
		<step>
			<description>Click OK to return to the Field Rules Editor.
</description>
		</step>
		
		<step>
			<description>Click Save OK > Close. 
</description>
<figure><link>images/UG_Calculated_Field3.gif</link></figure>
		</step>
		
		
	</steps>
	
</section>
<section>
	<title>Forcing Recalculation Using Xbasic
</title>
	<description>The following script forces all calculated fields in a table to be recalculated.
</description>
	<example><![CDATA[dim tbl as P
tbl = table.open("yourtablename")
while .not. tbl.fetch_eof()
    tbl.change_begin()
    tbl.change_end(.t.)
    tbl.fetch_next()
end while
tbl.close()]]></example>
</section>
	
	
</sections>	
	
	
	
</page>