<page>
	<shortlink>dt field Exporting Fields from a Table</shortlink>
	<topic>Exporting Fields from a Table</topic>
	<description>Exporting plain text with a Xbasic script and exporting plain text with an action script.</description>
<sections>
<section>
	<title>Exporting Plain Text with a Xbasic Script</title>
	<description>It is quite easy to export character, numeric, date, Memo, and RTF Memo fields with an Xbasic script. The following form shows the fields of the table and some sample data. 
</description>
	<figure><link>images/XB_Export_Script_1.gif</link></figure>
</section>	
<section>
	<steps>
		<step>
			<description>Open your form and switch to design mode by clicking </description>
			<figure><link>images/Design_Mode_button.gif</link></figure>
		</step>
		<step>
			<description>Open the Toolbox (if it is not already open) by clicking .</description>
			<figure><link>images/Toolbox_button.gif</link></figure>
		</step>
		<step>
			<description>Select the '-' button tool  and sketch a button onto the form ("Export Plain Text with a Xbasic Script" in the picture above).
</description>
			<figure><link>images/Button_tool_button.gif</link></figure>
		</step>
		<step>
			<description>The following screen will appear. Enter the appropriate Label text, select Use Xbasic Editor, and click Next >.
</description>
		
		</step>
		<step>
			<description>Enter a script that follows this format. Note where you want to substitute the name of your table (for export_demo ) and your actual field names (for firstname, lastname, nnumber, ddate, mmemo, and rtfmemo ).
</description>
	
		</step>
		<step>
			<description>The number conversion specifies the number of characters (8) and the number of decimal digits (2). You should substitute numbers that correspond to your field's specifications.
</description>

		</step>
		<step>
			<description>Save your script and your modified form.
</description>
	
		</step>
		<step>
			<description>Switch to view mode by clicking .
</description>
			<figure><link>images/Form_View_Button.gif</link></figure>
		</step>
		<step>
			<description>Click your new Export Plain Text with Script button.
</description>
		</step>
	</steps>
	
	<note>The RTF Memo conversion removes all formatting and leaves you with plain text.</note>
</section>
<section>
	<example><![CDATA[dim tbl as P
dim fname as C
dim lname as C
dim num as C
dim dat as C
dim memo_buffer as C
dim rtf_memo_buffer as C
dim fbuffer as C
dim fptr as P
dim fname as C
fname = ui_get_file("Export File Name", "(*.txt)")
if (alltrim(fname) <> "") then
    fptr = file.create(fname, FILE_RW_EXCLUSIVE)
else
    end
end if
fbuffer = ""
tbl = table.open("export_demo")
tbl.fetch_first()
while .not. tbl.fetch_eof()
    fname = alltrim(tbl.Firstname)
    lname = alltrim(tbl.Lastname)
    dat = dtoc(tbl.Ddate)
    num = alltrim( str(tbl.Nnumber,8,2) )
    memo_buffer = tbl.Mmemo
    rtf_memo_buffer = rtf_field_to_text("Rtfmemo")
    fbuffer = fname + "," + lname + "," + dat + "," + num + "," + memo_buffer + "," + rtf_memo_buffer + crlf()
    fptr.write(fbuffer)
    tbl.fetch_next()
wend
tbl.close()
fptr.close()]]></example>
	
</section>
<section>
	<description>The exported file ( c:\export.txt ) looked like this in Notepad. 
</description>
	<figure><link>images/XB_Export_Script_4.gif</link></figure>
</section>
<section>
	<description>After importing the data in Excel (as a comma delimited file), the data looked like this. 
</description>
	<figure><link>images/XB_Export_Script_3.gif</link></figure>
</section>
	
<section>
	<title>Exporting Plain Text with an Action Script
</title>
<description>The export of data using Action Scripting is faster and easier, but it does not handle RTF memo fields. Memo fields are truncated to 255 characters.
</description>	
<steps>
	<step>
		<description>Open your form and switch to design mode by clicking .
</description>
<figure><link>images/Design_Mode_button.gif</link></figure>
	</step>
	<step>
		<description>Open the Toolbox (if it is not already open) by clicking .
</description>
		<figure><link>images/Toolbox_button.gif</link></figure>
	</step>
	
	<step>
		<description>Select the button tool '-' and sketch a button onto the form ("Export Plain Text with Action Script" in the picture above).
</description>
		<figure><link>images/Button_tool_button.gif</link></figure>
	</step>
	
	<step>
		<description>When the Define Button screen appears, enter the appropriate Label text, select Use Action Scripting, and click Next >.
</description>
		
	</step>
	
	<step>
		<description>Click '+'.</description>
		<figure><link>images/Add_Button.gif</link></figure>
	</step>
	
	<step>
		<description>Select "Form/Browse" from the Category list and "Quick Export to Excel" from the Action list.
</description>
	</step>
	
	<step>
		<description>Click Finish > Finish.
</description>
	</step>
	
	<step>
		<description>Save your script and your modified form.
</description>
	</step>
	
	<step>
		<description>Switch to view mode by clicking .
</description>
		<figure><link>images/Form_View_Button.gif</link></figure>
	</step>
	
	<step>
		<description>Click your new Export Plain Text with Action Script button.
</description>
	</step>
	
</steps>	
	
	
</section>	
<section>
	<description>The exported file looked like this in Excel. </description>
	<figure><link>images/XB_Export_Script_7.gif</link></figure>
</section>

<section>
	<title>Exporting Rich Text with a Xbasic Script
</title>
	<steps>
		<step>
			<description>Open your form and switch to design mode by clicking .
</description>
<figure><link>images/Design_Mode_button.gif</link></figure>
		</step>
		<step>
			<description>Open the Toolbox (if it is not already open) by clicking .
</description>
<figure><link>images/Toolbox_button.gif</link></figure>
		</step>
		<step>
			<description>Select the button tool  and sketch a button onto the form ("Export RTF Text with a Xbasic Script" in the picture above).
</description>
<figure><link>images/Button_tool_button.gif</link></figure>
		</step>
		<step>
			<description>When the Define Button screen appears, enter the appropriate Label text, select Use Xbasic Editor, and click Next >.
</description>
		</step>
		<step>
			<description>Enter a script that follows this format. Note where you want to substitute the name of your table (for export_demo ) and your actual field name for rtfmemo.
</description>
		</step>
		<step>
			<description>Save your script and your modified form.
</description>
		</step>
		<step>
			<description>Switch to view mode by clicking .
</description>
<figure><link>images/Form_View_Button.gif</link></figure>
		</step>
		<step>
			<description>Click your new Export RTF Text with Script button.
</description>
		</step>
		<step>
			<description>Open the resulting file with Microsoft Word.
</description>
		</step>
		
		
	</steps>
	
	
</section>	
<section>
	<example><![CDATA[dim num as C
dim dat as C
dim memo_buffer as C
dim rtf_memo_buffer as B
dim rtf_memo as C
dim fbuffer as C
dim fptr as P
dim fname as C
dim fldptr as P
dim bptr as P
fbuffer = ""
fname = ui_get_file("Export RTF File Name", "(*.rtf)")
if (alltrim(fname) <> "") then
    fptr = file.create(fname, FILE_RW_EXCLUSIVE)
    fptr.write("{")
else
    end
end if
tbl = table.open("export_demo")
tbl.fetch_first()
while .not. tbl.fetch_eof()
    fldptr = tbl.field_get("rtfmemo")
    bptr = rtf.create("")
    bptr.Binary_Text = fldptr.value_get()
    rtf_memo = bptr.Rtf_Text
    rtf_memo = left(rtf_memo, len(rtf_memo) - 1)
    rtf_memo = right(rtf_memo, len(rtf_memo) - 1)
    fbuffer = rtf_memo + "{\par }{\par }"
    fptr.write(fbuffer)
    tbl.fetch_next()
wend
fptr.write("}")
tbl.close()
fptr.close()]]></example>
</section>

<section>
	<description>This is how the exported data appears in Microsoft Word. </description>
	<figure><link>images/XB_Export_Script_9.gif</link></figure>
	
</section>
	
	
</sections>	
<see>
	<ref link="RTF_FIELD_TO_TEXT Function">RTF_FIELD_TO_TEXT()</ref>
<ref link="STR Function">STR()</ref>	
<ref link="DTOC Function">DTOC()</ref>	
<ref link="ALLTRIM Function">ALLTRIM()</ref>	
<ref>FILE Methods</ref>	
<ref link="Quick Export to Excel">Quick Export to Excel</ref>	
<ref>Field Functions and Methods</ref>	
<ref>RTF Functions and Methods</ref>	
<ref>Table Functions and Methods</ref>	
</see>	
</page>