<page>
	<topic>Why can't I open my DBF database?</topic>
<sections>
<section>
	<description>When you are working in the Alpha Anywhere IDE and have a project open, Alpha Anywhere always knows what databases are in your project. That's not true if no project is open, or the IDE is not running.
 Suppose your project has a table called customer. If you go to the interactive window and type
</description>
	<example><![CDATA[t = table.open("customer")]]></example>
	
</section>	

<section>
	<description>as opposed to</description>
	<example><![CDATA[t = table.open("c:\mydata\customer.dbf")]]></example>
	
</section>	

<section>
	<description>then Alpha Anywhere initially tries to open a file called 'customer' and fails. So it then tries to resolve 'customer' to a full filename by using the function
</description>
	<example><![CDATA[table.filename_get("customer")]]></example>
	
</section>	

<section>
	<description>When the control panel is open, Alpha Anywhere can look into the control panel and then
</description>
	<example><![CDATA[table.filename_get("customer")]]></example>
	
</section>	

<section>
	<description>will return c:\mydata\customer.dbf.
 This is why
</description>
	<example><![CDATA[t = table.open("customer")]]></example>
	
</section>	

<section>
	<description>works when the control panel is open.
When the app server is running, however, there is no control panel open. So, from the app server,
</description>
	<example><![CDATA[table.filename_get("customer")]]></example>
	
</section>	
<section>
	<description>returns "" because there is no way for Alpha Anywhere to resolve "customer" to get the fully qualified filename.
The usual way of fixing this in a web application is to prefix the table reference with a path alias. See Path and Connection String Aliases for more information.</description>
</section>	
	
</sections>	
	
	
	
</page>