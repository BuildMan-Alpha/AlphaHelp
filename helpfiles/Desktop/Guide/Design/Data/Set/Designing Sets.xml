<page>
	<shortlink>dt set Designing Sets</shortlink>
	<topic>Designing Sets</topic>
	<description>There are many rules for good set design. These are a few good recommendations from Alpha Anywhere developers for designing sets that are easier to maintain and use.
</description>
<sections>
<section>
	<steps>
		<step>
			<description>Place all tables in the same directory.
</description>
		</step>
		<step>
			<description>Keep set designs simple, especially for data entry.
</description>
		</step>
		<step>
			<description>Always make the main linking field the first field in the table.
</description>
		</step>
		<step>
			<description>Name all indexes that are the main link either the name of the table or the name of the linking field.
</description>
		</step>
		<step>
			<description>Avoid using spaces in table, field, or index names.
</description>
		</step>
		<step>
			<description>Keep all table, field, or index names to 10 character or less.
</description>
		</step>
		<step>
			<description>Make all linking fields character type (even if numbers or dates) and if numbers, left zero fill them.
</description>
		</step>
		<step>
			<description>The linking key should be a meaningless value (such as an auto-incremented field) that has no relation to real data.
</description>
		</step>
		<step>
			<description>Place memo field(s) in a separate 1-to-1 child table(s). This allows more compatible data exchange with other programs.
</description>
		</step>
		<step>
			<description>If you need to link tables with data fields, or an expression using multiple field values, then create separate sets for displaying/reporting these relationships.
</description>
		</step>
		
		
		
	</steps>
	
	
</section>	
	
	
	
	
</sections>	
<see>
	<ref link="Querying and Sorting Child Tables on a Form">Querying and Sorting Child Tables on a Form
</ref>
	
	
</see>	
	
	
</page>