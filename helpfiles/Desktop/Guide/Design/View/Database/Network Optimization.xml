<page>
	<topic>Network Optimization
</topic>
<sections>
<section>
	<title>How Network Optimization Works</title>
	<description>Network Optimization works by making a local copy on your hard drive of certain of your database application files (such as forms, reports, field rules etc.). When you run the application, Alpha Anywhere accesses these files from your local hard drive, but continues to access the database records from the shared network hard drive. This results in less network traffic, and better performance.
The database on your local hard drive is called the Shadow Database. The database on the shared network drive is called the Master Database.
</description>
</section>	

<section>
	<title>Files Copied by Network Optimization
</title>
	<description>Network Optimization copies the database container (the .adb, .alb, .alm, and .alx files) and the data dictionaries (the .ddd, .ddm and .ddx files) to your local hard drive. The Network Optimization process also makes shadow tables on your local hard drive. These shadow tables point to the actual database tables that are on the network. Shadow tables are indicated in the Control Panel by a shadow behind the table icon .
</description>
<figure><link>images/Shadow_Table_icon.gif</link></figure>
<note>Alpha Anywhere Custom help files are not automatically copied by Network Optimization. You must specify them as  additional files.</note>
</section>	


<section>
	<title>Network Optimization Options
</title>
	<description>Alpha Anywhere allows you to set rules that automatically refresh the Shadow Database when the Master Database has been updated.
You can set the version number of the master database. Then, when a user opens a shadow database that is based on an earlier version of the master database, Alpha Anywhere can warn the user that the shadow database is out of date. Alpha Anywhere can then automatically refresh the shadow database, or allow the user to optionally refresh the shadow database.
</description>
</section>	


<section>
	<title>Configuring Network Optimization</title>
	<steps>
		<step>
			<description>Install the Alpha Anywhere application on your server.
</description>
		</step>
			<step>
			<description>Make sure you can access the server from your workstations. (This sounds obvious it's amazing how many times this is an issue.)
</description>
		</step>
			<step>
			<description>Load the Alpha Anywhere runtime or full version (whichever you plan to use) on your workstations.
</description>
		</step>
			<step>
			<description>Start Alpha Anywhere on your workstation.
</description>
		</step>
			<step>
			<description>From the Alpha Anywhere menu select File > Open Database... and navigate to your application on the server and open it. (Allow additional time for it to open over your network. I've seen this take almost 5 minutes on some real slow networks.)
</description>
		</step>
			<step>
			<description>Select Tools > Network Optimize... to display the  Network Optimization dialog.
</description>
<figure><link>images/UG_Network_Optimization_Basic.png</link></figure>
		</step>
			<step>
			<description>On the Basic tab, optionally click Specify Additional Files to specify other files such as image or help files that are part of your database. For example, a form in your application might use a bitmap file as a background image. If this image is not part of the database (i.e. does not show up in any of the tabs on the Control Panel ), then you need to specify it on the Additional Files dialog.
</description>
<cases>
	<case>
		<description>1. Click Select.
</description>
	</case>
	<case>
		<description>2. Navigate to and select the file.
</description>
	</case>
	<case>
		<description>3. Click Open.
</description>
	</case>
	<case>
		<description>4. Repeat steps 7a to 7c for each additional file to include.
</description>
	</case>
	
</cases>
		</step>
			<step>
			<description>Click OK to continue or Cancel to discard your inputs.
</description>
<figure><link>images/UG_Additional_Files.gif</link></figure>
		</step>
			<step>
			<description>Click Create Shadow Database to create a Shadow Database.
</description>
		</step>
			<step>
			<description>On the Options tab, assign an initial version number to the Master Database. You will increment this number each time you want to enable a database refresh.
</description>
		</step>
			<step>
			<description>Specify rules for refreshing the Shadow Database when it does not match the Master database. When a user opens a Shadow Database, Alpha Anywhere automatically checks the version number associated with the Shadow Database and compares it with the Master Database's current version number. If the Shadow Database is out of date, Alpha Anywhere can warn the user, or it can automatically refresh the Shadow Database, depending on the rule you set. The options are:
</description>
<cases>
	<case>
		<description>Do nothing - allow the user to open the Shadow Database
</description>
	</case>
	<case>
		<description>Warn the user, but not require them to refresh the Shadow Database - Alpha Anywhere will display a dialog when the user opens an out-of-date shadow database, but will allow the user to proceed without first refreshing the shadow database.
</description>
	</case>
	<case>
		<description>Automatically refresh the Shadow Database - Alpha Anywhere will automatically update the shadow database if it is out-of-date.
</description>
	</case>
	
</cases>
		</step>
			<step>
			<description>Make a selection from When checking Version Number. By selecting the "Integer Portion Only" option, you can make incremental changes on the master copy of the database without forcing the shadow database to be updated. You can keep track of these incremental changes by assigning fractional version numbers. E.g. version 1.1, 1.2, 1.3 etc. Only when the integer portion of the version number is changed (e.g. from 1.3 to 2.0) will the shadow database be refreshed. See also A5_SetAppVersionNumber() and A5_GetAppVersionNumber(). The options are:
</description>
<cases>
	<case>
		<description>Entire version number
</description>
	</case>
	<case>
		<description>Integer portion only
</description>
	</case>
</cases>
		</step>
			<step>
			<description>Click Set to apply.
</description>
<figure><link>images/UG_Network_Optimization_Options.gif</link></figure>
		</step>
			<step>
			<description>Wait for the optimize to complete. After it has completed and the application reloads, you can shut it down and set up your desktop icon. (You can also set it up ahead of time if you wish but the folders may not exist yet.). The icon should be formatted like this:
</description>
<figure><link>\alpha5.exe \Shadow\\.adb </link></figure>
		</step>
			
		
	</steps>
</section>	
<section>
	<title>Refresh Shadow Database
</title>
<description>To refresh a Network Optimized database (i.e. a "Shadow Database"):
</description>	
	<steps>
		<step>
			<description>Open the local (shadow) database.
</description>
		</step>
			<step>
			<description>Select Tools > Refresh Shadow. The command will refresh the current database if it is a Shadow Database, otherwise no action will occur. When new tables are added to the Master Database after the Shadow Database had been created, the new tables will be added to the Shadow Database.
</description>
		</step>
			
		
		
	</steps>
</section>	
<section>
	<title>After You Create the Shadow Database
</title>
<description>Whenever you want to run the application in the future, use the local copy of the application.
When you are using a local copy of an application, you cannot edit table structures, or field rules. However, you can add new layouts, or edit existing layouts. Keep in mind, that these edits are local. Other users of the application on the network will not see these edits. Also, remember that when you refresh the local copy of the database, your local edits will be lost. If you want to make a change to your application, after users have made local copies, you must make your changes to the master copy, and then each user must refresh their local copy. After a local copy has been refreshed, any local changes (such as edits to scripts) that you made will be overwritten.
</description>	
	<note>Packing or updating the indexes of a table in a shadow database actually performs the operation on the master table.</note>
</section>	
	
</sections>	
	
	
</page>