<page>
	<topic>Selecting the Appropriate View of Your Data
</topic>
<description>Alpha Anywhere uses form and browse layouts for entering and reviewing information stored in tables and sets. Each layout provides different features and tools for editing data.
In Form View, you typically work with one record at a time. A form is a window containing fields from the table, and field values for the particular record you are viewing. In the example below, the form displays one record, which corresponds to a single row of data from a table.
Each table and set has at least one form called the Default Form. The Default Form contains every field in the table or set. 
Form View: </description>	
<sections>
<section>
	<title>Form View
</title>

<figure><link>images/UG_Default_Form.gif</link></figure>	
	
</section>	
<section>
	<description>Objects displayed on a form are called controls. For example, the form above contains field label controls, and text box controls. Forms can also display a variety of other controls like images, graphics, buttons, and colors. One of the advantages of viewing data in forms is that you can arrange the controls in various ways to suit your needs.
</description>
	
</section>

<section>
	<title>Browse View</title>
<description>Alpha Anywhere uses form and browse layouts for entering and reviewing information stored in tables and sets. Each layout provides different features and tools for editing data. Each table and set also has a default browse. The Default Browse contains every field in the table or set. In Browse View, you work with multiple records at the same time, in a familiar tabular, spreadsheet style layout. Browse View
</description>	
<figure><link>images/UG_Default_Browse.gif</link></figure>	
	
</section>	

<section>
	<title>Form or Browse or No Layout?
</title>
<description>The task at hand dictates the best layout. Experiment with both forms and browses to determine their suitability for your different tasks. Some tasks are better suited for an Xbasic script. Refer to the following topics for an introduction to using Xbasic to process the records in a table or set.</description>	
<cases>
	<case>
		<description>Fetching Records
</description>
	</case>
	<case>
		<description>Fetching Through a Table in Record Order
</description>
	</case>
	<case>
		<description>Fetching Through a Table with Ordered Records
</description>
	</case>
	<case>
		<description>Fetching in a Set
</description>
	</case>
	<case>
		<description>Fetching Through Filtered Records
</description>
	</case>
	<case>
		<description>Writing Field Values in a New Record
</description>
	</case>
	<case>
		<description>Contrasting TABLE.OPEN()with TABLE.CURRENT()and TABLE.GET()</description>
	</case>
</cases>
	
</section>	
	

<section>
	<title>Xdialog Forms
</title>
<description>Xdialog forms are different from normal forms, in that they are manually coded. There are advantages and disadvantages associated with Xdialog forms.
</description>	
<cases>
	<case>
		<description>They only are appropriate for users who have mastered Xbasic
</description>
	</case>
	
	<case>
		<description>They have more flexibility in presentation and design than regular forms
</description>
	</case>
</cases>
	
</section>		
</sections>	
	<see>
		<ref>Learning Xdialog</ref>
		<ref>Display an Xdialog Box.</ref>
	</see>
	
</page>