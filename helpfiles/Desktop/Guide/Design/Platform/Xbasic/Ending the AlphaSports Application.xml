<page>
	<topic></topic>
<sections>
	<section>
		<title>Overview</title>
		<description>The CanExit event provides the developer with a way to intercept a close form (and, in this case, exit application) command, and then:
</description>
	<steps>
		<step>
			<description>accept the close command
</description>
		</step>
		
		<step>
			<description>reject the close command
</description>
		</step>
		
		<step>
			<description>run other routines before accepting or rejecting the close command
</description>
		</step>
		
		
	</steps>	
	</section>
	
	
	<section>
		<description>There are five different ways that the user can exit from the application:
</description>
	<steps>
		<step>
			<description>The Close button on the MainMenu toolbar.
</description>
		</step>
		
		<step>
			<description>The Exit AlphaSports button on the MainMenu toolbar.
</description>
		</step>
		
		<step>
			<description>The Close (X) function in the Control - Menu Box in the upper left corner of the form.
</description>
		</step>
		
		<step>
			<description>The red 'X' button in the upper right corner of the form.
</description>
		</step>
		
			<step>
			<description>The OnPush event of the exit door icon on the form, which runs the exit_application script. 
</description>
<figure><link>images/AL_exiting_alpha_sports_2.gif</link></figure>
		</step>
	</steps>	
		
	</section>
	
<section>
	<title>MainMenu Menu
</title>
	<description>The Close button on the MainMenu menu executes the line of code shown below. The context of the command is the currently active form, which is the Main Menu. as a result, the word "THIS" refers to the Main Menu.</description>
	<example><![CDATA[THIS.CLOSE()]]></example>
</section>	

<section>
	<title>Xbasic Code Run by the Exit AlphaSports Button 
</title>
	<description>The Exit AlphaSports button on the MainMenu toolbar runs the following Xbasic code.
</description>
	<example><![CDATA[close_all_windows(.f.)
ControlPanel.show()
controlpanel.activate()
this.close() ]]></example>
</section>	

<section>
	<title>An Explanation of the Xbasic Code
</title>
	<description>The first line uses the close_all_windows(?) function to close any open forms, including the Main Menu.
</description>
	<example><![CDATA[close_all_windows(.f.) ]]></example>
</section>	
	
<section>
	<description>The next line shows the Control Panel. We want you to see it, but your application might want to hide the Control Panel.
</description>
	<example><![CDATA[ControlPanel.show() ]]></example>
</section>	

<section>
	<description>Next, give the Control Panel focus so it responds to user input.
</description>
	<example><![CDATA[controlpanel.activate()
 ]]></example>
</section>	

<section>
	<description>Finally, close the MainMenu toolbar.
</description>
	<example><![CDATA[this.close()
 ]]></example>
</section>	


<section>
	<title>Main Menu CanExit Event </title>
	<description>The CanExit event intercepts the form's Close button function and provides an opportunity to cancel the close. This single line of code calls the close_all_windows() function, which asks the user if he wants to continue with or cancel the close action. Refer to the close_all_windows function.
</description>
	<example><![CDATA[close_all_windows()
 ]]></example>
</section>	
	
	
<section>
	<title>Xbasic Code Run by the Main Menu OnExit Event</title>
<description>The OnExit event closes the Navigation toolbar, if it is still open, and then displays the Control Panel.
</description>	
<example><![CDATA[if (eval_valid("vcToolbarName")) then
    if (ui_modeless_dlg_exist(vcToolbarName)) then
        ui_modeless_dlg_close(vcToolbarName)
    end if
end if
controlpanel.show() ]]></example>	
</section>	
	
<section>
	<title>An Explanation of the Xbasic Code</title>
<description>The first line of code uses the eval_valid() function to test if the vcToolbarName variable exists. The eval_valid() function will return false if the vcToolbarName shared variable was not created or went out of scope.</description>	
<example><![CDATA[if (eval_valid("vcToolbarName")) then ]]></example>	
</section>	

<section>
	<description>Double check by directly asking if the toolbar is open with the ui_modeless_dlg_exist() function.
</description>	
<example><![CDATA[if (ui_modeless_dlg_exist(vcToolbarName)) then ]]></example>	
</section>

<section>
	<description>If the answer is true, close the toolbar with the ui_modeless_dlg_close() function.
</description>	
<example><![CDATA[ui_modeless_dlg_close(vcToolbarName)
    end if
end if
 ]]></example>	
</section>

<section>
	<description>Now display the Control Panel.
</description>	
<example><![CDATA[controlpanel.show() ]]></example>	
</section>

<section>
	<title>Bar1 OnPush Event </title>
<description>The OnPush event of the Bar1 graphic runs the exit_application script, which has five steps.
</description>	
<steps>
	<step>
		<description>Step one contains inline Xbasic. The form contains two versions of the bitmaps displayed at the lower right corner of the form. The version on the top (Bar1) contains the image of the open door. The version on the bottom (Bar2) contains the image of the closed door.
</description>
	<example><![CDATA[' Hide the open door
Bar1.hide()
' Display the closed door
Bar2.show() ]]></example>	
	</step>
	
	<step>
		<description>Steps two is an Action Script that displays a message box to confirm that the user wants to exit the application. It sets the variable exit_YES_Button to .T. or sets the variable exit_NO_Button to .T..
</description>
	
	</step>
	
	<step>
		<description>Step 3 contains inline Xbasic that runs if the exit_NO_Button value is .T..
</description>
	<example><![CDATA[' Show the open door
Bar1.show()
' Hide the closed door
Bar2.hide() ]]></example>	
	</step>
	
	<step>
		<description>Step 4 contains inline Xbasic that runs if the exit_YES_Button value is .T..</description>
	<example><![CDATA[close_all_windows(.f.) ]]></example>	
	</step>
	
	<step>
		<description>Step 5 is an Action Script that closes the current form.
</description>

	</step>
	
	
</steps>	
	
</section>
	
<section>
	<title>close_all_windows() function </title>
	<description>The close_all_windows() ' function asks the user if wants to continue with or cancel the close.</description>
<example><![CDATA[function close_all_windows as C (prompt = .t.)
    msg = "Close all open windows before ending the application?"
    if (prompt = .t.) then
        q_close = ui_msg_box("AlphaSports", msg, UI_YES_NO_CANCEL + ui_question_symbol)
    else
        q_close = ui_yes_selected
    end if
    if (q_close = ui_yes_selected) then
        open_windows = a5_list_open_windows()
        current_window = topparent.name()
        open_windows = word_subtract(open_windows, \
        current_window, crlf())
        cmd = *for_each(x, x + ".close()", open_windows)
        evaluate_template(cmd)
    else if (q_close = ui_cancel_selected) then
        cancel()
    end if
end function ]]></example>	
	
</section>	
	
	
	
<section>
	<title>An Explanation of the close_all_windows() function</title>
	<description>The function optionally receives a variable named prompt as an argument. If the argument is not received, it has a default value of true ( .t. ).</description>
<example><![CDATA[function close_all_windows as C (prompt = .t.) ]]></example>	
	
</section>	

<section>
	<description>Define a message that we might use later.
</description>
<example><![CDATA[msg = "Close all open windows before ending the application?" ]]></example>	
</section>

<section>
	<description>If the value of prompt is true, then display this message with three options: yes, no, or cancel.
</description>
<example><![CDATA[ if (prompt = .t.) then
        q_close = ui_msg_box("AlphaSports", msg, UI_YES_NO_CANCEL + ui_question_symbol) ]]></example>	
</section>

<section>
	<description>If the value of prompt passed to the function is false ( .f. ), then ignore the user's action and force the answer to be YES.
</description>
<example><![CDATA[else
        q_close = ui_yes_selected
    end if
 ]]></example>	
</section>

<section>
	<description>If the answer was yes, then user the a5_list_open_windows() function returns a list of all open windows.
</description>
<example><![CDATA[if (q_close = ui_yes_selected) then
        open_windows = a5_list_open_windows()
 ]]></example>	
</section>



<section>
	<description>Get the name of the Main Menu form.
</description>
<example><![CDATA[current_window = topparent.name() ]]></example>	
</section>

<section>
	<description>Remove the Main Menu from the list.</description>
<example><![CDATA[open_windows = word_subtract(open_windows, current_window, crlf())]]></example>	
</section>

<section>
	<description>Generate the Xbasic command that will close all of the open windows.
</description>
<example><![CDATA[cmd = *for_each(x, x + ".close()", open_windows)]]></example>	
</section>

<section>
	<description>Now execute the Xbasic command constructed above.
</description>
<example><![CDATA[evaluate_template(cmd)]]></example>	
</section>

<section>
	<description>If the answer was cancel, use the cancel()command to abort the close.
</description>
<example><![CDATA[else if (q_close = ui_cancel_selected) then
        cancel()
    end if
end function]]></example>	
</section>
		

</sections>	
<see>
	
	<ref>Creating the Navigation Toolbar
</ref>
	<ref>Displaying the Main Menu</ref>
	<ref>Displaying the Navigation Toolbar</ref>
	<ref>Starting the AlphaSports Application</ref>
	<ref>The Main Menu Form</ref>
</see>	
	
</page>