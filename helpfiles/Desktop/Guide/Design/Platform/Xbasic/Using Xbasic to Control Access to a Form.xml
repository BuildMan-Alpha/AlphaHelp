<page>
	<shortlink>dt xb Using Xbasic to Control Access to a Form</shortlink>
	<topic>Using Xbasic to Control Access to a Form</topic>
	<description>The Invoice form contains the btnEditItems0 ( Zoom ... ) button. The Xbasic code run by the button's OnPush event creates and sets the value of the global variable varInvoice_Number, then displays the Items form (from the AlphaSports sample database). The result is that the global variable varInvoice_Number only exists when the Items form is called by the Invoice form.</description>
	
<sections>
<section>
	<title>Xbasic Code Run by the btnEnter OnPush Event</title>
<example><![CDATA[if (eval_valid("varInvoice_Number") = .t.) then
    topparent:invoice_number.enable()
    topparent.New_Record()
    topparent:Invoice_Number.text = varInvoice_Number
    topparent:Invoice_Number.disable()
    topparent:Product_Id.activate()
    btnEnter.hide()
    btnSave.show()
else
    msg = "You can only use this form to enter a new line item if you open it from a button on the Invoice form."
    ui_msg_box("Error",msg,UI_STOP_SYMBOL)
end if]]></example>	
</section>	
	
<section>
	<title>Xbasic Code Run by the btnEnter OnPush Event</title>
	
	<description>The first line of code uses the eval_valid() function to see if the varInvoice_Number variable can be evaluated, which is the same as saying that the variable exists. The variable only exists if the Invoice form created it before opening the Items form.</description>
	<example><![CDATA[if (eval_valid("varInvoice_Number") = .t.) then]]></example>	
</section>	

<section>
		<description>If the above expression evaluates to true, enable the invoice_number field so it can receive focus and be edited.</description>
	<example><![CDATA[topparent:invoice_number.enable()]]></example>	
</section>	

<section>
		<description>Create a new record.</description>
	<example><![CDATA[topparent.New_Record()]]></example>	
</section>	

<section>
		<description>Set the value of the invoice_number field to varInvoice_Number.</description>
	<example><![CDATA[topparent:Invoice_Number.text = varInvoice_Number]]></example>	
</section>	

<section>
		<description>Disable the invoice_number field so it cannot be edited.</description>
	<example><![CDATA[topparent:Invoice_Number.disable() ]]></example>	
</section>	

<section>
		<description>Set focus to the product_id field so it can accept data.</description>
	<example><![CDATA[topparent:Product_Id.activate() ]]></example>	
</section>	

<section>
		<description>Hide this button, which is named btnEnter (Enter New Item).</description>
	<example><![CDATA[btnEnter.hide()]]></example>	
</section>	

<section>
		<description>Show the other button in the stack.</description>
	<example><![CDATA[btnSave.show()]]></example>	
</section>	

<section>
		<description>If we couldn't evaluate the varInvoice_Number variable, display an error message.</description>
	<example><![CDATA[else
    msg = "You can only use this form to enter a new line item if you open it from a button on the Invoice form."
    ui_msg_box("Error",msg,UI_STOP_SYMBOL)
end if]]></example>	
</section>	

<section>
	<title>Xbasic Code Run by the btnSave OnPush Event</title>
		<description>The btnSave OnPush event is the same as the btnEnter OnPush event, except the it hides btnSave and shows bntEnter.</description>
	<example><![CDATA[.
' Show btnEnter (Enter New Item)
btnEnter.show()
' Hide btnSave (Save Record)
btnSave.hide()
.
. ]]></example>	
</section>	



</sections>	
	<see>
		<ref link="Using Xbasic to Create Queries">Using Xbasic to Create Queries</ref>
		<ref link="Using Xbasic to Select a Record and Display a Form">Using Xbasic to Select a Record and Display a Form</ref>
		
	</see>
</page>