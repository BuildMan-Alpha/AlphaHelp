<page>
	<shortlink>dt tutorial How to Design a Custom Toolbar</shortlink>
	<topic>How to Design a Custom Toolbar</topic>
	
<sections>
<section>
	<description>To design a custom toolbar:
</description>
<steps>
	<step>
		<description>Activate the Control Panel and display the Code tab.
</description>
	</step>
	<step>
		<description>Click the New button.
</description>
	</step>
	<step>
		<description>Select Toolbar from the New Object genie.
</description>
	</step>
	<step>
		<description>To give you a head start, you can start with one of the standard toolbars, or you can start from scratch with a blank toolbar. Select the toolbar type, then click OK.  
</description>
<figure><link>images/New_Toolbar_dialog_box.gif</link></figure>
<cases>
	<case>
		<description>Alpha Anywhere opens the Toolbar Editor window and shows the toolbar that you are editing. If you chose to start with an empty toolbar, there will not be any buttons in the Toolbar buttons list. You now can add five types of elements to the toolbar.
</description>
<cases>
	<case>
		<description>Pre-defined buttons
</description>
	</case>
	<case>
		<description>Custom buttons
</description>
	</case>
	<case>
		<description>Separator lines
</description>
	</case>
	<case>
		<description>Free-form Xdialog code
</description>
	</case>
	<case>
		<description>Drop-down buttons
</description>
	</case>
	
</cases>

	</case>
	
</cases>

</step>
</steps>	
	
</section>	

<section>
<title>Pre-defined Buttons
</title>	
	<steps>
<step>
	<description>Optionally, click Add Pre-defined Button to select from the library of commonly used functions.
</description>
	<cases>
		<case>
			<description>1. If you have not yet defined a context for the toolbar, select one from the Context dialog box.
</description>
		</case>
		<case>
			<description>2. In the resulting Select Button dialog box, expand the tree control, select a button, and click Add. to add it to the collection of buttons to use.
</description>
		</case>
		<case>
			<description>3. When you are modifying a Form or Browse toolbar, you will also see the Special Toolbar Controls window. Use the Add button to add these controls to the collection of buttons to use.
</description>
		</case>
		<case>
			<description>4. Optionally, select a button in the Selected Buttons list and click Remove to remove it from the collection.
</description>
		</case>
		<case>
			<description>5. Click OK to continue or Cancel to discard your inputs. 
</description>
<figure><link>images/Select_Button_dialog_box.gif</link></figure>
		</case>
		
	</cases>
	
</step>		
		
		
	</steps>
	
	
</section>
<section>
	<title>Custom Buttons
</title>
	<steps>
		<step>
			<description>Optionally, click Add Custom Button to define a button.
</description>
			<cases>
				<case>
					<description>1. Optionally, make a selection from the Before Button list. The options are:
</description><cases>
	<case>
		<description>"No break" - the default places this toolbar element to the right of the previous element and on the same tab. 
</description>
	</case>
	<case>
		<description>"Break" - the toolbar element is placed below, instead of to the right of the previous element on the same tab. 
</description>
	</case>
	<case>
		<description>"Conditional Break (when toolbar undocked)" - the toolbar element is placed on the same tab below, instead of to the right of the previous element, only when the toolbar is undocked. Note : The conditional break behavior is not seen when you preview the toolbar. 
</description>
	</case>
	<case>
		<description>"New Tab" - the toolbar element is place on a new tab. 
</description>
	</case>
	<case>
		<description>"Conditional tab (when toolbar undocked)" - the toolbar element is place on a new tab, only when the toolbar is undocked. Note : The conditional tab behavior is not seen when you preview the toolbar. Refer to Toolbar_Tabs. 
</description>
	</case>
	<case>
		<description>"Unbreakable space" - the toolbar element is placed to the right of the previous element and cannot be separated from the previous element. 
</description>
	</case>
	
</cases>
				</case>
					<case>
					<description>2. If you selected "New Tab" or "Conditional tab (when toolbar undocked)" in step a, enter the Tab Label. Note : By default tabs are set to not display labels. Refer to Toolbar Tabs.
</description>
				</case>
					<case>
					<description>3. Optionally, make a selection from the Show Button list. The options are:
</description><cases>
	<case>
		<description>"Always" 
</description>
	</case>
	<case>
		<description>"When toolbar docked horizontally or floating" 
</description>
	</case>
	<case>
		<description>"When toolbar docked vertically" 
</description>
	</case>
	
</cases>
				</case>
					<case>
					<description>4. Optionally, make a selection from the Style list. Toolbars can mix different toolbar button styles. The options are:
</description><cases>
	<case>
		<description>"Bitmap"  
</description>
	</case>
	<case>
		<description>"Text"  
</description>
	</case>
	<case>
		<description>"Text-Bitmap"  
</description>
	</case>
	<case>
		<description>"Bitmap-Text"  
</description>
	</case>
	<case>
		<description>"Text over Bitmap"  
</description>
	</case>
	<case>
		<description>"Bitmap over Text"  
</description>
<cases>
	<case>
		<title>Bitmap only</title>
		<figure><link>images/UG_Toolbar_Bitmap_only.gif</link></figure>
	</case>
	<case>
		<title>Text only</title>
		<figure><link>images/UG_Toolbar_Text_Only.gif</link></figure>
	</case>
	<case>
		<title>Bitmap followed by text</title>
		<figure><link>images/UG_Toolbar_Bitmap_then_Text.gif</link></figure>
	</case>
	<case>
		<title>Text followed by bitmap</title>
		<figure><link>images/UG_Toolbar_Text_then_Bitmap.gif</link></figure>
	</case>
	<case>
		<title>Text over bitmap</title>
		<figure><link>images/UG_Toolbar_Text_Over_Bitmap.gif</link></figure>
	</case>
	<case>
		<title>Bitmap over text</title>
		<figure><link>images/UG_Toolbar_Bitmap_Over_Text.gif</link></figure>
	</case>
	
	
</cases>


	</case>
	
	
</cases>
				</case>
				<case>
					<description>5. Optionally, click Apply to All to give all buttons the same style.
</description>
				</case>
					<case>
					<description>6. Optionally, click the Toolbar Image to select a different bitmap to display.
</description>
				</case>
					<case>
					<description>7. Optionally, check Has Pressed Image and click the Pressed Image to select a different bitmap to display.
</description>
				</case>
					<case>
					<description>8. Optionally, change the default Bubble help text.
</description>
				</case>
				<case>
					<description>9. Optionally, make a selection in the Button Type list. The options are:
</description>
<cases>
	<case>
		<description>"Push Button" - the default 
</description>
	</case>
	<case>
		<description>"Two-state Button" 
</description>
	</case>
	
	
</cases>
				</case>
					<case>
					<description>10. Optionally, enter an expression that defines when the button is enabled in the Enable Expn field. Click  to use the Expression Builder to define this expression.
</description>
				</case>
					<case>
					<description>11. If you selected "Two-state Button" in step 6h, you may enter an expression that defines when the toolbar entry is checked in the Checked Expn field. Click 'xy' to use the Expression Builder to define this expression.
</description>
				</case>
					<case>
					<description>12. Select a Button Action. The options are:
</description>
<cases>
	<case>
		<description>"Play Global Script" - select a script from the Script Name list. 
</description>
	</case>
	<case>
		<description>"Run Xbasic" - enter Xbasic commands into the text box. 
</description>
	</case>
	<case>
		<description>"Internal Action" 
</description>
	</case>
	
</cases>
				</case>
				
				
			</cases>
		</step>
		<step>
			<description>Repeat step 6 for each of the remaining buttons on your toolbar. 
</description>
			<figure><link>images/Toolbar_Editor_dialog_box.gif</link></figure>
		</step>
		
		
	</steps>
	
</section>	
<section>
	<title>Free-form Xdialog</title>
	<steps>
		<step>
			<description>Optionally, click Free-form Xdialog to define a button.
</description>
			<cases>
				<case>
					<description>1. Optionally, make a selection from the Before Xdialog list. The options are:
</description><cases>
	<case>
		<description>"No break" - the default places this toolbar element to the right of the previous element and on the same tab. 
</description>
	</case>
	<case>
		<description>"Break" - the toolbar element is placed below, instead of to the right of the previous element on the same tab. 
</description>
	</case>
	<case>
		<description>"Conditional Break (when toolbar undocked)" - the toolbar element is placed on the same tab below, instead of to the right of the previous element, only when the toolbar is undocked. Note : The conditional break behavior is not seen when you preview the toolbar. 
</description>
	</case>
	<case>
		<description>"New Tab" - the toolbar element is place on a new tab. 
</description>
	</case>
	<case>
		<description>"Conditional tab (when toolbar undocked)" - the toolbar element is place on a new tab, only when the toolbar is undocked. Note : The conditional tab behavior is not seen when you preview the toolbar. Refer to Toolbar_Tabs. 
</description>
	</case>
	<case>
		<description>"Unbreakable space" - the toolbar element is placed to the right of the previous element and cannot be separated from the previous element. 
</description>
	</case>
	
</cases>
				</case>
			<case>
					<description>2. If you selected "New Tab" or "Conditional tab (when toolbar undocked)" in step a, enter the Tab Label. Note : By default tabs are set to not display labels. Refer to Toolbar Tabs.
</description>
				</case>
				<case>
					<description>3. Optionally, make a selection from the Show Button list. The options are:
</description><cases>
	<case>
		<description>"Always" 
</description>
	</case>
		<case>
		<description>"When toolbar docked horizontally or floating" 
</description>
	</case>
		<case>
		<description>"When toolbar docked vertically" 
</description>
	</case>
</cases>
				</case>
				<case>
					<description>4. Click Define Xdialog Code... to display the Define Xdialog dialog box.
</description>
				</case>
				
			</cases>
			
		</step>
		<step>
			<description>Repeat step 8 for each of the remaining Xdialog buttons on your toolbar.
</description>
		</step>
		
		
	</steps>
	
	
	
	
</section>	

<section>
	<title>Drop-down Button
</title>
<steps>
	<step>
		<description>Optionally, click Drop-down Button to define a button.
</description>
		<cases>
			<case>
				<description>1. Optionally, make a selection from the Before Button list. The options are:
</description><cases>
	<case>
		<description>"No break" - the default places this toolbar element to the right of the previous element and on the same tab. 
</description>
	</case>
	<case>
		<description>"Break" - the toolbar element is placed below, instead of to the right of the previous element on the same tab. 
</description>
	</case>
	<case>
		<description>"Conditional Break (when toolbar undocked)" - the toolbar element is placed on the same tab below, instead of to the right of the previous element, only when the toolbar is undocked. Note : The conditional break behavior is not seen when you preview the toolbar. 
</description>
	</case>
	<case>
		<description>"New Tab" - the toolbar element is place on a new tab. 
</description>
	</case>
	<case>
		<description>"Conditional tab (when toolbar undocked)" - the toolbar element is place on a new tab, only when the toolbar is undocked. Note : The conditional tab behavior is not seen when you preview the toolbar. Refer to Toolbar_Tabs. 
</description>
	</case>
	<case>
		<description>"Unbreakable space" - the toolbar element is placed to the right of the previous element and cannot be separated from the previous element. 
</description>
	</case>
	
	
</cases>
			</case>
			<case>
				<description>2. Optionally, make a selection from the Show Button list. The options are:
</description><cases>
	<case>
		<description>"Always" 
</description>
	</case>
	<case>
		<description>"When toolbar docked horizontally or floating" 
</description>
	</case>
	<case>
		<description>"When toolbar docked vertically" 
</description>
	</case>
	
</cases>
			</case>
			<case>
				<description>3. Select the first entry in Drop-down Choices and click Edit Choice to display the Edit Drop-down Menu Item dialog box.
</description>
			</case>
			
			
		</cases>
	</step>
	<step>
		<description>Repeat step 10 for the remaining drop-down buttons on your toolbar.
</description>
	</step>
	
	
</steps>	
	
	
	
</section>
<section>
	<title>Separator Lines
</title>
<steps>
	<step>
		<description>To place a separator line between two toolbar entries:
</description>
		<cases>
			<case>
				<description>1. Select the toolbar button before the insertion point.
</description>
			</case>
				<case>
				<description>2. Click Add Separator Line.
</description>
			</case>
			
		</cases>
	</step>
	
	
</steps>	
	
</section>




<section>
	<title>Arranging Toolbar Buttons
</title>
<steps>
	<step>
		<description>To change the location of a button, select it and click the following or  to move it up or down (the same as Left and right).
</description>
<figure><link>images/Move_First_button.gif</link></figure>
<figure><link>images/Move_Up_Button.gif</link></figure>
<figure><link>images/Move_Down_Button.gif</link></figure>
<figure><link>images/Move_Last_button.gif</link></figure>
	</step>
	<step>
		<description>To delete a button, select it and click 'X'.
</description>
		<figure><link>images/Delete_button.gif</link></figure>
	</step>
	<step>
		<description>To copy a button:
</description>
		<cases>
			<case>
				<description>Select it and click this.</description>
				<figure><link>images/Copy_button.gif</link></figure>
			</case>
			<case>
				<description>In the Copy Toolbar Buttons dialog, select Current button or Multiple buttons.
</description>
			</case>
			<case>
				<description>If you selected Multiple buttons, enter the number of buttons to copy, starting with the current button. A negative number sets the number of buttons to copy, ending with the current button.
</description>
			</case>
			<case>
				<description>Click OK to continue.
</description>
			</case>
			
		</cases>
	</step>
	<step>
		<description>To paste a button, place the cursor on the button after the insertion point, and click the following.
</description>
		<figure><link>images/Paste_button.gif</link></figure>
	</step>
	
	
</steps>	
	
	
</section>

<section>
	<title>Toolbar Appearance
</title>
<figure><link>images/Toolbar_Editor_Appearance_Tab.gif</link></figure>	
	
	
	
</section>
<section>
	<steps>
		<step>
			<description>Optionally, change the default definition of the docking behavior of the toolbar. You can inhibit docking entirely by unchecking Toolbar can be docked? You can control which sides of the toolbar will dock by checking or unchecking the Left, Right, Top, and Bottom check boxes. 
</description>
		</step>
		<step>
			<description>If docking is enabled, you can select the Initial dock position. The options are:
</description><cases>
	<case>
		<description>"Top" 
</description>
	</case>
	<case>
		<description>"Bottom" 
</description>
	</case>
	<case>
		<description>"Left" 
</description>
	</case>
	<case>
		<description>"Right" 
</description>
	</case>
	<case>
		<description>"Float" - not docked 
</description>
	</case>
	
</cases>
		</step>
		<step>
			<description>Optionally, check Toolbar locked? if you do not want the toolbar to be undocked.
</description>
		</step>
		<step>
			<description>Optionally, check Remember toolbar position? if you want it to reload in its last position.
</description>
		</step>
		<step>
			<description>Optionally, select a different Toolbar Background Color.
</description>
		</step>
		<step>
			<description>Optionally, check Use custom toolbar font? and click on the Toolbar Font button to select a different font and/or point size for the toolbar's text.
</description>
		</step>
		<step>
			<description>Optionally, check the Bold, Italic, and Underline check boxes to apply those style attributes to the toolbar's text.
</description>
		</step>
		<step>
			<description>Optionally, select a different border style for toolbar buttons.The options are:
</description>
<cases>
	<case>
		<description>"Raised" 
</description>
	</case>
	<case>
		<description>"Classic" 
</description>
	</case>
	<case>
		<description>"Modern" 
</description>
	</case>
	<case>
		<description>"System" - the default button style set in the Settings dialog box ( View > Settings > Systems > Preferences > Toolbars ). 
</description>

<cases>
	<case>
		<description>Raised Style buttons always have a raised 3D border, even when they do not have focus.  
</description>
		<figure><link>images/UG_Button_Raised_Style.gif</link></figure>
	</case>
	<case>
		<description>Classic Style buttons have a raised 3D border only when they have focus.  
</description>
		<figure><link>images/UG_Button_Classic_Style.gif</link></figure>
	</case>
	<case>
		<description>Modern Style buttons have a colored background and border when they have focus (this style is consistent with Windows XP). If you select the Modern toolbar style, you can select different button background colors and border styles.  </description>
		<figure><link>images/UG_Button_Modern_Style.gif</link></figure>
	</case>
	
	
</cases>

	</case>
	
	
</cases>
		</step>
		<step>
			<description>Optionally, input a Toolbar Title.
</description>
		</step>
		<step>
			<description>Optionally, click Setup Xbasic to input any Xbasic code to be executed before the toolbar is displayed.
</description>
		</step>
		<step>
			<description>Optionally, click Show Xbasic to see the code that will be run to display the toolbar. Caution : This Xbasic code is incomplete. It contains symbolic references that have not yet been resolved.
</description>
		</step>
		<step>
			<description>Click Show Toolbar String to see the finished Xbasic and Xdialog code that will display the toolbar. You can copy and re-use the code in the Full String tab.
</description>
		</step>
		<step>
			<title>Toolbar Tabs</title>
			<description>Toolbar tabs can be mini tabs, or regular tabs with text. The tabs can be above or below the toolbar. When the toolbar is docked vertically, the tabs can be on the left or the right of the toolbar. If the toolbar uses tabs with text, when the toolbar is docked vertically, the text on the toolbar also appears vertically.
The tab breaks in the toolbar can be conditioned on the toolbar docking state. For example, you can design a toolbar that is "flat" when docked horizontally or vertically, but that is separated into tabs when the toolbar is floating.
</description>
<cases>
	<case>
		<description>Toolbar with mini-tabs. 
</description>
		<figure><link>images/UG_Toolbar_with_mini_tabs.gif</link></figure>
	</case>
	<case>
		<description>Toolbar with regular tabs, and text on the tabs. Picture
</description>
		<figure><link>images/UG_Toolbar_with_regular_tabs.gif</link></figure>
	</case>
	
	
</cases>

		</step>
		<step>
			<description>Uncheck Use mini-tabs if you would like tab labels to appear.
</description>
		</step>
		<step>
			<description>Optionally, change where tabs will appear from Above toolbar to Below toolbar.
</description>
		</step>
		<step>
			<description>Optionally, change where tabs will appear from Left side to Right side.
</description>
		</step>
		<step>
			<description>Use the Preview Toolbar button to display the toolbar. Note : Xbasic and Xdialog code is not run in preview mode, so all toolbar characteristics may not be displayed.
</description>
		</step>
		
		
	</steps>
	
	
</section>
	


<section>
	<title>Edit Drop-down Menu Item Dialog Box</title>
	
<description>A drop-down menu is a list of choices associated with an icon (without text) on the toolbar. The icon used is the icon used by the first choice entry. The  button to its right displays the choices.
</description>	
	<steps>
		<step>
			<description>Optionally, click Select built-in action to add use a pre-defined button. See Pre_defined_Buttons for detailed instructions.
</description>
		</step>
		<step>
			<description>Select an Action type. The options are:
</description>
<cases>
	<case>
		<description>"Play Global Script" 
</description>
	</case>
	<case>
		<description>"Run Xbasic" 
</description>
	</case>
	<case>
		<description>"Internal Action" - reserved for internal use 
</description>
	</case>
	
	
</cases>
		</step>
		<step>
			<description>Optionally, click the Image button to select another image from the Insert Image dialog box.
</description>
		</step>
		<step>
			<description>Optionally, define the Menu text for this choice.
</description>
		</step>
		<step>
			<description>Optionally, define the Bubble help for this choice.
</description>
		</step>
		<step>
			<description>Optionally, define the Enable expn for this choice. By default, the choice is enabled at all times. The expression must evaluate to a logical value. The choice will be enabled when the expression evaluates to TRUE.
</description>
		</step>
		<step>
			<description>If you selected "Play Global Script" in step 2, select a script from the Script name list.
</description>
		</step>
		<step>
			<description>If you selected "Run Xbasic" in step 2, enter the Xbasic code below. Click the following to display a larger window.
</description><figure><link>images/Edit_Button_2.gif</link></figure>
		</step>
		<step>
			<description>Repeat steps 1 through 9 for the other choices associated with this Drop-down button.
</description>
		</step>
		
		
		
	</steps>
	
</section>

<section>
	<title>Define Xdialog Dialog Box
</title>
<description>Advanced users can create "free form" buttons, which can contain Xdialog code. A "free-form" button is really more like a "free-form region" on the toolbar, since it is not limited to a button - it can contain text boxes, list boxes, radio buttons, images, text etc. Here is an example of a toolbar with three "free-form" buttons, one of which is a clock. 
</description>	
<figure><link>images/Toolbar_Xdialog.gif</link></figure>	
	
</section>


<section>
<description>The Define Xdialog dialog box provides a structured interface for creating dialog boxes to use as button entries on your toolbar. The Xdialog Body tab contains the text and control(s) that you want to display. 
</description>	
<figure><link>images/UG_Define_Xdialog_dialog_box_4.gif</link></figure>	
	
</section>

<section>
<description>The Define Xdialog Event tab contains the event code that responds to user input. 
</description>	
<figure><link>images/UG_Define_Xdialog_dialog_box_2.gif</link></figure>	
	
</section>
<section>
<description>The Define Xdialog Initialization Event tab contains the code that runs when the toolbar is instantiated.
The Define Xdialog Setup Code tab prepares variables. 
</description>	
<figure><link>images/UG_Define_Xdialog_dialog_box_1.gif</link></figure>	
	
</section>
<section>
<description>The result looks something like this. 
</description>	
<figure><link>images/UG_Define_Xdialog_dialog_box_5.gif</link></figure>	
	
</section>
<section>
	<title>Dynamic Replacement of Xdialog Buttons
</title>
<description>It is possible to define the Xdialog button to display an embedded modeless dialog box, which is created by a separate function. as a result, the toolbar display code is separated from what it displays. For example, the following code creates a modeless dialog box with an embedded browser.</description>	
<example><![CDATA[FUNCTION create_window as C (title as C )
DIM a as P
dim a.object as P
dim a.class as C
a.class = "shell.explorer"
DIM SHARED varC_result as C
DIM a_url as C
a_url ="www.alphasoftware.com"
varC_result = ui_modeless_dlg_box(title,<<%dlg%
{startup=init}
{region}
| {activex=40,20a?.t.};
{endregion};
{line=1,0};
{region}
{endregion};
%dlg%,<<%code%
IF a_dlg_button = "init" THEN
    a_dlg_button = ""
    hourglass_cursor(.t.)
    IF a_url <> "" THEN
        on error goto a_error
        a.object.navigate2(a_url)
        on error goto 0
    END IF
    hourglass_cursor(.f.)
END IF
end
a_error:
ui_msg_box("Error","Invalid URL.",UI_STOP_SYMBOL)
end
%code%)
END FUNCTION ]]></example>
	
</section>


<section>
	<description>The following code in the initialization event tab calls the CREATE_WINDOW() Function Above.</description>
	<example><![CDATA[create_window("ChildDialog")
]]></example>
</section>


<section>
	<description>Then the following code in the Xdialog Body tab displays the results.</description>
	<example><![CDATA[URL of the Day:|{embedded=40,20:ChildDialog};
]]></example>
</section>


<section>
	<description>The result is something like this. </description>
	<figure><link>images/Define_Xdialog_dialog_box_6.gif</link></figure>
</section>

<section>
	<title>Conditional Buttons
</title>
<description>Toolbar buttons can be conditional, depending on how the toolbar is docked. For example, you might design a toolbar button to have a bitmap followed by text when it is horizontal, and to have just a bitmap when it is vertical. You might do this to prevent the vertical toolbar from being too wide.
</description>	
<cases>
	<case>
		<description>A section of the Print Preview toolbar showing a bitmap-text button (Exit Preview). 
</description>
		<figure><link>images/UG_Toolbar_Horizontal.gif</link></figure>
	</case>
	<case>
		<description>A section of the Print Preview toolbar showing only bitmaps when the toolbar is vertical. 
</description>
		<figure><link>images/UG_Toolbar_Vertical.gif</link></figure>
	</case>
	
	
</cases>	
	
</section>

<section>
	<title>Multi-line Toolbars
</title>
<description>Toolbars can be multi-lined. Line breaks can be conditional, based on the toolbar docking state. For example, you might make the toolbar single-lined when docked vertically or horizontally, but two-lined when floating. 
A two-lined toolbar:</description>	
<figure><link>images/UG_Toolbar_Multiline.gif</link></figure>	
	
	
	
</section>

<section>
	<title>Special Toolbar Controls
</title>
<description>When you customize a form or browse toolbar you can add a button for any of the menu options available on the form or browse menu. You can also choose from the list of Special Toolbar Controls.
</description>	
<steps>
	<step>
		<description>Open the database Control Panel and display the Code tab.
</description>
	</step>
	<step>
		<description>Select New > Toolbar from the menu. The New Toolbar Genie appears.
</description>
	</step>
	<step>
		<description>Select the "Form View Toolbar", and click OK.
</description>
	</step>
	<step>
		<description>Under Toolbar Button options, select to add a pre-defined button. The Select Button dialog appears.
</description>
	</step>
	<step>
		<description>Below the Available Command Buttons pane is the list of Special Toolbar Controls. 
</description><figure><link>images/Select_Button_dialog_box.gif</link></figure>	
	</step>
	
	
</steps>


	
	
	
</section>
<section>
	<description>Special Toolbar Controls provide more functionality than a standard toolbar button. Alpha Five comes with several built-in Special Controls and it is possible for developers and third-parties to add their own.
Examples of some Alpha Special Controls are shown in the following toolbar: 
</description>
	<figure><link>images/Toolbar_Special_Controls.gif</link></figure>
	
</section>

<section>
	<cases>
		<case>
			<description>The first control is an Index Selector. It lets you select the primary index/query from a drop-down list.
</description>
		</case>
		<case>
			<description>The second is the Find by Key control. It lets you perform a Find by Key operation without having to open the Find by Key dialog. You can click on the key icon to view or change the key value by which you are searching.
</description>
		</case>
		<case>
			<description>The third is the Run Saved Query control. It lets you run any Saved Query by selecting it from the drop-down list. 
Record Number Selector:</description>
<figure><link>images/Record_Number_Selector.gif</link></figure>
		</case>
		
	</cases>
	
	
</section>
<section>
	<description>The Record Number Selector control shows the current record number. You type a record number into the control, press Enter, and Alpha Five selects the record, which is much more convenient than opening the Find by Key dialog box, and setting the primary index to record number.
</description>
</section>







	
</sections>	
	<see>
		
		<ref link="Xbasic Script Context">Xbasic Script Context</ref>
		<ref>Toolbar Functions and Methods</ref>
		
	</see>
	
	
</page>