<page>
	<shortlink>dt tutorial Put a Button on a Form that Sets Form Field Values</shortlink>
	<topic>Put a Button on a Form that Sets Form Field Values</topic>
<sections>
<section>
	
	<description>The goal in this lesson is to put a button on a form that sets the "Active" field to False, and sets the date on which the customer was deactivated. 
</description>
<figure><link>images/button_32.GIF</link></figure>	

	
</section>	
<section>
	<steps>
		<step>
			<description>Right-click on the "customers" table and select the Open Default Form.
</description>
			
		</step>
		<step>
			<description>Click the Design Mode button to switch to Design Mode.
</description>
			
		</step>
		<step>
			<description>Click the Button Object tool on the Toolbox.
</description>
	
		</step>
		<step>
			<description>Click and drag to draw a button on the form next to the Active field. When you release the mouse button, the Define Button dialog box appears. 
</description>
			<figure><link>images/Define_Button_Default_Settings.gif</link></figure>
		</step>
		<step>
			<description>Enter "Deactivate" as the Label.
</description>
			
		</step>
		<step>
			<description>Make sure the Define script for this button now? check box is checked.
</description>
			
		</step>
		<step>
			<description>Make sure the Use Action Scripting radio button is selected.
</description>
			
		</step>
		<step>
			<description>Click Next >. The embedded Action Script Editor appears. Picture
</description>
			<figure><link>images/Embedded_Action_Script_Editor.gif</link></figure>
		</step>
		<step>
			<description>Click the Add New Action button.
</description>
			
		</step>
		<step>
			<description>Select the "Fields" category and the "Set Field Values" Action, then click OK. 
</description>
			<figure><link>images/Action_Fields_Set_Field_Values.gif</link></figure>
			<cases>
				<case>
					<description>The Set Field Values Genie appears. 
</description>
					<figure><figure>images/button_13.gif</figure></figure>
				</case>
				
			</cases>
		</step>
		<step>
			<description>Click the green '+' icon button to select the field you want to update. Alpha Anywhere shows the fields on the current form.
</description>
			<note>Alpha Anywhere is actually showing the objects on the form that are bound to fields. By default, Alpha Anywhere gives the object the same name as the field itself, but you are free to change any Object name by right clicking on the object and selecting the Properties command.</note>
		</step>
		<step>
			<description>Scroll down the list until you reach "Active". Note that since "Active" is a reserved word in Alpha Anywhere, the control name has been automatically renamed to "Active0." 
</description>
			<figure><link>images/button_14.gif</link></figure>
		</step>
		<step>
			<description>Select "Active0" and click OK. 
</description>
			<figure><link>images/button_15.gif</link></figure>
		</step>
		<step>
			<description>Click the '+' button again to add another field.
</description>
			<figure><link>images/Add_Button.gif</link></figure>
		</step>
		<step>
			<description>Select the "date_deactivated" field and click OK. Your screen should now look like this: 
</description>
			<figure><link>images/button_16.gif</link></figure>
		</step>
		<step>
			<description>Set "date_deactivated" to today's date.
</description>
			
		</step>
		<step>
			<description>Set the How will you specify the field's value? combo box to "Specify an expression that evaluates to the value".
</description>
			
		</step>
		<step>
			<description>Enter "date()" as the expression. The DATE() function returns the current date. 
</description>
			<figure><link>images/button_17.gif</link></figure>
		</step>
		<step>
			<description>Select the "Active0" object.
</description>
		
		</step>
		<step>
			<description>Choose the Specify the value now option.
</description>
			
		</step>
		<step>
			<description>Select "False" as the value. 
</description>
			<figure><link>images/button_18.gif</link></figure>
		</step>
		<step>
			<description>Click the Finish button.
</description>
			<figure><link>images/button_19.gif</link></figure>
			<note>When you create an Action Script in the embedded Action Script Editor, Alpha Anywhere does not prompt for a comment in the last step, as it does when you create the Action Script in the Code Editor. (The Action Script Editor is said to be "embedded" because it is embedded in the Button Genie.) The Action Script looks like this. </note>
		</step>
		<step>
			<description>Click Finish. The Button Genie closes and your form now has a button. 
</description>
			<figure><link>images/button_20.gif</link></figure>
		</step>
		<step>
			<description>Save the form, naming it "Deactivate".
</description>
			
		</step>
		<step>
			<description>Click the Form View button to run the form.
</description>
			
		</step>
		<step>
			<description>Click the new Deactivate button to test it out. 
</description>
			<figure><link>images/button_21.gif</link></figure>
		</step>
		<step>
			<title>Enhancing the Script
</title>
			<description>It would be nice if, after the button was pressed, a dialog box came up asking the user to confirm that they wanted to deactivate the customer.
Click the Design button to put the form back into Design Mode.
</description>
			
		</step>
		<step>
			<description>Right-click the Deactivate button and select Events > OnPush to edit the button's OnPush event. The Code Editor opens. Note the name on the tab. ":Deactivate" is the form name, "Button1" is the object name, and "OnPush" is the event name. 
</description>
			<figure><link>images/button_22.gif</link></figure>
		</step>
		<step>
			<description>Click the Add New Action button.
</description>
			
		</step>
		<step>
			<description>Select the "Dialog Boxes" category and the "Display a Message Box" Action. Click OK. 
</description>
			<figure><link>images/Action_Dialog_Boxes_Display_a_Message_Box.gif</link></figure>
		</step>
		<step>
			<description>Select the Yes, No, Cancel option.
</description>
			
		</step>
		<step>
			<description>Select Second Button as the button with Initial Focus. 
</description>
			<figure><link>images/button_23.gif</link></figure>
		</step>
		<step>
			<description>Click Next >.
</description>
			
		</step>
		<step>
			<description>Fill in the Genie options as shown below: 
</description>
			<figure><link>images/button_24.gif</link></figure>
		</step>
		<step>
			<description>Click Next >.
</description>
			
		</step>
		<step>
			<description>Enter "deactivate" as the dialog box name. 
</description>
			<figure><link>images/button_25.gif</link></figure>
		</step>
		<step>
			<description>Click Next > and Finish to close the Genie. Your Action Script should look like this: 
</description>
			<figure><link>images/button_27.gif</link></figure>
		</step>
		<step>
			<description>You want to display the message box BEFORE you set the values in the fields. Move this action to the top of the list. Click the Move Action Up button </description>
			<figure><link>images/Move_Up_Button.gif</link></figure>
						<figure><link>images/button_26.gif</link></figure>
		</step>
		<step>
			<description>Select the "Set Field Values Action" to give it focus. We need to make this action conditional.
</description>
			
		</step>
		<step>
			<description>Click the Show/hide Conditions button.
</description>
			
		</step>
		<step>
			<description>Check the Action is Conditional check box. Accept the default "Flag variable is True" choice. "Flag" variables are special variables set by the message box in the previous step. For example, if the user clicks the "No" button in this dialog, then the deactivate_No_button variable will be set to .T.. In this example, you only want to update the field values if the user clicks the "Yes" button on the message box. So the flag variable we care about is the deactivate_Yes_button.
</description>
			
		</step>
		<step>
			<description>Select "deactivate_YES_Button" in the Flag combo box. The Code Editor should now look like this: 
</description>
			<figure><link>images/button_28.gif</link></figure>
		</step>
		<step>
			<description>If the user selects the "No" or "Cancel" buttons, create a message box saying that the customer was not deactivated. To do this, follow the steps to add a new message box action.
</description>
			
		</step>
		<step>
			<description>Select the OK button on the first page of the Display a Message Box Genie.
</description>
			
		</step>
		<step>
			<description>Complete the second page of the Genie as shown below: 
</description>
			<figure><link>images/button_29.gif</link></figure>
		</step>
		<step>
			<description>Enter "notdeactivated" as the name of the dialog box. 
</description>
			<figure><link>images/button_30.gif</link></figure>
		</step>
		<step>
			<description>Check the Action is Conditional check box.
</description>
			
		</step>
		<step>
			<description>Set Execute action if to "Flag variable is True".
</description>
			
		</step>
		<step>
			<description>Set Flag to deactivate_NO_button. Your screen should look like this: 
</description>
			<figure><link>images/button_31.gif</link></figure>
		</step>
		<step>
			<description>Save your form and test the button.
</description>
		
		</step>
		<step>
			<description>Click No on the message box, and you will see the "Customer was not deactivated" message.
</description>
			
		</step>
		<step>
			<description>If you select the Cancel button, the field value will not be updated (as you would expect), but the "Customer was not deactivated" message will NOT be shown.
</description>
			
		</step>
		<step>
			<description>To fix this, edit the button Action and change the Execute Action if setting to "Condition expression is True". Then enter the expression, "Var->deactivate_NO_Button = .t.".
</description>
			
		</step>
		
		
		
	</steps>
	
	
	
</section>	
	
	
	
	
</sections>	
	
	
	
</page>