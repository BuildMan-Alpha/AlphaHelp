<page>
	<shortlink>server view product list a5w</shortlink>
	<topic>PRODUCTLIST.A5W</topic>
<description>The URL that displays the PRODUCTLIST.A5W page may contain an optional filter expression to filter the products shown by category ID and apply an order by description.</description>	
<sections>
	<section>
	
	<description>An example would be:</description>
	<example><![CDATA[productlist.a5w?grd_prods_filter=Cat%5Fid%3D%221013%22&grd_prods_order=Description.]]></example>
</section>	
<section>
	
	<description>PRODUCTLIST.A5W includes a JavaScript file named shopcart.js, which displays a product selected for the shopping cart in a popup window.
PRODUCTLIST.A5W contains the NAV_MAIN navigation, GRD_PRODNAV grid, and GRD_PRODS grid components.</description>
</section>	
	<section>
		<title>Purpose</title>
	<description>The PRODUCTLIST.A5W page displays a list of products with thumbnail pictures and prices. A customer can purchase an item by clicking the shopping cart image.</description>	
	</section>

<section>
	<title>Links</title>
<description>The following links display the PRODUCTINFO.A5W page.
</description>	
<cases>
	<case>
		<description>the Category link in the GRD_PRODNAV grid component
</description>
	</case>
	<case>
		<description>the Products entry in the NAV_MAIN navigation component
</description>
	</case>
	<case>
		<description>the Search part on the INDEX.A5W, PRODUCTINFO.A5W, and SPECIALS.A5W pages
</description>
	</case>
	
	
</cases>	
</section>	

<section>
	<title>Edits to the Page Source</title>
<description>When you look at PRODUCTLIST.A5W with the Source tab of the HTML Editor, you will see a large amount of HTML and Xbasic code. The HTML Editor placed almost all of it there automatically, as we used the WYSIWYG tab to place the tables, text, graphics, and components on the page. There are a few interesting exceptions, where we changed the page code through the Source tab.
The a5w_include("loggedinvalues.a5w") statement runs the code on the LOGGEDINVALUES.A5W page. This page creates and sets the values of session.protectedpUser.userid, session.protectedpUser.type, and session.protectedpUser.name.
</description>	
<example><![CDATA[a5w_include("loggedinvalues.a5w")
]]></example>	
</section>
<section>
<description>Next, the code defines the welcome message for the current user. If no name was found for the current user, welcome is set to NULL. If a user name was found, the welcome message includes the session.protectedpUser.name.
</description>	
<example><![CDATA[if session.protectedpUser.name = ""
    welcome = "" ' welcome message for current user shown below product navigation list
else
    welcome = "Welcome "+session.protectedpUser.name+"!"
end if]]></example>	
</section>
<section>
<description>The code saves the page style into a variable. It will be needed to format the welcome and header messages.
</description>	
<example><![CDATA[pgstyle = "shopcart" ]]></example>	
</section>

<section>
<description>The script then sets the session.protectedchkoutprogress session variable to show that no checkout pages have been completed. The next statement deletes any existing session.protectedchkout variable, to make sure that the customer's inputs are not merged with any previous data.
</description>	
<example><![CDATA[session.protectedchkoutprogress = 0
delete session.protectedchkout]]></example>	
</section>
<section>
<description>The location = "" statement clears the highlighting of all entries in the menu. The stylename = pgstyle statement causes the style of the navigation component to match the GRD_PRODNAV grid component.</description>	
<example><![CDATA[with tmpl_NAV_MAIN
    location = ""
    stylename = pgstyle
    componentName = "NAV_MAIN"
end with
]]></example>	
</section>
<section>
<description>The stylename = pgstyle statement causes the style of the navigation component to match the GRD_PRODNAV grid component.
</description>	
<example><![CDATA[with tmpl_GRD_PRODNAV
    stylename = pgstyle 'override style
    componentName = "GRD_PRODNAV"
end with
]]></example>	
</section>
<section>
<description>This code sets the style of the component to match the GRD_PRODNAV grid component.
</description>	
<example><![CDATA[with tmpl_GRD_PRODS
    stylename = pgstyle 'override style
    componentName = "GRD_PRODS"
end with]]></example>	
</section>
<section>
<description>The page script then adds the search form. See Creating the Abstracted Search Code.
Later the pgstyle variable styles the heading of the page.
</description>	
<example><![CDATA[<tr>
    <td colspan="2" align="middle" class=" <%a5 ? pgstyle %> ErrorDataTD"><br><strong>Since 1982, Your Preferred Sporting Goods Supplier! Now with Many New Products</strong></td>
</tr>]]></example>	
</section>
<section>
<description>If the welcome message is not NULL, the pgstyle variable styles the welcome message.
</description>	
<example><![CDATA[<%a5 if welcome <> "" %>
    <tr>
        <td class=" <%a5 ?pgstyle %> ErrorDataTD" align="middle"><strong><%a5 ?welcome %></strong></td>
    </tr>
<%a5 end if %>]]></example>
</section>
<section>
	<title>Page Security Information
</title>
<description>Always Allowed</description>	

</section>
	
</sections>	
<see>
	<ref>Web Pages</ref>
</see>	
	
</page>