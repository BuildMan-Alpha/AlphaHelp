<page obsolete="true">
	<obsolete>This topic is obsolete. The "ulink" value is no longer used in Alpha Anywhere. See [Web Application Security Guide] for more information.</obsolete>
	<topic>Link a security login to a user's table</topic>
	<description>The Web Security Framework includes an option for a "ulink" value. This is a special character field with up to 40 characters and is typically used to store some identifier from an external table that corresponds to the security record.</description>
	<sections>
		<section>
			<description>For example, you may have a customer table with a "customer_id" (like AlphaSports). In AlphaSports, Michael Graham has an id of "00000001" in the customer table. If you have a security record for Michael, you could enter the value "00000001" into his security record "ulink" value.</description>
		</section>
		<section>
			<description>The security includes an option to automatically populate a persistent session variable with the value from the current logged in user's ulink field. As soon as Michael would log in, his record identifier for the customer table would be in the session variable (assuming it was saved in the "ulink" field). You can use that value for filtering or finding other user values in the customer table.</description>
		</section>
		<section>
			<description>To activate the "ulink" field, open the Security Settings and go to Customize Options?Enable external user identifier field. When the option is checked, you can enter a session variable name for the identifier. We strongly recommend you use a protected session variable such as "__protected__ulink", or "__protected__customer_id", or any name that is easy to recognize.</description>
		</section>
		<section>
			<description>The sample database "Application Server Demo" includes a section on web security and samples using the "ulink" value as a filter in a grid.</description>
		</section>
		<section>
			<description>A note on protected session variables: The concept of protected session variables became obsolete with Version 11. All Session variables are now effectively "protected" and cannot be directly created from a query string or POST variables. Therefore, the use of "protected" Session variables is no longer needed. If your application is running in a prior version, the use of the protected naming convention is still recommended.</description>
		</section>
	</sections>
	<see>
		<ref>Find and Install Demo Applications</ref>
		<ref>Live Demo Server</ref>
	</see>
	<links>
		<link link="web application security guide">Web Application Security Guide</link>
	</links>
</page>