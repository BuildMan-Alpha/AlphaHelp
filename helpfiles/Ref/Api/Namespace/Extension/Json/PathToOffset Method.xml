<page generated="true">
	<topic>Extension::Json PathToOffset Method</topic>
	<prototype static="true">.PathToOffset as n (json as C, path  as C [, base  as N])</prototype>
	<arguments>
		<argument>
			<name>json</name>
			<description>Json input text</description>
		</argument>
		<argument>
			<name>path</name>
			<description>Path to get starting offset of.</description>
		</argument>
		<argument>
			<name>base</name>
			<description>Optional array/position base.</description>
		</argument>
	</arguments>
	<description>Get the offset in the json (1 based) - for the 'path'. The 'base' argument indicates array/position start - Xbasic should be 1, javascript should be 0.</description>
	<discussion>
	<p>This method can be used to divide or decorate an element in json string, usually this would be used in conjuction with PathExtract so that the length of the element can also be determined.</p>
	</discussion>
	<example><![CDATA[
dim json as c = <<%json%
{
    "fname": "john",
    "lname": "public",
    "address": {
        "address1": "12 main street",
        "address2": "apt 2b",
        "state": "NY",
        "city": "Springfield"
    },
    "bill_address": {
        "address1": "12 main street",
        "address2": "apt 2b",
        "state": "NY",
        "city": "Statesville"
    }
}
%json%

pos = extension::json::PathToOffset(json,"address.state")
? pos
= 155

before = left(json,pos-1)
after = substr(json,pos)
? before+"Contents for address.state here>>"+after
= {
    "fname": "john",
    "lname": "public",
    "address": {
        "address1": "12 main street",
        "address2": "apt 2b",
        "state": Contents for address.state here>>"NY",
        "city": "Springfield"
    },
    "bill_address": {
        "address1": "12 main street",
        "address2": "apt 2b",
        "state": "NY",
        "city": "Statesville"
    }
}
]]></example>
</page>
