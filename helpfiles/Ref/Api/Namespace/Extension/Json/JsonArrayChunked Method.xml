<page generated="true" api="xb" build="5103">
	<shortlink>api extension json arraychunked method</shortlink>
	<topic parent="extension::json" parentType="class" elementName="ArrayChunked Method">extension::json ArrayRange Method</topic>
	<description>Returns multiple json strings separated by a supplied 'separator' string.  maximumRows if > 0 is the maximum number or rows before we chunk it, maximumBytes if > 0 is the maximum number of bytes of data before we chunk it.</description>
	<prototype static="true">.ArrayChunked as c (json as C, maximumRows as N,maximumBytes as N,separator as C)</prototype>
	<arguments>
		<argument>
			<name>json</name>
			<type>C</type>
			<description>Json Array.</description>
		</argument>
		<argument>
			<name>maximumRows</name>
			<type>N</type>
			<description>If greater than zero, the maximum number of rows in a 'chunk'.</description>
		</argument>
		<argument>
			<name>maximumBytes</name>
			<type>N</type>
			<description>If greater than zero, the maximum number of bytes in a 'chunk' / a chunk may be bigger than maximumBytes if a single entry is bigger that maximumBytes.</description>
		</argument>
		<argument>
			<name>separator</name>
			<type>C</type>
			<description>Separator between 'chunks'.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>result</name>
			<type>c</type>
			<description>Json Array.</description>
		</return>
	</returns>
    <example><![CDATA[ 
? extension::json::ArrayChunked("[10,20,30,40,50,60,70,80,90]",3,0,crlf()+"--sep--"+crlf())
= [ 10,20,30 ]
--sep--
[ 40,50,60 ]
--sep--
[ 70,80,90 ]
]]></example>	
</page>


