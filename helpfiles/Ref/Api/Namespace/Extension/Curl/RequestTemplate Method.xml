<page api="xb" build="5098">
    <shortlink>api extension namespace curl class requesttemplate method</shortlink>
    <topic>Extension::Curl RequestTemplate Method</topic>
    <description>Simple CURL request template, populated from optional named resource, variables and arguments, from request JSON or supplied properties.</description>
    <prototypes>
        <prototype static="true">.RequestTemplate as Extension::CurlResponse (request as C | request as P, C namedResource [, variables as C | variables as P [, args as SQL::Arguments]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>request</name>
            <types>
                <type>C</type>
                <type>P</type>
            </types>
            <description>
                <p>Request defined as a JSON string or dot variable. Variable placeholders and SQL::Arguments can be used in the request definition. Variables use bracket syntax *[xb:{variableName}]* and are specified in the *[xb:variables]* parameter. SQL::Arguments are specified using colon syntax *[xb::variableName]* and are specified in the *[xb:args]* parameter.</p>
                <p>Special placeholders are also available for the *[xb:namedResource]*:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Placeholder</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>{namedresource.access_token}</name>
                            <description>The access token that was retrieved when the authentication, defined in the Named Resource, was performed.</description>
                        </item>
                        <item>
                            <name>{namedresource.resourceURL}</name>
                            <description>The base URL for the request as returned by the service when the authentication, defined in the Named Resource, was performed.</description>
                        </item>
                    </list>
                </p>
                <p>The *[xb:request]* must have the following structure:</p>
            </description>
            <properties>
                <property>
                    <name>uri</name>
                    <type>string</type>
                    <description>
                        <p>The request URI. See examples below for more information.</p>
                    </description>
                </property>
                <property>
                    <name>form</name>
                    <type>object</type>
                    <description>
                        <p>Required if the URI endpoint requires data submitted in a form format.</p>
                        <p>An object containing one or more properties that define data to submit in the request. Refer to the API documentation for the request endpoint for what data can be submitted.</p>
                    </description>
                </property>
                <property>
                    <name>body</name>
                    <types>
                        <type>object</type>
                        <type>string</type>
                    </types>
                    <description>
                        <p>Required if the URI endpoint requires data submitted in the body of the request.</p>
                        <p>An object or string containing the body of the request. Refer to the API documentation for the request endpoint for format requirements for data submitted in the body.</p>
                    </description>
                </property>
                <property optional="true">
                    <name>headers</name>
                    <type>object</type>
                    <description>An object containing headers to include in the request. Required if required by the request endpoint.</description>
                </property>
                <property optional="true">
                    <name>auth</name>
                    <type>object</type>
                    <description>This property is required if the URI requires authentication. Authentication can be one of two types: username (*[xb:user]*) and  password (*[xb:pass]*) or a bearer token (*[xb:bearer]*), either from a Named Resource or generated using other means (examples below).</description>
                    <properties>
                        <property>
                            <name>bearer</name>
                            <type>string</type>
                            <description>Required if authentication uses a bearer token. Can use the special placeholder, *[xb:{namedresource.access_token}]*, to get the token from the Named Resource provider (specified by the *[xb:namedResource]* argument).</description>
                        </property>
                        <property>
                            <name>user</name>
                            <type>string</type>
                            <description>Required if authentication uses a user name and password. The authentication user name.</description>
                        </property>
                        <property>
                            <name>pass</name>
                            <type>string</type>
                            <description>Required if authentication uses a user name and password. The authentication password.</description>
                        </property>
                    </properties>
                </property>
            </properties>
        </argument>
        <argument>
            <name>namedResource</name>
            <type>c</type>
            <description>A Named Resource. The Named Resource can contain information for authentication (such as authentication information for Salesforce or Google.) Named Resources are defined in *[ui:Project Properties]* on the Web Projects Control Panel.</description>
        </argument>
        <argument optional="true">
            <name>variables</name>
            <types>
                <type>C</type>
                <type>P</type>
            </types>
            <description>Default = *[xb:null_value()]*. Defines values for variables used in the request. Can be specified as a dot variable, a JSON string, or one or more URI encoded name-value pairs in the format "variable_name=value" joined with an ampersand (&amp;). E.g. *[xb:"var1=value1&amp;var2=value2"]*. Required if *[xb:request]* uses variables.</description>
        </argument>
        <argument optional="true">
            <name>args</name>
            <type>SQL::Arguments</type>
            <description>Default = *[xb:null_value()]*. A SQL::Arguments object that defines arguments used in the request. Required if *[xb:request]* uses SQL::Arguments.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>response</name>
            <types>
                <type>Extension::CurlResponse</type>
            </types>
            <description>The response returned by the call.</description>
        </return>
    </returns>
    <sections>
        <section>
            <description>
                <p>When defining the URI and the headers in the JSON passed to the extension::curl::RequestTemplate() method, there are two special placeholders that you can use:</p>
            </description>
            <list bullet="true">
                <item>
                    <name>*[xb:{namedresource.access_token}]* - the access token that was retrieved when the authentication, defined in the Named Resource, was performed</name>
                </item>
                <item>
                    <name>*[xb:{namedresource.resourceURL}]* - the base URL for the request as returned by the service when the authentication, defined in the Named Resource, was performed.</name>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>The values for these placeholders are resolved by the specified Named Provider (see the *[xb:namedResource]* variable in the example code below).</p>
                <p>Sample Xbasic code showing how a REST API call is made to the Salesforce API. </p>
                <p>(Assume that the authentication details for the Salesforce account have been saved in a Named Provider called *[xb:salesforcetoken]*. )</p>
                <p>Notice that the URI specified in the JSON string has an argument name in it (*[xb::id]*)</p>
            </description>
            <example code="xb"><![CDATA[dim json as c = <<%json%
{
    "uri": "{namedresource.resourceurl}/services/data/v39.0/sobjects/Account/:id",
    "auth": {
        "bearer" : "{namedresource.access_token}"
    }
}
%json%
dim namedResource as c = "salesforcetoken"

'define the value of the arguments used in the URI
dim args as sql::arguments
args.add("id","0011N00001EBYRDQA5")

'instead of putting the account id in a sql::argument, we could have
'used a variable and referenced the variable in the URI as {accountNumber)
'instead of :id
'for example: /services/data/v39.0/sobjects/Account/{accountNumber}

dim vars as p
vars.accountNumber = "0011N00001EBYRDQA5"

dim response as extension::CurlResponse
response = extension::curl::RequestTemplate(json,namedResource,vars,args)

if response.content <> "" then
    dim json as c
    json = response.content
else
    'no response
end]]></example>
        </section>
        <section>
        <title>Post Commands</title>
        <description>
           <p>Posting data with a simple body, like JSON, requires populating a "body" property. </p>
           <p>Below is an example appending a range of values to a google sheet.</p>
        </description>
        <example code="xb"><![CDATA[
dim json as c = <<%json%
{
    "uri": "https://sheets.googleapis.com/v4/spreadsheets/{spreadsheetid}/values/{SheetName}!A1:D1:append?valueInputOption=USER_ENTERED",
    "body": { "range": "{SheetName}!A1:D1", "majorDimension": "ROWS", "values": [ [ "=ROW()-1" , "sam", "smith", "smithco"] ] },
    "auth" : {
       "bearer" : "{namedresource.access_token}"  
    },
    "headers" :  {
      "Content-Type" : "application/json"
    }
}
%json%
dim namedResource as c = "GoogleSheet"
dim vars as p
dim vars.spreadsheetid as c = speadsheetId
dim vars.SheetName as c = "Customers"
dim args as sql::arguments
dim response as extension::CurlResponse
response = extension::curl::RequestTemplate(json,namedResource,vars,args)
end]]></example> 
		</section>
        <section>
        <title>Multipart Forms</title>
            <description>
                <p>Posting data to a multipart form requires defining a 'form' property with an object that has user supplied names (to tag the items) and sub properties of either body (for embedded content), or filename (for files stored on disk to upload). </p>
                <p>Both body and filename form 'parts' can include optional content length and content type.  content-length of 'length' will calculate the length from the supplied input.</p>
                <p>Below is an example of uploading a file to google drive.</p>
            </description>
        <example code="xb"><![CDATA[
dim json as c = <<%json%
{
    "uri": "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart",
    "form" : {
        "metadata" : {
           "body" : { "name" : "{remoteName}" , "parents" : [ "{folderId}" ] },
           "content-length" : "length"
        } ,
        "media" : {
            "filename" : "{localname}" ,
            "Content-Type" : "{mimetype}" 
        }
    },
    "auth" : {
       "bearer" : "{namedresource.access_token}"
    }
}
%json%
dim vars as p
dim vars.folderId as c = folderId
dim vars.remoteName as c = file.filename_parse(filename,"ne")
dim vars.localname as c = strtran(filename,chr(92),"/")
dim vars.mimetype as c = resolve_mime_type(file.filename_parse(filename,"e"))
dim args as sql::arguments
dim response as extension::curlresponse
response = extension::curl::RequestTemplate(json,namedResource,vars,args)
end]]></example>
        </section>
    </sections>
</page>