<page generated="true">
	<shortlink>api A5Storage DataItem Get Method</shortlink>
	<topic>A5Storage::DataItem Get Method</topic>
	<prototypes>
		<prototype>.Get as L (BYREF Data as B, BYREF ContentTypeResult as C)</prototype>
		<prototype>.Get as L (BYREF Data as C, BYREF ContentTypeResult as C)</prototype>
	</prototypes>
	<arguments>
		<argument>
			<name>BYREF Data</name>
			<types>
				<type>B</type>
				<type>C</type>
			</types>
			<description>The data in the item.</description>
		</argument>
		<argument>
			<name>BYREF ContentTypeResult</name>
			<type>C</type>
			<description>The content type of the data.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>Result</name>
			<type>L</type>
			<description>Returns .T. if the operation succeeds, otherwise .F. (see .CallResult for additional error information.)</description>
		</return>
	</returns>
	<description>Get the data for the object. The data returned may be a blob or a string, depending on the type of the Data argument you pass.</description>
	<discussion>You must dimension both the Data and ContentTypeResult variables before calling this function.</discussion>
	<example><![CDATA[dim CallResult as CallResult
dim Container as A5Storage::DataContainer = null_value()

CallResult = A5Storage::DataContainer::Open(Container, "Provider='Disk';Container='c:\A5Webroot';")
if CallResult.Success
    dim Item A5Storage::DataItem = null_value()
    if Container.ReferenceItem(Item, "MyObjectName")
        dim Data as B
        dim ContentTypeResult as C
        if .not. Item.Get(Data, ContentTypeResult)
            showvar(Item.CallResult.Text, "Error in Get")
        end if
    end if
end if]]></example>
</page>
