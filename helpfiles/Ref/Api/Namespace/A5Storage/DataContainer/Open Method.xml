<page generated="true">
	<topic>A5Storage::DataContainer::Open Method</topic>
	<prototypes>
		<prototype static="true">A5Storage::DataContainer::Open as A5Storage::CallResult (BYREF Container as A5Sorage::DataContainer,  ConnectionStringIn as C [, Passphrase as C])</prototype>
		<prototype static="true">A5Storage::DataContainer::Open as A5Storage::CallResult (BYREF Container as A5Sorage::DataContainer, NameCache as A5Storage::NameCache, ConnectionStringIn as C [, Passphrase as C])</prototype>
	</prototypes>
	<arguments>
		<argument>
			<name>BYREF Container</name>
			<type>A5Sorage::DataContainer</type>
			<description></description>
		</argument>
		<argument>
			<name>NameCache</name>
			<type>A5Storage::NameCache</type>
			<description>Defines a set of Storage container connection strings.</description>
		</argument>
		<argument>
			<name>ConnectionStringIn</name>
			<type>C</type>
			<description>The connection string for the Storage container.</description>
		</argument>
		<argument optional="true">
			<name>Passphrase</name>
			<type>C</type>
			<description>A passphrase used to decrypt the connection string. Only required if the connection string is encrypted.</description>
		</argument>
	</arguments>
	<description>Open a connection to a storage location.</description>
	<sections>
		<section>
			<title>Example: Connect to a Storage Container</title>
			<example><![CDATA[dim CallResult as CallResult
dim Container as A5Storage::DataContainer = null_value()

CallResult = A5Storage::DataContainer::Open(Container, "Provider='Disk';Container='c:\A5Webroot';")
if CallResult.Success
    ' etc
end if]]></example>
		</section>
		<section>
			<title>Example: Connect to Multiple Storage Containers</title>
			<example><![CDATA[dim CallResult as CallResult
dim Container as A5Storage::DataContainer = null_value()
dim Storages as C = <<%txt%
Storage1    Provider='Disk';Container='C:\A5WebRoot1';
Storage2    Provider='Disk';Container='C:\A5WebRoot2';
%txt%

dim Cache as A5Storage::NameCache = new A5Storage::NameCache(Storages)

CallResult = A5Storage::DataContainer::Open(Container, Cache, "::Name::MyConnectionString")
if CallResult.Success
    'etc
end if]]></example>
			<note>The connection string passed into the example does have to be a named connection. If you pass a named connection, you must also provide a cache to look it up in.</note>
		</section>
	</sections>
</page>
