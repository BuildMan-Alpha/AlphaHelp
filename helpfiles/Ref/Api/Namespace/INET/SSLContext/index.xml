<page api="xb">
    <shortlink>api inet namespace ssl context class index</shortlink>
    <topic>INET::SSLContext Class</topic>
    <description>Methods for working with SSL certificates and encrypted data.</description>
    <properties>
        <property>
            <name>PrivateKeyFile</name>
            <type>C</type>
            <description>The path and name of the private key file.</description>
        </property>
        <property>
            <name>CertificateFile</name>
            <type>C</type>
            <description>The path and name of the SSL Server Certificate file.</description>
        </property>
        <property>
            <name>CertificateAuthorityFile</name>
            <type>C</type>
            <description>The path and name of the SSL Certificate Authority file.</description>
        </property>
        <property>
            <name>CertificateChainFile</name>
            <type>C</type>
            <description>The path and name of the SSL Certificate Chain file.</description>
        </property>
        <property>
            <name>Password</name>
            <type>C</type>
            <description>String Password property</description>
        </property>
        <property>
            <name>CallResult</name>
            <type>CallResult</type>
            <description>Information about success or failure.</description>
        </property>
        <property>
            <name>CipherList</name>
            <type>C</type>
            <description>String CipherList property</description>
        </property>
        <property>
            <name>RequireValidCertificate</name>
            <type>L</type>
            <description>RequireValidCertificate property</description>
        </property>
        <property>
            <name>ServerName</name>
            <type>C</type>
            <description>ServerName is used to force a value for Server Name Indication (SNI) when that value is different than the host name passed to the INET::SSLSocket.Connect() function.
		This property is not typically used and is optional.  For example, you may want to connect to a specific server that
		is behind a load balancer and the server instance terminates TLS (SSL).  
		In that case, you would set the ServerName property of the INET::SSLContext object to match the server name expected on the certificate
		and then pass the IP address of the server to INET::SSLSocket.Connect() as the host.
		</description>
        </property>
    </properties>
    <!--list:.-->
    <discussion>When using SSL, you need to provide a server-side certificate, a private key, and often a password as part of the context. The INET::SSLSocket method automatically creates the context object, which can be accessed by referencing the Context property. Alternatively, you can create a context object and assign it to each new INET::SSLSocket. Since initializing the context is fairly expensive to establish, you can get better performance by sharing the context among sockets.</discussion>
    <sections>
        <section>
            <title>Example</title>
            <description>This example does not use the INET::SSLContext object.</description>
            <example code="xb"><![CDATA[
dim Socket as INET::SSLSocket
Socket.Context.CertificateFile = CertificatePath + "secure.alphafiveonline.com.crt"
Socket.Context.PrivateKeyFile = CertificatePath + "secure.alphafiveonline.com.key"
Socket.Context.password = ""]]></example>
        </section>
        <section>
            <description>This example uses the INET::SSLContext object.</description>
            <example code="xb"><![CDATA[
dim Context as SQLContext
dim Socket as INET::SSLSocket
Context.CertificateFile = CertificatePath + "secure.alphafiveonline.com.crt"
Context.PrivateKeyFile = CertificatePath + "secure.alphafiveonline.com.key"
Context.password = ""
if .not. Context.EstablishContext()
' Check Context.callresult and write code to handle error
end if
Socket.Context = Context]]></example>
        </section>
    </sections>
    <see>
        <ref>INET</ref>
    </see>
    <terms>INET,socket,encryption,function,logical,object,password,performance,server side,string</terms>
</page>