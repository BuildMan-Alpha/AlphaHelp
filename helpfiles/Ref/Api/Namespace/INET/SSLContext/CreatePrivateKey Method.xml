<page api="xb">
    <shortlink>api inet namespace ssl context class create private key method</shortlink>
   <topic>INET::SSLContext::CreatePrivateKey Method</topic>
   <prototype>Result_Flag as L = CreatePrivateKey(KeyFileName as C [, Bits = 512 as N [,Password as C]])</prototype>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>KeyFileName</name>
         <description>The path and name of the private key file.
</description>
     </argument>
     <argument>
         <name> Bits</name>
         <description>Optional. Default = 512. The options are:</description>
<list>
<item>
<name>512</name>
</item>

<item>
<name>1024</name>
</item>

<item>
<name>2048</name>
</item>


</list>
         
         
         
     </argument>
     <argument>
         <name>Password</name>
         <description>Optional. Default = "". The password for the private key file.
</description>
     </argument>
   </arguments>
   <description>Create a private key with an optional password and write to KeyFileName
Note: Bits must be one of 512, 1024 or 2048</description>
   <discussion>
The INET::SSLContext::CreatePrivateKey() method creates a private key with an optional password.
   </discussion>
   <example><![CDATA[
dim ctx as INET::SSLContext
if ctx.createprivatekey(FileName, Bits, Password) then
    ResultText = "Creation of key was successful"
else
    ResultText = "Error creating key: " + ctx.callresult.text 
end if
ui_msg_box("Create Private Key: " + FileName, ResultText)
]]></example>
   
   <see>
      <ref>INET::SSLContext Object</ref>
   </see>
  <terms>INET,socket,object,operation,password</terms>
</page>