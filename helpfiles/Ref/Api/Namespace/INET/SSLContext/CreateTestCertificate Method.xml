<page api="xb">
    <shortlink>api inet namespace ssl context class create test certificate method</shortlink>
   <topic>INET::SSLContext::CreateTestCertificate Method</topic>
   <prototype>Result_Flag as L = CreateTestCertificate(CertificateFile as C, PrivateKeyFile as C, PrivateKeyPassword as C [, DaysCertificateIsValid = 365 as N [, CountryCode = "US" as C [, State = "MA" as C [, Locality = "Burlington" as C [, Organization = "Alpha Software Customer" as C [, OrganizationalUnit	= "Development Test" as C [, CommonName	= "www.mydomain.com" as C [, Comment = "Self Signed Server Test Certificate" as C [, ServerName = "localhost" as C [, SerialNumber = 0 as N ]]]]]]]]]])</prototype>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     
     
     <argument>
         <name>CertificateFile</name>
         <description>The path and name of the SSL Server Certificate.
</description>
     </argument>
     <argument>
         <name> PrivateKeyFile</name>
         <description>The path and name of the private key file.
</description>
     </argument>
     <argument>
         <name> PrivateKeyPassword</name>
         <description>The password for the private key file.
</description>
     </argument>
     <argument>
         <name> DaysCertificateIsValid = 365</name>
         <description>Optional. Default = 365.
</description>
     </argument>
     <argument>
         <name> CountryCode = "US"</name>
         <description>Optional. Default = "US".
</description>
     </argument>
     <argument>
         <name> State = "MA"</name>
         <description>Optional. Default = "MA".
</description>
     </argument>
     <argument>
         <name> Locality = "Burlington"</name>
         <description>Optional. Default = "Burlington".
</description>
     </argument>
     <argument>
         <name> Organization = "Alpha Software Customer"</name>
         <description>Optional. Default = "Alpha Software Customer".
</description>
     </argument>
     <argument>
         <name> OrganizationalUnit	= "Development Test"</name>
         <description>Optional. Default = "Development Test".
</description>
     </argument>
     <argument>
         <name> CommonName	= "www.mydomain.com"</name>
         <description>Optional. Default = "Server Test Certificate".
</description>
     </argument>
     <argument>
         <name> Comment = "Self Signed Server Test Certificate"</name>
         <description>Optional. Default = "Self Signed Server Test Certificate".
</description>
     </argument>
     <argument>
         <name> ServerName = "localhost"</name>
         <description>Optional. Default = "localhost".
</description>
     </argument>
     <argument>
         <name> SerialNumber = 0</name>
         <description>Optional. Default = 0.
</description>
     </argument>
   </arguments>
   <description>Create a server test certificate using an existing private key.</description>
   <discussion>
The INET::SSLContext::CreateTestCertificate() method creates a server test certificate using an existing private key.
   </discussion>
   <example><![CDATA[
dim ctx as INET::SSLContext
if ctx.CreateTestCertificate(CertFile, KeyFile, Password, 1024, "US", "MA", "Burlington", "Alpha Software, Inc.", "Dev", "localhost", "Homemade", "localhost", 12345)
    Result = "Certificate successfully created"
else
    Result = "Error creating certificate: " + ctx.callresult.text
end if
ui_msg_box("Create certificate: " + CertFile, Result
]]></example>
  
   <see>
      <ref>INET::SSLContext Object</ref>
   </see>
  <terms>INET,socket,object,operation,password</terms>
</page>