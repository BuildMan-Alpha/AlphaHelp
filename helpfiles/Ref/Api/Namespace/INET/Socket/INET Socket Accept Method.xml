<page api="xb">
    <shortlink>api inet namespace socket class accept method</shortlink>
   <topic>INET::Socket::Accept Method</topic>
    <description>Accept a new connection (the socket must already be listening).
Returns a status object with information about the success of the call
If the call is successful, AcceptedSocket contains the new instance of INET::Socket.

HandshakeReadTimeout is appropriate for SSL sockets only.

</description>
   <syntax>CallResult Result = INET::Socket::Accept(AcceptedSocket BYREF as INET::Socket [, Timeout as N [, HandshakeReadTimeout as N = 500 ]])</syntax>
   <arguments>
   <argument>
         <name>Result</name>
         <description>
A CallResult Object that provides status for the connection.
 </description>
     </argument>
   
   
   
     <argument>
         <name>AcceptedSocket BYREF</name>
         <description>
 
An INET::Socket object.
 </description>
     </argument>
     <argument>
         <name> Timeout</name>
         <description>Optional. Numeric</description>
     </argument>
     <argument>
         <name> HandshakeReadTimeout</name>
         <description>N = 500</description>
     </argument>
   </arguments>
  
  
   <sections>
       <section>
           <description>The INET::Socket::Accept() method accepts a new connection (the socket must already be listening). It returns a status object with information about the success of the call. If the call is successful, AcceptedSocket contains the new instance of INET::Socket.
</description>
       </section>
       
       <section>
           <title>Example</title>
            <example><![CDATA[
dim Result as CallResult
dim MyListener as INET::Socket
Result = MyListener.Accept(AcceptedSocket, 750)
if Result.Success then
...
]]></example>
       </section>
       
       
       
       <section>
            <description>Another example </description>
            <example><![CDATA[
Result = MyListener.Accept(AcceptedSocket, 750)
         if Result.Success then 
         ...
]]></example>
       </section>
   </sections>
   <see>
      <ref>INET::Socket</ref>
   </see>
 <terms>contains,object</terms>
 <terms>INET,socket,contains,object</terms>
 
</page>