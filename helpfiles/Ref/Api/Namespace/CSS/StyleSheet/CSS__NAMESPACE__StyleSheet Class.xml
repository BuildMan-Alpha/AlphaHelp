<page api="xb">
	<topic>CSS::StyleSheet Class</topic>
	<description>Properties and methods in the CSS::StyleSheet Class.</description>
	<properties>
		<property generated="true">
			<name>scssComments</name>
			<type>C</type>
			<description>Type: "C", String scssComments property</description>
		</property>
		
		
		<property generated="true">
			<name>scssVariable</name>
			<type></type>
			<description>scssVariable property</description>
		</property>
		<property generated="true">
			<name>leading_comments</name>
			<type>Type: "C", </type>
			<description>
 
Type: "C",
 
Comments before any of the elements
 </description>
		</property>
		<property generated="true">
			<name>trailing_comments</name>
			<type>C</type>
			<description>
 
Type: "C",
 
Comments after style element
 </description>
		</property>
		<property generated="true">
			<name>item</name>
			<type></type>
			<description>
 
Type: "Array of Selector"
 
Item array for stylesheet selectors
 </description>
		</property>
		<property generated="true">
			<name>media</name>
			<type></type>
			<description>
 
Type: "Array of Media"
 
Media block for style sheet
 </description>
		</property>
	</properties>
	<methods>
		<methodref>
			<name>Clone</name>
			<ref link=".NET Framework Support"></ref>
			<description>Create a copy of an object instance.
</description>
		</methodref>
			<methodref>
			<name>NewInstance</name>
			<ref link=".NET Framework Support"></ref>
			<description>Create a new object instance of the same type.
</description>
		</methodref>
		
		
		
		
		<methodref generated="true">
			<name>Addmedia</name>
			<ref link="CSS::StyleSheet.Addmedia Method">Addmedia</ref>
			<description>Add a media.</description>
		</methodref>
		<methodref generated="true">
			<name>AddscssVariable</name>
			<ref>AddscssVariable</ref>
			<description>Add a scssVariable.</description>
		</methodref>
		<methodref generated="true">
			<name>AppendStyleSheet</name>
			<ref link="CSS::StyleSheet.AppendStyleSheet Method">AppendStyleSheet</ref>
			<description>Add styles to the current style sheet.</description>
		</methodref>
		<methodref generated="true">
			<name>ApplyDividerStyles</name>
			<ref link="CSS::StyleSheet.ApplyDividerStyles Method">ApplyDividerStyles</ref>
			<description>Add to a specified class border style overrides from another class applied to specified edge (top,left,bottom,right).</description>
		</methodref>
		<methodref generated="true">
			<name>CSS3FromLegacy</name>
			<ref link="CSS::StyleSheet.CSS3FromLegacy Methodn">CSS3FromLegacy</ref>
			<description>Set undefined CSS3 features when legacy mozilla Or WebKit attributes.</description>
		</methodref>
		<methodref generated="true">
			<name>CSS3StripLegacy</name>
			<ref link="CSS::StyleSheet.CSS3StripLegacy Method">CSS3StripLegacy</ref>
			<description>Clear out any legacy mozilla Or WebKit attributes already represented by CSS3 standard attributes in style (unbloat).</description>
		</methodref>
		<methodref generated="true">
			<name>CSS3ToLegacy</name>
			<ref link="CSS::StyleSheet.CSS3ToLegacy Method">CSS3ToLegacy</ref>
			<description>Represent any CSS3 features as legacy Mozilla and WebKit attributes (bloat).</description>
		</methodref>
		<methodref generated="true">
			<name>CollectSameSelectors</name>
			<ref link="CSS::StyleSheet.CollectSameSelectors Method">CollectSameSelectors</ref>
			<description>Compress selectors that match exactly.</description>
		</methodref>
		<methodref generated="true">
			<name>ContainsSass</name>
			<ref>ContainsSass</ref>
			<description>Returns true if the stylesheet contains SASS patterns.</description>
		</methodref>
		<methodref generated="true">
			<name>Deleteitem</name>
			<ref link="CSS::StyleSheet.Deleteitem Method">Deleteitem</ref>
			<description>Delete a item.</description>
		</methodref>
		<methodref generated="true">
			<name>Deletemedia</name>
			<ref link="CSS::StyleSheet.Deletemedia Method">Deletemedia</ref>
			<description>Delete a media.</description>
		</methodref>
		<methodref generated="true">
			<name>DeletescssVariable</name>
			<ref>DeletescssVariable</ref>
			<description>Delete a scssVariable.</description>
		</methodref>
		<methodref generated="true">
			<name>ExpandBoxStyles</name>
			<ref link="CSS::StyleSheet.ExpandBoxStyles Method">ExpandBoxStyles</ref>
			<description>Expands 'box' styles based on root style(s) (if borders are defined) - removes borders from the 'base' style, which will only be kept around if it includes non-border properties.</description>
		</methodref>
		<methodref generated="true">
			<name>ExtractStyles</name>
			<ref link="CSS::StyleSheet.ExtractStyles Method">ExtractStyles</ref>
			<description>Returns a subset stylesheet based on styles that match selectors in list of patterns.</description>
		</methodref>
		<methodref generated="true">
			<name>FindSelector</name>
			<ref link="CSS::StyleSheet.FindSelector Method">FindSelector</ref>
			<description>Returns the index into item[] of the selector that matches the pattern.</description>
		</methodref>
		<methodref generated="true">
			<name>FindSelectors</name>
			<ref link="CSS::StyleSheet.FindSelectors Method">FindSelectors</ref>
			<description>Returns a cr-lf delimited list of selector names that match the pattern.</description>
		</methodref>
		<methodref generated="true">
			<name>FlattenSelectors</name>
			<ref link="CSS::StyleSheet.FlattenSelectors Method">FlattenSelectors</ref>
			<description>One class per selector.</description>
		</methodref>
		<methodref generated="true">
			<name>FromString</name>
			<ref link="CSS::StyleSheet.FromString Method">FromString</ref>
			<description>Convert CSS style sheet text to an style definition.</description>
		</methodref>
		<methodref generated="true">
			<name>FromStringSCss</name>
			<ref>FromStringSCss</ref>
			<description>Convert SCSS style sheet text to an style definition (handles scss variables etc).</description>
		</methodref>
		<methodref generated="true">
			<name>HasCSS3</name>
			<ref link="CSS::StyleSheet.HasCSS3 Method">HasCSS3</ref>
			<description>Returns true if style sheet includes CSS3 attributes.</description>
		</methodref>
		<methodref generated="true">
			<name>ImageGenerate</name>
			<ref>ImageGenerate</ref>
			<description><![CDATA[Remove and process @image-generate selectors.  input images are read from the provided input folder, outputs images are written to the provided output folder.]]></description>
		</methodref>
		<methodref generated="true">
			<name>Insertitem</name>
			<ref link="CSS::StyleSheet.Insertitem Method">Insertitem</ref>
			<description>Insert a new item.</description>
		</methodref>
		<methodref generated="true">
			<name>Insertmedia</name>
			<ref link="CSS::StyleSheet.Insertmedia Method">Insertmedia</ref>
			<description>Insert a new media.</description>
		</methodref>
		<methodref generated="true">
			<name>InsertscssVariable</name>
			<ref>InsertscssVariable</ref>
			<description>Insert a new scssVariable.</description>
		</methodref>
		<methodref generated="true">
			<name>MergeLikeSelectors</name>
			<ref link="CSS::StyleSheet.MergeLikeSelectors Method">MergeLikeSelectors</ref>
			<description>last duplicate selectors overwrite values in later selectors.</description>
		</methodref>
		<methodref generated="true">
			<name>Moveitem</name>
			<ref link="CSS::StyleSheet.Moveitem Method">Moveitem</ref>
			<description>Move a block of item items.</description>
		</methodref>
		<methodref generated="true">
			<name>Movemedia</name>
			<ref link="CSS::StyleSheet.Movemedia Method">Movemedia</ref>
			<description>Move a block of media items.</description>
		</methodref>
		<methodref generated="true">
			<name>MovescssVariable</name>
			<ref>MovescssVariable</ref>
			<description>Move a block of scssVariable items.</description>
		</methodref>
		<methodref generated="true">
			<name>Output</name>
			<ref link="CSS::StyleSheet.Output Method">Output</ref>
			<description><![CDATA[Create CSS output & object (with filter and output expression) and process it.]]></description>
		</methodref>
		<methodref generated="true">
			<name>OutputProcess</name>
			<ref link="CSS::StyleSheet.OutputProcess Method">OutputProcess</ref>
			<description>Process the CSS output (i.e. filter + output combination).</description>
		</methodref>
		<methodref generated="true">
			<name>PurgeFirstSelectors</name>
			<ref link="CSS::StyleSheet.PurgeFirstSelectors Method">PurgeFirstSelectors</ref>
			<description>Purge first duplicate selectors.</description>
		</methodref>
		<methodref generated="true">
			<name>PurgeLastSelectors</name>
			<ref link="CSS::StyleSheet.PurgeLastSelectors Method">PurgeLastSelectors</ref>
			<description>Purge last duplicate selectors.</description>
		</methodref>
		<methodref generated="true">
			<name>Selectors</name>
			<ref link="CSS::StyleSheet.Selectors Method">Selectors</ref>
			<description>Get a list of selectors.</description>
		</methodref>
		<methodref generated="true">
			<name>SelectorsCombine</name>
			<ref link="CSS::StyleSheet.SelectorsCombine Method">SelectorsCombine</ref>
			<description><![CDATA[Returns a styleDef that combines all the attributes from the named selectors (cr-lf delimited list) - any attributes that are NOT common to all will have a value of <Multiple>.]]></description>
		</methodref>
		<methodref generated="true">
			<name>ToString</name>
			<ref link="CSS::StyleSheet.ToString Method">ToString</ref>
			<description>Output the CSS style sheet text that represents the style sheet definition.</description>
		</methodref>
		<methodref generated="true">
			<name>UnFlattenSelectors</name>
			<ref link="CSS::StyleSheet.UnFlattenSelectors Method">UnFlattenSelectors</ref>
			<description>Attempt to restore prior selector.</description>
		</methodref>
	</methods>
  
	<see>
		<ref link="Namespaces">CSS</ref>
	</see>
	<terms>css,style sheet,array,contains,filter,index,item,list,media,object,string,style definition,styles,text,variable</terms>
</page>