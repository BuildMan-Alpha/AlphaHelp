<page api="xb">
	<shortlink>api css namespace style def class</shortlink>
	<topic>CSS::StyleDef Class</topic>
	<description>Properties and methods in the CSS::StyleDef Class.</description>
	<properties>
		<property generated="true">
			<name>text_indent</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The text_indent attribute specifies the indentation of the first line in a text-block.
 </description>
		</property>
		<property generated="true">
			<name>text_align</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The text_align attribute specifies the horizontal alignment of text in an element
 </description>
		</property>
		<property generated="true">
			<name>text_decoration</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The text_decoration attribute specifies the decoration added to text (overline, underline, blink etc).
 </description>
		</property>
		<property generated="true">
			<name>text_transform</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The text_transform attribute controls the capitalization of text (none,capitalize,upercase,lowercase,inherit).
 </description>
		</property>
		<property generated="true">
			<name>text_shadow</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The text_shadow attribute controls text shadow (horizontal-size vertical-size [blur] color).
 </description>
		</property>
		<property generated="true">
			<name>letter_spacing</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
he letter_spacing attribute controls the space between characters in a text.
 </description>
		</property>
		<property generated="true">
			<name>word_spacing</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The word_spacing attribute controls the white space between words.
 </description>
		</property>
		<property generated="true">
			<name>white_space</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The white_space attribute specifies how white-space inside an element is handled (normal,nowrap,pre,pre-line,pre-wrap,inherit)
 </description>
		</property>
		<property generated="true">
			<name>color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Text color for element
 </description>
		</property>
		<property generated="true">
			<name>background_color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
background color for element
 </description>
		</property>
		<property generated="true">
			<name>background_image</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
background image for element
 </description>
		</property>
		<property generated="true">
			<name>background_repeat</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
repeat background image (i.e. repeat-x)
 </description>
		</property>
		<property generated="true">
			<name>background_position</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
position of background image
 </description>
		</property>
		<property generated="true">
			<name>background_attachment</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Defines if the background image is fixed, or scrolls with the page (default is scroll).
 </description>
		</property>
		<property generated="true">
			<name>background_size</name>
			<type>C</type>
			<description>String background_size property</description>
		</property>
		<property generated="true">
			<name>font_family</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Facename for font
 </description>
		</property>
		<property generated="true">
			<name>font_size</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Font size in points
 </description>
		</property>
		<property generated="true">
			<name>font_style</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Font style (i.e. italic)
 </description>
		</property>
		<property generated="true">
			<name>font_weight</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Font weight (i.e. bold)
 </description>
		</property>
		<property generated="true">
			<name>font_variant</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Specify variant of font, i.e. small-caps.
 </description>
		</property>
		<property generated="true">
			<name>border_style</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Border style for element
 </description>
		</property>
		<property generated="true">
			<name>border_width</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Width of element border
 </description>
		</property>
		<property generated="true">
			<name>border_color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Color of border element.
 </description>
		</property>
		<property generated="true">
			<name>border_top_style</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Top border style (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>border_top_width</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Top border line width (if different that default border width)
 </description>
		</property>
		<property generated="true">
			<name>border_top_color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Top border color (if different that the default border color)
 </description>
		</property>
		<property generated="true">
			<name>border_left_style</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Left border style (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>border_left_width</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Left border line width (if different that default border width)
 </description>
		</property>
		<property generated="true">
			<name>border_left_color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Left border color (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>border_right_style</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Right border style (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>border_right_width</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Right border line width (if different that default border width)
 </description>
		</property>
		<property generated="true">
			<name>border_right_color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Right border color (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>border_bottom_style</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Bottom border style (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>border_bottom_width</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Bottom border line width (if different that default border width)
 </description>
		</property>
		<property generated="true">
			<name>border_bottom_color</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Bottom border color (if different that default border)
 </description>
		</property>
		<property generated="true">
			<name>padding</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Padding on interior of element.
 </description>
		</property>
		<property generated="true">
			<name>padding_top</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Padding on interior top of element.
 </description>
		</property>
		<property generated="true">
			<name>padding_left</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Padding on interior left of element.
 </description>
		</property>
		<property generated="true">
			<name>padding_right</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Padding on interior right of element.
 </description>
		</property>
		<property generated="true">
			<name>padding_bottom</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Padding on interior bottom of element.
 </description>
		</property>
		<property generated="true">
			<name>margin</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Margin on exterior of element.
 </description>
		</property>
		<property generated="true">
			<name>margin_top</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Margin on exterior top of element.</description>
		</property>
		<property generated="true">
			<name>margin_left</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Margin on exterior left of element.
 </description>
		</property>
		<property generated="true">
			<name>margin_right</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Margin on exterior right of element.
 </description>
		</property>
		<property generated="true">
			<name>margin_bottom</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Margin on exterior bottom of element.
 </description>
		</property>
		<property generated="true">
			<name>display</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Define how element should be displayed (i.e. inline,table etc - how object flows)
 </description>
		</property>
		<property generated="true">
			<name>visibility</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Don't show element, even if it takes space on on the page.
 </description>
		</property>
		<property generated="true">
			<name>float</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Align an element on the page (i.e. left, right)
 </description>
		</property>
		<property generated="true">
			<name>clear</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Start new floating elements on specified side (right, left, both).
 </description>
		</property>
		<property generated="true">
			<name>overflow</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Overflow occurs when element doesn't fit (hidden, scroll, auto).
 </description>
		</property>
		<property generated="true">
			<name>vertical_align</name>
			<type>C</type>
			<description><![CDATA[
 
Type: "C", 
 
The vertical-align property of the element (top/bottom/%)
 ]]></description>
		</property>
		<property generated="true">
			<name>cursor</name>
			<type>C</type>
			<description>
Type: "C", 
 
Cursor to display when element is hovered over.
 </description>
		</property>
		<property generated="true">
			<name>position</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Positioning to use (relative, absolute).
 </description>
		</property>
		<property generated="true">
			<name>top</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Top position of element.
 </description>
		</property>
		<property generated="true">
			<name>left</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
left posiiton of element.
 </description>
		</property>
		<property generated="true">
			<name>right</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Right position of element.
 </description>
		</property>
		<property generated="true">
			<name>bottom</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Bottom position of element.
 </description>
		</property>
		<property generated="true">
			<name>width</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Width of elemement, does not include padding, borders or margins.
 </description>
		</property>
		<property generated="true">
			<name>height</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Height of element, does not include padding, borders or margins.
 </description>
		</property>
		<property generated="true">
			<name>line_height</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Line height specifies the height of each line of text inside an element.
 </description>
		</property>
		<property generated="true">
			<name>z_index</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Z_index indicates the position back-to-front (greater number is frontmost) in the stack of elements.
 </description>
		</property>
		<property generated="true">
			<name>list_style_type</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Style of a list (onorded - disc or ordered - decimal are examples of this).
 </description>
		</property>
		<property generated="true">
			<name>list_style_image</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Optional image to specifify the list marker.
 </description>
		</property>
		<property generated="true">
			<name>list_style_position</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Position of the list item marker (outside of inside the list elements).
 </description>
		</property>
		<property generated="true">
			<name>table_layout</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
The table layout alogrithm to use - auto = based on content, fixed = specified from table or column element width.
 </description>
		</property>
		<property generated="true">
			<name>caption_side</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Side captions appear for table (top - default, bottom - caption appears below table).
 </description>
		</property>
		<property generated="true">
			<name>border_collapse</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Do borders appear collapsed for a table, or detached.
 </description>
		</property>
		<property generated="true">
			<name>border_spacing</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Space between adjacent borders.
 </description>
		</property>
		<property generated="true">
			<name>empty_cells</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Set if empty cells should have borders.
 </description>
		</property>
		<property generated="true">
			<name>row_span</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Element should span specified number of rows.
 </description>
		</property>
		<property generated="true">
			<name>col_span</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Element should span specified number of columns.
 </description>
		</property>
		<property generated="true">
			<name>page_break_before</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Control page-break occuring before element (auto,always, avoid).
 </description>
		</property>
		<property generated="true">
			<name>page_break_after</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Control page-break occuring after element (auto,always, avoid).
 </description>
		</property>
		<property generated="true">
			<name>page_break_inside</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Control page-break occuring before element (auto, avoid) - this is a keep-together behaviour.
 </description>
		</property>
		<property generated="true">
			<name>size</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Specify if size of page is absolute or relative.
 </description>
		</property>
		<property generated="true">
			<name>marks</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
CSS property to set crop marks on paged media (crop/cross/none/inherit).
 </description>
		</property>
		<property generated="true">
			<name>border_radius</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Radius for rounded borders.
 </description>
		</property>
		<property generated="true">
			<name>border_top_left_radius</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Radius for rounded borders for top left corner only.
 </description>
		</property>
		<property generated="true">
			<name>border_top_right_radius</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Radius for rounded borders for top right corner only
 </description>
		</property>
		<property generated="true">
			<name>border_bottom_left_radius</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Radius for rounded borders for bottom left corner only
 </description>
		</property>
		<property generated="true">
			<name>border_bottom_right_radius</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Radius for rounded borders for bottom right corner only</description>
		</property>
		<property generated="true">
			<name>box_shadow</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Specify drop shadow for box. The CSS3BoxShadow helper can be used to parse/create this.
 </description>
		</property>
		<property generated="true">
			<name>box_sizing</name>
			<type>C</type>
			<description>
 
Type: "C", 
 
Allows override of the way width and heiht are used - content-box is the default behaviour, but border-box has been added to include the border in the box size.
 </description>
		</property>
	</properties>
	<methods>
		<methodref generated="true">
			<name>ApplyBoxModifier</name>
			<ref link="CSS::StyleDef.ApplyBoxModifier Method">ApplyBoxModifier</ref>
			<description>Modifies style to conform for a box modifer (section).</description>
		</methodref>
		<methodref generated="true">
			<name>CSS3FromLegacy</name>
			<ref link="CSS::StyleDef.CSS3FromLegacy Method">CSS3FromLegacy</ref>
			<description>Set undefined CSS3 features when legacy mozilla Or WebKit attributes.</description>
		</methodref>
		<methodref generated="true">
			<name>CSS3StripLegacy</name>
			<ref link="CSS::StyleDef.CSS3StripLegacy Method">CSS3StripLegacy</ref>
			<description>Clear out any legacy mozilla Or WebKit attributes already represented by CSS3 standard attributes in style (unbloat).</description>
		</methodref>
		<methodref generated="true">
			<name>CSS3ToLegacy</name>
			<ref link="CSS::StyleDef.CSS3ToLegacy Method">CSS3ToLegacy</ref>
			<description>Represent any CSS3 features as legacy Mozilla and WebKit attributes (bloat).</description>
		</methodref>
		<methodref generated="true">
			<name>ClearCss</name>
			<ref link="CSS::StyleDef.ClearCss Method">ClearCss</ref>
			<description>Clear CSS style sheet.</description>
		</methodref>
		<methodref generated="true">
			<name>ConvertToA5BorderStyle</name>
			<ref link="CSS::StyleDef.ConvertToA5BorderStyle Method">ConvertToA5BorderStyle</ref>
			<description>Returns an alpha five border style.</description>
		</methodref>
		<methodref generated="true">
			<name>ConvertToA5ColorDef</name>
			<ref link="CSS::StyleDef.ConvertToA5ColorDef Method">ConvertToA5ColorDef</ref>
			<description>Returns an alpha anywhere's color definition.</description>
		</methodref>
		<methodref generated="true">
			<name>ConvertToTwips</name>
			<ref link="CSS::StyleDef.ConvertToTwips Method">ConvertToTwips</ref>
			<description>Returns Css units into twips measurement.</description>
		</methodref>
		<methodref generated="true">
			<name>FromA5FontDef</name>
			<ref link="CSS::StyleDef.FromA5FontDef Method">FromA5FontDef</ref>
			<description>Populate font definiton and color from alpha five defitions.</description>
		</methodref>
		<methodref generated="true">
			<name>FromString</name>
			<ref link="CSS::StyleDef.FromString Method">FromString</ref>
			<description>Convert CSS text to an style definition.</description>
		</methodref>
		<methodref generated="true">
			<name>FromStringSCss</name>
			<ref link=".NET Framework Support">FromStringSCss</ref>
			<description>Convert SCSS style sheet text to an style definition (handles scss variables etc).</description>
		</methodref>
		<methodref generated="true">
			<name>GetDigested</name>
			<ref link="CSS::StyleDef.GetDigested Method">GetDigested</ref>
			<description>Returns box-shadow attributes that are further digested.</description>
		</methodref>
		<methodref generated="true">
			<name>GetField</name>
			<ref link="CSS::StyleDef.GetField Method">GetField</ref>
			<description>Get field by name (allows non-standard css fields).</description>
		</methodref>
		<methodref generated="true">
			<name>HasBorder</name>
			<ref link="CSS::StyleDef.HasBorder Method">HasBorder</ref>
			<description>Any aspect of border defined?</description>
		</methodref>
		<methodref generated="true">
			<name>HasCSS3</name>
			<ref link="CSS::StyleDef.HasCSS3 Method">HasCSS3</ref>
			<description>Returns true if style sheet includes CSS3 attributes.</description>
		</methodref>
		<methodref generated="true">
			<name>HasFont</name>
			<ref link="CSS::StyleDef.HasFont Method">HasFont</ref>
			<description>Any aspect of font defined?</description>
		</methodref>
		<methodref generated="true">
			<name>HasLegacy</name>
			<ref link="CSS::StyleDef.HasLegacy Method">HasLegacy</ref>
			<description>Returns true if style sheet includes legacy attributes.</description>
		</methodref>
		<methodref generated="true">
			<name>HasRoundedBorder</name>
			<ref link="CSS::StyleDef.HasRoundedBorder Method">HasRoundedBorder</ref>
			<description>Defines rounded borders (requires knowledge of corners in stylesheets).</description>
		</methodref>
		<methodref generated="true">
			<name>IsSame</name>
			<ref link="CSS::StyleDef.IsSame Method">IsSame</ref>
			<description>Returns true if style matches exactly.</description>
		</methodref>
		<methodref generated="true">
			<name>OutputProcess</name>
			<ref link="CSS::StyleDef.OutputProcess Method">OutputProcess</ref>
			<description>Process the CSS output (i.e. filter + output combination).</description>
		</methodref>
		<methodref generated="true">
			<name>PixelToPoint</name>
			<ref link=".NET Framework Support">PixelToPoint</ref>
			<description>Convert any units expressed in device dependent pixels to device indenpendent points.</description>
		</methodref>
		<methodref generated="true">
			<name>PointToPixel</name>
			<ref link=".NET Framework Support">PointToPixel</ref>
			<description>Convert any units expressed in device indenpendent points into device dependent pixels.</description>
		</methodref>
		<methodref generated="true">
			<name>RemoveField</name>
			<ref link="CSS::StyleDef.RemoveField Method">RemoveField</ref>
			<description>Remove field by name (allows removal of individual css fields).</description>
		</methodref>
		<methodref generated="true">
			<name>SelectorsCombine</name>
			<ref link="CSS::StyleDef.SelectorsCombine Method">SelectorsCombine</ref>
			<description><![CDATA[Pass in other style definition set undefined attributes, already defined attributes get set to psuedo value <Multiple>.]]></description>
		</methodref>
		<methodref generated="true">
			<name>SetDeclaration</name>
			<ref link="CSS::StyleDef.SetDeclaration Method">SetDeclaration</ref>
			<description>Set field by name (allows non-standard css fields).</description>
		</methodref>
		<methodref generated="true">
			<name>ToA5ColorDef</name>
			<ref link="CSS::StyleDef.ToA5ColorDef Method">ToA5ColorDef</ref>
			<description>Returns an alpha five font color definition (foreground on background format).</description>
		</methodref>
		<methodref generated="true">
			<name>ToA5FontDef</name>
			<ref link="CSS::StyleDef.ToA5FontDef Method">ToA5FontDef</ref>
			<description>Returns an alpha five font definition.</description>
		</methodref>
		<methodref generated="true">
			<name>toString</name>
			<ref link="CSS::StyleDef.toString Method">toString</ref>
			<description>Output the CSS text that represents the style definition.</description>
		</methodref>
		
		
		<methodref>
			<name>Clone</name>
			<ref link=".NET Framework Support"></ref>
			<description>Create a copy of an object instance.
</description>
		</methodref>
		<methodref>
			<name>NewInstance</name>
			<ref link=".NET Framework Support"></ref>
			<description>Create a new object instance of the same type.
</description>
		</methodref>
		
		
	</methods>

	<see>
		<ref link="Namespaces">CSS</ref>
	</see>
	<terms>css,align,box,column,control,display,field,filter,height,horizontal,image,item,layout,list,marker,number,object,positioning,set,style definition</terms>
</page>