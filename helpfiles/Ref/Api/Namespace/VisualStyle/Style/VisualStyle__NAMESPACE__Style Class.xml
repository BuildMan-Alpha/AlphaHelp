<page>
	<topic>VisualStyle::Style Class</topic>
	<description>A list of Style Class properties and methods.</description>
	<properties>
		<property generated="true">
			<name>Font</name>
			<type></type>
			<description>
Font
 
Font definition for visual style
 </description>
		</property>
		<property generated="true">
			<name>Fill</name>
			<type></type>
			<description>
Fill
 
Fill definition for style
 </description>
		</property>
		<property generated="true">
			<name>Border</name>
			<type></type>
			<description>
Border
 
Border definition for style
 </description>
		</property>
		<property generated="true">
			<name>Shadow</name>
			<type></type>
			<description>
 
Shadow
 
Shadow definition for style
 </description>
		</property>
		<property generated="true">
			<name>Padding</name>
			<type></type>
			<description>
 
Edge
 
Padding (around a cell) for style.
 </description>
		</property>
		<property generated="true">
			<name>Margin</name>
			<type></type>
			<description>
 
Edge
 
Margin (inside a cell) for style.
 </description>
		</property>
		<property generated="true">
			<name>Alignment</name>
			<type>Alignment</type>
			<ref href="/Server/Guide/Design/Platform/Dotnet/.NET Framework Support.xml">VisualStyle::Alignment Class</ref>
			<description>
 
Alignment
 
Text Alignment for style.
 </description>
		</property>
		<property generated="true">
			<name>Image</name>
			<type></type>
			<description>
 
Image
 
Background image for style.
 </description>
		</property>
		<property generated="true">
			<name>Cursor</name>
			<type>C</type>
			<description>
 
C
 
Cursor name for style.
 </description>
		</property>
		<property generated="true">
			<name>page_break</name>
			<type>C</type>
			<description>
 
C
 
Page break for element.
 </description>
		</property>
		<property generated="true">
			<name>encoding</name>
			<type>C</type>
			<description>
 
C
 
Encoding of the text content.
 </description>
		</property>
		<property generated="true">
			<name>format_expression</name>
			<type>C</type>
			<description>
 
C
 
Formatting expression for the content.
 </description>
		</property>
		<property generated="true">
			<name>resizing</name>
			<type>C</type>
			<description>
 
C
 
Print time sizing (i.e. grow/shrink).
 </description>
		</property>
		<property generated="true">
			<name>Hints</name>
			<type>C</type>
			<description>
 
C
 
Internal hints attribute.
 </description>
		</property>
	</properties>
	<methods>
		<methodref generated="true">
			<name>BackgroundGenerate</name>
			<ref link="VisualStyle::Style.BackgroundGenerate Method">BackgroundGenerate</ref>
			<description>Returns the shape of an object layer=0 means all, 1=fill 2=border.</description>
		</methodref>
		<methodref generated="true">
			<name>CSSColor</name>
			<ref link="VisualStyle::Style.CSSColor Method">CSSColor</ref>
			<description>Convert an alpha style color into an HTML color.</description>
		</methodref>
		<methodref generated="true">
			<name>CSSInline</name>
			<ref link="VisualStyle::Style.CSSInline Method">CSSInline</ref>
			<description>Convert visual inline fill properties to CSS.</description>
		</methodref>
		<methodref generated="true">
			<name>ClearStyle</name>
			<ref link="VisualStyle::Style.ClearStyle Method">ClearStyle</ref>
			<description>Clears style elements (i.e. font,fill,border,alignment).</description>
		</methodref>
		<methodref generated="true">
			<name>Combine</name>
			<ref link="VisualStyle::Style.Combine Method">Combine</ref>
			<description>Combine feature of a base style into this style.</description>
		</methodref>
		<methodref generated="true">
			<name>CombineStyles</name>
			<ref link="VisualStyle::Style.CombineStyles Method">CombineStyles</ref>
			<description>Combine two styles with options (options are t,l,b,r for top/left/bottom/right - to pick which borders to define for style2).</description>
		</methodref>
		<methodref generated="true">
			<name>CopyAttribute</name>
			<ref link="VisualStyle::Style.CopyAttribute Method">CopyAttribute</ref>
			<description>Copy an attribute from styleOther to styleOriginal.</description>
		</methodref>
		<methodref generated="true">
			<name>DefinesMore</name>
			<ref link="VisualStyle::Style.DefinesMore Method">DefinesMore</ref>
			<description>Returns true if baseStyle defines properties not in current style.</description>
		</methodref>
		<methodref generated="true">
			<name>DynamicEvaluate</name>
			<ref link="VisualStyle::Style.DynamicEvaluate Method">DynamicEvaluate</ref>
			<description>If any dynamic fields exist for the style, they are evaluated - optional evalContext same as argument for eval() function.</description>
		</methodref>
		<methodref generated="true">
			<name>DynamicStyleTemplate</name>
			<ref link="VisualStyle::Style.DynamicStyleTemplate Method">DynamicStyleTemplate</ref>
			<description>Create a template or expression for style that includes dynamic elements.</description>
		</methodref>
		<methodref generated="true">
			<name>DynamicStyleTemplateGenerate</name>
			<ref link="VisualStyle::Style.DynamicStyleTemplateGenerate Method">DynamicStyleTemplateGenerate</ref>
			<description>Generate an expression for a style with dynamic properties.</description>
		</methodref>
		<methodref generated="true">
			<name>EnumerateFields</name>
			<ref link="VisualStyle::Style.EnumerateFields Method">EnumerateFields</ref>
			<description>Enumerate fields that are contained.</description>
		</methodref>
		<methodref generated="true">
			<name>FromCSS</name>
			<ref link="VisualStyle::Style.FromCSS Method">FromCSS</ref>
			<description><![CDATA[Populate a visual style from a CSS definition (uses HTML attributes & format wherever possible).]]></description>
		</methodref>
		<methodref generated="true">
			<name>FromString</name>
			<ref link="VisualStyle::Style.FromString Method">FromString</ref>
			<description>Convert visual style string to an visual style definition.</description>
		</methodref>
		<methodref generated="true">
			<name>GenerateCssStyle</name>
			<ref link="VisualStyle::Style.GenerateCssStyle Method">GenerateCssStyle</ref>
			<description>Generate the CSS style for the font, options - pick which elements to convert.</description>
		</methodref>
		<methodref generated="true">
			<name>GetField</name>
			<ref link="VisualStyle::Style.GetField Method">GetField</ref>
			<description>Get field by name (allows non-standard fields).</description>
		</methodref>
		<methodref generated="true">
			<name>GetFillStyle</name>
			<ref link="VisualStyle::Style.GetFillStyle Method">GetFillStyle</ref>
			<description>Returns the fill style.</description>
		</methodref>
		<methodref generated="true">
			<name>GetFontColor</name>
			<ref link="VisualStyle::Style.GetFontColor Method">GetFontColor</ref>
			<description>Returns the font color.</description>
		</methodref>
		<methodref generated="true">
			<name>GetFontDescriptor</name>
			<ref link="VisualStyle::Style.GetFontDescriptor Method">GetFontDescriptor</ref>
			<description>Returns the font descriptor (i.e. ascii font name).</description>
		</methodref>
		<methodref generated="true">
			<name>HasAlignment</name>
			<ref link="VisualStyle::Style.HasAlignment Method">HasAlignment</ref>
			<description>Returns true if style has alignment defined.</description>
		</methodref>
		<methodref generated="true">
			<name>HasBackground</name>
			<ref link="VisualStyle::Style.HasBackground Method">HasBackground</ref>
			<description>Returns true if style has a Fill or border Which is not empty.</description>
		</methodref>
		<methodref generated="true">
			<name>HasField</name>
			<ref link="VisualStyle::Style.HasField Method">HasField</ref>
			<description>Return true if there is a field that matches the pattern (smatch).</description>
		</methodref>
		<methodref generated="true">
			<name>HasFill</name>
			<ref link="VisualStyle::Style.HasFill Method">HasFill</ref>
			<description>Returns true if style has a fill style.</description>
		</methodref>
		<methodref generated="true">
			<name>HasFont</name>
			<ref link="VisualStyle::Style.HasFont Method">HasFont</ref>
			<description>Returns true if style has a font definition.</description>
		</methodref>
		<methodref generated="true">
			<name>HasFontColor</name>
			<ref link="VisualStyle::Style.HasFontColor Method">HasFontColor</ref>
			<description>Returns true if style has a font color.</description>
		</methodref>
		<methodref generated="true">
			<name>HasFontModifier</name>
			<ref link="VisualStyle::Style.HasFontModifier Method">HasFontModifier</ref>
			<description>Returns true if style has a font modifier (size,bold,italic,underline or strikeout).</description>
		</methodref>
		<methodref generated="true">
			<name>HasImage</name>
			<ref link="VisualStyle::Style.HasImage Method">HasImage</ref>
			<description>Returns true if style has a image style.</description>
		</methodref>
		<methodref generated="true">
			<name>HasLine</name>
			<ref link="VisualStyle::Style.HasLine Method">HasLine</ref>
			<description>Returns true if style has a line style.</description>
		</methodref>
		<methodref generated="true">
			<name>HasRoundedCorners</name>
			<ref link="VisualStyle::Style.HasRoundedCorners Method">HasRoundedCorners</ref>
			<description>Returns true if style has rounded or beveled corners.</description>
		</methodref>
		<methodref generated="true">
			<name>IsDefault</name>
			<ref link="VisualStyle::Style.IsDefault Method">IsDefault</ref>
			<description>Default style - returned for 'undefined' styles.</description>
		</methodref>
		<methodref generated="true">
			<name>IsShrinkable</name>
			<ref link="VisualStyle::Style.IsShrinkable Method">IsShrinkable</ref>
			<description>resizable is set to shrink - property for print-time resize of elements.</description>
		</methodref>
		<methodref generated="true">
			<name>QuickdrawGenerate</name>
			<ref link="VisualStyle::Style.QuickdrawGenerate Method">QuickdrawGenerate</ref>
			<description>Given a style, generate quickdraw for font, color, brush and line style (the caller must generate the appropriate quickdraw for the border shape).</description>
		</methodref>
		<methodref generated="true">
			<name>SetAndConvertBorders</name>
			<ref link="VisualStyle::Style.SetAndConvertBorders Method">SetAndConvertBorders</ref>
			<description>Set borders (optimizes for styles on defined borders being the same).</description>
		</methodref>
		<methodref generated="true">
			<name>SetBorders</name>
			<ref link="VisualStyle::Style.SetBorders Method">SetBorders</ref>
			<description>Set borders (optimizes for styles on defined borders being the same).</description>
		</methodref>
		<methodref generated="true">
			<name>SetDeclaration</name>
			<ref link="VisualStyle::Style.SetDeclaration Method">SetDeclaration</ref>
			<description>Set field by name (allows non-standard fields).</description>
		</methodref>
		<methodref generated="true">
			<name>ToCSS</name>
			<ref link="VisualStyle::Style.ToCSS Method">ToCSS</ref>
			<description>Output the  visual style string to a css style sheet.</description>
		</methodref>
		<methodref generated="true">
			<name>ToRestStyle</name>
			<ref link="VisualStyle::Style.ToRestStyle Method">ToRestStyle</ref>
			<description>Emit style - to rest output.</description>
		</methodref>
		<methodref generated="true">
			<name>ToString</name>
			<ref link="VisualStyle::Style.ToString Method">ToString</ref>
			<description>Output the  visual style string that represents the visual style definition.</description>
		</methodref>
		
		<methodref>
			<name>Clone</name>
			<ref href="/Server/Guide/Design/Platform/Dotnet/.NET Framework Support.xml"></ref>
			<description>Create a copy of an object instance.
</description>
		</methodref>
		
		<methodref>
			<name>NewInstance</name>
			<ref href="/Server/Guide/Design/Platform/Dotnet/.NET Framework Support.xml"></ref>
			<description>Create a new object instance of the same type.
</description>
		</methodref>
		
		
		
	</methods>
  
	<see>
		<ref>VisualStyle</ref>
	</see>
	<terms>visual style,arguments,colors,css,expressions,field,fonts,formatting,html,image,images,object,pages,rest,shadow,string,styles,template,templates,text,time</terms>
	
</page>