<page api="xb">
	<shortlink>Generate Excel Spreadsheets Programmatically</shortlink>
	<topic>Generate Excel Spreadsheets Programmatically</topic>
<description>The Office class can read and write Excel files. It doesn't require Microsoft Excel. Use it to</description>
	<sections>
		<section>
			
			<cases>
				<case>
					<description>Generate a new spreadsheet from scratch </description>
				</case>
				<case>
					<description>Generate a new spreadsheet from your databases </description>
				</case>
				<case>
					<description>Edit an existing spreadsheet </description>
				</case>
				<case>
					<description>Merge an existing spreadsheet with new data </description>
				</case>
				
			</cases>
			
		</section>
		<section>
			<description>The overall sequence used to generate an Excel spreadsheet is</description>
			<cases>
				<case>
					<title>Create a new document object </title>
				</case>
				<case>
					<description>For an Excel 2007 spreadsheet</description>
					<example><![CDATA[dim Doc as Office::ExcelDocument ]]></example>
				</case>
				<case>
					<description>for an Excel 2003 spreadsheet</description>
					<example><![CDATA[dim Doc as Office::Excel2003Document]]></example>
				</case>
				
				<case>
					
					<title>Add one or more sheets to the document </title>
				
					<example><![CDATA[dim Sheet as Office::Spreadsheet
 Sheet=Doc.AddSheet("My sheet name")]]></example>
				</case>
				
				<case>
					<title>Create your fonts and formats </title>
					
				
					<example><![CDATA[dim Format as Office::Format
 dim Font as Office::Font
 Format = Doc.AddFormat()
 Font = Doc.AddFont()
 Font.Color = Office::Color::DarkBlue
 Font.Name = "Tahoma"
 Font.Size = 14
 Font.Bold = .t.
 Format.Font = Font
 Format.HorizontalAlignment = Office::HorizontalAlignment::Center]]></example>
				</case>
				
				<case>
					<title>Add cells to the sheets </title>
					
					<example><![CDATA[Sheet.Write(1,1,"Hello, World",Format)
 Sheet.Write(2,1,3.14159,Format)]]></example>
				</case>
				<case>
					<title>Save the document, Use .xls for Excel 2003 </title>
					<example><![CDATA[Doc.Save("MySheet.xlsx") ]]></example>
				</case>
				
				<case>
					<title>Release references to the in-memory document </title>
					<example><![CDATA[delete Doc]]></example>
				</case>
				
			</cases>
			
		</section>
		
	</sections>
    <see>
        <ref link="api office namespace index">Office</ref>
        <ref link="api office exceldocument class method">Office::ExcelDocument</ref>
        <ref link="api office excel2003document class method">Office::Excel2003Document</ref>
        <ref link="api office spreadsheet class method">Office::SpreadSheet</ref>
        <ref link="api office format class method">Office::Format</ref>
        <ref link="api office font class method">Office::Font</ref>
        <ref link="api office namespace hello world spreadsheet">Office Example: Hello, World Spreadsheet</ref>
        <ref link="api office namespace index#section1_Enumerations">Office Enumerations</ref>
        <ref link="Perform Common Spreadsheet Operations">How to perform common spreadsheet operations</ref>
        <ref link="api office namespace simple weekly sales spreadsheet">Office Example: Simple Weekly sales spreadsheet</ref>
        <ref link="api office namespace multiple spreasheets">Office Example: Multiple spreadsheets</ref>
        <ref link="api office namespace spreadsheet from sql query">Office Example: Spreadsheet from SQL query</ref>
        <ref link="dt office example: spreadsheet from dbf tables">Office Example: Spreadsheet from DBF tables</ref>
        <ref link="api office namespace spreadsheet with picture">Office Example: Spreadsheet with picture</ref>
        <ref link="api office namespace update a spreadsheet">Office Example: Update a spreadsheet</ref>
        <ref link="server data sql example: spreadsheets from sql schema">SQL Example: Spreadsheets from SQL schema</ref>
    </see>
</page>