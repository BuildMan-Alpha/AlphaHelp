<page generated="true" api="xb">
    <shortlink>api office excel2003document addsheetfromdbf method</shortlink>
    <topic parent="Office::Excel2003Document" parentType="class" elementName="AddSheetFromDBF Method">Office::Excel2003Document AddSheetFromDBF Method</topic>
    <description>Create a new spreadsheet from a DBF file and add it to the document.</description>
    <prototype>.AddSheetFromDBF as Office::Spreadsheet (Table as P, SheetName  as C [, IncludeHeadings  as L [, RowsToCopy  as N [, StartRow  as N [, ReferenceColumns  as P [, UserContext  as P]]]]])</prototype>
    <arguments>
        <argument>
            <name>Table</name>
            <type>P</type>
            <description>The DBF table.</description>
        </argument>
        <argument>
            <name>SheetName</name>
            <type>C</type>
            <description>The spreadsheet name.</description>
        </argument>
        <argument optional="true">
            <name>IncludeHeadings</name>
            <type>L</type>
            <description>Default = .T.. If *[xb:.T.]*, headings will be included in the spreadsheet.</description>
        </argument>
        <argument optional="true">
            <name>RowsToCopy</name>
            <type>N</type>
            <description>Default = -1. The number of rows to copy. If -1, all rows will be copied.</description>
        </argument>
        <argument optional="true">
            <name>StartRow</name>
            <type>N</type>
            <description>Default = -1. The first row to copy.</description>
        </argument>
        <argument optional="true">
            <name>ReferenceColumns</name>
            <type>SQL::TableInfo</type>
            <description>Default = null_value(). Specify advanced data transformations using a SQL::TableInfo object.</description>
        </argument>
        <argument optional="true">
            <name>UserContext</name>
            <type>P</type>
            <description>Default = null_value(). A context object used to perform advanced data transformations.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <type>Office::Spreadsheet</type>
            <description>Returns the spreadsheet.</description>
        </return>
    </returns>
</page>
