<page>
	<topic>Office::Spreadsheet Class</topic>
	<description>The Office::Spreadsheet class creates and edits Excel spreadsheets. The spreadsheets can be attached to Office::ExcelDocument or Office::Excel2003Document instances.</description>
	
	<properties>
		<property>
			<name>FirstRow</name>
			<type>N</type>
			<description>Read Only.</description>
		</property>
		<property>
			<name>NextAvailableRow</name>
			<type>N</type>
			<description>Read Only.</description>
		</property>
		<property>
			<name>FirstColumn</name>
			<type>N</type>
			<description>Read Only.</description>
		</property>
		<property>
			<name>NextAvailableColumn</name>
			<type>N</type>
			<description>Read Only.</description>
		</property>
		<property>
			<name>DisplayGridLines</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>PrintGridLines</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>Zoom</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>PrintZoom</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>Landscape</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>Paper</name>
			<type>enum as Office::Paper</type>
			<description></description>
		</property>
		<property>
			<name>Header</name>
			<type>C</type>
			<description></description>
		</property>
		<property>
			<name>HeaderMargin</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>Footer</name>
			<type>C</type>
			<description></description>
		</property>
		<property>
			<name>FooterMargin</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>CenterHorizontally</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>CenterVertically</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>MarginLeft</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>MarginRight</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>MarginTop</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>MarginBottom</name>
			<type>N</type>
			<description></description>
		</property>
		<property>
			<name>PrintRowColumn</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>Name</name>
			<type>C</type>
			<description></description>
		</property>
		<property>
			<name>GroupSummaryBelow</name>
			<type>L</type>
			<description></description>
		</property>
		<property>
			<name>GroupSummaryRight</name>
			<type>L</type>
			<description></description>
		</property>
		
	</properties>
<methods>
	<method>
		<name>CellType as Office::CellType(Row as N, Column as N) </name>
		<description>Returns the enumerated type CellType indicating the contents of the cell. </description>
	</method>
	<method>
		<name>CellFormat as Office::Format (Row as N, Column as N)</name>
		<description>Returns the format of a cell. The format properties are updateable. </description>
	</method>
	<method>
		<name>Read as A(Row as N, Column as N, BYREF Format as Office::Format)</name>
		<description>Returns the data contents of a cell and updates Format with the cell's format. Note: Check the contents using CellType if the cell might contain an error. </description>
	</method>
	<method>
		<name>Read as A(Row as N, Column as N)</name>
		<description>Returns the data contents of a cell. Note: Check the contents using CellType if the cell might contain an error. </description>
	</method>
	<method>
		<name>Write as L (Row as N, Column as N, Value as A, Format as Office::Format)</name>
		<description>Sets data value of a cell and assigns a format. </description>
	</method>
	<method>
		<name>Write as L (Row as N, Column as N, Value as A)</name>
		<description>Sets data value of a cell. </description>
	</method>
	<method>
		<name>WriteFormula as L (Row as N, Column as N, Value as C, Format as Office::Format)</name>
		<description>Assigns a formula to a cell and assigns a format. </description>
	</method>
	<method>
		<name>WriteFormula as L (Row as N, Column as N, Value as C)</name>
		<description>Assigns a formula to a cell. </description>
	</method>
	<method>
		<name>SetBlank as L (Row as N, Column as N, Format as Office::Format)</name>
		<description>Sets the contents of a cell to a blank value and assigns a format. </description>
	</method>
	<method>
		<name>SetBlank as L (Row as N, Column as N)</name>
		<description>Sets the contents of a cell to a blank value. </description>
	</method>
	<method>
		<name>IsBlank as L (Row as N, Column as N, BYREF Format as Office::Format)</name>
		<description>Returns true if a cell is blank. Assigns the current cell format to Format. </description>
	</method>
	<method>
		<name>IsBlank as L (Row as N, Column as N)</name>
		<description>Returns true if a cell is blank. </description>
	</method>
	<method>
		<name>IsFormula as L (Row as N, Column as N)</name>
		<description>Returns true if the cell contains a formula. </description>
	</method>
	<method>
		<name>ReadComment as C(Row as N, Column as N)</name>
		<description>Returns the text value of any comment assigned to the cell. </description>
	</method>
	<method>
		<name>ReadFormula as C(Row as N, Column as N, BYREF Format as Office::Format)</name>
		<description>Returns the formula, if any, associated with the cell. Assigns the current cell format to Format. </description>
	</method>
	<method>
		<name>ReadFormula as C(Row as N, Column as N)</name>
		<description>Returns the formula, if any, associated with the cell. </description>
	</method>
	<method>
		<name>WriteComment as V(Row as N, Column as N, Comment as C, Author as C = "", Width as N = 129, Height as N = 75)</name>
		<description>Assigns a comment and author to a cell giving it the designated text box size (in pixels). </description>
	</method>
	<method>
		<name>CellIsDateValue as L (Row as N, Column as N)</name>
		<description>Returns true if the cell is a date value. </description>
	</method>
	<method>
		<name>ReadError as N (Rows as N, Column as N)</name>
		<description>Returns the error value, if any, for a cell </description>
	</method>
	<method>
		<name>ColumnWidth as N (Column as N)</name>
		<description>Returns the currently assigned width for a column. </description>
	</method>
	<method>
		<name>RowHeight as N (Row as N)</name>
		<description>Returns the currently assigned height for a row. </description>
	</method>
	<method>
		<name>SetColumn as L(First as N, Last as N, Width as N, Format as Office::Format = null_value(), Hidden as L = .f.)</name>
		<description>Assigns a width and, optionally, a format for a column. May also hide or show a column. </description>
	</method>
	<method>
		<name>SetRow as L(Row as N, Height as N, Format as Office::Format = null_value(), Hidden as L = .f.)</name>
		<description>Assigns a height and, optionally, a format for a row. May also hide or show a row. </description>
	</method>
	<method>
		<name>SetFormat as L (StartRow as N, StartColumn as N, EndRow as N, EndColumn as N, Format as Office::Format)</name>
		<description>Set the format for a block of cells. </description>
	</method>
	<method>
		<name>SetFormat as L (Row as N, Column as N, Format as Office::Format)</name>
		<description>Set the format for a single cell. </description>
	</method>
	<method>
		<name>GetMerge as L (Row as N, Column as N, BYREF FirstRow as N, BYREF LastRow as N, BYREF FirstColumn as N, BYREF LastColumn as N)</name>
		<description>Get the merged cell range to which a particular cell belongs. </description>
	</method>
	<method>
		<name>SetMerge as L (FirstRow as N, LastRow as N, FirstColumn as N, LastColumn as N)</name>
		<description>Merges cells from the first row and column through the last row and column specified. </description>
	</method>
	<method>
		<name>DeleteMerge as L (Row as N, Column as N)</name>
		<description>Removes merged cells. </description>
	</method>
	<method>
		<name>SetPicture as V(Row as N, Column as N, PictureId as N, Scale as N = 1.0)</name>
		<description>Assign a picture to a cell using the identifier returned by the method Office::ExcelDocument::AddPicture(PictureId). Scale the picture proportionally using 1.0 as full sized. </description>
	</method>
	<method>
		<name>SetPicture as V(Row as N, Column as N, PictureId as N, Width as N, Height as N)</name>
		<description>Assign a picture to a cell using the identifier returned by the method Office::ExcelDocument::AddPicture(PictureId). Resize the picture to be Height x Width in size. </description>
	</method>
	<method>
		<name>SetHorizontalPageBreak as L (Row as N, PageBreak as L = .t.)</name>
		<description>Set a horizontal page break on the row specified. Pass false to remove the break. </description>
	</method>
	<method>
		<name>SetVerticalPageBreak as L(Column as N, PageBreak as L = .t.)</name>
		<description>Set a vertical page break on the column specified. Pass false to remove the break. </description>
	</method>
	<method>
		<name>Split as V(Row as N, Column as N)</name>
		<description>Split the sheet at the row and column specified. </description>
	</method>
	<method>
		<name>GroupRows as L (FirstRow as N, LastRow as N, Collapsed as L = .t.)</name>
		<description>Group FirstRow through LastRow. If Collapsed is set to true the group of rows will be collapsed. </description>
	</method>
	<method>
		<name>GroupColumns as L (FirstColumn as N, LastColumn as N, Collapsed as L = .t.)</name>
		<description>Group FirstColumn through LastColumn. If Collapsed is set to true the group of columns will be collapsed. </description>
	</method>
	<method>
		<name>Clear as L(FirstRow as N = 1, LastRow as N = 65536, FirstColumn as N = 1, LastColumn as N = 256)</name>
		<description>Clear part or all of the spreadsheet. </description>
	</method>
	<method>
		<name>InsertRow as L(FirstRow as N, LastRow as N)</name>
		<description>Insert new rows from FirstRow to LastRow. </description>
	</method>
	<method>
		<name>InsertColumn as L (FirstColumn as N, LastColumn as N)</name>
		<description>Insert new columns from FirstColumn to LastColumn. </description>
	</method>
	<method>
		<name>RemoveRow as L (FirstRow as N, LastRow as N)</name>
		<description>Remove rows FirstRow through LastRow </description>
	</method>
	<method>
		<name>RemoveColumn as L (FirstColumn as N, LastColumn as N)</name>
		<description>Remove columns FirstColumn through LastColumn. </description>
	</method>
	<method>
		<name>CopyCell as L (SourceRow as N, SourceColumn as N, DestinationRow as N, DestinationColumn as N)</name>
		<description>Copy the cell and its format from SourceRow/Column to DestinationRow/Column. </description>
	</method>
	<method>
		<name>SetPrintRepeatRows as V (FirstRow as N, LastRow as N)</name>
		<description>Sets repeated rows on each page from FirstRow to LastRow. </description>
	</method>
	<method>
		<name>SetPrintRepeatColumns as V (FirstColumn as N, LastColumn as N)</name>
		<description>Sets repeated columns on each page from FirstColumn to LastColumn. </description>
	</method>
	<method>
		<name>SetPrintArea as V (FirstRow as N, LastRow as N, FirstColumn as N, LastColumn as N)</name>
		<description>Sets the print area. </description>
	</method>
	<method>
		<name>ClearPrintRepeats as V ()</name>
		<description>Clears repeated rows and columns on each page. </description>
	</method>
	<method>
		<name>ClearPrintArea as V ()</name>
		<description>Clears the print area. </description>
	</method>
	<method>
		<name>SetNamedRange as V (Name as C, FirstRow as N, LastRow as N, FirstColumn as N, LastColumn as N)</name>
		<description>Creates a named range for the rows and columns. </description>
	</method>
	<method>
		<name>DeleteNamedRange as V (Name as C)</name>
		<description>Deletes the range named. </description>
	</method>
</methods>	
<see>
	<ref>Office</ref>
	<ref>Office Enumerations</ref>
</see>
	
</page>