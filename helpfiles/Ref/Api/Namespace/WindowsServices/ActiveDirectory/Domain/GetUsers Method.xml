<page>
    <shortlink>api Active Directory Domain GetUsers method</shortlink>
    <topic>GetUsers Method</topic>
    <prototypes>
		<prototype>GetUsers as P (ou as C)</prototype>
	</prototypes>
    <description>
		Get the users for a WindowsServices::ActiveDirectory::Domain object. Optionally 
		restrict the users to a specific organizational unit.
	</description>
	<arguments>
        <argument optional="true">
            <name>ou</name>
            <type>C</type>
            <description>The name of an organizational unit from which to restrict the list of users. Defaults to empty string.</description>
        </argument>
	</arguments>
	<returns>
        <return>
            <name>users</name>
            <types>
                <type>Array of WindowsServices::ActiveDirectory::User (use as type P)</type>
            </types>
            <description>Returns an array of WindowsServices::ActiveDirectory::User objects. Check the domain object's CallResult to see if the method succeeds.
			</description>
        </return>
    </returns>
    <sections>
        <section>
            <example><![CDATA['The follow line assumes that the machine is joined to an Active Directory domain and is allow to query Active Directory.
dim domain as WindowsServices::ActiveDirectory::Domain = new WindowsServices::ActiveDirectory::Domain()
if .not. domain.CallResult.Success then
	?"There was an error connecting to an Active Directory domain: " + domain.CallResult.Text + crlf()
	goto exitTestFunction
end if
	
?"The domain name is " + domain.Name + crlf()

dim users as p = domain.getUsers("")
if .not. domain.CallResult.Success then
	?"There was an error getting users: " + domain.CallResult.Text + crlf()
	goto exitTestFunction
end if

for each user in users
	?user.Name + crlf()
next
	
exitTestFunction:
]]></example>
        </section>
    </sections>
</page>