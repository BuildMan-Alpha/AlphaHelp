<page>
    <shortlink>api Active Directory Domain GetGroup method</shortlink>
    <topic>GetGroup Method</topic>
    <prototypes>
		<prototype>GetGroups as P (groupName as C, includeUsers as L, ou as C)</prototype>
	</prototypes>
    <description>
		Get the group for a WindowsServices::ActiveDirectory::Domain object. Optionally include the users in the groups and optionally 
		restrict the search for the group to a specific organizational unit.
	</description>
	<arguments>
        <argument>
            <name>groupName</name>
            <type>C</type>
            <description>The name of the group to get.</description>
        </argument>
        <argument optional="true">
            <name>includeUsers</name>
            <type>L</type>
            <description>
				<p>Set to .T. to include the list of users in the group objects that are returned. Defaults to .F.</p>
				<p>Including users could make this method run for a long time.</p>
			</description>
        </argument>
        <argument optional="true">
            <name>ou</name>
            <type>C</type>
            <description>The name of an organizational unit from which to restrict the list of groups. Defaults to empty string.</description>
        </argument>
	</arguments>
	<returns>
        <return>
            <name>group</name>
            <types>
                <type>WindowsServices::ActiveDirectory::Group (use as type P)</type>
            </types>
            <description>Returns a WindowsServices::ActiveDirectory::Group object. Check the domain object's CallResult to see if the method succeeds.
			</description>
        </return>
    </returns>
    <sections>
        <section>
            <example><![CDATA['The follow line assumes that the machine is joined to an Active Directory domain and is allow to query Active Directory.
dim domain as WindowsServices::ActiveDirectory::Domain = new WindowsServices::ActiveDirectory::Domain()
if .not. domain.CallResult.Success then
	?"There was an error connecting to an Active Directory domain: " + domain.CallResult.Text + crlf()
	goto exitTestFunction
end if
	
?"The domain name is " + domain.Name + crlf()

dim groupName as c = "AppAdmin"
dim group as p = domain.getGroups(groupName, .f., "")
if .not. domain.CallResult.Success then
	?"There was an error getting the group " + groupName + ": " + domain.CallResult.Text + crlf()
	goto exitTestFunction
end if

?group.DistingishedName + crlf()
	
exitTestFunction:
]]></example>
        </section>
    </sections>
</page>