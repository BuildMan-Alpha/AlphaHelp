<page>
    <shortlink>api Active Directory Domain GetOrganizationalUnits method</shortlink>
    <topic>GetOrganizationalUnits Method</topic>
    <prototypes>
		<prototype>GetOrganizationalUnits as P ()</prototype>
	</prototypes>
    <description>
		Get the organizational units for a WindowsServices::ActiveDirectory::Domain object.
	</description>
    <returns>
        <return>
            <name>organizationalUnits</name>
            <types>
                <type>Array of WindowsServices::ActiveDirectory::OrganizationalUnit (use as type P)</type>
            </types>
            <description>Returns an array of WindowsServices::ActiveDirectory::OrganizationalUnit objects. Check the domain object's CallResult to see if the method succeeds.
			</description>
        </return>
    </returns>
    <sections>
        <section>
            <example><![CDATA['The follow line assumes that the machine is joined to an Active Directory domain and is allow to query Active Directory.
dim domain as WindowsServices::ActiveDirectory::Domain = new WindowsServices::ActiveDirectory::Domain()
if .not. domain.CallResult.Success then
	?"There was an error connecting to an Active Directory domain: " + domain.CallResult.Text +  "&lt;br/&gt;"
	goto exitTestFunction
end if
	
?"The domain name is " + domain.Name + "&lt;br/&gt;"

dim ous as p
ous = domain.GetOrganizationalUnits()
if .not. domain.CallResult.Success then
	?"There was an error getting organizational units: " + domain.CallResult.Text +  "&lt;br/&gt;"
	goto exitTestFunction
end if

for each ou in ous
	?ou.Name + " (" + ou.DistinguishedName + ")" + "&lt;br/&gt;"
next
	
exitTestFunction:
]]></example>
        </section>
    </sections>
</page>