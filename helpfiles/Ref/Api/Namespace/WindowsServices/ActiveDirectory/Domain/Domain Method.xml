<page>
    <shortlink>api Active Directory Domain constructor</shortlink>
    <topic>Domain Method</topic>
    <prototypes>
		<prototype>Domain as WindowsServices::ActiveDirectory::Domain ()</prototype>
		<prototype>Domain as WindowsServices::ActiveDirectory::Domain (type as WindowsServices::ActiveDirectory::Domain::ConfigurationType)</prototype>
		<prototype>Domain as WindowsServices::ActiveDirectory::Domain (name as C, [userid as C], [password as C], [ou as C], [useSecureConnection as L], [host as C])</prototype>
	</prototypes>
    <description>
		Create a WindowsServices::ActiveDirectory::Domain object.
	</description>
    <arguments>
        <argument>
            <name>type</name>
            <type>WindowsServices::ActiveDirectory::Domain::ConfigurationType</type>
            <description>The way in which to initialize the Domain object. WindowsServices::ActiveDirectory::Domain::ConfigurationType::DEFAULT is 
			equivalent to the parameterless constructor. WindowsServices::ActiveDirectory::Domain::ConfigurationType::SECURITY_CONFIGURATION useSecureConnection
			the security configuration publish to the Application Server or Application Server for IIS.</description>
        </argument>
        <argument>
            <name>name</name>
            <type>C</type>
            <description>The Active Directory domain name.</description>
        </argument>
        <argument optional="true">
            <name>userid</name>
            <type>C</type>
            <description>The userid for accessing Active Directory. Can be omitted or set to empty string '' if credentials are not needed to access Active Directory. 
			Use an empty string if need to specify parameters after it.</description>
        </argument>
        <argument optional="true">
            <name>password</name>
            <type>C</type>
            <description>The password for accessing Active Directory. Can be omitted or set to empty string '' if credentials are not needed to access Active Directory. 
			Use an empty string if need to specify parameters after it.</description>
        </argument>
        <argument optional="true">
            <name>ou</name>
            <type>C</type>
            <description>An organizational unit use to restrict the set of users allowed to when validating credentials (i.e. log into an application). Can be omitted or set to empty string '' if not needed. 
			Use an empty string if need to specify parameters after it.</description>
        </argument>
        <argument optional="true">
            <name>useSecureConnection</name>
            <type>L</type>
            <description>LDAP is used to connect to Active Directory. Set useSecureConnection to .T. to connect using LDAPS. Defaults to .F..</description>
        </argument>
        <argument optional="true">
            <name>host</name>
            <type>C</type>
            <description>Internal use only.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result</name>
            <types>
                <type>WindowsServices::ActiveDirectory::Domain</type>
            </types>
            <description>Returns a WindowsServices::ActiveDirectory::Domain object. A domain object will always be returned. 
						 However, you must check the returned domain object's CallResult member to see if the object is valid 
						 and created successfully.
			</description>
        </return>
    </returns>
    <sections>
        <section>
            <example><![CDATA['The follow line assumes that the machine is joined to an Active Directory domain and is allow to query Active Directory.
dim domain as WindowsServices::ActiveDirectory::Domain = new WindowsServices::ActiveDirectory::Domain()
if domain.CallResult.Success then
	?"The domain name is " + domain.Name + "&lt;br/&gt;"
else
	?"There was an error connecting to an Active Directory domain: " + domain.CallResult.Text +  "&lt;br/&gt;"
end if]]></example>
        </section>
    </sections>
</page>