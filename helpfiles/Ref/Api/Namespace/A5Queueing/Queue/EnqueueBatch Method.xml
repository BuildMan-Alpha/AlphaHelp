<page generated="true" api="xb" build="4866">
	<shortlink>api a5queueing queue enqueuebatch method</shortlink>
	<topic parent="a5queueing::queue" parentType="class" elementName="EnqueueBatch Method">a5queueing::queue EnqueueBatch Method</topic>
	<description>Enqueue many items to a queue at once.</description>
	<prototype>.EnqueueBatch as A5Storage::CallResult (items as A5Queueing::QueueItems)</prototype>
	<arguments>
		<argument>
			<name>items</name>
			<type>A5Queueing::QueueItems</type>
			<description>List of queue items.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>result</name>
			<type>A5Storage::CallResult</type>
			<description>Call result.</description>
		</return>
	</returns>
	<example><![CDATA[
dim messageNo as n = 0
dim qm as A5Queueing::Queue = null_value()
dim Batch as A5Queueing::Items = new A5Queueing::Items() 

if A5Queueing::Queue::Open(qm,"Provider='RabbitMQ';Host='localhost';Queue='TestQ';").success then
   for i = 1 to 100
     currentitem = qm.CreateQueueItem()
     messageNo = messageNo + 1
     currentitem.Body = "Test Message "+messageNo
     Batch.Add(currentitem)
  next
  callresult = qm.EnqueueBatch(Batch)
  if callresult.Error then
     ui_msg_box("Error",callresult.MessageToDisplay)
  end if
end if
	]]></example>
</page>
