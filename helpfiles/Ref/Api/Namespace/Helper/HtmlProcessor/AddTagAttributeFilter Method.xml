<page api="xb">
  <shortlink>api helper namespace html processor class add tag attribute filter method</shortlink>
   <topic>Helper::HtmlProcessor.AddTagAttributeFilter Method</topic>
    <description>Adds a tag attribute filter.</description>
   <prototype>v AddTagAttributeFilter(C attributeFilter, C valueExpression [, C options])</prototype>
   <arguments>
     <argument>
         <name>attributeFilter</name>
         <description>Which html attribute to call handler on. </description>
     </argument>
     <argument>
         <name>valueExpression</name>
         <description>Contains an expression that can contain placeholders for the tagname and current value of the attribute. Value of current attribute. Name lof current tag. </description>
     </argument>
     <argument>
         <name>options</name>
         <description>Character</description>
     </argument>
   </arguments>
  
   <discussion><![CDATA[
Add a tag attribute filter to an HTMLProcessor object. You can add as many tag attribute filters as you want. The value expression gets called everytime an attribute that matches the filter is found. The example script processes all the IMG tags 'src' attributes in processed HTML to point be prefixed with 'http://myimages.net/'. The result from running the script is this:   ]]> </discussion>
  
  <sections><section><example><![CDATA[
  < html> 
  < body> 
  < img src="http://myimages.net/Logo.png" >
   < img src="http://myimages.net/Signature.png" >
    < /body>
     < /html>
     
     ]]></example></section>
  </sections><sections>
  <section>
  <title>Example</title>
  <example><![CDATA[
Example dim hh as helper::HtmlProcessor 
hh.AddTagAttributeFilter("src","changeSrc(,)") 
dim oldHtml as c = <
]]></example></section></sections>


<terms>helper,contains,html</terms>







  </page>