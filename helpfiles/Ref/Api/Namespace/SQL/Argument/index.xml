<page api="xb">
	<shortlink>api sql namespace argument class</shortlink>
	<topic>SQL::Argument Class</topic>
	<description>SQL::Argument Class properties and an example.</description>
	<properties>
		<property readonly="true">
			<name>Name</name>
			<type>C</type>
			<description>The unique name of the argument. Note. An argument name cannot be changed while it is part of a collection.</description>
		</property>
		<property readonly="true">
			<name>Data</name>
			<type>A</type>
			<description>The value in the argument. The type of this argument will be one of the Alpha Anywhere primitive types listed below:</description>
			<section>
				<list>
					<item>
						<name-title>Type</name-title>
						<description-title>Description</description-title>
					</item>
					<item>
						<name>B</name>
						<description>blob</description>
					</item>
					<item>
						<name>C</name>
						<description>character</description>
					</item>
					<item>
						<name>D</name>
						<description>date</description>
					</item>
					<item>
						<name>L</name>
						<description>logical</description>
					</item>
					<item>
						<name>N</name>
						<description>numeric</description>
					</item>
					<item>
						<name>T</name>
						<description>time</description>
					</item>
					<item>
						<name>Y</name>
						<description>short time</description>
					</item>
				</list>
			</section>
		</property>
		<property readonly="true">
			<name>Usage</name>
			<type>SQL::ArgumentUsage</type>
			<description>Defines when to set the value of an argument.</description>
		</property>
		<property>
			<name>XML</name>
			<type>C</type>
			<description>An XML string that contains the argument definition.</description>
		</property>
		<property>
			<name>IsNull</name>
			<type>L</type>
			<description>Indicates whether or not the argument is NULL. If *[xb:.t.]*, the argument will be treated as a "NULL" value in the system of record. If *[xb:.f.]*, the argument's value will be treated as a literal value.</description>
		</property>
	</properties>
<description>The SQL::Argument object defines a single argument to be passed to a SQL method in a SQL::Arguments collection.</description>
<example><![CDATA[dim args as SQL::Arguments
dim arg as SQL::Argument
arg.data = "VT"
arg.Name = "State"
? args.add(arg)
= .T.
? args.find(arg.name)
= Data = "VT"
Name = "State"
Usage = 0]]></example>
	<see>
		<ref link="SQL Namepsace">SQL</ref>
		<ref link="SQL::ArgumentUsage Enumerated Type">SQL Enumerated Types</ref>
	</see>
	<links>
		<link link="SQL::ArgumentUsage Enumerated Type">SQL::ArgumentUsage</link>
	</links>
	<terms>sql,arguments,blob,logical,object,time,xml</terms>
</page>