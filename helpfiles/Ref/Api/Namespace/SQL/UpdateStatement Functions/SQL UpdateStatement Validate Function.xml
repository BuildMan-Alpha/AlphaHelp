<page>
   <topic>SQL::UpdateStatement::Validate Function</topic>
      <description>Execute the current statement using the current or passed connection.</description>
 
   <syntax>Result_Flag as L = Validate([SQLConnection as SQL::Connection | SQLConnectionString as C] [UpdateStatistics as L])</syntax>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>SQL::UpdateStatement</name>
         <description>A SQL::UpdateStatement object.
</description>
     </argument>
     
     <argument>
         <name>SQLConnection</name>
         <description>SQL::Connection | SQLConnectionString</description>
     </argument>
     
     
     <argument>
         <name>SQLConnectionString</name>
         <description>Optional. A connection string.
</description>
     </argument>
   </arguments>
  <discussion>
The .Validate() method prepares the query and validates it, but does not execute it. (In some implementations the query is executed with a limit on rows set to 1). The intent is to force the query through a server side parse and report problems.
The method connects to the back-end database using the information in the SQL::Connection::ConnectionString property or in the ConnectString string, then executes the current SQL statement stored in the SQL::UpdateStatement.SQLStatement property.
 Note : Not every database is thorough about validation.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim upd as SQL::UpdateStatement
dim sql_update as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
sql_update = "update customer set bill_city = 'Phoenix', bill_postal_code = '08000', bill_state_region = 'AZ' where customer_id = 1"
? conn.open(connString)
= .T.
? upd.parse(sql_update)
= .T.
? upd.validate(conn)
= .T.
]]></example>
   
   <see>
      <ref>SQL::UpdateStatement Object</ref>
      <ref>About Validation</ref>
  
   </see>
  <terms>sql,database,function,object,operation,query,reports,server side,validation</terms>
</page>