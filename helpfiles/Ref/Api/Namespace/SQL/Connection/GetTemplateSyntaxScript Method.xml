<page api="xb">
    <shortlink>api sql namespace connection class get template syntax script function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="GetTemplateSyntaxScript Method">SQL::Connection GetTemplateSyntaxScript Method</topic>
    <description>Retrieve the template syntax handler source for creating your own syntax handler.</description>

    <prototype>C GetTemplateSyntaxScript()</prototype>

    <returns>
        <return>
            <name>Sample_Script
            </name>
            <type>C</type>
            <description>Reference material.
            </description>
        </return>
    </returns>
    <discussion>
        <p>The .GetTemplateSyntaxScript() method returns reference material useful when creating a custom syntax handler for AlphaDAO objects.</p>
        <p>A user can implement a syntax script in its entirety by implementing all functions in the template and placing them in a text file in the Alpha Anywhere binary folder called A5SQLSyntax&lt;shortname&gt;.ASQ .  Syntax scripts saved this way will show up in the SQL::Connection::ListSyntaxes() function.</p>
        <p>Individual functions can be overridden by coding them in a string and calling SQL::Connection::SetSyntaxHandlerScript() on the connection to be affected.  Only one script is allowed at a time.</p>
    </discussion>
    <example><![CDATA[
dim conn as SQL::Connection
conn.open("{A5API=Access,FileName='C:\Program Files\A5V8\MDBFiles\Alphasports.mdb',UserName='Admin'}")
? conn.GetTemplateSyntaxScript()
= ' Syntax Generation Script Template
'
'
' This script is provided without warranty for your use in creating a custom syntax handler for Alpha Anywhere Data Access Objects
'...
]]>    </example>

    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,function,object,template,templates</terms>
</page>