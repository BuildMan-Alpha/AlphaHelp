<page api="xb">
     <shortlink>api sql namespace connection class list tables with types function</shortlink>
   <topic>SQL::Connection::ListTablesWithTypes Function</topic>
    <description><![CDATA[Return a list of tables for the current database suffixed with (<type>).]]></description>
   
   <prototypes><prototype><![CDATA[Table_List as C = <SQL::Connection>.ListTablesWithTypes([TableFilter as SQL::TableFilter])]]></prototype>
   
   <prototype><![CDATA[Table_List as C = <SQL::Connection>.ListTablesWithTypes( [ IncludeTables as L [, IncludeViews as L [, IncludeSystemTables as L [, IncludeSynonyms as L [, IncludeAliases as L ]]]]] )]]></prototype>
   
   </prototypes>
   <arguments>
   
    <argument>
         <name>Table_List
</name>
         <description>The retrieved list of tables.
</description>
     </argument>
     
      <argument>
         <name><![CDATA[<SQL::Connection>]]></name>
         <description>
 
A SQL::Connection object.
 </description>
     </argument>
     
      <argument>
         <name>TableFilter</name>
         <description>SQL::TableFilter</description>
     </argument>
     
      <argument>
         <name>IncludeTables
</name>
         <description>Optional. Default = .T. (TRUE) = Include tables
</description>
     </argument>
     
      <argument>
         <name>IncludeViews
</name>
         <description>Optional. Default = .F. (FALSE) = Include views
</description>
     </argument>
   
    <argument>
         <name>
IncludeSystemTables
 
 
</name>
         <description>Optional. Default = .F. (FALSE) = Include system tables

</description>
     </argument>
     
      <argument>
         <name>IncludeSynonyms

</name>
         <description>Optional. Default = .F. (FALSE) = Include synonyms

</description>
     </argument>
     
     
   
   
     <argument>
         <name>IncludeAliases
</name>
         <description>Optional. Default = .F. (FALSE) = Include aliases
</description>
     </argument>
   </arguments>
  
   <discussion>The ListTablesWithTypes() method returns a list of tables for the current database suffixed with type.</discussion>
   <sections>
        <section>
            <example><![CDATA[dim cn as sql::connection
?cn.open("::Name::SQLServerNorthwind")
dim Filter as SQL::TableFilter
Filter.IncludeViews = .t.
Filter.IncludeSystemTables = .t.
 
?cn.listtableswithtypes(Filter)]]></example>
        </section>
        <section>
            <description>The next example uses the old, obsolete method of passing in options. You should prefer the method above that uses a SQL::TableFilter object specify the types of tables to list. See [About ListTables and ListTablesWithTypes] for more information.</description>
            <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if

ui_msg_box("Tables and Types", conn.ListTablesWithTypes(.t.,.t.,.t.,.t.,.t.))
conn.close()
]]></example>
        </section>
        <section>
        </section>
   </sections>
    <links>
        <link href="About ListTables and ListTablesWithTypes.xml">About ListTables and ListTablesWithTypes</link>
   </links>
   <see>
      <ref link="SQL::Connection Object">SQL::Connection Object</ref>
      <ref>AlphaDAO - ListTables and ListTablesWithTypes Methods</ref>
   </see>
   <terms>sql,connection,aliases,arguments,database,defaults,function,list,object,system</terms>
</page>