<page api="xb">
    <shortlink>api sql namespace connection class to open table function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="ToOpenTable Method">SQL::Connection ToOpenTable Method</topic>
    <description>Fetch data to an open .DBF table using a SQL query. </description>
    <prototype>Result_Flag as L = ToOpenTable(SQLStatement as C, [Arguments as SQL::Arguments,] LocalTable as P [, Append = .t. as L [, EventScript =  as C [, MapByPosition = .f. as L ]]]])</prototype>
    <arguments>
        <argument>
            <name>SQLStatement</name>
            <type>C</type>
            <description>The SQL query that selects the data to retrieve.
            </description>
        </argument>
        <argument optional="true">
            <name>Arguments</name>
            <type>SQL::Arguments</type>
            <description>A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.
            </description>
        </argument>
        <argument optional="true">
            <name>LocalTable</name>
            <type>P</type>
            <description>A pointer to an open Alpha Anywhere table.
            </description>
        </argument>
        <argument optional="true">
            <name>Append</name>
            <type>L</type>
            <description>Default = .t.</description>
        </argument>
        <argument optional="true">
            <name>EventScript</name>
            <type>L</type>
            <description>Default = ""</description>
        </argument>
        <argument optional="true">
            <name>MapByPosition</name>
            <type>L</type>
            <description>Default = .f.</description>
        </argument>
    </arguments>

    <returns>
        <return>
            <name>Result_Flag</name>
            <types>
                <type>L</type>
            </types>
            <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).</description>
        </return>
    </returns>

    <sections>
        <section>
            <description>The ToOpenTable() method fetches results from a SQL database to an existing and open .DBF table. Columns in the query must match the type of the columns in the table. The query must not have more columns than the table.
            </description>
            <note>The column types returned for each column by the query must match the respective column in the local table.</note>
        </section>
        <section>
            <description>Because the args argument precedes the tbl argument, this example dims and passes it.</description>
            <example><![CDATA[
dim conn as SQL::Connection
dim args as SQL::Arguments
dim connString as C
dim query as C
dim tbl as P
query = "select firstname, lastname from customer where lastname > 'm'"
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString) then
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
tbl = table.open("customer")
if .not. conn.ToOpenTable(query, args, tbl, .t.) then
    ui_msg_box("Error", conn.CallResult.text)
end if
conn.close()
]]>            </example>
        </section>
    </sections>
    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,arguments,column,database,function,logical,object,operation,pointer,query,sql database,sql query</terms>
</page>