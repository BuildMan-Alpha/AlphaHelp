<page api="xb">
    <shortlink>api sql namespace connection class close function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="Close Method">SQL::Connection Close Method</topic>
    <description>Close a SQL connection.</description>
    <prototype>V Close([CloseSSHTunnel as L])</prototype>
    <arguments>
        <argument optional="true">
            <name>CloseSSHTunnel</name>
            <type>L</type>
            <description>
                <p>Default = *[xb:.f.]*. If *[xb:.t.]*, any associated SSH tunnel will be forced closed when the connection is closed.</p>
            </description>
        </argument>
    </arguments>
    <discussion>
        <p>The Close() method closes a SQL connection if it is open.</p>
        <p>The optional argument CloseSSHTunnel defaults to false.  Setting this value to .t. will force any associated SSH tunnel to close along with the connection.</p>
        <p>In most cases you want an SSH tunnel to remain open for the life of the process because establishing a tunnel is expensive.</p>
    </discussion>
    <note>
        <p>Calling the *[xb:close()]* method is optional but may result in better performance.</p>
    </note>
    <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
IF .not. conn.open(connString) THEN
    ui_msg_box("Error", conn.CallResult.Text)
    end
END IF
...
conn.close()
]]>    </example>

    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,function,object</terms>
</page>