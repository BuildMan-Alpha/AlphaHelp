<page>
   <topic>SQL::Connection::ToJSON Function</topic>
    <description>Fetch data to an JSON formatted string using a SQL query.
</description>
   <syntax>Result_Flag as L = ToJSON(SQLStatement as C  [, Arguments as SQL::Arguments] [, RowsToCopy = -1 as N [, StartRow = 1 as N [, ColumnReferences as SQL::TableInfo [, UserContext as P]]]])</syntax>
   <arguments>
    <argument>
         <name>Result_Flag</name>
         <description>
 
TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
 </description>
     </argument>
      <argument>
         <name>SQL::Connection</name>
         <description>

 
A SQL::Connection object.
 </description>
     </argument>
     
     
     
     <argument>
         <name>SQLStatement</name>
         <description>A SQL SELECT statement.
</description>
     </argument>
     <argument>
         <name> Arguments</name>
         <description>

 
Optional. A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.
 </description>
     </argument>
     <argument>
         <name> RowsToCopy = -1</name>
         <description>Optional. Default = -1 (all). The number of rows to copy.
</description>
     </argument>
     <argument>
         <name> StartRow = 1</name>
         <description>Optional. Default = -1 (current). The first row to copy.
</description>
     </argument>
     <argument>
         <name> ColumnReferences</name>
         <description>Optional. A SQL::TableInfo object. When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.
</description>
     </argument>
     <argument>
         <name> UserContext</name>
         <description>Optional. The user context is passed into the evaluation of the expression when data is formatted.
</description>
     </argument>
   </arguments>
  
   <discussion>
The ToJSON() method converts the data in one or more rows to an implementation of JavaScript Object Notation format specific to the Alpha Anywhere AJAX implementation.
The function formats the data in column major order with indexes to map the rows using objects for each column with index, name, value and (optionally) HREF tags.
If the named expression is defined for a column, the function will generate the HREF tag using the expression provided. If ExternalFileNameExpression is set, the data will be stored to a file as well.
   </discussion>
 
   <see>
      <ref link="SQL::Connection Object">SQL::Connection Object</ref>
   </see>
<terms>sql,connection,ajax,arguments,column,defaults,expressions,file,function,javascript,map,number,object,operation,string,users</terms>
</page>