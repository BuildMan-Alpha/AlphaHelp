<page api="xb">
    <shortlink>api sql namespace connection class generate select statement function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="GenerateSelectStatement Method">SQL::Connection GenerateSelectStatement Method</topic>

    <description>Generate a SQL Select statement for the table passed in.</description>

    <prototype>Statement as C = GenerateSelectStatement as C (TableInfo as SQL::TableInfo)</prototype>
    <arguments>
        <argument>
            <name>TableInfo</name>
            <type>SQL::TableInfo</type>
            <description>A SQL::TableInfo object for the table created with the DIM statement.
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Statement</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>A SQL SELECT statement.</p>
            </description>
        </return>
    </returns>
    <discussion>
The GenerateSelectStatement() method generates a SQL Select statement for the table defined in *[xb:TableInfo]*.
    </discussion>
    <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim ti as SQL::TableInfo
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.GetTableInfo(ti, "customer")
    ui_msg_box("Error", conn.CallResult.text)
end if
ui_msg_box("Select Statement Format", conn.GenerateSelectStatement(ti))
conn.close()
]]>    </example>

    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,function,object</terms>
</page>