<page api="xb">
    <shortlink>api sql namespace connection class apply data function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="ApplyData Method">SQL::Connection ApplyData Method</topic>
    <description>Apply the query to a table in the currently connected database using the result set provided.</description>
    <prototype>Result_Flag as L = ApplyData(SQLStatement as C, ResultSet as SQL::ResultSet [, EventScript as C [,SQL::TableInfo TableInfo [, MapTableInfoUsingColumnIndex = .t. as L]])</prototype>
    <arguments>
        <argument>
            <name>SQLStatement</name>
            <type>C</type>
            <description>An SQL INSERT, DELETE, or UPDATE statement.</description>
        </argument>
        <argument>
            <name>ResultSet</name>
            <type>SQL::ResultSet</type>
            <description>A SQL::ResultSet object that contains transactions to apply.
            </description>
        </argument>
        <argument optional="true">
            <name>EventScript</name>
            <type>C</type>
            <description>
                <p>Default = "". An Xbasic Script implementing any of the following functions:</p>
                <p>
                    <list>
                        <item>
                            <name>UpdateBegin()</name>
                        </item>
                        <item>
                            <name>UpdateProgress()</name>
                        </item>
                        <item>
                            <name>UpdateEnd()</name>
                        </item>
                    </list>
                </p>
                <p>In each case, the Context argument is the connection itself.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>TableInfo</name>
            <type>SQL::TableInfo</type>
            <description>A SQL::TableInfo object.</description>
        </argument>
        <argument optional="true">
            <name>MapTableInfoUsingColumnIndex</name>
            <type>L</type>
            <description>Default = *[xb:.t.]*</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result_Flag</name>
            <types>
                <type>L</type>
            </types>
            <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).</description>
        </return>
    </returns>
    <discussion>
The ApplyData() method applies inserts, updates, and deletes to a table in the currently connected database. The result set contains the transactions to apply. See SQL Events for a description of the events that can be scripted.
    </discussion>

    <sections>
        <section>
            <title>Example</title>
            <description>This script creates a new table and inserts the contents of a SQL::ResultSet into the table.</description>
            <example><![CDATA[
dim conn as SQL::Connection
dim ti as SQL::TableInfo
dim rs as SQL::ResultSet
dim connstring as C
dim tbl as P
dim insert as C
connstring = "{A5API=Access,FileName='C:\Program Files\A5V8\MDBFiles\Alphasports.mdb', UserName='Admin'}"
if .not. conn.Open(connstring) then
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. SQL_TableInfoOfDBF("c:\program files\a5v8\samples\alphasports\Customer.dbf", ti) then
    ui_msg_box("Error", "Cannot populate SQL::TableInfo")
    end
end if
ti.Name = "AlphaSportsCustomer"
if .not. conn.CreateTable(ti) then
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
insert = conn.GenerateInsertStatement(ti)
tbl = table.open("c:\program files\a5v8\samples\alphasports\Customer.dbf")
rs = conn.ResultSetFromDBF(tbl)
if .not. conn.ApplyData(insert, rs)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
tbl.close()
conn.close()
]]>            </example>
        </section>
    </sections>
    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,arguments,contains,database,defaults,delete,events,function,insert,logical,object,operation,query,script,transactions,Xbasic</terms>
</page>