<page>
   <topic>SQL::Connection::GenerateNativeTableName Function</topic>
  <description>Generate a formatted table name suitable for a SQL query in using the current syntax.</description>
    
   
   <syntax>Table_Name as C = GenerateNativeTableName as C (TypeInfo as SQL::TableInfo)</syntax>
   <arguments>
    <argument>
         <name>Table_Name</name>
         <description>Formatted table name.
</description>
     </argument>
      <argument>
         <name>SQL::Connection</name>
         <description>A SQL::Connection object.
</description>
     </argument>
     
     <argument>
         <name>TypeInfo</name>
         <description>SQL::TableInfo</description>
     </argument>
   </arguments>
   <discussion>
The GenerateNativeTableName method generates a formatted table name suitable for a SQL query in using the current syntax.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim ti as SQL::TableInfo
dim connString as C
dim select_exp as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select Lastname from customer where bill_state_region = 'ma'"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.GetTableInfo(ti, "customer")
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Native Type String", conn.GenerateNativeTableName(ti))
conn.close()
]]></example>
   
   <see>
      <ref href="SQL::Connection Object">SQL::Connection Object</ref>
   </see>
   <terms>sql,connection,function,object,query,sql query</terms>
</page>