<page api="xb">
    <shortlink>api sql namespace connection class to xml function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="ToXML Method">SQL::Connection ToXML Method</topic>
    <description>Fetch data to an XML formatted string using a SQL query.
    </description>
    <prototype>XML_String as C = ToXML(SQLStatement as C  [, Arguments as SQL::Arguments] [, RowsToCopy = -1 as N [, StartRow = 1 as N [, C documentname [, C rowname [,C header[, ColumnReferences as SQL::TableInfo [, UserContext as P]]]]]]])</prototype>
    <arguments>
        <argument>
            <name>SQLStatement</name>
            <type>C</type>
            <description>SQL SELECT statement.
            </description>
        </argument>
        <argument optional="true">
            <name>Arguments</name>
            <type>SQL::Arguments</type>
            <description>A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.
            </description>
        </argument>
        <argument optional="true">
            <name>RowsToCopy</name>
            <type>N</type>
            <description>Default = -1 (all). The number of rows to copy.
            </description>
        </argument>
        <argument optional="true">
            <name>StartRow</name>
            <type>N</type>
            <description>Default = -1 (first). The first row to copy.
            </description>
        </argument>
        <argument optional="true">
            <name>documentname</name>
            <type>C</type>
            <description>The tag for the document element. See example.
            </description>
        </argument>
        <argument optional="true">
            <name>rowname</name>
            <type>C</type>
            <description>The tag for the row element. See example.
            </description>
        </argument>
        <argument optional="true">
            <name>header</name>
            <type>C</type>
            <description>The tag for the header element. See example.
            </description>
        </argument>
        <argument optional="true">
            <name>ColumnReferences</name>
            <type>SQL::TableInfo</type>
            <description>A SQL::TableInfo object. When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.
            </description>
        </argument>
        <argument optional="true">
            <name>UserContext</name>
            <type>P</type>
            <description>The user context is passed into the evaluation of the expression when data is formatted.
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>XML_String</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>An XML version of the retrieved data.</p>
            </description>
        </return>
    </returns>
    <discussion>
The ToXML() method fetches data to an XML formatted string using a SQL query.
    </discussion>
    <example><![CDATA[dim connString as C
dim args as SQL::Arguments
dim select_exp as C
dim data as C
select_exp = "select CustomerID, City, Region from Customers WHere country = 'USA'"
if .not. conn.open("::Name::AADemo-Northwind") then
    end
end if
if .not. conn.execute(select_exp) then
    end
end if
data = conn.toxml(select_exp, args, -1, 1, "DocName", "RowName", "HeaderName")
conn.close()
]]>    </example>
    <sections>
        <section>
            <description>The XML data looks like this:</description>
            <example><![CDATA[HeaderName
<DocName>
	<RowName>
		<CustomerID>GREAL</CustomerID>
		<City>Eugene</City>
		<Region>OR</Region>
	</RowName>
	<RowName>
		<CustomerID>HUNGC</CustomerID>
		<City>Elgin</City>
		<Region>OR</Region>
	</RowName>
	<RowName>
		<CustomerID>LAZYK</CustomerID>
		<City>Walla Walla</City>
		<Region>WA</Region>
	</RowName>
	<RowName>
		<CustomerID>LETSS</CustomerID>
		<City>San Francisco</City>
		<Region>CA</Region>
	</RowName>
	<RowName>
		<CustomerID>LONEP</CustomerID>
		<City>Portland</City>
		<Region>OR</Region>
	</RowName>
	<RowName>
		<CustomerID>OLDWO</CustomerID>
		<City>Anchorage</City>
		<Region>AK</Region>
	</RowName>
	<RowName>
		<CustomerID>RATTC</CustomerID>
		<City>Albuquerque</City>
		<Region>NM</Region>
	</RowName>
	<RowName>
		<CustomerID>SAVEA</CustomerID>
		<City>Boise</City>
		<Region>ID</Region>
	</RowName>
	<RowName>
		<CustomerID>SPLIR</CustomerID>
		<City>Lander</City>
		<Region>WY</Region>
	</RowName>
	<RowName>
		<CustomerID>THEBI</CustomerID>
		<City>Portland</City>
		<Region>OR</Region>
	</RowName>
	<RowName>
		<CustomerID>THECR</CustomerID>
		<City>Butte</City>
		<Region>MT</Region>
	</RowName>
	<RowName>
		<CustomerID>TRAIH</CustomerID>
		<City>Kirkland</City>
		<Region>WA</Region>
	</RowName>
	<RowName>
		<CustomerID>WHITC</CustomerID>
		<City>Seattle</City>
		<Region>WA</Region>
	</RowName>
</DocName>
]]>            </example>
        </section>
    </sections>
    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,arguments,column,defaults,expressions,function,header,number,object,string,users,xml</terms>
</page>