<page api="xb" build="0">
    <shortlink>sql connection tocsv method</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="ToCSV Method">SQL::Connection ToCSV Method</topic>
    <description>
        <p>Fetch data using a SQL query and return the data formatted as a CSV string.</p>
    </description>
    <prototypes>
        <prototype>dim result as C = ToCSV(SQLStatement as C [, Arguments as SQL::Arguments] [, IncludeHeaderRow as L = .f. [, RowsToCopy as N = -1[, StartRow as N = -1 [, UpperCaseNames as L = .f. [, DateTimeFormat  as C = "" [, DateFormat  as C = "" [, TextToSubstituteForBinary = "&lt;Binary Data&gt;"]]]]]]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>SQLStatement</name>
            <type>C</type>
            <description>A SQL SELECT statement.</description>
        </argument>
        <argument optional="true">
            <name>Arguments</name>
            <type>SQL::Arguments</type>
            <description>Default = *[xb:null_value()]*. A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.</description>
        </argument>
        <argument optional="true">
            <name>IncludeHeaderRow</name>
            <type>L</type>
            <description>
                <p>Default = *[xb:.f.]*. If true, the first row in the result will be the column names.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>RowsToCopy</name>
            <type>N</type>
            <description>
                <p>Default = *[xb:-1]* (copy all rows). The number of rows to copy.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>StartRow</name>
            <type>N</type>
            <description>
                <p>Default = *[xb:-1]* (start with next row in the result set). The starting row.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>UpperCaseNames</name>
            <type>L</type>
            <description>
                <p>Default = *[xb:.f.]*. If true and the header row is included, the header row column names will be converted to uppercase.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>DateTimeFormat</name>
            <type>C</type>
            <description>
                <p>Default = *[xb:""]*. The date time format. See [Date and Time Format Elements] for more information about date time formats.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>DateFormat</name>
            <type>C</type>
            <description>
                <p>Default = *[xb:""]*. The date format. See [Date and Time Format Elements] for more information about date time formats.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>TextToSubstituteForBinary</name>
            <description>
                <p>Default = *[xb:"&lt;Binary Data&gt;"]*</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>Returns the result set in CSV (comma separated variable) format.</p>
            </description>
        </return>
    </returns>
    <discussion>
        <p>This function is useful in displaying the result of a query against a database. For example, after opening a database, like Northwind, you can use the [Execute()] function to perform a query. You can then use the *[xb:toCSV()]* function to delimitate all of the results from the query using a comma.</p>
    </discussion>
    <example code="xb"><![CDATA[dim cn as SQL::Connection
cn.open("::Name::AADemo-Northwind")

dim sql as c = "select FIRST 5 * from orders"

?cn.toCSV(sql)
= 10248,VINET,5,07/04/1996 00:00:00.000,08/01/1996 00:00:00.000,07/16/1996 00:00:00.000,3,32.38,Vins et alcools Chevalier,59 rue de l'Abbaye,Reims,,51100,France
10249,TOMSP,6,07/05/1996 00:00:00.000,08/16/1996 00:00:00.000,07/10/1996 00:00:00.000,1,11.61,Toms SpezialitÃ¤ten,Luisenstr. 48,MÃ¼nster,,44087,Germany
10250,HANAR,4,07/08/1996 00:00:00.000,08/05/1996 00:00:00.000,07/12/1996 00:00:00.000,2,65.83,Hanari Carnes,"Rua do PaÃ§o, 67",Rio de Janeiro,RJ,05454-876,Brazil
10251,VICTE,3,07/08/1996 00:00:00.000,08/05/1996 00:00:00.000,07/15/1996 00:00:00.000,1,41.34,Victuailles en stock,"2, rue du Commerce",Lyon,,69004,France
10252,SUPRD,4,07/09/1996 00:00:00.000,08/06/1996 00:00:00.000,07/11/1996 00:00:00.000,2,51.3,SuprÃªmes dÃ©lices,"Boulevard Tirou, 255",Charleroi,,B-6000,Belgium]]></example>
</page>