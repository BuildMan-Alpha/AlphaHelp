<page api="xb">
        <shortlink>api sql namespace connection class get preferred syntax function</shortlink>
   <topic>SQL::Connection::GetPreferredSyntax Function</topic>
     <description>Return a the most appropriate syntax for the server specified or an empty string if not known.</description>
 
   <syntax>Syntax as C = GetPreferredSyntax(ServerName as C, DataSource as C = "")</syntax>
   <arguments>
   <argument>
         <name>Syntax</name>
         <description>The name of a syntax.

</description>
     </argument>
     
     <argument>
         <name>SQL::Connection</name>
         <description>The name of the server hosting the database.
</description>
     </argument>
     
     
     
     
     <argument>
         <name>ServerName</name>
         <description>The name of the server hosting the database.
</description>
     </argument>
     <argument>
         <name> DataSource</name>
         <description>C = ""</description>
     </argument>
   </arguments>
   <discussion>
When using the ODBC API, the data source name may not be sufficient to determine the appropriate syntax. The GetPreferredSyntax() method finds the driver name and scans it for a string close to an available syntax name. If no syntax matches, an empty string is returned. All drivers that support a single syntax will return that name.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Preferred Syntax", conn.GetPreferredSyntax("localhost"))
conn.close()
]]></example>
  
   <see>
      <ref link="SQL::Connection Object">SQL::Connection Object</ref>
   </see>
  <terms>sql,connection,data source,function,object,string</terms>
</page>