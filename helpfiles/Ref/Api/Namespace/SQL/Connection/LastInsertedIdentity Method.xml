<page api="xb">
      <shortlink>api sql namespace connection class last inserted identity function</shortlink>
  <topic>SQL::Connection::LastInsertedIdentity Function</topic>
  <description>Returns the last inserted identity for a specific table (where possible) after executing an INSERT statement.</description>
  <prototype>Result as A = LastInsertedIdentity([TableInfo as SQL::TableInfo])</prototype>
  <arguments>
    <argument optional="true">
      <name>TableInfo</name>
      <type>SQL::TableInfo</type>
      <description>A SQL::TableInfo object.</description>
    </argument>
  </arguments>
  <discussion>The LastInsertedIdentity() method retrieves the last identity value generated for an INSERT on the currently open connection.</discussion>
  <sections>
    <section>
      <steps>
        <step>
          <description>This is current connection specific for most databases. For databases that use sequences to maintain identity (such as Oracle), the sequence may not be correct after the transaction has been completed.</description>
        </step>
        <step> 
          <description>For databases that use sequences to generate identities &lt;TableInfo&gt; is a required parameter. It must include an identity column in its definition. That column must specify the sequence name to be used.</description>
        </step>
      </steps>
    </section>
    <section>
      <note>
          <p>[Cn.CallResult.LastInsertedIdentity] is always preferable to Cn.LastInsertedIdentity() after an INSERT is executed. *Cn.CallResult.LastInsertedIdentity will contain the identity for the record that was just inserted after executing an INSERT statement while the SQL::Connection LastInsertedIdentity() method returns the last inserted identity for the current open table.</p>
          <p>See also [SQL::GenerateLastInsertedIdentityStatement()].</p>
        </note>
    </section>
    <section>
      <example><![CDATA[dim cn as sql::Connection
dim insert as c =<<%sql%
INSERT INTO employees
(FirstName,LastName,HireDate)
VALUES
(:Firstname,:Lastname,:HireDate);
%sql%

dim args as sql::Arguments
args.set("Firstname","Alma")
args.set("Lastname","Vasquez")
args.set("HireDate",date())

dim id as N = 0
if (cn.open("::Name::mysql_northwind")) then
    if (cn.execute(insert,args)) then
        ' insert success
        id = cn.LastInsertedIdentity()
    else
        ' insert failed
    end if
        cn.close()
else
    ' could not open connection 
end if]]></example>
    </section>
  </sections>
  <links>
      <link link="api client api lastinsertedidentity property">Cn.CallResult.LastInsertedIdentity</link>
      <link link="api sql namespace connection class generate last inserted identity statement function">SQL::GenerateLastInsertedIdentityStatement()</link>
  </links>
  <see>
    <ref link="api client api lastinsertedidentity property">Using the CallResult LastInsertedIdentity Property</ref>
    <ref link="api sql namespace connection class generate last inserted identity statement function">SQL::Connection::GenerateLastInsertedIdentityStatement()</ref>
    <ref link="SQL::Connection Object">SQL::Connection Object</ref>
  </see>
  <terms>sql,connection,database,function,insert,object,transactions,insert primary key</terms>
</page>