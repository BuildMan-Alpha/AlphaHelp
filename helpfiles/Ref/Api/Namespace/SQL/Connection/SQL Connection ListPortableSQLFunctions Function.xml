<page>
   <topic>SQL::Connection::ListPortableSQLFunctions Function</topic>
 <description>Create a crlf() delimited list of portable SQL functions.

Within each row, the tab delimited columns are: Name, Prototype, Description, Aggregate=Y/N, Summary=Y/N, Category

If you provide a syntax name, only functions supported by that syntax will be included.
If you do not provide a syntax name, all functions will be included.</description>   
   <syntax>List as C = ListPortableSQLFunctions(Syntax as C = "")</syntax>
   <arguments>
   <argument>
         <name>List</name>
         <description>A list of functions in the format: Name  Prototype  Description 
</description>
     </argument>
     
     <argument>
         <name>SQL::Connection</name>
         <description>A SQL::Connection object.
</description>
     </argument>
     
     
     
   </arguments>
  <sections>
      <section>
          <note>Geography functions are only supported for some databases.</note>
      </section>
      
      
      <section>
      <description>The ListPortableSQLFunctions() method returns a list of functions that are mapped by syntax handlers to the target database, or are considered portable (can be used in generic queries).
 </description>
   
   </section>
   <section><title>Example</title>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Portable SQL Functions", conn.ListPortableSQLFunctions())
conn.close()
]]></example>
   </section></sections>
   <see>
      <ref link="SQL::Connection Object">SQL::Connection Object</ref>
      <ref link="Portability Functions">Portability Functions</ref>
   </see>
   <terms>sql,geography,connection,column,function,list,object,tabs</terms>
</page>