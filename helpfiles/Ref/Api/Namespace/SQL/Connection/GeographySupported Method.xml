<page api="xb">
    <shortlink>api sql namespace connection class geography supported function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="GeographySupported Method">SQL::Connection GeographySupported Method</topic>
    <description>Returns true if the syntax name passed is supported for geography features.
    </description>
    <prototype>L GeographySupported(Syntax as C = "")</prototype>
    <arguments>
        <argument>
            <name>Syntax</name>
            <type>C</type>
            <description>
                <p>The target system of record. If not specified, the database type specified in the SQL::Connection's connection string is used. See [listSyntaxes()] for a list of allowed values.</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>L</type>
            </types>
            <description>
                <p>Returns *[xb:.T.]* if the syntax name passed is supported for geography features.</p>
            </description>
        </return>
    </returns>
    <discussion>Returns true if the syntax name passed is supported for geography features. If you do not provide a syntax name, the current syntax is used. If no syntax is assigned yet, the function will return false.</discussion>
    <example code="xb"><![CDATA[dim conn as SQL::Connection
? conn.GeographySupported("Access")
= .F.

? conn.GeographySupported("Oracle")
= .T.

? conn.GeographySupported("MySQL")
= .T.

? conn.GeographySupported("SAPHANA")
= .F.]]></example>
    <see>
        <ref>SQL Connection Functions</ref>
    </see>
    <links>
        <link link="api sql namespace connection class list syntaxes function">listSyntaxes()</link>
    </links>
    <terms>geography</terms>
</page>