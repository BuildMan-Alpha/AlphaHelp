<page api="xb">
    <shortlink>api sql namespace connection class generate retrieve row query function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="GenerateRetrieveRowQuery Method">SQL::Connection GenerateRetrieveRowQuery Method</topic>
    <description>Generate a SQL statement to retrieve a specific row for the table passed in. Key columns are generated as arguments.</description>
    <prototype>Statement as C = GenerateRetrieveRowQuery as C (TableInfo as SQL::TableInfo, [, Rows = 1 as N [, LocalTableInfo as SQL::TableInfo,]])</prototype>
    <arguments>
        <argument>
            <name>TableInfo</name>
            <type>SQL::TableInfo</type>
            <description>A SQL::TableInfo object created by a DIM statement and for the table.
            </description>
        </argument>
        <argument optional="true">
            <name>Rows</name>
            <type>N</type>
            <description>
                <p>Default = 1. The number of rows to return. Multiple rows are returned in a collection.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>LocalTableInfo</name>
            <type>SQL::TableInfo</type>
            <description>SQL::TableInfo</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Statement</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>A SQL SELECT statement.</p>
                <p>If Rows is greater than 1 then a set of of arguments will be generated for each row in the following format:</p>
                <p>
                    <example><![CDATA[<Column_name> + "_" + RowNumber]]></example>
                </p>
                <p>For example, CustomerID becomes:</p>
                <p>
                <example code=""><![CDATA[CustomerID_1
CustomerID_2]]></example>
                </p>
                <p>If the length of the column name exceeds 20 characters, it is truncated to 20 characters to be sure the extra characters will not exceed the maximum length of a valid field.</p>
            </description>
            <note>If the table has no primary key, GenerateRetrieveRowQuery is meaningless and no string is returned.</note>
        </return>
    </returns>
    <sections>
        <section>
            <description>
                <p>The SQL::Connection::GenerateRetrieveRowQuery()generates a SQL SELECT statement to fetch a specific row based on the primary key values for the table. If the table has no primary key columns, an empty string is returned.</p>
                <p>Once the query is created, you can execute it by providing a SQL::Arguments collection with values populated for the primary key columns.</p>
                <p>If Rows is greater than 1, GenerateRetrieveRowQuery()will create a query with multiple rows of values in the WHERE clause.</p>
                <p>The names of the key columns will be modified to reflect the row number using the format  + "_" + RowNumber. (If the length of the column name exceeds 20 characters, it is truncated to 20 characters to be sure the extra characters will not exceed the maximum length of a valid field. You must set up the arguments collection accordingly.</p>
            </description>
        </section>

        <section>
            <title>Example</title>
            <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim ti as SQL::TableInfo
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.GetTableInfo(ti, "customer")
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Row Qualifiers", conn.GenerateRetrieveRowQuery(ti))
conn.close()
]]>            </example>
        </section>
    </sections>
    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>sql,connection,arguments,collection,column,defaults,function,number,object,primary key,query,row number,string</terms>
</page>