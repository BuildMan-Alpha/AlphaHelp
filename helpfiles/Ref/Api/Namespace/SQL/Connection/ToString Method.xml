<page api="xb">
    <shortlink>api sql namespace connection class to string function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="ToString Method">SQL::Connection ToString Method</topic>
    <description>Fetch data to a string using a SQL query.</description>
    <prototype>String as C = ToString(SQLStatement as C [, Arguments as SQL::Arguments][, RowsToCopy = -1 as N [, StartRow = 1 as N [, ColumnSeparator as C [,RowSeparator as C [, ColumnReferences as SQL::TableInfo [, UserContext as P]]]]]])</prototype>
    <arguments>
        <argument>
            <name>SQLStatement</name>
            <type>C</type>
            <description>A SQL SELECT statement.
            </description>
        </argument>
        <argument>
            <name optional="true"> Arguments</name>
            <type>SQL::Arguments</type>
            <description>A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.
            </description>
        </argument>
        <argument optional="true">
            <name>RowsToCopy</name>
            <type>N</type>
            <description>Default = -1 (all). The number of rows to copy.
            </description>
        </argument>
        <argument optional="true">
            <name>StartRow</name>
            <type>N</type>
            <description>Default = 1 (first). The first row to copy.
            </description>
        </argument>
        <argument optional="true">
            <name>ColumnSeparator</name>
            <type>C</type>
            <description>Default = tab. Characters to insert between columns.</description>
        </argument>
        <argument optional="true">
            <name>RowSeparator</name>
            <type>C</type>
            <description>Default = CR-LF. Characters to insert between rows.</description>
        </argument>
        <argument optional="true">
            <name> ColumnReferences</name>
            <type>SQL::TableInfo</type>
            <description>A SQL::TableInfo object. When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.
            </description>
        </argument>
        <argument optional="true">
            <name>UserContext</name>
            <type>P</type>
            <description>The user context is passed into the evaluation of the expression when data is formatted.
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>String</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>The retrieved data.</p>
            </description>
        </return>
    </returns>
    <discussion>
The ToString() method fetches data to a string using a SQL query.
    </discussion>
    <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim query as C
query = "select firstname, lastname from customer where lastname > 'm'"
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Results", conn.ToString(query))
conn.close()
]]>    </example>
    <sections>
        <section>
            <description>This example retrieves four rows of data, starting at the third row.
Note : Even though there are no arguments to pass, the following script DIMs and passes the args variable.
            </description>
            <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim query as C
dim args as SQL::Arguments
query = "select firstname, lastname from customer where lastname > 'm'"
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Results", conn.ToString(query, args, 4, 3, "|", crlf()))
conn.close()
]]>            </example>
        </section>
    </sections>
    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
    </see>
    <terms>arguments,column,defaults,expressions,function,insert,number,object,script,string,users</terms>
</page>