<page api="xb">
    <shortlink>api sql namespace connection class list tables function</shortlink>
    <topic parent="SQL::Connection" parentType="class" elementName="ListTables Method">SQL::Connection ListTables Method</topic>
    <description>Return a list of tables for the current database.</description>
    <prototypes>
        <prototype>Table_List as C = ListTables([TableFilter as SQL::TableFilter])</prototype>
        <prototype>Table_List as C = ListTables( [ IncludeTables as L [, IncludeViews as L [, IncludeSystemTables as L [, IncludeSynonyms as L [, IncludeAliases as L ]]]]] )</prototype>
    </prototypes>
    <arguments>
        <argument optional="true">
            <name>TableFilter</name>
            <type>SQL::TableFilter</type>
            <description>SQL::TableFilter
            </description>
        </argument>
        <argument optional="true">
            <name>IncludeTables
            </name>
            <type>L</type>
            <description>Default = .T. (TRUE) = Include tables
            </description>
        </argument>
        <argument optional="true">
            <name>IncludeViews
            </name>
            <type>L</type>
            <description>Default = .F. (FALSE) = Include views
            </description>
        </argument>
        <argument optional="true">
            <name>IncludeSystemTables
            </name>
            <type>L</type>
            <description>Default = .F. (FALSE) = Include system tables
            </description>
        </argument>
        <argument optional="true">
            <name>IncludeSynonyms
            </name>
            <type>L</type>
            <description>Default = .F. (FALSE) = Include synonyms
            </description>
        </argument>
        <argument optional="true">
            <name>IncludeAliases
            </name>
            <type>L</type>
            <description>Default = .F. (FALSE) = Include aliases
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>The retrieved list of tables.</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>Table_List</p>
            </description>
        </return>
    </returns>
    <sections>
        <section>
            <description>The ListTables() method returns a list of tables for the current database.</description>
            <note>The overload below is obsolete.  Use a TableFilter argument instead. See [About ListTables and ListTablesWithTypes] for more information.</note>
        </section>
        <section>
            <example><![CDATA[C ListTables( [IncludeTables as L [, IncludeViews as L [, IncludeLinkedTables as L [, IncludeSystemTables as L [, IncludeSynonyms as L [, IncludeAliases as L]]]]]])]]></example>
        </section>
        <section>
            <title>Example</title>
            <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
ui_msg_box("Tables", conn.ListTables(.T., .T., .T., .T., .T.))
conn.close()
]]>            </example>
        </section>
        <section>
            <description>Example Usage:</description>
            <example><![CDATA[
dim Filter as SQL::TableFilter
	Filter.IncludeViews = .t.
	Connection.ListTables(Filter)
]]>            </example>
        </section>
    </sections>
    <links>
        <link href="About ListTables and ListTablesWithTypes.xml">About ListTables and ListTablesWithTypes</link>
    </links>
    <see>
        <ref link="SQL::Connection Object">SQL::Connection Object</ref>
        <ref>AlphaDAO - ListTables and ListTablesWithTypes Methods V11</ref>
    </see>
    <terms>sql,connection,aliases,arguments,defaults,function,list,object,system</terms>
</page>