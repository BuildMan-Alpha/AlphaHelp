<page api="xb">
    <shortlink>api sql namespace table info class parse table name function</shortlink>
    <topic parent="SQL::TableInfo" parentType="class" elementName="ParseTableName Method">SQL::TableInfo::ParseTableName Method</topic>
    <description>Parse a dot separated table name and return the components. Use brackets [] to wrap names with dots in them.</description>
    <prototypes>
        <prototype>DIM result AS L = ParseTableName(C CatalogName, C SchemaName, C OwnerName, C TableName, C fullTableName)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>CatalogName</name>
            <type>C</type>
            <description>
                <p>The parsed catalog name.</p>
            </description>
        </argument>
        <argument>
            <name>SchemaName</name>
            <type>C</type>
            <description>
                <p>The parsed schema name.</p>
            </description>
        </argument>
        <argument>
            <name>OwnerName</name>
            <type>C</type>
            <description>
                <p>The parsed owner name.</p>
            </description>
        </argument>
        <argument>
            <name>TableName</name>
            <type>C</type>
            <description>
                <p>The parsed table name.</p>
            </description>
        </argument>
        <argument>
            <name>fullTableName</name>
            <type>C</type>
            <description>
                <p>The fully qualified table name to parse. Use brackets [] to wrap names with dots in them.</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>L</type>
            </types>
            <description>
                <p>Returns *[xb:.t.]* if the operation succeeds. Otherwise, *[xb:.f.]*.</p>
            </description>
        </return>
    </returns>
    <discussion>
        <p>The .ParseTableName() method takes a fully qualified table name and returns the base table name, owner, schema and catalog for the table. For example:</p>
        <p>
            <example code="xb"><![CDATA[dim CatalogName as C
dim SchemaName as C
dim OwnerName as C
dim BaseTableName as C
dim FullName as C = "dbo.[hello.world]"
dim ti as sql::tableinfo 

? ti.ParseTableName(CatalogName, SchemaName, OwnerName, BaseTableName, FullName)
= .T.

? CatalogName
= ""

? SchemaName
= ""

? OwnerName
= "dbo"

? BaseTableName
= "dAgency.06"

? fullname
= "[dAgency.06]"]]></example>
        </p>
    </discussion>
</page>