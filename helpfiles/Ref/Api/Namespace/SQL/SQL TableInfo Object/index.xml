<page>
	<topic>SQL::TableInfo Class</topic>
	<properties>
		<property generated="true">
			<name>XML</name>
			<type>C</type>
			<description>
C
 
RW
 
The schema in XML format.
 </description>
		</property>
		<property generated="true">
			<name>TableType</name>
			<type>N</type>
			<description>
SQL::TableType
 
R
 
An enumerated type describing the table type.
 </description>
		</property>
		<property generated="true">
			<name>TableTypeName</name>
			<type>C</type>
			<description>
C
 
R
 
The displayable name of the enumeration value in TypeName.
 </description>
		</property>
		<property generated="true">
			<name>Catalog</name>
			<type>C</type>
			<description>String Catalog property</description>
		</property>
		<property generated="true">
			<name>Schema</name>
			<type>C</type>
			<description>String Schema property</description>
		</property>
		<property generated="true">
			<name>Owner</name>
			<type>C</type>
			<description>
C
 
R
 
The database user or group that owns the table.
 </description>
		</property>
		<property generated="true">
			<name>TableName</name>
			<type>C</type>
			<description>String TableName property</description>
		</property>
		<property generated="true">
			<name>UniqueName</name>
			<type>C</type>
			<description>
C
 
R
 
A concatenation of the owner (if any) and name properties.
 </description>
		</property>
		<property generated="true">
			<name>Name</name>
			<type>C</type>
			<description>
C
 
R
 
The unique name of the table. The table must be unique for the owner, but need not be globally unique.
 </description>
		</property>
		<property generated="true">
			<name>NativeAPI</name>
			<type>C</type>
			<description>
C
 
R
 
The name of the API active when this object was created.
 </description>
		</property>
		<property generated="true">
			<name>NativeSyntax</name>
			<type>C</type>
			<description>
C
 
R
 
The name of the syntax at the time the object was created.
 </description>
		</property>
		<property generated="true">
			<name>Comment</name>
			<type>C</type>
			<description>
C
 
R
 
The comment stored for the table, if the database supports it.
 </description>
		</property>
		<property generated="true">
			<name>Alias</name>
			<type>C</type>
			<description>String Alias property</description>
		</property>
		<property generated="true">
			<name>Updateable</name>
			<type>L</type>
			<description>
L
 
R
 
True (.T.) if the table is updateable.
 </description>
		</property>
		<property generated="true">
			<name>CanUpdateInTransaction</name>
			<type>L</type>
			<description>
L
 
R
 
If a table has a large text or binary column and the database can not cache updates for multiple rows, this value will be false.
 </description>
		</property>
		<property generated="true">
			<name>SizeToFit</name>
			<type>L</type>
			<description>
L
 
RW
 
When set to true, . DBFRowSyntax will return lengths adjusted based on the actual data. Notes:

Call .UpdateStatistics() before getting the DBFRowSyntax.


If the longest column is zero length, the default length is 15.


SizeToFit will limit the size of inserted or updated fields on imported or linked tables to the maximum size of the previous values.

 </description>
		</property>
		<property generated="true">
			<name>SelectRowLimit</name>
			<type>N</type>
			<description>
N
 
RW
 
Defaults to -1 (no limit). This property is used when generating select statements to limit the number of rows retrieved.
 </description>
		</property>
		<property generated="true">
			<name>SelectRowStartingOffset</name>
			<type>N</type>
			<description>Numeric SelectRowStartingOffset property</description>
		</property>
		<property generated="true">
			<name>LastKnownRowCount</name>
			<type>N</type>
			<description>
N
 
R
 
Set by calling .UpdateStatistics().
 </description>
		</property>
		<property generated="true">
			<name>DBFRowSyntax</name>
			<type>C</type>
			<description>
C
 
R
 
The syntax required to create an Alpha Anywhere .DBF with the same columns.
 </description>
		</property>
		<property generated="true">
			<name>PrimaryKeyExpression</name>
			<type>C</type>
			<description>
N
 
R
 
The subscript value to use when referencing the Index property to access the primary key index. If there is no primary key defined, this property will have a value of -1. If the value is an integer greater than or equal to 1, the primary key may be accessed using the syntax IndexPrimaryKeySubscript.
 </description>
		</property>
		<property generated="true">
			<name>PrimaryKeySubscript</name>
			<type>N</type>
			<description>Numeric PrimaryKeySubscript property</description>
		</property>
		<property generated="true">
			<name>IdentityColumnSubscript</name>
			<type>N</type>
			<description>
N
 
R
 
Returns the index of the column which is auto-increment or identity (-1 if none).
 </description>
		</property>
		<property generated="true">
			<name>QueryAlias</name>
			<type>C</type>
			<description>
C
 
RW
 
This is an advanced property used to get more information about a column.
 </description>
		</property>
		<property generated="true">
			<name>Column</name>
			<type></type>
			<description>
P
 
R
 
An array of index column ( SQL::IndexColumnInfo ) definitions.
 </description>
		</property>
		<property generated="true">
			<name>Index</name>
			<type></type>
			<description>
P
 
R
 
An array of index ( SQL::IndexInfo ) definitions.
 </description>
		</property>
		<property generated="true">
			<name>IdentitySequenceName</name>
			<type>C</type>
			<description>String IdentitySequenceName property</description>
		</property>
		<property generated="true">
			<name>ActiveLinkDBFRowSyntax</name>
			<type>C</type>
			<description>String ActiveLinkDBFRowSyntax property</description>
		</property>
	</properties>
	<methods>
	
	<methodref>
			<name>AddColumn</name>
			<ref href="/Server/Guide/Design/Platform/Dotnet/.NET Framework Support.html"></ref>
			<description>Adds a new column to the .column property.</description>
		</methodref>
	
	
	
	
		<methodref generated="true">
			<name>AddIndex</name>
			<ref href="/Api/Namespace/SQL/TableInfo Functions/SQL TableInfo AddIndex Function.xml">AddIndex</ref>
			<description>Adds a new index to the .index property.
</description>
		</methodref>
		<methodref generated="true">
			<name>Clear</name>
			<ref href="/Server/Guide/Design/Platform/Dotnet/.NET Framework Support.html">Clear</ref>
			<description>Clears out the SQL::TableInfo object as if it had just been created.
Reset the contents of the TableInfo as if it had just been declared.</description>
		</methodref>
		
		
		<methodref>
			<name>Clone</name>
			<ref href="/Server/Guide/Design/Platform/Dotnet/.NET Framework Support.html"></ref>
			<description>Returns a copy of a SQL::TableInfo object.
 </description>
		</methodref>
	
		
		
		
		
		<methodref generated="true">
			<name>ColumnIsInPrimaryKey</name>
			<ref>ColumnIsInPrimaryKey</ref>
			<description>Returns true if the column matching the index requested is part of the table's primary key</description>
		</methodref>
		<methodref generated="true">
			<name>ColumnNumber</name>
			<ref>ColumnNumber</ref>
			<description>Get the index of a Column from the name. Gets the subscript index of the requested column name in the .column array property.
</description>
		</methodref>
		<methodref generated="true">
			<name>DeleteColumn</name>
			<ref href="/Api/Namespace/Reporting/ReportExcelTemplate/Reporting__NAMESPACE__ReportExcelTemplate DeleteColumn Method.xml">DeleteColumn</ref>
			<description>Delete a Column.</description>
		</methodref>
		<methodref generated="true">
			<name>DeleteIndex</name>
			<ref>DeleteIndex</ref>
			<description>Delete a Index.</description>
		</methodref>
		<methodref generated="true">
			<name>IndexNumber</name>
			<ref href="/Api/Namespace/SQL/TableInfo Functions/SQL TableInfo IndexNumber Function.xml">IndexNumber</ref>
			<description>Get the index of a Index from the name. Gets the subscript of the requested index number in the .index array property.
</description>
		</methodref>
		<methodref generated="true">
			<name>InsertColumn</name>
			<ref>InsertColumn</ref>
			<description>Insert a new Column to the .column property.. </description>
		</methodref>
		<methodref generated="true">
			<name>InsertIndex</name>
			<ref>InsertIndex</ref>
			<description>Insert a new Index.</description>
		</methodref>
		<methodref generated="true">
			<name>ListColumns</name>
			<ref href="/Api/Namespace/SQL/TableInfo Functions/SQL TableInfo ListColumns Function.xml">ListColumns</ref>
			<description>Create a list of the table columns (optionally including types).</description>
		</methodref>
		<methodref generated="true">
			<name>MoveColumn</name>
			<ref href="/Api/Namespace/Reporting/ReportExcelTemplate/Reporting__NAMESPACE__ReportExcelTemplate MoveColumn Method.xml">MoveColumn</ref>
			<description>Move a block of Column items.</description>
		</methodref>
		<methodref generated="true">
			<name>MoveIndex</name>
			<ref>MoveIndex</ref>
			<description>Move a block of Index items.</description>
		</methodref>
		<methodref generated="true">
			<name>ParseTableName</name>
			<ref>ParseTableName</ref>
			<description>Parse a dot separated table name and return the components.  Use [] to wrap names with dots in them.</description>
		</methodref>
		<methodref generated="true">
			<name>UpdateStatistics</name>
			<ref>UpdateStatistics</ref>
			<description>Gather statistical information about the actual table.</description>
		</methodref>
	</methods>
   
<sections>
<section>
<title>QueryAlias Property</title>
<description>
The QueryAlias property is only populated when a query object ( SQL::Query, SQL::Statement, etc.) is validated. After calling SQL::Query::Validate, the query object has a SQL::ResultSet object (no data, just definitions). The TableInfo property of the SQL::ResultSet is an array of SQL::TableInfo objects that describe the tables in the FROM clause (this is used by the query genie to map select list columns to the source table definition to get more information about the actual column.</description>
<example><![CDATA[
dim q as sql::query
dim c as sql::connection
?c.open("{a5api=access,filename=c:\northwind.mdb,user=admin}")
= .T.
?q.parse("select * from customers cust")
= .T.
?q.validate(c)
= .T.
?q.resultset.tableinfo1.queryalias
= "cust"
]]></example>

</section></sections>
   
<sections>
<section>
<title>TableTypeName Property</title>
<description>This is the displayable name of the enumeration value in TypeName.</description>
<example><![CDATA[
? tt.TableType
= -1
? tt.TableTypeName
= "Invalid"
tt.tabletype = View
? tt.TableType
= 1
? tt.TableTypeName
= "View"
]]></example>

</section></sections>





	<see>
		<ref href="/Api/Namespace/SQL/index.xml">SQL</ref>
	</see>
<terms>sql,array,column,database,defaults,enumeration,field,genie,index,list,map,number,object,primary key,query,text,time,users,xml</terms>
	
</page>