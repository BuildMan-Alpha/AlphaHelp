<page api="xb">
    <shortlink>api sql namespace result set object to xml function</shortlink>
    <topic>SQL::ResultSet::ToXML Method</topic>
    <description>Convert ResultSet an XML formatted string.</description>
    <prototype>XML_String as C = ToXML([ RowsToCopy = -1 as N [, StartRow = -1 as N [, DocumentName as C [, RowName as C [, Header as C [, ReferenceColumns as SQL::TableInfo [, UserContext as P]]]]]]])</prototype>
    <arguments>
        <argument optional="true">
            <name>RowsToCopy</name>
            <type>N</type>
            <description>Default = -1. The number of rows to copy.</description>
        </argument>
        <argument optional="true">
            <name>StartRow</name>
            <type>N</type>
            <description>Default = 1. The first row to copy.</description>
        </argument>
        <argument optional="true">
            <name>DocumentName</name>
            <type>N</type>
            <description>The tag for the document element. See example.</description>
        </argument>
        <argument optional="true">
            <name>RowName</name>
            <type>N</type>
            <description>The tag for the row element. See example.</description>
        </argument>
        <argument optional="true">
            <name>Header</name>
            <type>N</type>
            <description>The tag for the header element. See example.</description>
        </argument>
        <argument optional="true">
            <name>ReferenceColumns</name>
            <type>SQL::TableInfo</type>
            <description>When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.</description>
        </argument>
        <argument optional="true">
            <name>UserContext</name>
            <type>P</type>
            <description>The user context is passed into the evaluation of the expression when data is formatted.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>XML_String</name>
            <type>C</type>
            <description>Returns the XML formatted data returned by the query.</description>
        </return>
    </returns>
    <discussion>The ToXML() method converts a SQL::ResultSet object to a XML formatted string.</discussion>
    <example code="xb"><![CDATA[dim sql as C
sql = "select * from customers where country = :country"

dim args as SQL::Arguments
args.set("country","Poland")

dim conn as SQL::Connection
if .not. conn.open("::Name::AADemo-Northwind")
    ui_msg_box("Error", conn.CallResult.text)
    end
end if

if .not. conn.execute(sql, args)
    ui_msg_box("Error", conn.CallResult.text)
    conn.close()
    end
end if

dim ti as SQL::TableInfo
ti = conn.ResultSet.ToTableInfo()

dim xml as c
xml = conn.ResultSet.toxml(-1, -1, "DocName", "RowName", "HeaderName")
conn.close()

ui_msg_box("XML Data", xml)]]></example>
    <sections>
        <section>
            <description>The XML data looks like this:</description>
            <example><![CDATA[HeaderName
<DocName>
<RowName>
<CustomerID>WOLZA</CustomerID>
<CompanyName>Wolski  Zajazd</CompanyName>
<ContactName>Zbyszek Piestrzeniewicz</ContactName>
<ContactTitle>Owner</ContactTitle>
<Address>ul. Filtrowa 68</Address>
<City>Warszawa</City>
<Region></Region>
<PostalCode>01-012</PostalCode>
<Country>Poland</Country>
<Phone>(26) 642-7012</Phone>
<Fax>(26) 642-7012</Fax>
<Image></Image>
<ImageThumbnail></ImageThumbnail>
</RowName>
</DocName>]]></example>
        </section>
    </sections>
    <see>
        <ref link="SQL::ResultSet Object">SQL::ResultSet Object</ref>

    </see>
    <terms>sql,column,defaults,expressions,function,header,number,object,users,xml</terms>
</page>