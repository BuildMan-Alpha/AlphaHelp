<page api="xb">
    <shortlink>api sql namespace result set object fetch page function</shortlink>
    <topic parent="SQL::ResultSet" parentType="class" elementName="FetchPage Method">SQL::ResultSet FetchPage Method</topic>
    <description>Fetch a block of one or more rows into a local cache table. Note: This function is an advanced user feature and requires some understanding of caching for SQL.</description>
    <prototype>Result_Flag as L = FetchPage(Table as P, StartRow as N [, Rows as N [, RemapOffset as N [, NotificationInterval as N [, EventScript as C]]]])</prototype>
    <arguments>
        <argument>
            <name>Table</name>
            <description>A pointer to an open table.
            </description>
        </argument>
        <argument>
            <name> StartRow</name>
            <description>The first row to return.
            </description>
        </argument>
        <argument>
            <name> Rows</name>
            <description>Optional. Default = -1 (all). The number of rows to return.
            </description>
        </argument>
        <argument>
            <name> RemapOffset</name>
            <description>Optional.
Numeric</description>
        </argument>
        <argument>
            <name> NotificationInterval</name>
            <description>Numeric</description>
        </argument>
        <argument>
            <name> EventScript</name>
            <description>Character</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result_Flag</name>
            <type>L</type>
            <description>Returns true (.T.) if the operation was successful; otherwise false (.F.).</description>
        </return>
    </returns>
    <discussion>The FetchPage() method returns a block of one or more rows in a SQL::ResultSet into a local cache table. This function is an advanced user feature and requires some understanding of caching for SQL.</discussion>
    <example code="xb"><![CDATA[
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim cr as SQL::Row
dim dti as SQL::DataTypeInfo
dim connString as C
dim select_exp as C
dim tbl as P
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select Lastname from customer where bill_state_region = 'ma'"
tbl = table.open("customer")
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.execute(select_exp)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
rs = conn.ResultSet
if .not. rs.fetchPage(tbl,1) then
    ui_msg_box("Error", rs.callResult.text)
    end
end if
conn.close()
tbl.close()]]></example>
    <terms>sql,defaults,function,number,object,operation,pointer,users</terms>
</page>