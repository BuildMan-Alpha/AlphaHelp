<page>
   <topic>SQL::ResultSet::ToXML Function</topic>
     <description>Convert ResultSet an XML formatted string.</description>
   <syntax>XML_String as C = ToXML([ RowsToCopy = -1 as N [, StartRow = -1 as N [, Documentname as C [, RowName as C [, Header as C [, ReferenceColumns as SQL::TableInfo [, UserContext as P]]]]]]])</syntax>
   <arguments>
    <argument>
         <name>XML_String
</name>
         <description>
 
The XML formatted data returned by the query.
 </description>
     </argument>
      <argument>
         <name>SQL::ResultSet</name>
         <description>

 
A SQL::ResultSet object created with a DIM statement.
 </description>
     </argument>
     
     
     
     <argument>
         <name> RowsToCopy</name>
         <description>Optional. Default = -1. The number of rows to copy.
</description>
     </argument>
     <argument>
         <name> StartRow</name>
         <description>Optional. Default = 1. The first row to copy.
</description>
     </argument>
     <argument>
         <name> Documentname</name>
         <description>
 
Optional. The tag for the document element. See example.
 </description>
     </argument>
     <argument>
         <name> RowName</name>
         <description>Optional. The tag for the row element. See example.
</description>
     </argument>
     <argument>
         <name> Header</name>
         <description>Optional. The tag for the header element. See example.
</description>
     </argument>
     <argument>
         <name> ReferenceColumns</name>
         <description>Optional. A SQL::TableInfo object. When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.
</description>
     </argument>
     <argument>
         <name> UserContext</name>
         <description>Optional. The user context is passed into the evaluation of the expression when data is formatted.
</description>
     </argument>
   </arguments>
 
   <discussion>
The ToXML() method converts a SQL::ResultSet object to a XML formatted string.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim connString as C
dim select_exp as C
dim ti as SQL::TableInfo
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select * from customer where bill_state_region = 'ny'"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.execute(select_exp)
    ui_msg_box("Error", conn.CallResult.text)
    conn.close()
    end
end if
rs = conn.ResultSet
ti = rs.ToTableInfo()
ui_msg_box("XML Data", rs.toxml(-1, -1, "DocName", "RowName", "HeaderName"))
conn.close()
]]></example>
   <sections>
       <section>
            <description>The XML data looks like this:</description>
            <example><![CDATA[
HeaderName
        Michael
        Graham
        
        Sally
        Peabody
    
...
]]></example>
       </section>
   </sections>
   <see>
      <ref href="/documentation/index?search=SQL::ResultSet Object">SQL::ResultSet Object</ref>
     
   </see>
  <terms>sql,column,defaults,expressions,function,header,number,object,users,xml</terms>
</page>