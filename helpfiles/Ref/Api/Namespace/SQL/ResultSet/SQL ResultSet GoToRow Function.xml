<page>
   <topic>SQL::ResultSet::GoToRow Function</topic>
  <description>Position to the row requested (Note:  Backward movement is not supported by all databases).</description>
    
   
   <syntax>Result_Flag as L = GoToRow(RowIndex as N)</syntax>
   <arguments>
    <argument>
         <name>Result_Flag</name>
         <description>
 
TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
 </description>
     </argument>
      <argument>
         <name>SQL::ResultSet</name>
         <description>A SQL::ResultSet object created with a DIM statement.
</description>
     </argument>
     
     
     <argument>
         <name>RowIndex</name>
         <description>Numeric</description>
     </argument>
   </arguments>
   <discussion>
The GoToRow() method positions to the row in a SQL::ResultSet.
Note : Some databases do not support backward positioning.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim rs as SQL::ResultSet
dim connString as C
dim select_exp as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select Lastname from customer where bill_state_region = 'ma'"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.execute(select_exp)
    ui_msg_box("Error", conn.CallResult.text)
    conn.close()
    end
end if
rs = conn.ResultSet
if .not. rs.GoToRow(2) then
    ui_msg_box("Error", rs.callresult.text)
end if
conn.close()
]]></example>
   
   <see>
      <ref link="SQL::ResultSet Object">SQL::ResultSet Object</ref>
      
   </see>
  <terms>sql,database,function,object,operation</terms>
</page>