<page api="xb">
    <shortlink>api sql namespace result set object to json function</shortlink>
    <topic>SQL::ResultSet::ToJSON Method</topic>
    <description>Convert a ResultSet to a JSON formatted string.</description>
    <prototype>JSON as C = toJSON([RowsToCopy = -1 as N [, StartRow = -1 as N [, UpperCaseNames = .f. as L [, ConvertToText = .t. as L [, DateTimeFormat =  as C [, DateFormat =  as C [, ReferenceColumns as SQL::TableInfo [, UserContext as P]]]]]]]])</prototype>
    <arguments>
        <argument optional="true">
            <type>N</type>
            <name> RowsToCopy</name>
            <description>number of rows to use</description>
        </argument>
        <argument optional="true">
            <type>N</type>
            <name> StartRow</name>
            <description>first row to use</description>
        </argument>
        <argument optional="true">
            <type>L</type>
            <name> UpperCaseNames</name>
            <description>Uppercase names if .T.</description>
        </argument>
        <argument optional="true">
            <type>L</type>
            <name> ConvertToText</name>
            <description>If .T. (default) single-quote numeric and logical values</description>
        </argument>
        <argument optional="true">
            <type>C</type>
            <name> DateTimeFormat</name>
            <description>Format string for dateTime values, as used by the time Function, e.g. "yyyy-MM-dd"</description>
        </argument>
        <argument optional="true">
            <type>C</type>
            <name>DateFormat</name>
            <description>Format string for date values, as used by the time Function</description>
        </argument>
        <argument optional="true">
            <type>SQL::TableInfo</type>
            <name>ReferenceColumns</name>
            <description>When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.</description>
        </argument>
        <argument optional="true">
            <type>P</type>
            <name>UserContext</name>
            <description>The user context is passed into the evaluation of the expression when data is formatted.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>JSON</name>
            <types>
                <type>C</type>
            </types>
            <description>Returns the SQL::ResultSet in a JSON format.</description>
        </return>
    </returns>
    <discussion>
        <p>The .toJSON() method creates a parsable JSON array of objects.</p>
        <p>Contrast the AlphaDAO SQL::ResultSet.toJSON() with the AlphaDAO SQL::ResultSet.toJSONObjectSyntax() method. The later generates a CR-LF delimited string of JSON objects. To turn the output from this method into a parsable string, it is necessary to add the opening and closing square brackets and to terminate each line, except the last, with a comma.</p>
    </discussion>
    <sections>
        <section>
            <description>Examples:</description>
            <example>
                <![CDATA[dim cn as sql::Connection
cn.Open("::Name::northwind")
cn.Execute("select customerid, contactname, city, country from customers where country = 'canada'")
rs = cn.ResultSet
dim json as c = rs.tojson()
? convert_utf8_to_acp(json)
= [
{"customerid" : "BOTTM", "contactname" : "Elizabeth Lincoln", "city" : "Tsawassen", "country" : "Canada"},
{"customerid" : "LAUGB", "contactname" : "Yoshi Tannamuri", "city" : "Vancouver", "country" : "Canada"},
{"customerid" : "MEREP", "contactname" : "Jean Fresnière", "city" : "Montréal", "country" : "Canada"}
]


cn.Execute("select customerid, contactname, city, country from customers where country = 'canada'")
rs = cn.ResultSet

' Note that toJSONObjectSyntax does not include commas or brackets:
json = rs.ToJSONObjectSyntax() 
? convert_utf8_to_acp(json)
= {"customerid" : "BOTTM", "contactname" : "Elizabeth Lincoln", "city" : "Tsawassen", "country" : "Canada"}
{"customerid" : "LAUGB", "contactname" : "Yoshi Tannamuri", "city" : "Vancouver", "country" : "Canada"}
{"customerid" : "MEREP", "contactname" : "Jean Fresnière", "city" : "Montréal", "country" : "Canada"}]]>
            </example>
        </section>
        <section>
            <title>Behavior Prior to Alpha 4.3.2</title>
            <description>
                <p>In Alpha Anywhere 4.3.1 and older, the .toJSON() method was used for an internal function and it generated a special format that was of no general use.</p>
            </description>
        </section>
    </sections>
    <see>
        <ref link="SQL::ResultSet Object">SQL::ResultSet Object</ref>
        <ref>SQL ResultSet::ToJSONObjectSyntax Function</ref>
        <ref link="api json functions">JSON Functions</ref>
        <ref link="json data">Working with JSON Data</ref>
    </see>
    <terms>sql,ajax,arguments,column,control,data formatting,defaults,expressions,file,formatting,function,javascript,map,number,object,operation,query,users</terms>
</page>