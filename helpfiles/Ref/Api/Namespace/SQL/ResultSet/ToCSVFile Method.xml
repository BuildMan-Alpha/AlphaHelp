<page api="xb">
    <shortlink>api sql namespace resultset tocsvfile function</shortlink>
    <topic parent="SQL::ResultSet" parentType="class" elementName="ToCSVFile Method">SQL::ResultSet ToCSVFile Method</topic>
    <description>Write a ResultSet to a file in Comma Separated Variable (CSV) format.</description>
    <prototypes>
        <prototype>dim result as C = ToCSVFile(TargetFile as C [ IncludeHeaderRow = .f. [, RowsToCopy = -1 as N [, StartRow = -1 as N [, UpperCaseNames = .f. as L [, DateTimeFormat =  as C [, DateFormat =  as C[, TextToSubstituteForBinary as B]]]]]]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>TargetFile</name>
            <types>
                <type>C</type>
            </types>
            <description></description>
        </argument>
        <argument optional="true">
            <name>IncludeHeaderRow</name>
            <types>
                <type>L</type>
            </types>
            <description>Default = .f..</description>
        </argument>
        <argument optional="true">
            <name>RowsToCopy</name>
            <types>
                <type>N</type>
            </types>
            <description>Default = -1.</description>
        </argument>
        <argument optional="true">
            <name>StartRow</name>
            <types>
                <type>N</type>
            </types>
            <description>Default = -1.</description>
        </argument>
        <argument optional="true">
            <name>UpperCaseNames</name>
            <types>
                <type>l</type>
            </types>
            <description>Default = .f.. </description>
        </argument>
        <argument optional="true">
            <name>DateTimeFormat</name>
            <types>
                <type>C</type>
            </types>
            <description>Default = ""</description>
        </argument>
        <argument optional="true">
            <name>DateFormat</name>
            <types>
                <type>C</type>
            </types>
            <description>Default = ""</description>
        </argument>
        <argument optional="true">
            <name>TextToSubstituteForBinary</name>
            <types>
                <type>C</type>
            </types>
            <description>Default = "&lt;Binary Data&gt;".</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>L</type>
            </types>
            <description>Returns *[xb:.T.]* if the data was successfully saved to a CSV file. If result is *[xb:.F.]*, the file was not created. Check the result of SQL::ResultSet's callResult object for more info about the error.</description>
        </return>
    </returns>
    <sections>
        <section>
            <example>
                <![CDATA[dim cn as SQL::Connection

' open the connection
if (cn.open("::Name::conn")) then

    ' Query the database
    if (cn.execute("SELECT * FROM Customers") then

        ' Save the query to a CSV file:
        dim filename as c = "C:/customers.txt"
        if (cn.resultSet.toCSVFile(filename)) then
            ui_msg_box("Success!","Customer query written to " + filename)
        else
            ' CSV File creation failed. Check the callResult for more info.
            showvar(cn.resultSet.callResult)
        end if
    else
        ' SELECT failed. Check callResult for more info.
        showvar(cn.callResult)
    end if
    cn.close()
else
    ' Unable to establish connection. Check callResult for more info.
    showvar(cn.callResult)
end if]]>
            </example>
        </section>
    </sections>
</page>