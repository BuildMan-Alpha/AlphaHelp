<page api="xb">
    <shortlink>api sql namespace result set object format data function</shortlink>
    <topic parent="SQL::ResultSet" parentType="class" elementName="FormatData Method">SQL::ResultSet FormatData Method</topic>
    <deprecated>This function is deprecated and may be removed in the future. Use [a5_mergeDataIntoTemplate()] instead.</deprecated>
    <description>Format the data for the column name, index or definition specified.</description>
    <prototypes>
        <prototype>Formatted_Data as C = FormatData(DataToFormat as N [, Format as C [, UserContext as P [,FirstRowOnPage as N]]])</prototype>
        <prototype>Formatted_Data as C = FormatData(DataToFormat as C [, Format as C [, UserContext as P [,FirstRowOnPage as N]]])</prototype>
        <prototype>Formatted_Data as C = FormatData(DataToFormat as SQL::DataTypeInfo [, Format as C [, UserContext as P [,FirstRowOnPage as N]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>DataToFormat</name>
            <types>
                <type>N</type>
                <type>C</type>
                <type>SQL::DataTypeInfo</type>
            </types>
            <description>The number of the column in the selected table, the name of the field in the selected table, or a SQL::DataTypeInfo object created with a DIM statement.</description>
        </argument>
        <argument optional="true">
            <name>Format</name>
            <type>C</type>
            <description></description>
        </argument>
        <argument optional="true">
            <name>UserContext</name>
            <type>P</type>
            <description>The user context is passed into the evaluation of the expression when data is formatted.</description>
        </argument>
        <argument optional="true">
            <name>FirstRowOnPage</name>
            <type>N</type>
            <description>The first row of data to include.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Formatted_Data</name>
            <description>A string representation of a data value in a result set row.</description>
        </return>
    </returns>
    <discussion>The SQL::ResultSet FormatData() method returns a string representation of a data value in a result set row depending on the contents of the two properties (see below). The FormatData() method works as follows:</discussion>
    <sections>
        <section>
            <steps>
                <step>
                    <description>If the caller requests a format, FormatData() looks to see if the format is defined. If so, it evaluates the right-hand-side expression and returns the result.</description>
                </step>
                <step>
                    <description>If the caller does not request a format, and a default (unnamed format) exists, FormatData() evaluates the default expression and returns the result.</description>
                </step>
                <step>
                    <description>If the type of the data is numeric and a DisplayFormat is defined, FormatData() uses that format when calling the str() function.</description>
                </step>
                <step>
                    <description>If no condition above is satisfied, FormatData() converts the value to the default string format and returns the result.</description>
                </step>
            </steps>
        </section>
    </sections>
    <sections>
        <section>
            <list>
                <item>
                    <name-title>Property</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>.NamedFormatExpressions</name>
                    <description>This property is a CR-LF delimited list of Xbasic expressions. One of those expressions can be unnamed, subsequent expressions should be prefixed with *[xb:name=]* where "name" is a unique name for the expression. The Xbasic expression part of each line is executed in the context of a generated function that has three arguments:</description>
                    <list>
                        <item>
                            <name-title>Argument</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>.CurrentRow</name>
                            <description>A SQL::Row object</description>
                        </item>
                        <item>
                            <name>.ColumnDefinition</name>
                            <description>A SQL::DataTypeInfo object.</description>
                        </item>
                        <item>
                            <name>.Context</name>
                            <description>This value is provided by the caller and typically will be a dot variable with additional contextual information required by the expression.</description>
                        </item>
                    </list>
                </item>
                <item>
                    <name>.DisplayFormat</name>
                    <description>Used to specify a numeric format (where appropriate) using the values you would pass to the Xbasic str() function.</description>
                </item>
                <item>
                    <name>.ExternalFileNameExpression</name>
                    <description>
                        <p>If this string is defined when FormatData()is called:</p>
                        <p>1. FormatData() evaluates this expression to get the name of the file to create.</p>
                        <p>2. FormatData() stores the data in the file named by the expression. If the data is binary, the function stores it in binary form. The function stores all other values in string form.</p>
                    </description>
                </item>
            </list>
        </section>
    </sections>
    <links>
        <link link="api%20a5%20merge%20data%20into%20template%20function">a5_mergeDataIntoTemplate()</link>
    </links>
    <see>
        <ref link="api%20a5%20merge%20data%20into%20template%20function">a5_mergeDataIntoTemplate()</ref>
    </see>
    <terms>sql,column,defaults,expressions,field,file,function,index,number,object,string,users,variable,Xbasic</terms>
</page>