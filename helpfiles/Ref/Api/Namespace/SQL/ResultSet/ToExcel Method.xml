<page api="xb">
    <shortlink>api sql namespace result set object to excel function</shortlink>
    <topic>SQL::ResultSet::toExcel Method</topic>
    <description>Convert ResultSet to an Excel 2003 format (.xls) or 2007 format (.xlsx) file.</description>
    <prototype>L toExcel(DestinationFile as C [, SheetName as C [, IncludeHeadings as L [, RowsToCopy as N [, StartRow as N [, ReferenceColumns as SQL::TableInfo [, UserContext as P]]]]]])</prototype>
    <arguments>
        <argument>
            <name>DestinationFile</name>
            <type>C</type>
            <description>The name of the Excel file.</description>
        </argument>
        <argument>
            <name>SheetName</name>
            <type>C</type>
            <description>Optional. The name of the sheet that contains the data in the Excel file.</description>
        </argument>
        <argument>
            <name>IncludeHeadings</name>
            <type>L</type>
            <description>Optional. Default value is *[xb:.t.]*. Defines whether or not headings should be included in the Excel file. If *[xb:.f.]*, headings will not be included.</description>
        </argument>
        <argument>
            <name>RowsToCopy</name>
            <type>N</type>
            <description>Optional. Default value is -1. The number of rows to copy to the Excel file.</description>
        </argument>
        <argument>
            <name>StartRow</name>
            <type>N</type>
            <description>Optional. Default value is -1. Defines the first row of data to copy from the ResultSet.</description>
        </argument>
        <argument>
            <name>ReferenceColumns</name>
            <type>SQL::TableInfo</type>
            <description>Optional. A SQL::TableInfo object that can be used to transform the data in the result set.</description>
        </argument>
        <argument>
            <name>UserContext</name>
            <type>P</type>
            <description>Optional. Used to resolve any data transformations.</description>
        </argument>
    </arguments>
    <discussion></discussion>
    <sections>
        <section>
            <example><![CDATA[dim cn as SQL::Connection
dim rs as SQL::ResultSet
dim sql as C = "SELECT * FROM Customers"
dim filename as c = "C:\path\to\Northwind_Customers.xls"

' Open connection to Northwind Access database
cn.open("::Name::Northwind")
cn.execute(sql)

if (cn.ResultSet.toExcel(filename) = .f.) then
    ui_msg_box("An error occured: " + cn.ResultSet.CallResult)
end if

cn.close()]]></example>
        </section>
    </sections>

</page>