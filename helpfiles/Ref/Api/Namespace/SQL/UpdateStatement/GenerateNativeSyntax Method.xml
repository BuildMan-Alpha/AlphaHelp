<page api="xb">
  <shortlink>api sql namespace update statement object generate native syntax function</shortlink>
   <topic parent="SQL::UpdateStatement" parentType="class" elementName="GenerateNativeSyntax Method">SQL::UpdateStatement::GenerateNativeSyntax Method</topic>
     <description>Generate a native SQL statement using the selected syntax associated with the current or passed connection.</description>
 
   <prototype>SQL_Statement as C = GenerateNativeSyntax([SQLConnection as SQL::Connection | SQLConnectionString as C])</prototype>
   <arguments>
   <argument>
         <name>SQL_Statement</name>
         <description>The native SQL equivalent of a Portable SQL expression.
</description>
     </argument>
     <argument>
         <name>SQL::UpdateStatement</name>
         <description>A SQL::UpdateStatement object.
</description>
     </argument>
   
   
   
     <argument>
         <name>SQLConnection</name>
         <description>Optional. A SQL::Connection object created with a DIM statement and with a defined .ConnectionString property.
</description>
     </argument>
     
     
     <argument>
         <name>SQLConnectionString</name>
         <description>Optional. A connection string.
</description>
     </argument>
   </arguments>
   <discussion>
The .GenerateNativeSyntax() method returns the native SQL version of the Portable SQL stored in the SQL::UpdateStatement.SQLStatement property.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim upd as SQL::UpdateStatement
dim sql_update as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
sql_update = "update customer set bill_city = 'Phoenix' where substring(bill_state,1,2) = 'AZ'"
? conn.open(connString)
= .T.
? upd.parse(sql_update)
= .T.
? upd.GenerateNativeSyntax(conn)
= "UPDATE customer SET bill_city = 'Phoenix'WHERE (Mid(bill_state, 1, 2) = 'AZ')"
]]></example>
   
   <see>
      <ref link="SQL::UpdateStatement Object">SQL::UpdateStatement Object</ref>
      
   </see>
  <terms>sql,function,native sql,object</terms>
</page>