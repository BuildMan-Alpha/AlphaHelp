<page>
   <topic>SQL::Connection::GenerateSelectStatement Function</topic>
   
      <description>Generate a SQL Select statement for the table passed in.</description>
 
   <syntax>Statement as C = GenerateSelectStatement as C (TableInfo as SQL::TableInfo)</syntax>
   <arguments>
   <argument>
         <name>Statement</name>
         <description>A SQL SELECT statement.
</description>
     </argument>
     <argument>
         <name>SQL::Connection</name>
         <description>A SQL::Connection object.
</description>
     </argument>
     
     
     <argument>
         <name>TableInfo</name>
         <description>A SQL::TableInfo object for the table created with the DIM statement.
</description>
     </argument>
   </arguments>
  <discussion>
The GenerateSelectStatement() method generates a SQL Select statement for the table defined in .
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim ti as SQL::TableInfo
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. conn.GetTableInfo(ti, "customer")
    ui_msg_box("Error", conn.CallResult.text)
end if
ui_msg_box("Select Statement Format", conn.GenerateSelectStatement(ti))
conn.close()
]]></example>
   
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
  <terms>sql,connection,function,object</terms>
</page>