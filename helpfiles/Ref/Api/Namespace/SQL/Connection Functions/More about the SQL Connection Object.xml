<page>
	<topic>More about the SQL::Connection Object</topic>
	<description>While working in the Interactive window, after creating the conn SQL::Connection object, you could type.</description>
			
	<sections>
		<section>
			<example><![CDATA[? conn
]]></example>
		</section>
		<section>
			<description>The result would be a long list of methods and properties available to SQL::Connection objects. Here are a few methods and properties that might be of immediate value. For a full description, see SQL::Connection Object.
To get a list of tables in the alphasports.mdb database, you would use the SQL::Connection::ListTables() method.
</description>
			<example><![CDATA[? conn.ListTables()
= Customer
Invoice_Header
Invoice_Items
Product
Salesperson
Vendor ]]></example>
		</section>
		<section>
			<description>To find out whether the connection was open, you would read the .IsOpen property.</description>
			<example><![CDATA[? conn.IsOpen
= .T. ]]></example>
		</section>
		<section>
			<description>To get the primary key expression for a table, you would use the SQL::Connection::PrimaryKeyExpression() method.</description>
			<example><![CDATA[? conn.PrimaryKeyExpression("Customer")
= "CUSTOMER_ID" ]]></example>
		</section>
		<section>
			<description>To validate the syntax of SELECT statement before sending it to the back-end database, you would use the SQL::Connection::ValidateQuery() method. Note that this method does not find field or table name errors.</description>
			<example><![CDATA[dim select_exp as C
select_exp = "select * from customer"
? conn.ValidateQuery(select_exp)
= .T. ]]></example>
		</section>
		<section>
			<description>Close the connection when you are finished.</description>
			<example><![CDATA[conn.close() ]]></example>
		</section>
		
	</sections>
	<limitations>Desktop applications only.</limitations>
	<see>
		<ref>Working with SQL Databases</ref>
		<ref>SQL::Connection Object</ref>
	</see>
	
</page>