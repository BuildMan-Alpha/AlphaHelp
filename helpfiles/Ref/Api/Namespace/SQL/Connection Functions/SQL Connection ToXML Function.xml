<page>
   <topic>SQL::Connection::ToXML Function</topic>
    <description>Fetch data to an XML formatted string using a SQL query.
</description>
   <syntax>XML_String as C = ToXML(SQLStatement as C  [, Arguments as SQL::Arguments] [, RowsToCopy = -1 as N [, StartRow = 1 as N [, C documentname [, C rowname [,C header[, ColumnReferences as SQL::TableInfo [, UserContext as P]]]]]]])</syntax>
   <arguments>
   <argument>
         <name>XML_String</name>
         <description>
 
An XML version of the retrieved data.
 </description>
     </argument>
     <argument>
         <name>SQL::Connection</name>
         <description>A SQL::Connection object.
</description>
     </argument>
     
     
     
     
     <argument>
         <name>SQLStatement</name>
         <description>SQL SELECT statement.
</description>
     </argument>
     <argument>
         <name> Arguments</name>
         <description>Optional. A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.
</description>
     </argument>
     <argument>
         <name> RowsToCopy = -1</name>
         <description>Optional. Default = -1 (all). The number of rows to copy.
</description>
     </argument>
     <argument>
         <name> StartRow = 1</name>
         <description>Optional. Default = -1 (first). The first row to copy.
 </description>
     </argument>
     <argument>
         <name>documentname</name>
         <description>Optional. The tag for the document element. See example.
</description>
     </argument>
     <argument>
         <name>rowname</name>
         <description>Optional. The tag for the row element. See example.
</description>
     </argument>
     <argument>
         <name>header</name>
         <description>Optional. The tag for the header element. See example.
</description>
     </argument>
     <argument>
         <name> ColumnReferences</name>
         <description>Optional. A SQL::TableInfo object. When data is formatted for a column in the result set: (1) if ReferenceColumns has a column with a matching name, that object will be used to format the data; (2) otherwise the ColumnInfo property of the result set is used to format the data.
</description>
     </argument>
     <argument>
         <name> UserContext</name>
         <description>Optional. The user context is passed into the evaluation of the expression when data is formatted.
</description>
     </argument>
   </arguments>
  
   <discussion>
The ToXML() method fetches data to an XML formatted string using a SQL query.
   </discussion>
   <example><![CDATA[
dim connString as C
dim rs as SQL::ResultSet
dim ti as SQL::TableInfo
dim args as SQL::Arguments
dim select_exp as C
dim data as C
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
select_exp = "select Firstname,Lastname from customer where bill_state_region = 'ma'"
if .not. conn.open(connString) then
    end
end if
if .not. conn.execute(conn) then
    end
end if
data = conn.toxml(select_exp, args, -1, -1, "DocName", "RowName", "HeaderName")
conn.close()
]]></example>
   <sections>
       <section>
            <description>The XML data looks like this:</description>
            <example><![CDATA[
HeaderName
        Michael
        Graham
    
        Sally
        Peabody
    
...
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
  <terms>sql,connection,arguments,column,defaults,expressions,function,header,number,object,string,users,xml</terms>
</page>