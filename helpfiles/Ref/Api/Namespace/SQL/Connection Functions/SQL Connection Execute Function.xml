<page>
   <topic>SQL::Connection::Execute Function</topic>
   <description>Execute a SQL statement on the connection.</description>
   <syntax>Result_Flag as L = Execute(SQLStatement as C [Arguments as SQL::Arguments] [, EventScript as C ] [, ReferenceTableInfo as SQL::TableInfo] [, GetRowCount as L)</syntax>
   <arguments>
     <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     <argument>
         <name>SQL::Connection</name>
         <description>A SQL::Connection object.
</description>
     </argument>
     
      <argument>
         <name>SQLStatement</name>
         <description>A SQL SELECT statement.</description>
     </argument>
     <argument>
         <name>Arguments</name>
         <description>Optional. A SQL::Arguments object. One or more arguments to be resolved when the SELECT statement is executed.
</description>
     </argument>
     
     <argument>
         <name> EventScript</name>
         <description>Character</description>
     </argument>
     <argument>
         <name> ReferenceTableInfo</name>
         <description>SQL::TableInfo</description>
     </argument>
     <argument>
         <name> GetRowCount</name>
         <description>Logical</description>
     </argument>
   </arguments>

  
   <sections>
       <section>
           <note>To execute more than one command in a single call, separate each query with a single line containing only '\' at the beginning.</note>
       </section>
       <section>
           <description>The Execute() method executes a query on the connection using SQL. This query can be any valid syntax accepted by the database to which you are connected.
</description>
       </section>
       
       <section><title>Example</title>
            <description>This script prompts for a value, then returns a filtered list of records.</description>
            <example><![CDATA[
dim conn as SQL::Connection
dim sql as C
dim vCity as C
dim args as SQL::Arguments
vCity = ui_get_text("City", "Show Companies in what city?")
sql = "select lastname, firstname from customer where bill_city = :city Order By Company"
if .not. conn.open("{A5API=Access, FileName='C:\Program Files\a5v8\MDBFiles\Alphasports.mdb', UserName='Admin'}")
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. args.Add("city", vCity)
    end
end if
if .not. conn.execute(sql, args)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
sql_resultset_preview(conn.resultset)
conn.close()
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
  <terms>sql,connection,arguments,database,function,list,logical,object,operation,query,script</terms>
</page>