<page>
	<topic>SQL::ResultSet Object</topic>
	<description>SQL::ResultSet Object properties and methods.</description>
	<properties>
		<property generated="true">
			<name>RowCount</name>
			<type>N</type>
			<description>
Type: "N", 
 
Mode: "R", 
 
Default = 0. The number of rows in the result set. -1 If not known. Do not rely on this value, as not all drivers support it. Walk the ResultSet with ::NextRow() instead.
 </description>
		</property>
		<property generated="true">
			<name>CurrentRowIndex</name>
			<type>N</type>
			<description>
Type: "N", 
 
Mode: "R", 
 
Default = 0. The number of the current row.
 </description>
		</property>
		<property generated="true">
			<name>CurrentRow</name>
			<type>P</type>
			<description>
Type: "SQL::Row",
 
Mode: "R", 
 
Returns the current row as an object.
 </description>
		</property>
		<property generated="true">
			<name>ColumnInfo</name>
			<type></type>
			<description>
Type: "P", 
 
Mode: "R", 
 
An array of SQL::DataTypeInfo column descriptions.
 </description>
		</property>
		<property generated="true">
			<name>ColumnCount</name>
			<type>N</type>
			<description>
Type: "N", 
 
Mode: "R", 
 
Default = 0. The number of columns in the result set.
 </description>
		</property>
		<property generated="true">
			<name>CallResult</name>
			<type></type>
			<description>
Type: "SQL::CallResult", 
 
Mode: "R", 
 
Detailed status of the result of the call.
 </description>
		</property>
		<property generated="true">
			<name>TableInfo</name>
			<type></type>
			<description>
Type: "P", 
 
Mode: "R", 
 
Not always available. An array of SQL::TableInfo table descriptions returned by the query.
 </description>
		</property>
		<property generated="true">
			<name>TableInfoCount</name>
			<type>N</type>
			<description>
Type: "N", 
 
Mode: "R", 
 
Default = 0. The number of elements in .TableInfo.
 </description>
		</property>
		<property generated="true">
			<name>DBFRowSyntax</name>
			<type>C</type>
			<description>
Type: "C", 
 
Mode: "R",
 
Default = "". The syntax required to create an Alpha Anywhere .DBF table with the same columns.
 </description>
		</property>
		<property generated="true">
			<name>SizeToFit</name>
			<type>L</type>
			<description>Logical SizeToFit property</description>
		</property>
		<property generated="true">
			<name>ActiveLinkDBFRowSyntax</name>
			<type>C</type>
			<description>String ActiveLinkDBFRowSyntax property</description>
		</property>
		<property generated="true">
			<name>QuerySource</name>
			<type>C</type>
			<description>String QuerySource property</description>
		</property>
		<property generated="true">
			<name>QueryArguments</name>
			<type>C</type>
			<description>String QueryArguments property</description>
		</property>
		<property generated="true">
			<name>StreamingMode</name>
			<type>L</type>
			<description>Logical StreamingMode property</description>
		</property>
	</properties>
	<methods>
		<methodref generated="true">
			<name>NextRow</name>
			<ref href="/Api/Namespace/SQL/ResultSet Functions/SQL ResultSet NextRow Function.xml">NextRow</ref>
			<description>Position to the next row in the ResultSet.</description>
		</methodref>
		<methodref generated="true">
			<name>ColumnNumber</name>
			<ref>ColumnNumber</ref>
			<description>Get the number of the column named.</description>
		</methodref>
		<methodref generated="true">
			<name>Data</name>
			<ref>Data</ref>
			<description>Get the data for the column name or index specified.</description>
		</methodref>
		<methodref generated="true">
			<name>DataAsGeography</name>
			<ref>DataAsGeography</ref>
			<description>Get the data for the column name or index specified as a Geography object.</description>
		</methodref>
		<methodref generated="true">
			<name>DataIsNull</name>
			<ref>DataIsNull</ref>
			<description>Determine whether a given element is Null.</description>
		</methodref>
		<methodref generated="true">
			<name>FetchPage</name>
			<ref>FetchPage</ref>
			<description>Fetch a block of one or more rows into a local cache table.

Note: This function is an advanced user feature and requires some understanding of cacheing for SQL.</description>
		</methodref>
		<methodref generated="true">
			<name>ToString</name>
			<ref>ToString</ref>
			<description>Copy the ResultSet to a string.</description>
		</methodref>
		<methodref generated="true">
			<name>ToXML</name>
			<ref>ToXML</ref>
			<description>Convert ResultSet an XML formatted string.
</description>
		</methodref>
		<methodref generated="true">
			<name>ToExcel</name>
			<ref>ToExcel</ref>
			<description>Convert ResultSet to an Excel 2003 format (.xls) or 2007 format (.xlsx) file.
</description>
		</methodref>
		<methodref generated="true">
			<name>ToJSON</name>
			<ref>ToJSON</ref>
			<description>Convert a ResultSet to a JSON formatted string.
</description>
		</methodref>
		<methodref generated="true">
			<name>ToJSONObjectSyntax</name>
			<ref href="/Api/Namespace/SQL/ResultSet Functions/SQL ResultSet ToJSONObjectSyntax Function.xml">ToJSONObjectSyntax</ref>
			<description>Convert a ResultSet to JSON object syntax.
</description>
		</methodref>
		<methodref generated="true">
			<name>ToOpenTable</name>
			<ref>ToOpenTable</ref>
			<description>Fetch data from a result set to an open .DBF table
Notes:
1. If MapByPosition is false (the default) only column names in the result set that match a local table column will be copied.
2. The column types in the result set must match the respective column in the local table.</description>
		</methodref>
		<methodref generated="true">
			<name>ToDBF</name>
			<ref>ToDBF</ref>
			<description>Create a local copy of the result set in a .DBF table</description>
		</methodref>
		<methodref generated="true">
			<name>GoToRow</name>
			<ref href="/Api/Namespace/SQL/ResultSet Functions/SQL ResultSet GoToRow Function.xml">GoToRow</ref>
			<description>Position to the row requested (Note:  Backward movement is not supported by all databases).</description>
		</methodref>
		<methodref generated="true">
			<name>ToPropertyArray</name>
			<ref>ToPropertyArray</ref>
			<description>Convert the ResultSet to a property array.
</description>
		</methodref>
		<methodref generated="true">
			<name>ToGridComponentDataObject</name>
			<ref>ToGridComponentDataObject</ref>
			<description>Convert the ResultSet to a Grid Component DataObject data and field arrays.
</description>
		</methodref>
		<methodref generated="true">
			<name>NextResult</name>
			<ref href="/Api/Namespace/SQL/ResultSet Functions/SQL ResultSet NextResult Function.xml">NextResult</ref>
			<description>Position to the next set of rows in the ResultSet (applies only when multiple results are returned).</description>
		</methodref>
		<methodref generated="true">
			<name>ToTableInfo</name>
			<ref href="/Api/Namespace/SQL/ResultSet Functions/SQL ResultSet ToTableInfo Function.xml">ToTableInfo</ref>
			<description>Return the column definitions as a single SQL::TableInfo.</description>
		</methodref>
		<methodref generated="true">
			<name>FormatData</name>
			<ref href="/Api/Namespace/SQL/SQL DataTypeInfo FormatData Function.xml">FormatData</ref>
			<description>Format the data for the column name, index or definition specified.</description>
		</methodref>
		<methodref generated="true">
			<name>ToFormattedString</name>
			<ref>ToFormattedString</ref>
			<description>Copy the ResultSet to a string.</description>
		</methodref>
		<methodref generated="true">
			<name>ToCSV</name>
			<ref>ToCSV</ref>
			<description>Convert a ResultSet to Comma Separated Variable format.
</description>
		</methodref>
		<methodref generated="true">
			<name>ExecutePostProcess</name>
			<ref>ExecutePostProcess</ref>
			<description>Execute portable SQL against a resultset as P.
</description>
		</methodref>
		<methodref generated="true">
			<name>ToJSONFile</name>
			<ref>ToJSONFile</ref>
			<description>Convert a ResultSet to JSON object and store in TargetFile.
</description>
		</methodref>
	</methods>
  
	<see>
		<ref href="/Api/Namespace/SQL/index.xml">SQL</ref>
		<ref href="/Api/Functions/Document Types/JSON Functions/rsToJSON().xml">rsToJSON Function</ref>
	</see>
	
	<terms>sql,array,column,components,current row,defaults,excel,field,function,grid component,index,number,object,users,variable,xml</terms>
</page>