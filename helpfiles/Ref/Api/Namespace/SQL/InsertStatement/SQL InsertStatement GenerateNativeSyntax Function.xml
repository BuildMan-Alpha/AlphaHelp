<page>
   <topic>SQL::InsertStatement::GenerateNativeSyntax Function</topic>
     <description>Generate a native SQL statement using the selected syntax associated with the current or passed connection.</description>

   <syntax><![CDATA[SQL_Statement as C = <SQL::InsertStatement>.GenerateNativeSyntax([SQLConnection as SQL::Connection | SQLConnectionString as C])]]></syntax>
   
   
   <arguments>
  
  
   <argument>
         <name>SQL_Statement</name>
         <description>The native SQL equivalent of a Portable SQL expression.
</description>
     </argument>
     
     
     <argument>
         <name><![CDATA[<SQL::InsertStatement>]]></name>
         <description>A SQL::InsertStatement object.
</description>
     </argument>
     
     
     <argument>
         <name>SQLConnection</name>
         <description>Optional. A SQL::Connection object created with a DIM statement and with a defined .ConnectionString property.
</description>
     </argument>
 
   
   <argument>
         <name>SQLConnectionString</name>
         <description>Optional. A connection string.
</description>
     </argument>
       </arguments>
     
    <discussion>
The .GenerateNativeSyntax() method returns the native SQL version of the Portable SQL stored in the SQL::InsertStatement.SQLStatement property.
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim ins as SQL::InsertStatement
dim sql_insert as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
sql_insert = "insert into customer (firstname, lastname, bill_city, bill_postal_code, bill_state_region) values ('George', 'Jones', 'Arlington', '02000', 'VA')"
? conn.open(connString)
= .T.
? ins.parse(sql_insert)
= .T.
? ins.GenerateNativeSyntax(conn)
= "INSERT INTO customer(firstname, lastname, bill_city, bill_postal_code, bill_state_region) VALUES ('George', 'Jones', 'Arlington', '02000', 'VA')"
]]></example>
  
   <see>
      <ref link="SQL::InsertStatement Object">SQL::InsertStatement Object</ref>
   </see>
  <terms>sql,function,native sql,object</terms>
</page>