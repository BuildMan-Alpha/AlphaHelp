<page api="xb">
  <shortlink>api sql namespace insert statement class parse function</shortlink>
   <topic>SQL::InsertStatement::Parse Function</topic>
     <description>Parse the SQLStatement passed (or the value previously set into the SQLStatement property).</description>
  
   <syntax>Result_Flag as L = Parse([SQLStatement as C])</syntax>
   <arguments>
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).
</description>
     </argument>
     
     <argument>
         <name>SQL::InsertStatement</name>
         <description>A SQL::InsertStatement object.
</description>
     </argument>
     
     <argument>
         <name>SQLStatement</name>
         <description>
 
Optional. A Portable SQL statement.
 </description>
     </argument>
   </arguments>
  <discussion>
The .Parse() method parses the SQL_Statement string (or the value previously set into the SQL::InsertStatement.SQLStatement property).
   </discussion>
   <example><![CDATA[
dim conn as SQL::Connection
dim connString as C
dim ins as SQL::InsertStatement
dim sql_insert as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
sql_insert = "insert into customer (firstname, lastname, bill_city, bill_postal_code,bill_state_region) values ('George', 'Jones', 'Arlington', '02000', 'VA')"
? conn.open(connString)
= .T.
? ins.parse(sql_insert)
= .T.
? ins.execute(conn)
= .T.
]]></example>
   
   <see>
      <ref link="SQL::InsertStatement Object">SQL::InsertStatement Object</ref>
    </see>
 <terms>sql,function,object,operation,string</terms>
</page>