<page>
   <topic>SQL::Schema::ListTables Function</topic>
  <prototypes> <prototype>C ListTables(P Filter)</prototype>
  <prototype>Table_List as C = .ListTables( [ IncludeTables as L [, IncludeViews as L [, IncludeSystemTables as L [, IncludeSynonyms as L [, IncludeAliases as L ]]]]] )
 
</prototype>
  
  </prototypes>
   <arguments>
   
   <argument>
         <name>Table_List</name>
         <description>The retrieved list of tables.</description>
     </argument>
     
     <argument>
         <name>SQL::Schema</name>
         <description>A SQL::Schema object.</description>
     </argument>
     
     <argument>
         <name>IncludeTables</name>
         <description>Optional. Default = .T. (TRUE) = Include tables</description>
     </argument>
     
     <argument>
         <name>IncludeViews</name>
         <description>Optional. Default = .T. (TRUE) = Include views</description>
     </argument>
     
     <argument>
         <name>IncludeSystemTables</name>
         <description>Optional. Default = .T. (TRUE) = Include system tables</description>
     </argument>
     
     <argument>
         <name>IncludeSynonyms</name>
         <description>Optional. Default = .T. (TRUE) = Include synonyms</description>
     </argument>
     
     <argument>
         <name>IncludeAliases</name>
         <description>Optional. Default = .T. (TRUE) = Include aliases</description>
     </argument>
   
     <argument>
         <name>Filter</name>
         <description>Pointer</description>
     </argument>
   
   </arguments>
   
   <description>Return a list of tables for the current database.</description>
   
   <discussion>
The ListTables() method returns a list of tables in the current cache for the current database.
   </discussion>
  
   <example><![CDATA[
dim conn as SQL::Connection
dim sch as SQL::Schema
connString = "{A5API='Access', FileName='c:\program files\a5v8\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString)
   ui_msg_box("Error", conn.CallResult.text)
   end
end if
if .not. conn.GetSchema(sch) then
   ui_msg_box("Error", conn.CallResult.text)
   conn.close()
   end
end if
ui_msg_box("Tables", sch.ListTables())
conn.close()
]]></example>
   
   <see>
      <ref>SQL::Connection Object</ref>
   </see>
  <terms>sql,schema,aliases,defaults,filter,function,list,object,pointer,system</terms>
</page>