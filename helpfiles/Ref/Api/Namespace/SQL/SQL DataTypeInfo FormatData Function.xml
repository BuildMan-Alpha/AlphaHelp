<page>
   <topic>SQL::DataTypeInfo::FormatData Function</topic>
   <description>Return data values defined by this SQL::DataTypeInfo</description>
   
   
   <syntax>Formatted_Data as C = FormatData(P Row, C FormatName, P UserContext [, P RowFormatting = null_value])</syntax>
  
  
   <arguments>
   <argument>
         <name>Formatted_Data</name>
         <description>A string representation of a data value in a result set row.
</description>
     </argument>
     
     
     
     <argument>
         <name>Row</name>
         <description>A SQL::Row object.
</description>
     </argument>
     <argument>
         <name>FormatName</name>
         <description>Optional.
</description>
     </argument>
     <argument>
         <name>UserContext</name>
         <description>Optional. The user context is passed into the evaluation of the expression when data is formatted.
</description>
     </argument>
     <argument>
         <name>RowFormatting</name>
         <description>Pointer</description>
     </argument>
   </arguments>
   <sections><section><title>Example</title>
    <description>Return the data value defined by this SQL::DataTypeInfo as follows:</description>
<list><item><name>
   
1.	If a named format is provided, and a format has been set by assigning NamedFormatExpressions,"
	this format will be used."</name></item><item><name>
2.	Otherwise, if the value is numeric and the DisplayFormat property has been set the value will be formatted"
	as if the value were passed to the system function STR using the values of DBFLength and DBFDecimals"
	along with the format specified in DisplayFormat"</name></item><item><name>
3. Otherwise, default conversion to a string will be done.</name></item></list>
   </section></sections>
  
  <sections><section>
<list>

<item>
<name-title>Property</name-title>
<description-title>Description</description-title>
</item>

<item>
<name>.NamedFormatExpressions
</name>
<description>This property is a CR-LF delimited list of Xbasic expressions. One of those expressions can be unnamed, subsequent expressions should be prefixed with ?=?.
The Xbasic expression part of each line is executed in the context of a generated function that has three arguments:
</description>
<list>

<item>
<name-title>Argument
</name-title>
<description-title>Description
</description-title>
</item>

<item>
<name>.CurrentRow
</name>
<description>SQL::Row
</description>
</item>

<item>
<name>.ColumnDefinition
</name>
<description>SQL::DataTypeInfo
</description>
</item>

<item>
<name>.Context
</name>
<description>This value is provided by the caller and typically will be a dot variable with additional contextual information required by the expression.
</description>
</item>

</list>
</item>

<item>
<name>.DisplayFormat
</name>
<description>Used to specify a numeric format (where appropriate) using the values you would pass to the Xbasic str() function.
</description>
</item>

<item>
<name>.ExternalFileNameExpression
</name>
<description>
 
If this string is defined when FormatData()is called:
 </description>
 <list>
 <item>
 <name>1. FormatData()evaluates this expression to get the name of the file to create.</name>

 </item>
 
 <item>
 <name>2. FormatData()stores the data in the file named by the expression. If the data is binary, the function stores it in binary form. The function stores all other values in string form.</name>

 </item>
 
 
 </list>
 
</item>

</list>
  
  
  </section>
  
  <section>
  <description>SQL::Connection::ToJSON(), SQL::Connection::ToString(), and SQL::Connection::ToXML() call SQL::DataTypeInfo.FormatData()when they need formatted data values.</description>
  </section>
  
  
  </sections>
  
  
  
  
  
  
  
  
  
  <sections><section><title>Example</title>
  
  <example><![CDATA[
CurrentRow.Data("CategoryID")
FileName = Context.FilePath + CurrentRow.Data("CategoryID" + "_" + ColumnDefinition.Name _ ".txt"
ShortName = Left(CurrentRow.Data("CategoryID", 4)
  ]]></example>
  
  
  </section></sections>
  
   <see>
      <ref>SQL::DataTypeInfo Object</ref>
  </see>
 <terms>sql,arguments,conversion,defaults,expressions,file,function,list,object,pointer,string,system,users,variable,xbasic</terms>
</page>