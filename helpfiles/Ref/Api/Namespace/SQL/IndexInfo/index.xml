<page api="xb">
	<topic>SQL::IndexInfo Class</topic>
	<description>A list of properties and methods in the IndexInfo class.</description>
	<properties>
		<property generated="true">
			<name>XML</name>
			<type>C</type>
			<description>
Type: C
 
Mode: RW
 
The schema in XML format.
 </description>
		</property>
		<property generated="true">
			<name>Name</name>
			<type>C</type>
			<description>
Type: C
 
Mode: RW
 
Default = "". The unique name of the table. Note: The table must be unique for the owner, but does not need to be globally unique.
 </description>
		</property>
		<property generated="true">
			<name>Comment</name>
			<type>C</type>
			<description>
Type: C
 
Mode: RW
 
Default = "". The comment stored for the table (if the database supports it).
 </description>
		</property>
		<property generated="true">
			<name>Unique</name>
			<type>L</type>
			<description>
Type: L
 
Mode: RW
 
Default = TRUE (.T.). True if this is a unique index.
 </description>
		</property>
		<property generated="true">
			<name>PrimaryKey</name>
			<type>L</type>
			<description>
Type: L
 
Mode: RW
 
Default = FALSE (.F.). True if the index is the primary key for this table.
 </description>
		</property>
		<property generated="true">
			<name>Reference</name>
			<type>L</type>
			<description>
Type: L
 
Mode: RW
 
Default = FALSE (.F.). True if this is a foreign key.
 </description>
		</property>
		<property generated="true">
			<name>GroupingReference</name>
			<type>L</type>
			<description>Logical GroupingReference property</description>
		</property>
		<property generated="true">
			<name>Clustered</name>
			<type>L</type>
			<description>Logical Clustered property</description>
		</property>
		<property generated="true">
			<name>ReferenceTable</name>
			<type>C</type>
			<description>
Type: P
 
Mode: RW
 
Default = "". For foreign keys only. The name of the table the index is assigned to.
 </description>
		</property>
		<property generated="true">
			<name>ReferenceTableCatalog</name>
			<type>C</type>
			<description>Type: C. String ReferenceTableCatalog property</description>
		</property>
		<property generated="true">
			<name>ReferenceTableSchema</name>
			<type>C</type>
			<description>Type: C. String ReferenceTableSchema property</description>
		</property>
		<property generated="true">
			<name>ReferenceTableOwner</name>
			<type>C</type>
			<description>
Type: C
 
Mode: RW
 
Default = "". For foreign keys only. The owner name of the referenced table.
 </description>
		</property>
		<property generated="true">
			<name>IndexMethod</name>
			<type>C</type>
			<description>
Type: C
 
Mode: RW
 
Default = "". The database specific indexing method.
 </description>
		</property>
		<property generated="true">
			<name>Column</name>
			<type></type>
			<description>
Type: P
 
Mode: RW
 
An array of the column definitions ( SQL::IndexColumnInfo ) for the index.
 </description>
		</property>
		<property generated="true">
			<name>DeleteRule</name>
			<type>N</type>
			<description>
Type: N
 
Mode: RW
 
Default = 0. The options are:

 0 = Restrict


 1 = Cascade


 2 = SetNull


 3 = SetDefault

 </description>
		</property>
		<property generated="true">
			<name>UpdateRule</name>
			<type>N</type>
			<description>
Type: N
 
Mode: RW
 
Default = 0. The options are:

 0 = Restrict


 1 = Cascade


 2 = SetNull


 3 = SetDefault

 </description>
		</property>
	</properties>
	<methods>
		<methodref generated="true">
			<name>ColumnIsInKey</name>
			<ref link=".NET Framework Support">ColumnIsInKey</ref>
			<description>Returns .t. if the name passed in matches the name of a column that is in the primary key.</description>
		</methodref>
		<methodref generated="true">
			<name>ColumnNumber</name>
			<ref link=".NET Framework Support">ColumnNumber</ref>
			<description>Get the index of a Column from the name.</description>
		</methodref>
		<methodref generated="true">
			<name>DeleteColumn</name>
			<ref href="/Api/Namespace/Reporting/ReportExcelTemplate/Reporting__NAMESPACE__ReportExcelTemplate DeleteColumn Method.xml">DeleteColumn</ref>
			<description>Delete a Column.</description>
		</methodref>
		<methodref generated="true">
			<name>InsertColumn</name>
			<ref link="SQL::IndexInfo::InsertColumn Function">InsertColumn</ref>
			<description>Insert a new Column.</description>
		</methodref>
		<methodref generated="true">
			<name>MoveColumn</name>
			<ref href="/Api/Namespace/Reporting/ReportExcelTemplate/Reporting__NAMESPACE__ReportExcelTemplate MoveColumn Method.xml">MoveColumn</ref>
			<description>Move a block of Column items.</description>
		</methodref>
		
		<methodref>
			<name>AddColumn</name>
			<ref link="SQL::IndexInfo::AddColumn Function">AddColumn</ref>
			<description>Adds a new column to the column property. </description>
		</methodref>
		
		<methodref>
			<name>Clone</name>
			<ref link="SQL::IndexInfo::Clone Function">Clone</ref>
			<description>Makes a copy of the SQL::IndexInfo object and its contents.</description>
		</methodref>
		<methodref>
			<name>InsertColumn</name>
			<ref link="SQL::IndexInfo::InsertColumn Function">InsertColumn</ref>
			<description>Adds a new column to the Column property before the specified column index.</description>
		</methodref>
		
		
	</methods>
 
 <sections><section>
<description>A SQL::IndexInfo object (an index description) is a container for one or more SQL::IndexColumnInfo objects (column descriptions for indexes).
Each table in a SQL database has one or more relationships, constraints or indexes. The primary key, foreign keys, and unique and non-unique indexes are each described by a SQL::IndexInfo instance. The SQL::IndexInfo object contains a list of those indexes.
</description>
<example><![CDATA[
dim conn as SQL::Connection
dim ti as SQL::TableInfo
dim ii as SQL::IndexInfo
dim ic as SQL::IndexColumnInfo
dimm connstring as C
connString = "{A5API='Access', FileName='c:\program files\a5v7\mdbfiles\alphasports.mdb'}"
if .not. conn.open(connString) then
    end
end if
ic.name = "lastname"
ii.AddColumn(ic)
ii.unique = .f.
ti.name = "customer"
conn.CreateIndex(ti, ii)
conn.close()
]]></example> 
 
 
 </section></sections>
 
 
 
 
 
 
 
	<see>
		<ref link="SQL Namepsace">SQL</ref>
	</see>
	
	
<terms>sql,array,column,container,containers,contains,database,defaults,index,list,object,primary key,sql database,string,xml</terms>
	
	
	
</page>