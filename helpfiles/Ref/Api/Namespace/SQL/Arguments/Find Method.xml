<page>
    <topic>SQL::Arguments Find Function</topic>
    <description>Find an argument in the SQL::Arguments object.</description>
    <syntax>result as SQL::Argument = SQL::Argument Find(Name as C)</syntax>
    <arguments>
        <argument>
            <name>Name</name>
            <type>C</type>
            <description>The unique name property of a SQL::Argument object set with the [SQL::Arguments::Add()], [SQL::Arguments::Set()] or [SQL::Arguments::SetNull()] methods.</description>
        </argument>
    </arguments>
    <discussion>The .Find() method returns a [SQL::Argument] object containing information about the argument.</discussion>
    <example><![CDATA[dim args as SQL::Arguments
args.add("city", "Boston")
args.add("state", "MA")

? args.Find("state")
= Data = "MA"
IsNull = .F.
Name = "state"
Usage = 0
XML = <SQLArgument>
    <Name>state</Name>
    <Data Type="C">MA</Data>
    <IsNull Type="L">0</IsNull>
    <Usage>Input</Usage>
</SQLArgument>

? args.Find("state").data
= "MA"]]></example>
    <links>
        <link link="sql::argument class">SQL::Argument</link>
        <link link="sql::arguments add function">SQL::Arguments::Add()</link>
        <link link="sql::arguments set function">SQL::Arguments::Set()</link>
        <link link="sql::arguments setnull function">SQL::Arguments::SetNull()</link>
    </links>
    <terms>reporting,arguments,function,object,variable</terms>
</page>