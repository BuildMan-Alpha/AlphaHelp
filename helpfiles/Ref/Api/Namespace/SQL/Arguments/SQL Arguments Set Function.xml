<page>
   <topic>SQL::Arguments Set Function Function</topic>
   <syntax>Result_Flag as L = Set(Name as C, Value as A [, Usage as SQL::ArgumentUsage  [,IsNull as L = .f.]])</syntax>
   <arguments>
  
   <argument>
         <name>Result_Flag</name>
         <description>TRUE (.T.) if the operation was successful; otherwise FALSE (.F.).</description>
     </argument>
     
     <argument>
         <name>SQL::Argument</name>
         <description>A SQL::Arguments object.</description>
     </argument>
     
     <argument>
         <name>Name</name>
         <description>The unique name property of an argument. See the SQL::Argument object.</description>
     </argument>
     <argument>
         <name> Value</name>
         <description>Data of any of the following types:</description>
<list>
<item>
<name>"Blob"</name>
</item>

<item>
<name>"Character"</name>
</item>

<item>
<name>"Date"</name>
</item>

<item>
<name>"Logical"</name>
</item>

<item>
<name>"Numeric"</name>
</item>

<item>
<name>"Short Time"</name>
</item>

<item>
<name>"Time"</name>
</item>
</list>
         
         
         
     </argument>
     <argument>
         <name> Usage</name>
         <description>SQL::ArgumentUsage</description>
     </argument>
     <argument>
         <name>IsNull</name>
         <description>L = .f.</description>
     </argument>
   </arguments>
   <description>Set the value and (optionally) the usage of an argument.</description>
   <discussion>
The Set() method redefines an argument value, or adds an argument and value and to a SQL::Argument object in a SQL::Arguments object.
   </discussion>
   <example><![CDATA[
dim args as SQL::Arguments
args.add("state", "MA")
? args.Find("state")
= "MA"
? args.set("state", "NH")
= .T.
? args.Find("state")
= "NH"
]]></example>
   <sections>
       <section>
            <description>This script prompts for a value, then returns a filtered list of records.</description>
            <example><![CDATA[
dim conn as SQL::Connection
dim sql as C
dim vCity as C
dim args as SQL::Arguments
vCity = ui_get_text("City", "Show Companies in what city?")
sql = "select lastname, firstname from customer where bill_city = :city Order By Company"
if .not. conn.open("{A5API=Access,FileName='C:\Program Files\a5v8\MDBFiles\Alphasports.mdb', UserName='Admin'}")
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
if .not. args.Set("city", vCity)
    end
end if
if .not. conn.execute(sql, args)
    ui_msg_box("Error", conn.CallResult.text)
    end
end if
sql_resultset_preview(conn.resultset)
]]></example>
       </section>
   </sections>
   <see>
      <ref>SQL::Arguments Object</ref>
      <ref href="/Api/Functions/System/Developer Functions/FUNCTION_LIMITATIONS_GET Function.xml">Limitations</ref>
   </see>
  <terms>reporting,arguments,function,list,object,operation,script</terms>
</page>