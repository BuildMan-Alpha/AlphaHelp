<page api="xb">
    <shortlink>api dotnet namespace services class register assembly method</shortlink>
    <topic>DotNet::Services.RegisterAssembly Method</topic>
    <description>Connects an assembly and all of its classes to the Alpha Anywhere type system within a namespace.</description>
    <prototype>dim Result as L = RegisterAssembly(ParentNamespace as C, Assembly as DotNet::AssemblyReference)</prototype>
    <arguments>
        <argument>
            <name>ParentNamespace</name>
            <type>C</type>
            <description>The name of the Alpha Anywhere namespace to assign to the .NET assembly. To use the class name registered under the .NET namespace, set *[xb:ParentNamespace]* to an empty string.</description>
        </argument>
        <argument>
            <name>Assembly</name>
            <type>DotNet::AssemblyReference</type>
            <description>The .NET assembly.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result</name>
            <type>L</type>
            <description>Returns .t. or .f. whether or not the operation succeeds. The DotNet::Services CallResult property will contain additional information about the error.</description>
        </return>
    </returns>
    <discussion>
        <p>RegisterAssembly() connects an assembly and all of its classes to the Alpha Anywhere type system within a namespace.</p>
        <p>Registering a .NET assembly allows you to use it as if it were a built-in Alpha Anywhere class or namespace. This type can be DIMmed in any script after the type is registered.</p>
        <p>Once the assembly is registered, which is required once per execution of Alpha Anywhere, instances can be DIMmed for each of its classes in any script.</p>
    </discussion>
    <sections>
        <section>
            <note>ParentNamespace is optional. If an empty string is provided, the class is registered under the DotNet namespace.</note>
        </section>
        <section>
            <title>Example</title>
            <description>Adding an assembly from the global assembly cache to the Xbasic type system.</description>
            <example><![CDATA[Dim Assy as DotNet::AssemblyReference
Dim Services as DotNet::Services
 
Assy.Name = "SampleAssembly"
Assy.Version = "1.0.2004.0"
Assy.Culture = "neutral"
Assy.PublicKeyToken = "8744b20f8da049e3"
 
If .not. Services.RegisterAssembly("MyNameSpace", Assy) 
    UI_Msg_Box("Error registering assembly " + \
    Assy.Name, Services.CallResult.Text)
    End 
End if
 
Dim Instance as MyNameSpace::MyClass ]]></example>
        </section>
    </sections>
</page>