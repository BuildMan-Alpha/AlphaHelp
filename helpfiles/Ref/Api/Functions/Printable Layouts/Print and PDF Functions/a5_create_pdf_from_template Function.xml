<page api="xb" build="4898">
    <shortlink>api a5_create_pdf_from_template function</shortlink>
    <topic>a5_create_pdf_from_template Function</topic>
    <description>
        <p>Creates a PDF by merging JSON data into a template.</p>
    </description>
    <prototypes>
        <prototype>dim JavascriptResult as c = a5_create_pdf_from_template(e as p, template as c , jsondata as c [, syntax = "AlphaAnywhere" as c [, javascriptfunctions as c ]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>e</name>
            <type>P</type>
            <description>The "e" object that is passed into all Xbasic functions that handle Ajax callbacks.</description>
        </argument>
        <argument>
            <name>template</name>
            <type>C</type>
            <description>The HTML template into which the JSON data must be merged. The template should be a complete HTML document with all necessary css styles in the HTML document.</description>
        </argument>
        <argument>
            <name>jsondata </name>
            <type>C</type>
            <description>The JSON data to be merged into to the template.</description>
        </argument>
        <argument optional="true">
            <name>syntax</name>
            <type>C</type>
            <description>Default = "AlphaAnywhere". The syntax used in the template. Can be *[xb:"AlphaAnywhere"]* or *[xb:"Handlebars"]*. </description>
        </argument>
        <argument optional="true">
            <name>javascriptfunctions</name>
            <type>C</type>
            <description>Only applies if the *[xb:syntax]* is *[xb:"AlphaAnywhere"]*. Any Javascript function that are referenced in the template.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>JavascriptResult</name>
            <types>
                <type>C</type>
            </types>
            <description>The function return value. You Xbasic function that handles the Ajax callback should emit this value. This is the Javascript that must be executed on the client-side to download the PDF file created by this function.</description>
        </return>
    </returns>
    <discussion>
        <p>A helper function for use in a Web Application. The function is used in an Ajax callback. It takes some JSON data, and a template, generates a PDF file from the result of merging the data into the template, and then returns the Javascript code necessary to download the PDF file to the client. The merge syntax can either be Handlebars, or the Alpha Anywhere [client-side templating syntax].</p>
    </discussion>
    <sections>
        <section>
            <important>
                <p>You must install the PhantomJS node module in order to use this function. See [Installing PhantomJS] below. PhantomJS is pre-installed on Alpha Cloud.</p>
            </important>
        </section>
        <section>
            <title>Example</title>
            <description>
                <p>Assume you have a button on a Grid or UX component that makes an Ajax callback. The purpose of the button is to generate a PDF confirmation that the client can download. Assume that the name of the Xbasic function that handles the callback is *[xb:XBCallback]*. Here is how this function could be defined:</p>
            </description>
            <example code="xb">
                <![CDATA[Function XBCallback as c (e as p)

    dim jsonData as c = <<%txt%
    { Firstname: "John", Lastname: "Harris", amount: 23.45 }
    %txt%

    dim template as c = <<%txt%
    <p>Dear {Firstname} {Lastname}</p>
    <p>Thank you for your order in the amount of {amount:number('$#,##0.00') }</p>
    %txt%

    dim js as c
    js = a5_create_pdf_from_template(e, template, jsonData)

    XBCallback = js

end function ]]>
            </example>
        </section>
        <section>
            <title>Installing PhantomJS</title>
            <description>
                <p>This function uses the Node PhantomJS module. This module is not installed by default (it is installed on Alpha Cloud so no action is necessary for Alpha Cloud) . You must install it by selecting to the *[ui:Tools]* &gt; *[ui:Packages]* command then selecting "phantomjs" from the dialog. This will make PhantomJS available while you are in development mode.</p>
            </description>
            <figure>
                <link>images/installPhantomJS.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>You must also ensure that PhantomJS is available in your published application by going to the Web Project Properties dialog and then clicking on the smart field for *[ui:Referenced Packages]*.</p>
            </description>
            <figure>
                <link>images/publishPhantomJS.png</link>
            </figure>
        </section>
    </sections>
    <links>
        <link href="#section1_Installing PhantomJS">Installing PhantomJS</link>
        <link link="clientsidetemplates">client-side templating syntax</link>
    </links>
    <limitations>Web Applications Only</limitations>
    <see>
        <ref link="clientsidetemplates">Client-side Templates</ref>
    </see>
</page>