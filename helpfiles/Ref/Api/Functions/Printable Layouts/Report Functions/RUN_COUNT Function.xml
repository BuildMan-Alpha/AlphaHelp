<page api="xb">
    <shortlink>api run count function</shortlink>
    <topic>RUN_COUNT Function</topic>
    <description>Get the running count of subexpression over group 'over' sampled each group 'each'</description>
    <prototype>Running_Count_Value as A = run_count(A subexpr [,G over [,G each]])</prototype>
    <arguments>
        <argument>
            <name>subexpr</name>
            <type>A</type>
            <description>Any valid expression that includes a field or a combination of fields from the current table or set that specifies what you want to examine.</description>
        </argument>
        <argument optional="true">
            <name>over</name>
            <type>GRP-&gt;Group</type>
            <description>When to reset the count to zero. Set GRP-&gt;Grand to count over the entire report.</description>
        </argument>
        <argument optional="true">
            <name>each</name>
            <type>GRP-&gt;Sub_Group</type>
            <description>What item to count (e.g. GRP-&gt;INV_NO to count each INV_NO in the group.)</description>
        </argument>
    </arguments>
    <discussion>The Group and Sub_Group are optional parameters that define the range of records to summarize, and may or may not be required, depending upon the context of the summary calculation. Possible values for GRP-&gt;Group and GRP-&gt;Sub_Group include:</discussion>
    <sections>
        <section>
            <list bullet="true">
                <item>
                    <description>GRAND (all records)</description>
                </item>
                <item>
                    <description>The name of the current table</description>
                </item>
                <item>
                    <description>The name of a table in the current set</description>
                </item>
                <item>
                    <description>The name of a grouping level that is defined in a report layout</description>
                </item>
                <item>
                    <description>DETAIL (over the records in the detail section)</description>
                </item>
            </list>
        </section>
    </sections>
    <sections>
        <section>
            <description>
                <p>RUN_COUNT() is used in the Detail section of a report to return the running count of records of the Expression evaluated from the first record to the current record related to the group. The expression is evaluated from the sub-group's first record to the current record, and the resulting count is returned.</p>
                <p>For example, to summarize the line-items in an invoice set, the Group parameter might be GRP-&gt;INV_HEAD and the Sub_Group parameter GRP-&gt;INV_ITEM. This means the Summary operation includes only those child records in INV_ITEM related to the current parent record in the INV_HEAD table. To summarize all the records in a table or set, use the name GRAND as the Group name. The Group GRP-&gt;GRAND and Sub_Group GRP-&gt;INV_ITEM will produce a summary result based on all invoices.</p>
                <p>This function is a report writer function, not intended for table level field rules or other expressions. While the function may perform in some areas outside of the report writer, its use there is not supported.</p>
            </description>
        </section>
        <section>
            <title>Examples</title>
            <description>Assume that an invoicing set consists of two tables. One holds the invoices (INVOICE), and the other holds each invoice's line-items (INV_ITEM):</description>
        </section>
        <section>
            <description>
                <table>
                    <tr>
                        <th colspan="3">INVOICE</th>
                    </tr>
                    <tr>
                        <th>INV_NO</th>
                        <th>CUST_ID</th>
                        <th>INV_TOTAL</th>
                    </tr>
                    <tr>
                        <td>I100</td>
                        <td>C001</td>
                        <td>10.00</td>
                    </tr>
                    <tr>
                        <td>I101</td>
                        <td>C003</td>
                        <td>25.50</td>
                    </tr>
                    <tr>
                        <td>I102</td>
                        <td>C001</td>
                        <td>100.75</td>
                    </tr>
                    <tr>
                        <td>I103</td>
                        <td>C004</td>
                        <td>32.50</td>
                    </tr>
                    <tr>
                        <td>I104</td>
                        <td>C002</td>
                        <td>110.25</td>
                    </tr>
                    <tr>
                        <td>I105</td>
                        <td>C005</td>
                        <td>98.35</td>
                    </tr>
                </table>
            </description>
        </section>
        <section>
            <description>
                <table>
                    <tr>
                        <th colspan="2">INV_ITEM</th>
                    </tr>
                    <tr>
                        <th>INV_NO</th>
                        <th>AMOUNT</th>
                    </tr>
                    <tr>
                        <td>I100</td>
                        <td>4.50</td>
                    </tr>
                    <tr>
                        <td>I100</td>
                        <td>5.50</td>
                    </tr>
                    <tr>
                        <td>I101</td>
                        <td>25.50</td>
                    </tr>
                    <tr>
                        <td>I102</td>
                        <td>3.25</td>
                    </tr>
                    <tr>
                        <td>I102</td>
                        <td>35.25</td>
                    </tr>
                    <tr>
                        <td>I102</td>
                        <td>62.25</td>
                    </tr>
                    <tr>
                        <td>I103</td>
                        <td>32.50</td>
                    </tr>
                    <tr>
                        <td>I104</td>
                        <td>110.25</td>
                    </tr>
                    <tr>
                        <td>I105</td>
                        <td>98.35</td>
                    </tr>
                </table>
            </description>
        </section>
        <section>
            <description></description>
        </section>
        <section>
            <description>INVOICE is related to INV_ITEM through a one-to-many link on the INV_NO field. To find the running count of line-item records, use the following expressions:</description>
            <example>
                <![CDATA[
run_count(INV_ITEM->AMOUNT) -> 9, if the current INV_NO is "I105"
run_count(INV_ITEM->AMOUNT) -> 8, if the current INV_NO is "I104"]]>
            </example>
        </section>
        <section>
            <title>Using run_count() in Groups</title>
            <description>If you wanted to produce a running count of all Invoices, you could define the following calculated field that would create a running count of each INVOICE (as opposed to each line item in each INVOICE.) In the example below, it's assumed that a Group Header has been defined in the Report that breaks on the INVOICE-&gt;INV_NO field:</description>
            <example><![CDATA[invoiceCount = run_count(INVOICE->INV_NO,GRP->Grand,GRP->INV_NO)]]></example>
        </section>
        <section>
            <description>
                <p>This code creates a calculated field that computes a running total over the entire report (GRP-&gt;Grand) that is incremented every time the invoice number changes (GRP-&gt;INV_NO).</p>
                <p>Once created, the calculated field can be inserted into the Group Header where desired.</p>
            </description>
        </section>
        <section>
            <description>In the example below, run_count() has been used to create counts for two groups: Country and City. Each country is enumerated with a number, as well as each city. The count resets to zero for the City every time a new Country is encountered. Two calculated fields were created with the following definition to generate the counts:</description>
            <example><![CDATA[countryCount = run_count(country,GRP->Grand,GRP->Country)
cityCount = run_count(city,GRP->Country,GRP->City)]]></example>
        </section>
        <section>
            <description>The calculated fields were then placed in the Group Header for the Country and City groups, as shown in the image below.</description>
            <figure>
                <link>images/run_count1.png</link>
            </figure>
        </section>
        <section>
            <description>The result is a report with numbered countries and cities, with the customers for each city listed in the detail:</description>
            <figure>
                <link>images/run_count2.png</link>
            </figure>
        </section>
        <section>
            <description>You can [click here to download the report] used in this example.</description>
        </section>
    </sections>
    <limitations>This function is a report writer function, not intended for table level field rules or other expressions.</limitations>
    <links>
        <link link="components/run_count_demo.zip">click here to download the report</link>
    </links>
    <see>
        <ref link="api printable layouts report functions">Report Functions and Methods</ref>
    </see>
    <terms>expressions,field,function,layout,operation,record,reports,set,summarize</terms>
</page>