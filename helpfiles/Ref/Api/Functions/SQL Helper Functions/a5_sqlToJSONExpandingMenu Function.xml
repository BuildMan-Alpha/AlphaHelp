<page api="xb" build="5271">
    <shortlink>api a5 sqltojsonexpandingmenu function</shortlink>
    <topic>a5_sqlToJSONExpandingMenu Function</topic>
    <description>Generates JSON to populate an Expanding Menu control from a SQL query.</description>
    <prototypes>
        <prototype>a5_sqlToJSONExpandingMenu as c (connectionString as c, table as c, fieldList as c [, endpointFieldName as C [, filter as C [, order as C [, argsIn as SQL::Arguments [, endpointFunctionName as C]]]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>connectionString</name>
            <type>C</type>
            <description>Connection string to the SQL database.</description>
        </argument>
        <argument>
            <name>table</name>
            <type>C</type>
            <description>The table in the SQL database.</description>
        </argument>
        <argument>
            <name>fieldList</name>
            <type>C</type>
            <description>The comma-delimited list of fields from the table that defined the Expanding menu hierarchy. For example, if you specify *[xb:country,city,contactname]* the Expanding Menu will show a list of *[xb:countries]*. If you expand a *[xb:country]*, you will see a list of *[xb:cities]* in the selected country. If you expand a *[xb:city]* you will see a list of *[xb:contactnames]* in the selected city. If you click on a city, the *[xb:endpointFunctionName]* will be called and the value of the *[xb:endpointFieldName]* will be passed to the function.</description>
        </argument>
        <argument optional="true">
            <name>endpointFieldName</name>
            <type>C</type>
            <description>The name of the field whose value is passed to the *[xb:endpointFunction]*.</description>
        </argument>
        <argument optional="true">
            <name>filter</name>
            <type>C</type>
            <description>The filter to use for the SQL Select statement's WHERE clause. (The SQL Select statement is automatically generated from the function arguments.)</description>
        </argument>
        <argument optional="true">
            <name>order</name>
            <type>C</type>
            <description>The order to use for the SQL Select statement's ORDER BY clause.</description>
        </argument>
        <argument optional="true">
            <name>argsIn</name>
            <type>SQL::Arguments</type>
            <description>Default = *[xb:null_value()]*. A SQL::Arguments object that defines the arguments used in the filter. *[xb:argsIn]* must be defined if the filter uses arguments.</description>
        </argument>
        <argument optional="true">
            <name>endpointFunctionName</name>
            <type>C</type>
            <description>The name of the Javascript function to call when the user clicks on an Expanding Menu leaf node. The function is called and the value of the data in the *[xb:endpointFieldName]* is passed to the function. For example, using the *[xb:Northwind Customer]* table. If the Expanding Menu shows *[xb:country, city, contactname]* and the *[xb:endpointFieldname]* is *[xb:customerid]*, if the user expands the "USA" menu entry, then the "Seattle" menu entry, then clicks on the "Karl Jablonski" leaf entry, the *[xb:endpointFunction]* is called and the value "WHITC" is passed to the function. "WHITC" is the value in the *[xb:endpointFieldName]* for the record that was clicked.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[xb:a5_sqlToJSONExpandingMenu()]* function generates the JSON needed to populate an Expanding Menu control in a UX component from data returned by a SQL query.</p>
    </discussion>
    <sections>
        <section>
            <example code="xb"><![CDATA[dim cs as c = "::name::AADemo-Northwind"
dim table as c = "customers"
dim fieldlist as c = "country,city,contactname"
dim endpointfield as c = "customerId"
dim filter as c = "country <> ''"
dim order as c = "country"
dim endpointfunctionname as c = "selectCustomer"

dim json as c
json = a5_sqlToJSONExpandingMenu(cs,table,fieldlist,endpointfield,filter,order,null_value(),endpointfunctionname)

'now use this JSON to generate the Javascript to populate an Expanding Menu control on a UX component

dim js as c
js = "var data = " + json + ";" + crlf()

js = js + <<%str%
var obj = {dialog.object}.getControl('expandingmenu_1');
obj.data.items = data.items
obj.data.actions = data.actions
obj.refresh()
%str%]]></example>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Dynamically Populating an Expanding Menu with Ajax Callbacks</title>
                <description>This video shows how you can dynamically populate an Expanding Menu control with data computed in an Ajax callback.</description>
                <date>2018-08-09</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/5cd9a216</link>
                </video>
                <resources>
                    <resource>
                        <link>https://www.ajaxvideotutorials.com/V12Videos/expandingmenu.zip</link>
                    </resource>
                </resources>
            </videos>
        </section>
    </sections>
    <see>
        <ref link="dynamically populate expandingmenu ajaxcallback">Dynamically Populating an ExpandingMenu Using Ajax Callbacks</ref>
    </see>
</page>