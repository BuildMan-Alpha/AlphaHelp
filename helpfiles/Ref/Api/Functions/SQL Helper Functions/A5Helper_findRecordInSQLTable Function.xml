<page api="xb" build="7825">
    <shortlink>a5helper_findrecordinsqltable function</shortlink>
    <topic>a5Helper_findRecordInSQLTable Function</topic>
    <description>
        <p>Returns records from a SQL table that contain any fields that match the search criteria.</p>
    </description>
    <prototypes>
        <prototype>dim result as p = a5Helper_findRecordInSQLTable (c connectionstring, c tablename, a findwhatValue [,c fieldlist [, L treatcommaasor [ , C pagesizeC [, c pageNumberC  [, n maxrows [ c currentPageNumberC [,c Order]]]]]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>connectionstring</name>
            <type>C</type>
            <description>
                <p>The connection string to the SQL database</p>
            </description>
        </argument>
        <argument>
            <name>tablename</name>
            <type>C</type>
            <description>
                <p>The name of the table to be queried</p>
            </description>
        </argument>
        <argument>
            <name>findwhatValue</name>
            <type>A</type>
            <description>
                <p>Can be either a string or a typed value  (e.g. 5 - type N) or an array of values to find. If a string, can be a comma delimited list of values (e.g. Paris,London). If a comma delimited string then the treatcommaasor paramater must be set to .t. If an array, the items in the array must correctly typed. See example below</p>
            </description>
        </argument>
        <argument optional="true">
            <name>fieldlist</name>
            <type>C</type>
            <description>
                <p>If blank or "*", all fields of the appropriate type are searched. Can specify a comma delimited list of fields to search. For example, if findwhatValue is a datetime value and fieldlist is blank, then all datetime fields in the table are searched.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>treatcommaasor</name>
            <type>L</type>
            <description>
                <p>If findWhatValue is a string, determines if the function should find the literal string (that includes a comma, e.g. "value, with a comma in it"), or should find records matching any of the values in the string (e.g. if findwhatValue is London,Paris find records matching London, or Paris).</p>
            </description>
        </argument>
        <argument optional="true">
            <name>pagesizeC</name>
            <type>C</type>
            <description>
                <p>If you want to paginate the result, specify the page size. If pagesizeC is a blank value, then all matching records (subject to the maxrows constraint) are returned.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>pageNumberC</name>
            <type>C</type>
            <description>
                <p>Target page number. Only meaningful if pagesizeC is not blank. Can be an explicit page (e.g. "1", "5", "7", etc), or a relative page (e.g. first, previous, next or last) . If pageNumberC is next or previous, then the currentPageNumberC parameter must be supplied.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>maxrows</name>
            <type>N</type>
            <description>
                <p>Maximum number of rows to return. Defaults to 1,000. Set to 0 to return all rows. Only relevant if pageSizeC is blank.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>currentPageNumberC</name>
            <type>C</type>
            <description>
                <p>Current page number. Only needed if pageNumberC is set to next or previous.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>Order</name>
            <type>C</type>
            <description>
                <p>Order By fields using SQL syntax  (e.g. Lastname, Firstname DESC)</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <type>P</type>
            <description>
                <p>Returns an object with these properties:  error: .t. or .f. - indicates if there was any type of error, errorText - if error is .t., description of the error, data - the JSON data returned by the query, pageSize - the page size, pageNumber - the page number, recordCount - the number of records in the query, pageCount - the number of pages of records in the query, sql - the SQL statement that was executed, argumentsxml - the xml for the sql::arguments object used when the SQL was executed.</p>
            </description>
        </return>
    </returns>
    <discussion>
        <p>The *[xb:a5Helper_findRecordInSQLTable()]* function finds records in a SQL table where the search value is found in any of the fields in the table (i.e. a keyword search). If the search value is of type character, all of the character fields in the table are searched. If the search value is of type T (dateTime value), all of the dateTime fields in the table are searched, and so on. For character values, the search is for records where the search value is contained in the search field. For other data types, the search is for records where the search field equals the search value.</p>
    </discussion>
</page>