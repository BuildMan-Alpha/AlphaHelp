<page api="xb">
    <shortlink>api replace arguments in string function source</shortlink>
    <topic>replace_arguments_in_string Function</topic>
    <description>Takes a string that contains SQL::Arguments in it and replaces the arguments with actual values. Used internally by Alpha Anywhere.</description>
    <prototype>dim result as C = replace_arguments_in_string(C filter, SQL::Arguments args [,N mode ])</prototype>
    <arguments>
        <argument>
            <name> filter </name>
            <type>C</type>
            <description>String with replaceable arguments prefixed with :</description>
        </argument>
        <argument>
            <name> args </name>
            <type>SQL::Arguments</type>
            <description>Arguments structure with values to use for replacement</description>
        </argument>
        <argument optional="true">
            <name>mode</name>
            <type>N</type>
            <description>The mode. If mode = 2, then Date and Time fields use SQL Date syntax (e.g. {2011-09-11 12:23 pm}. mode = 3 uses single quotes for character arguments and a string for dates.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>C</type>
            </types>
            <description>Returns the transformed SQL query. Any arguments found in the string are replaced with their argument values.</description>
        </return>
    </returns>
    <sections>
        <section>
            <title>Examples</title>
            <example code="xb"><![CDATA[dim filter as c 
dim args as sql::arguments
args.add("city","Burlington")
filter = "city = :city"
filter = replace_arguments_in_string(filter,args) ?filter = city = "Burlington"]]></example>
        </section>
        <section>
            <description>
                <p>There are several other ways to process templates:</p>
                <p>
                    <list bullet="true">
                        <item>
                            <name>The *[xb:replace_placeholders_with_argument_values()]* function replaces placeholders (enclosed in curly parens, e.g. {arg1}, {arg2}) in a string with values in a SQL::Arguments object.</name>
                        </item>
                        <item>
                            <name>The *[xb:replace_variables_in_string()]* function substitutes the values of dot variables in a string, e.g. "p.firstname" becomes "Jim"</name>
                        </item>
                        <item>
                            <name>The *[xb:evaluate_string()]* function replaces placeholders in a string with variable values and returns a transformed string.</name>
                        </item>
                        <item>
                            <name>The *[xb:compilestringtemplate()]* function is much more efficient than the evaluate_string Function when used inside a loop.</name>
                        </item>
                    </list>
                </p>
            </description>
        </section>
    </sections>
    <see>
        <ref link="replace_placeholders_with_argument_values Function">replace_placeholders_with_argument_values Function</ref>
        <ref link="REPLACE_VARIABLES_IN_STRING Function">replace_variables_in_string Function</ref>
        <ref link="EVALUATE_STRING Function">evaluate_string Function </ref>
        <ref link="CompileStringTemplate Function">compilestringtemplate Function</ref>
    </see>
    <terms>sql helper,arguments,contains,filter,function,pointer,sql,string,time</terms>
</page>