<page>
   <topic>SQL_TableImport Function</topic>
   <syntax>Status as P = SQL_TableImport(P SqlConn ,C owner ,C tablename ,C localfilename [,L ShowProgress [,L SizeToFit [,L AllowCancel [,L AddTableToDatabase [,C StatusBarFormatString ]]]]])</syntax>
   <arguments>
 
 
 <argument>
         <name>A dot variable that contains error information.</name>
         <description>Pointer</description>
         <list>
	         <item>
	         <name-title>Element</name-title>
	         <description-title>Description</description-title>
	         </item>
         
	         <item>
	         <name>.HasError</name>
	         <description>L Indicates whether an error occurred. The options are:</description>
			 		<list>
			 		<item>
			        <name>.T.</name>
			        </item>
			         
			        <item>
			        <name>.F.</name>
			        </item>
			 		</list>
        	 </item>
         
	         <item>
	         <name>.ErrorText</name>
	         <description>C Contains an error message.</description>
	         </item>
         
	         <item>
	         <name>.UserCancelled</name>
	         <description>L Specifies whether the user cancelled the operation. The options are:</description>
	         
         
					<list>
			 		<item>
			         <name>.T.</name>
			         </item>
			         
			         <item>
			         <name>.F.</name>
			        </item>
			 
			 
			 		</list>
          </item>
         </list>
     </argument>
     
     <argument>
         <name>SqlConn</name>
         <description>A SQL::Connection object that established the connection to the back-end database.</description>
     </argument>
     <argument>
         <name>owner</name>
         <description>The owner of the database, if required.</description>
     </argument>
     <argument>
         <name>tablename</name>
         <description>The name of the back-end database table to copy.</description>
     </argument>
     <argument>
         <name>localfilename</name>
         <description>The path and name of the .DBF file to create.</description>
     </argument>
     <argument>
         <name>ShowProgress</name>
         <description>Logical. Optional. Default = .T. . Indicates whether to display a progress indicator on the Status Bar.
</description>
     </argument>
     <argument>
         <name>SizeToFit</name>
         <description>Logical. Optional. Default = .T. . Indicates whether to size the target table's fields to fit the data.
</description>
     </argument>
     <argument>
         <name>AllowCancel</name>
         <description>Optional. Default = .T. . Indicates whether to display a button that allow's the user to cancel the import operation.
</description>
     </argument>
     <argument>
         <name>AddTableToDatabase</name>
         <description>Optional. Default = .T. . Indicates whether to create a new table, if it does not already exist.
</description>
     </argument>
     <argument>
         <name>StatusBarFormatString</name>
         <description>Optional. Default = "". The format to use to display the Status Bar. This parameter is only relevant if Show_Progress is set to .T. . See STATUSBAR.ABORT_CHECK().
</description>
     </argument>
   </arguments>
   <description> Import a SQL table into a native Alpha Five (.dbf) table. Optionally adds the table to the current database.</description>
   <discussion>
The SQL_TableImport() function imports a table from a back-end SQL database to an Alpha Five .DBF table.

   </discussion>
  <limitations>Desktop applications only.</limitations>
   <see>
      <ref href="/Ref/Api/Functions/SQL Helper Functions/index.xml">SQL Helper Functions</ref>
      <ref link="SQL_TableImportDialog Function">SQL_TableImportDialog()</ref>
   </see>
<terms>sql helper,button,contains,database,display,error,file,function,import,object,pointer,progress indicator,set,sql,sql database,variable</terms>
</page>