<page api="xb">
    <shortlink>api a5 sql import data source function</shortlink>
   <topic>A5_SQL_ImportDataSource Function</topic>
   <description>The A5_SQL_ImportDataSource() function imports the data specified by a Data Source name to an Alpha Anywhere table.
</description>

   <prototype>Result as P = a5_SQL_ImportDataSource(P ds ,C tablename [,L AddTableToDatabase [,* arguments [,* options [,* openConnection [,L showProgress [,L allowCancel ]]]]]])</prototype>
   <arguments>
     <argument>
         <name>Result</name>
         <description>A dot variable that describes the result of the operation.</description>
         <list>
         <item>
         <name-title>Element</name-title>
         <description-title>Type and Description</description-title>
         </item>
         
         <item>
         <name>.error</name>
         <description>L .T. indicates that an error occurred</description>
         </item>
         
         <item>
         <name>.errorText</name>
         <description>C A text description of any error that occurred.</description>
         </item>
         </list>
     </argument>
     <argument>
         <name>ds</name>
         <description>A dot variable that describes the data to be retrieved. See Data Source Data Structure.</description>
     </argument>
     <argument>
         <name>tablename</name>
         <description>Optional. The name of the table to refresh. The path of the current database is assumed.</description>
     </argument>
     <argument>
         <name>AddTableToDatabase</name>
         <description>Logical. Optional. </description>
     </argument>
     <argument>
         <name>arguments</name>
         <description>Optional. Default = NULL_VALUE(). Arguments that retrieve value(s) from variable(s) or prompts for value(s) at runtime. Only applicable to SQL Reports. Refer to SQL::Arguments Object.</description>
     </argument>
     <argument>
         <name>options</name>
         <description>Optional. Default = NULL_VALUE(). Sets filter (WHERE) and order (ORDER BY) expressions for a query against a passive-linked table. A pointer dot variable with 2 elements.   Refer to Using the Options Argument.
</description>
<list>
<item>
<name>Element</name>
<description>Type and Description</description>
</item>

<item>
<name>.filter</name>
<description>C Adds to the WHERE clause in the underlying SQL expression.</description>
</item>

<item>
<name>.order</name>
<description>C Replaces the ORDER BY clause in the underlying SQL expression.</description>
</item>
</list>
  
  
  


     </argument>
     <argument>
         <name>openConnection</name>
         <description>Optional. Default = NULL_VALUE().</description>
     </argument>
     <argument>
         <name>showProgress</name>
         <description>Logical. Optional. Default = NULL_VALUE().</description>
     </argument>
     <argument>
         <name>allowCancel</name>
         <description>Logical. Optional. Default = NULL_VALUE().</description>
     </argument>
   </arguments>
  <limitations>Desktop applications only.</limitations>
   <see>
      <ref link="SQL Helper Functions">SQL Helper Functions</ref>
   </see>
   
<terms>sql helper,a5,arguments,data source,database,error,expressions,filter,function,pointer,query,sql,variable</terms>
   
   
</page>