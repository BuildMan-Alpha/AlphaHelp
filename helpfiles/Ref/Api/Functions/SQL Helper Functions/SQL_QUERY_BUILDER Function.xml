<page api="xb">
    <shortlink>api sql query builder function</shortlink>
    <topic>SQL_QUERY_BUILDER Function</topic>
    <prototype>SQL_Select_Statement as C = SQL_Query_Builder(P cn [,C SQLQuery ])</prototype>
    <description>Displays the SQL Genie. For use in Desktop Applications.</description>
    <arguments>
        <argument>
            <name>SQL_Select_Statement</name>
            <description>A SQL SELECT statement that retrieves data from a back end database.</description>
        </argument>
        <argument>
            <name>cn</name>
            <description>A SQL::Connection object created with the SQL::Connection::Open()method.</description>
        </argument>
        <argument>
            <name>SQLQuery</name>
            <description>Character</description>
        </argument>
    </arguments>
    <discussion>The SQL_QUERY_BUILDER() displays the SQL Genie dialog, which assists you in defining a SQL SELECT statement. This dialog can be used in Desktop apps or the Interactive Window to build SQL queries.</discussion>
    <sections>
        <section>
            <title>Example</title>
            <description>The Xbasic statements shown below displayed the SQL Genie, which returned the statement assigned to the sql variable.</description>
            <figure>
                <link>images/SQR_Using_SQL_Query_Builder.png</link>
            </figure>
        </section>
        <section>
            <example code="xb" caption="Interactive Window"><![CDATA[dim cn as sql::connection
cn.open("::Name::AADemo-Northwind")
sql = sql_query_builder(cn)
? sql
= SELECT CustomerID,CompanyName,Country 
FROM Customers]]></example>
        </section>
    </sections>
    <limitations>Desktop Applications Only</limitations>
    <see>
        <ref link="using%20the%20sql%20genie">Using the SQL Genie</ref>
    </see>
    <terms>sql helper,function,genie,object,query,sql,sql query,Xbasic</terms>
</page>