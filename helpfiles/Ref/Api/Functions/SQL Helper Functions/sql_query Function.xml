<page api="xb" build="5127">
    <shortlink>api sql query function</shortlink>
    <topic>sql_query Function</topic>
    <description>Performs a SQL select query and returns the results as JSON data.</description>
    <prototypes>
        <prototype>p Result = sql_query(C cnIn | SQL::Connection cnIn, c statement [, sql::arguments argsIn [, L flagPortableSQL[, L formatJSON]]]);</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>cnIn</name>
            <types>
                <type>C</type>
                <type>SQL::Connection</type>
            </types>
            <description>Either an open SQL::Connection object or connection string.</description>
        </argument>
        <argument>
            <name>statement</name>
            <type>C</type>
            <description>SQL statement to execute. Must be a SELECT statement.</description>
        </argument>
        <argument optional="true">
            <name>argsIn</name>
            <type>SQL::Arguments</type>
            <description>A SQL::Arguments object containing the arguments used in the SQL statement.</description>
        </argument>
        <argument optional="true">
            <name>flagPortableSQL</name>
            <type>L</type>
            <description>Default = .T.. Specify if SQL statement is portable (.T.) or native (.F.) syntax.</description>
        </argument>
        <argument optional="true">
            <name>formatJSON</name>
            <type>L</type>
            <description>Default = .F.. Specify if the JSON should be nicely formatted.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result</name>
            <types>
                <type>p</type>
            </types>
            <description>Returns an object with the following properties:</description>
            <properties>
                <property>
                    <name>error</name>
                    <type>L</type>
                    <description>.T. if an error occurred. Otherwise .F.</description>
                </property>
                <property>
                    <name>errorText</name>
                    <type>C</type>
                    <description>If an error occurred, contains the error message.</description>
                </property>
                <property>
                    <name>json</name>
                    <type>C</type>
                    <description>If no error occurred, contains the JSON data returned by the function.</description>
                </property>
            </properties>
        </return>
    </returns>
    <discussion>
        <p>This function is a convenience function. It is a wrapper around the low level Xbasic AlphaDAO commands.</p>
    </discussion>
    <example code="xb"><![CDATA[dim result as p
dim sql as c = "SELECT FIRST 10 * FROM customers"
dim cnIn as c = "::Name::northwind"

result = sql_query(cnIn, sql)

? result.error
= .F.

? result.json
= [
{"CustomerID" : "ALFKI"},
{"CustomerID" : "ANATR"},
{"CustomerID" : "ANTON"},
{"CustomerID" : "AROUT"},
{"CustomerID" : "BERGS"},
{"CustomerID" : "BLAUS"},
{"CustomerID" : "BLONP"},
{"CustomerID" : "BOLID"},
{"CustomerID" : "BONAP"},
{"CustomerID" : "BOTTM"}
]]]></example>
</page>