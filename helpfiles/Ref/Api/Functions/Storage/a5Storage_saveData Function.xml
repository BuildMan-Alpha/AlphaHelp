<page api="xb">
    <shortlink>api a5 storage save data function</shortlink>
    <topic>a5Storage_saveData Function</topic>
    <description>Saves data to storage, including saving files to Amazon S3 or Azure. Same as a5Storage_saveFile(), except takes a blob as input rather than a filename. 
    </description>
    <prototype>L a5Storage_saveData(C connectionString ,b blob ,C itemName [,C mimeType [,* pResult, [L flagSetReadPermission [,L flagOverwriteExistingObject]]]])</prototype>
    <arguments>
        <argument>
            <name>connectionString</name>
            <description>Character. Storage connection string with ::storage:: as a prefix.</description>
        </argument>
        <argument>
            <name>blob</name>
            <description>name of the blob to save in storage.</description>
        </argument>
        <argument>
            <name>itemName</name>
            <description>Character.  name of the object in storage. You can can specify a logical folder by using forward slashes in the name. For example: image/image1.jpg</description>
        </argument>
        <argument optional="true">
            <name>mimeType</name>
            <description>Character. the mime type of the object. If you don't specify this property, the value can be inferred from the extension you assign to the itemName property. See *[extlink:Media types@https://www.iana.org/assignments/media-types/media-types.xhtml]* for a list of mime types.</description>
        </argument>
        <argument optional="true">
            <name>pResult</name>
            <description>* An optional dot variable that you can pass in that will be populated with information about the object.</description>
        </argument>
        <argument optional="true">
            <name>flagSetReadPermission</name>
            <type>L</type>
            <description>Default = *[xb:.f.]*. If set to *[xb:.t.]*, adds read access to the object for everyone.</description>
        </argument>
        <argument optional="true" build="7918">
            <name>flagOverwriteExistingObject</name>
            <type>L</type>
            <description>
                <p>Default = *[xb:.t.]*. If *[xb:.t.]*, if an object already exists in the storage with the same name, the object is replaced by the uploaded data. Otherwise, the uploaded data is assigned a unique name. If the object is renamed and you pass in the optional *[xb:pResult]* parameter, the actual object name that was used to save the new object is available in the *[xb:pResult.actualItemName]* property.</p>
            </description>
        </argument>
    </arguments>
    <sections>
        <section>
            <description>
                <p>
                    <example code="xb"><![CDATA[dim img64 as c = "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=="
dim decodedImg as b
decodedImg = base64decode(img64)

dim filename as c = "mydata.png"
dim mime as c = "image/png"
dim result as P
a5storage_savedata("::storage::disk",decodedImg,filename,mime,result)

? result
= AbsolutePath = "file://C:\Users\user1\Documents\AlphaAnywhere\Demo\Demo.WebProjects\Default.WebProject\images\mydata.png"
ContentType = "image/x-png"
hasError = .F.
ModifiedTime = 05/06/2021 12:29:25 64 pm
Name = "mydata.png"
size = 85
timeTakenMilliseconds = 5]]></example>
                </p>
            </description>
        </section>
    </sections>
    <terms>amazon s3,azure,s3 bucket</terms>
    <see>
        <ref link="named%20storage%20connection%20strings">Storage Connections</ref>
        <ref link="api a5 storage list items function">a5storage_listitems Function</ref>
        <ref link="api a5storage getitem as blob function">a5storage_getItem_as_blob Function</ref>
        <ref link="api a5 storage delete item function">a5storage_deleteItem Function</ref>
        <ref link="api a5storage getitem as file function source">a5storage_getitem_as_file Function</ref>
        <ref link="a5Storage_getItemProperties function">a5storage_getItemProperties Function</ref>
        <ref link="api a5 storage save file function">a5storage_savefile Function</ref>
        <ref link="api a5storage_copyfiles function">a5storage_copyFiles Function</ref>
    </see>
</page>