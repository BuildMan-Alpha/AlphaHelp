<page>
   <topic>TABLEMIN Function</topic>
     <description>Returns the minimum value of matching records in a specified table.</description>
     
   <syntax>Smallest_Of_Values as A = TABLEMIN(C tablename,C filter,C field)</syntax>
   <arguments>
     <argument>
         <name>tablename</name>
         <description>The full drive, path, name, and extension of the table. If you omit the drive, path, and extension, Alpha Anywhere searches the directory of the current table.
</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>A character filter expression that evaluates to a logical value. Selects records to examine.
</description>
     </argument>
     <argument>
         <name>field</name>
         <description>An expression based on character, numeric, date, or exponent numeric field(s) in the Lookup_Table.  
</description>
     </argument>
   </arguments>
 
   <discussion>
Searches the specified Lookup_Table for one or more records that satisfy the specified Filter, and returns the smallest of the values contained in the Lookup_Expression.  The Filter must return a logical value, either True (.T.) or False (.F.). For example, to choose all of the records in a table, use the logical constant ".T." as a filter. To choose only the records where the STATE field is equal to TN, use the filter "STATE = 'TN'". Note that the entire filter is always in quotations, and the character value, TN, is in single quotes.
 Note : If no records satisfy the filter, Alpha Anywhere returns a zero value.
   </discussion>
  
   <sections>
       <section>
            <description>Assume that a department purchasing table (PURCHASE) contains the following records:</description>
            
       
   <list>
   <item>
   <name-title>PURCHASE TABLE</name-title>
   <description-title>></description-title>
   </item>
   
   <item>
   <name-title>MANAGER</name-title>
   <description-title>COST, BILL_DATE, and PAID_UP</description-title>
   </item>
   
   <item>
   <name>ANDRY</name>
   <description>18500.00 01/01/2003 T</description>
   </item>
   
   <item>
   <name>BROWN</name>
   <description>49.95 02/01/2003 T</description>
   </item>
   
   <item>
   <name>BROWN</name>
   <description>12.99 04/01/2003 F</description>
   </item>
   
   <item>
   <name>FARLEY</name>
   <description>7995.00 03/01/2003 F</description>
   </item>
   
   <item>
   <name>FARLEY</name>
   <description>142.16 04/10/2003 T</description>
   </item>
  
   <item>
   <name>FARLEY</name>
   <description>423.00 05/10/2003 F</description>
   </item>
  
 
   </list>
   
   </section>
   </sections>
    <sections>
       <section><title>All Records</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table:
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF",".T.","COST")
= 12.990000

]]></example>
       </section>
   </sections>
   
   
   
   
   <sections>
       <section><title>Filter Using a Specific Character String</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where "Farley" is the manager:
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF", "MANAGER = 'FARLEY'", "COST")
= 142.160000

]]></example>
       </section>
   </sections>
   
   
   
   
   
    <sections>
       <section><title>Filter Using a Character Variable</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where the manager matches the character string previously assigned to the variable vManager.
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF","Manager = '" + vManager + "' ","COST")
= 12.990000 ' if vManager is "BROWN"
]]></example>
       </section>
   </sections>
   
   
   
    <sections>
       <section><title>Filter Using a Specific Number</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where the Cost is greater than 100.00.
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF","Cost > 100.00", "COST")
= 142.160000

]]></example>
       </section>
   </sections>
   
   
   
   
    <sections>
       <section><title>Filter Using Numeric Variable</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where the Cost is greater than whatever amount has been previously assigned to the numeric variable vCost.
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF","Cost > " + vCost, "COST")
= Returns 7995.000000 ' if vCost = 1000.00
]]></example>
       </section>
   </sections>
   
   
   
   
   <sections>
       <section><title>Filter Using a Specific Date Value</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where the Bill_Date is equal to or later than February 1, 2003.
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF","BILL_DATE >= {02/01/2003}", "COST")
= 12.990000
]]></example>
       </section>
   </sections>
   
   
   
   <sections>
       <section><title>Filter Using Date Variables</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where the Bill_Date is equal to or later than the date previously assigned to vBeginDate AND equal to or later than the date previously assigned to vEndDate :
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF","BETWEEN(BILL_DATE,{" + DTOC(vBeginDate) + "},{" + DTOC(vEndDate) + "})", "COST")
49.950000 ' if vBeginDate is 01/01/2003 and vEndDate is 03/31/2003

]]></example>
       </section>
   </sections>
   
   
   <sections>
       <section><title>Filter Using Logical Variables</title>
            <description>The following expression returns the smallest of the values in the Cost field for all records in the Purchase table where Paid_Up is true:
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF", "PAID_UP", "COST")
= 49.950000
]]></example>
       </section>
       
       <section>
            <description>While this expression returns the smallest of the values in the Cost field for all records in the Purchase table where Paid_Up is not true:
</description>
            <example><![CDATA[
? TABLEMIN("PURCHASE.DBF", ".NOT. PAID_UP", "COST")
= 12.990000
]]></example>
       </section>
       
       
   </sections>
   
   
   <sections>
   <section>
   <title>Thanks to</title>
   <description>Tom Cone</description>
   </section>
   </sections>
   
   
   
   <see>
        <ref link="Table Object Functions and Methods">Table Object Functions and Methods</ref>
        <ref link="Table Functions">Other Table Functions</ref>
      <ref link="Document Type Functions">Record Functions</ref>
      <ref href="/Ref/Api/Functions/Document Types/DBF/Table Functions/TABLE and DB Functions Contrasted.xml">TABLE and DB Functions Contrasted</ref>
      <ref link="Writing Expressions">Writing Expressions</ref>
      <ref>Thanks to</ref>
      <ref>Tom Cone</ref>
   </see>
   
<terms>table,contains,directory,expressions,field,filter,function,logical,number,record,string,variable,writing</terms>
</page>