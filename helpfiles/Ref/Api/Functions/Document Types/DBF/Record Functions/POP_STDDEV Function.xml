<page>
   <topic>POP_STDDEV Function</topic>
    <description>Get the population standard deviation of subexpression over group 'over' sampled each group 'each'</description>

   <syntax>Population_Standard_Deviation as N = pop_stddev(N subexpr[,G over[,G each])</syntax>
   <arguments>
     <argument>
         <name>subexpr</name>
         <description>Any valid expression that includes a field or a combination of fields from the current table or set that specifies what you want to examine. Numeric</description>
     </argument>
     <argument>
         <name>over</name>
         <description>Optional. When to use the function (instead of on every record).</description>
     </argument>
     <argument>
         <name>each</name>
         <description>Optional. When to reset the value produced by the function to 0 (instead at the end of all records).
'Over' and 'Each' are optional parameters that define the range of records to summarize, and may or may not be required, depending upon the context of the summary calculation. Possible values for GRP     >Group and GRP     >Sub_Group include:
</description>
<list>

<item>
<name>GRAND (all records)</name>
</item>

<item>
<name>The name of the current table</name>
</item>

<item>
<name>The name of a table in the current set</name>
</item>

<item>
<name>The name of a grouping level that is defined in a report layout</name>
</item>

<item>
<name>DETAIL (over the records in the detail section)</name>
</item>

</list>
     </argument>
   </arguments>
     <discussion>
POP_STDDEV() returns the population standard deviation of the Expression evaluated for a group of records. The expression is evaluated for all the records in the sub-group that are related to the group's current record, and the population standard deviation for these records is returned.
To follow this formula, compute the Average Value returned by the summary expression for all the records in the group. Then, for each record in the group, take the Average Value, subtract it from the Value of the summary expression for that record, and square the difference. Add all these resulting values together, divide this sum by the number of records in the group, and then compute the square root of that value.
For example, to summarize the line-items in an invoice set, the Group Name parameter might be GRP   >INV_ITEM. This means the Summary operation includes only those related child records from the INV_ITEM table.  To summarize all the records in a table or set, use the name of the current or primary table as the group name. For example, GRP   >INVOICE produces a summary result based upon all invoices.
Limitations: This function is a report writer function, not intended for table level field rules or other expressions. While the function may perform in some areas outside of the report writer, its use there is not supported.

   </discussion>
  
   <sections>
       <section><title>Example</title>
            <description>Assume that an invoicing set consists of two tables. One holds invoices ( INVOICE ), and the other holds each invoice's line-items ( INV_ITEM ):
</description>
           <list>
           <item>
           <name-title>INVOICE</name-title>
           <description></description>
           </item>
           
           <item>
           <name-title>INV_NO</name-title>
           <description-title>CUST_ID and INV_TOTAL</description-title>
           </item>
           
           <item>
           <name>I100</name>
           <description>C001 10.00</description>
           </item>
           
           <item>
           <name>I101</name>
           <description>C003 25.50</description>
           </item>
           
           <item>
           <name>I102</name>
           <description>C001 100.75</description>
           </item>
           
  			<item>
           <name>I103</name>
           <description>C004 32.50</description>
           </item>
           
           <item>
           <name>I104</name>
           <description>C002 110.25</description>
           </item>
           
           <item>
           <name>I105</name>
           <description>C005 98.35</description>
           </item>
  
  
  
  
  
   
           
           </list>
       </section>
       
        <section>
  
  
  
  
  
  
  
  
  
  
            <list>
            <item>
            <name-title>INV_ITEM</name-title>
            <description></description>
            </item>
            
            <item>
            <name-title>INV_NO</name-title>
            <description-title>AMOUNT</description-title>
            </item>
            
            <item>
            <name>I100</name>
            <description>4.50</description>
            </item>
            
            <item>
            <name>I100</name>
            <description>5.50</description>
            </item>
            
            <item>
            <name>I101</name>
            <description>25.50</description>
            </item>
            
            <item>
            <name>I102</name>
            <description>3.25</description>
            </item>
            
            <item>
            <name>I102</name>
            <description>35.25</description>
            </item>
            
            <item>
            <name>I102</name>
            <description>62.25</description>
            </item>
            
            <item>
            <name>I103</name>
            <description>32.50</description>
            </item>
            
            <item>
            <name>I104</name>
            <description>110.25</description>
            </item>
            
             <item>
            <name>I105</name>
            <description>98.35</description>
            </item>
            </list>
       </section>
       
        <section>
            <description>INVOICE is related to INV_ITEM through a one-to-many link on the INV_NO field.
To find the population standard deviation of multiple line-item records for a particular invoice, use the following expressions:
</description>
            <example><![CDATA[
pop_stddev(INVITEM->AMOUNT, GRP -> INVHEAD) -> 0.50, if the current INV_NO is "I100"
pop_stddev(INVITEM->AMOUNT, GRP -> INVHEAD) -> 24.12, if the current INV_NO is "I102"
]]></example>
       </section>
   </sections>
   <limitations>This function is a report writer function, not intended for table level field rules or other expressions.</limitations>
   <see>
      <ref link="Document Type Functions">Record Functions</ref>
      <ref>Report Functions and Methods</ref>
   </see>
  <terms>record,expressions,field,function,number,operation,reports,set,summarize</terms>
</page>