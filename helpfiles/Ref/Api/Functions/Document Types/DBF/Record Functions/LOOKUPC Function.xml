<page>
   <topic>LOOKUPC Function</topic>
    <description>Returns the value of a character expression in an external table.</description>
    
   <syntax>Output_String as C = LOOKUPC(C matchtype,A keyvalue,C result_expression,C tablename,C tagname)</syntax>
   <arguments>
     <argument>
         <name>matchtype</name>
         <description>A 1-character string that specifies which lookup table record should supply the value if more than one record matches the Key_Value.

 "F" = First

 "L" = Last

 "C" = Closest match. 
 Closest match uses the first occurrence of the closest inexact match if an exact match does not exist, otherwise it uses the first occurrence of an exact match.
</description>
     </argument>
     <argument>
         <name>keyvalue</name>
         <description>The value of a key to search for. The type of Key_Value must be the same as the type of the keys in the index specified by Index_Name.
</description>
     </argument>
     <argument>
         <name>result_expression</name>
         <description>The name of a field in the Lookup_Table or a valid expression which may contain one or more fields.
</description>
     </argument>
     <argument>
         <name>tablename</name>
         <description>The fully qualified name of a table. If you omit the drive and path, Alpha Anywhere searches the directory of the current database.
</description>
     </argument>
     <argument>
         <name>tagname</name>
         <description>The name of an index in the index lookup table that may contain the Key_Value.</description>
     </argument>
   </arguments>
  
   <discussion>
LOOKUPC() searches an external lookup table ( Lookup_Table ) for an indexed record matching the Key_Value, and returns the character value in Lookup_Expression from the matching record. Alpha Anywhere performs an indexed search of the Lookup_Table using the Index_Name index.
 Note : If a record with a matching Key_Value is not found, Alpha Anywhere returns a blank value.

   </discussion>
 
   <sections>
       <section>
       <title>Example</title>
            <description>Assume that the Invoice and Customer tables contain the following records and that the index, CUSTOMER_ID, exists on the CUST_ID field in Customer :
</description>
            
            <list>
            
            
  
  
  
  
  
            <item>
            <name>INVOICE</name>
            <description></description>
            </item>
            
            <item>
            <name>INV_NO</name>
            <description>CUST_ID and INV_DATE</description>
            </item>
            
            <item>
            <name>I007</name>
            <description>C003 06/08/1993</description>
            </item>
            
            <item>
            <name>I008</name>
            <description>C005 01/23/1993</description>
            </item>
            
            <item>
            <name>I009</name>
            <description>C002 06/25/1993</description>
            </item>
            
            <item>
            <name>I010</name>
            <description>C004 06/25/1993</description>
            </item>
            
            </list>
       </section>
       <section>
       <list>
       
  
  
  
  
  
       <item>
            <name>CUSTOMER</name>
            <description></description>
            </item>
            
            <item>
            <name>CUST_ID</name>
            <description>LAST_NAME</description>
            </item>
            
            <item>
            <name>C002</name>
            <description>Peabody</description>
            </item>
            
            <item>
            <name>C003</name>
            <description>Rebo</description>
            </item>
            
            <item>
            <name>C004</name>
            <description>Mesner</description>
            </item>
            
            <item>
            <name>C005</name>
            <description>Feld</description>
            </item>
       
       </list>
       </section>
       <section>
            <description>If the following expression defines a calculated field or global variable for the Invoice table, Alpha Anywhere returns the first name in the customer record that matches the current invoice record:
</description>
            <example><![CDATA[
dim tn as C
tn = table.filename_get("customer")
? tn
= "c:\program files\a5v6\samples\webappserverdemo\Customer.Dbf"
? lookupc("F", CUST_ID, "LAST_NAME", tn, "CUSTOMER_ID")
= "Feld" ' if current invoice record is I008 (making CUST_ID = C005)
		]]></example>
       </section>
       <section>
       <description>Note : You can use TABLE.FILENAME_GET()to get the fully qualified name of a table.</description>
       
       </section>
       
   </sections>
   <see>
      <ref href="/Api/Functions/Document Types/index.xml">Record Functions</ref>
      <ref>Overview: Functions and Expressions</ref>
      <ref href="/Desktop/Guide/Design/Platform/Xbasic/A Procedure for Building Complex Expressions.html">A Procedure for Building Complex Expressions</ref>
   </see>
   
<terms>record,calculated field,contains,directory,expressions,field,function,index,lookup,search,string,variable</terms>
   
</page>