<page api="xb">
    <shortlink>api dbsum function</shortlink>
    <topic>DBSUM Function</topic>
    <description>Returns the sum of fields of matching records in a specified table.</description>
    <prototype>Sum_Of_Values as N = DBSUM(Lookup_Table as C, tagname as C, Key_Value as A, Lookup_Expression as C)</prototype>
    <arguments>
        <argument>
            <name>Lookup_Table</name>
            <type>C</type>
            <description>The full drive, path, name, and extension of the table. If you omit the drive, path, and extension, Alpha Anywhere searches the directory of the current table.</description>
        </argument>
        <argument>
         <name>tagname</name>
         <description>The name of an index.</description>
        </argument>
        <argument>
         <name>Key_Value</name>
         <description>An explicit value or the name of a field in the table containing a value.</description>
        </argument>
        <argument>
            <name>Lookup_Expression</name>
            <type>C</type>
            <description>An expression based on numeric or exponent numeric field(s) in the Lookup_Table.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Sum_Of_Values</name>
            <type>N</type>
            <description>Returns the total sum of the specified fields in the table. Returns 0 if no records are found.</description>
        </return>
    </returns>
    <discussion>
        <p>DBSUM() searches the specified Lookup_Table for one or more records with the specified Key_Value, and returns the sum of the values contained in Lookup_Expression. If no records with matching key values are found, DBSUM() returns a zero value.</p>
    </discussion>
    <sections>
        <section>
            <title>Example</title>
            <description>Assume that a customer order table (ORDER) contains the following records:</description>
        </section>
        <section>
            <description>
                <table>
                    <tr>
                        <th>CUSTOMER_ID</th>
                        <th>AMOUNT</th>
                    </tr>
                    <tr>
                        <td>C100</td>
                        <td>234.45</td>
                    </tr>
                    <tr>
                        <td>C100</td>
                        <td>123.67</td>
                    </tr>
                    <tr>
                        <td>C100</td>
                        <td>100.23</td>
                    </tr>
                    <tr>
                        <td>C101</td>
                        <td>231.34</td>
                    </tr>
                    <tr>
                        <td>C102</td>
                        <td>111.12</td>
                    </tr>
                    <tr>
                        <td>C102</td>
                        <td>987.23</td>
                    </tr>
                </table>
            </description>
        </section>
        <section>
            <description>The following expression returns the sum of the values in the AMOUNT field for all the records in the ORDER table with a customer Id number of "C102":</description>
            <example>
                <![CDATA[? dbsum("ORDER.DBF", "CUST_ID", "C102", "AMOUNT")
= 1098.35]]>
            </example>
        </section>

        <section>
            <description>This example uses the Customer_ID index to find the sum of the discounts on items sold to customer ID "00000005".</description>
            <example>
                <![CDATA[? dbsum("invoice_header", "Customer_ID", "00000005", "Discount")
= 10]]>
            </example>
        </section>
        <section>
            <description>This example is based on the invoice_items table of the AlphaSports database.</description>
            <example>
                <![CDATA[dim pnum as C = "P001"
? dbsum("invoice_items", "Product_ID", pnum, "Quantity")
= 18]]></example>
        </section>
        <section>
            <title>Example: Filtering Results</title>
            <description>The Lookup_Expression can be used to filter the records. For example, the following Xbasic queries the AlphaSports product table to sum products with a retail greater than $10 for a particular vendor:</description>
            <example>
                <![CDATA[dim vnum as C = "V002"
? dbsum("product", "vendor", vnum, "if(retail > 10,Qty_In_Sto,0)")
= 2138]]>
            </example>
        </section>
    </sections>
    <see>
        <ref link="Document Type Functions">Record Functions</ref>
    </see>

    <terms>record,contains,directory,expressions,field,function,index,item,number</terms>
</page>