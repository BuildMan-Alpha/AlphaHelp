<page>
   <topic>UI_SHAPE_ROUND_RECT Function</topic>
   <syntax>V UI_SHAPE_ROUND_RECT(C shape,N x,N y,N width,N height,N corner_width,N corner_height,[,C shape_operation])</syntax>
   <arguments>
     <argument>
         <name>shape</name>
         <description>The name of a new or existing shape.</description>
     </argument>
     <argument>
         <name>x</name>
         <description>The horizontal coordinate of the upper left corner of the rectangle.

Larger values move right.</description>
     </argument>
     <argument>
         <name>y</name>
         <description>The vertical coordinate of the upper left corner of the rectangle. Larger values move down.</description>
     </argument>
     <argument>
         <name>width</name>
         <description>The width of the rectangle.</description>
     </argument>
     <argument>
         <name>height</name>
         <description>The height of the rectangle.</description>
     </argument>
     <argument>
         <name>corner_width</name>
         <description>The horizontal stretch of the corner's curve.</description>
     </argument>
     <argument>
         <name>corner_height</name>
         <description>The vertical stretch of the corner's curve.</description>
     </argument>
     <argument>
         <name>shape_operation</name>
         <description>Optional. Default = erase previous shape. An indication of how to combine the shape with other shapes.
</description>
<list>
<item>
<name>"and" = show only the intersection of the rectangle and any other shapes.</name>
</item>

<item>
<name>"or" = show both the union of the rectangle and any other shapes.</name>
</item>

<item>
<name>"xor" = show both the rectangle and any other shapes, but do not show their intersection. </name>
</item>

</list>
     </argument>
   </arguments>
   <description>Create/modify a named shape with a rounded rect.</description>
   <discussion>
The UI_SHAPE_ROUND_RECT() function draws a round cornered rectangle into the shape buffer. You can then use the shape buffer:

   </discussion>
   
   <sections>
       <section>
       <list>
       
<item><name>to define a new object to write to the bitmap, or
</name></item><item><name>
 with the CLIP_SHAPE()to limit the portion of the bitmap that can be written on. 
</name></item></list>
       </section>
       
       
       
 
       <section>
            <description>Note : This function is only used in the Code sections of UI_BITMAP_DRAW(), UI_SCREEN_DRAW(), and UI_PRINTER_DRAW(). 
</description>
<figure><link>images/GR_ui_shape_round_rect.gif</link></figure>
       </section>
       
       
<section>



</section>
      
   </sections>
   
   
   <sections><section>
   <title>Example</title>
   <description>The following example combines two round cornered rectangles to make a clipping shape.
</description>
   <example><![CDATA[
ui_bitmap_load("stone", file.to_blob("C:\WINDOWS\Greenstone.bmp"))
ui_bitmap_create("test", 4, 2)
ui_shape_round_rect("rect", 0, 0, 2, 1, .25, .25)
ui_shape_round_rect("rect", .25, .25, 2, 1, .25, .25, "xor")
ui_bitmap_draw("test", <<%code%
inner_rect(0, 0, 4, 2)
clip_shape("rect", .25, .25)
bitmap("stone", 0, 0, 4, 2)
%code%)
ui_dlg_box("", "{image=test}")
   ]]></example>   
   </section>
   
   </sections>
   <limitations>This function is only used in the Code sections of UI_BITMAP_DRAW(), UI_SCREEN_DRAW(), and UI_PRINTER_DRAW().</limitations>
   <see>
      <ref href="/Api/Functions/Document Types/index.xml">Bitmap and Graphic Functions</ref>
   </see>
<terms>bitmap,defaults,function,graphics,object</terms>
</page>