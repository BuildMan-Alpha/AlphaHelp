<page>
    <shortlink>api bitmap alpha function</shortlink>
   <topic>BITMAP_ALPHA Function</topic>
   <description>Draws a bitmap using a different bitmap an alpha-value.</description>
   <syntax>V BITMAP_ALPHA(C bitmap_name,N XPos,N YPos,C level_bitmap)</syntax>
   <arguments>
     <argument>
         <name>bitmap_name</name>
         <description>The name of the bitmap to modify.</description>
     </argument>
     <argument>
         <name>XPos</name>
         <description>The horizontal coordinate of the upper left corner of the bitmap.</description>
     </argument>
     <argument>
         <name>YPos</name>
         <description>The vertical coordinate of the upper left corner of the bitmap.</description>
     </argument>
     <argument>
         <name>level_bitmap</name>
         <description>The name of the bitmap to use as the alpha channel. A pixel value of 0 is completely transparent. A pixel value of 255 is completely opaque. Intermediate values represent degrees of transparency.
</description>
     </argument>
   </arguments>
   
   <discussion>
BITMAP_ALPHA() sets the transparency of each of the pixels in a bitmap according to the values of the corresponding pixels in an alpha channel bitmap, then draws the result.


   </discussion>
 
   <sections>
       <section><title>Example</title>
            <description>Get the original color image, then extract the color data and the alpha channel data.</description>
            <example><![CDATA[
png_data = file.to_blob("c:\documents\Xbasic Reference\Images\toucan.png")
rgb_data = png_to_bitmap(png_data, "R")
trans_data = png_to_bitmap(png_data, "A")

]]></example>
       </section>
       
       <section>
            <description>Create two bitmaps from the color data and the alpha channel data.</description>
            <example><![CDATA[
ui_bitmap_load("rgb", rgb_data)
ui_bitmap_load("trans", trans_data)

]]></example>
       </section>
       
        <section>
            <description>Calculate the positions of the three images.</description>
            <example><![CDATA[
pixsize = ui_bitmap_info_get(rgb_data, "w,h")
xpix = val( word(pixsize, 1, ",") )
ypix = val( word(pixsize, 2, ",") )
xperin = ui_info(4)
yperin = ui_info(5)
width = xpix/xperin
height = ypix/yperin

]]></example>
       </section>
       
        <section>
            <description>Combine the three images.</description>
            <example><![CDATA[
ui_bitmap_create("combine", width, height)
stone_data = file.to_blob("C:\WINDOWS\Greenstone.bmp")
ui_bitmap_load("Stone", stone_data)
ui_bitmap_draw("combine", <<%code%
bitmap("stone", 0, 0)
bitmap_alpha("rgb", 0, 0, "trans")
%code%)

]]></example>
       </section>
       
        <section>
            <description>Display the three images. </description>
           <figure><link>images/GR_bitmap_alpha.gif</link></figure>
       </section>
       
       
        <section>
            
            <example><![CDATA[
ui_dlg_box("image", <<%dlg%
{image=rgb} {image=trans} {image=combine}
%dlg%)

]]></example>
       </section>
       
   </sections>
   <limitations>Used only in the Code sections of UI_BITMAP_DRAW(), UI_SCREEN_DRAW(), and UI_PRINTER_DRAW().</limitations>
   <see>
      <ref link="Document Type Functions">Bitmap and Graphic Functions</ref>
   </see>
 
<terms>bitmap,colors,combine,display,function,graphics</terms>

</page>