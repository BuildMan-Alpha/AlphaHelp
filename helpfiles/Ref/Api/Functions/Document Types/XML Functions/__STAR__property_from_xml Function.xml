<page api="xb">
    <shortlink>api star property from xml function</shortlink>
    <topic>*property_from_xml Function</topic>
    <description>Read property from XML, if reversible flag is set, the XML we generate will match (adds levels to handle scaling tags - i.e. adding runs of tags and mapping names).</description>
    <prototypes>
        <prototype>C *PROPERTY_FROM_XML(xml as c,prop as p[, reversible as l])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>xml</name>
            <type>C</type>
            <description>The XML to parse into a dot variable.</description>
        </argument>
        <argument>
            <name>prop</name>
            <type>P</type>
            <description>A dot variable that will be populated with the parsed XML.</description>
        </argument>
        <argument optional="true">
            <name>reversible</name>
            <type>L</type>
            <description>Default = .f. If .t., mapping information for the XML format will be included in the *[xb:prop]* variable.</description>
        </argument>
    </arguments>
    <discussion>
        <p>*property_from_xml() populates an Xbasic Dot Variable with XML Attribute/Element Values. Xbasic has always had very strong XML parsing features (see [Parsing XML Documents with Xbasic]), however the new *property_from_xml() function provides a new way in working with XML. This function populates an Xbasic dot variable with the data from the XML document. Once you have he Xbasic variable, it is very easy to extract a specific element or attribute value from the XML document.</p>
    </discussion>
    <sections>
        <section>
            <title>Example</title>
            <example code="xb"><![CDATA[dim xml as c = http_get_page2("http://feeds.gawker.com/lifehacker/full")
dim content as p
*property_from_xml(xml,content)
dim xmlvalue as c 
xmlvalue = content.rss.channel.item[17].title

'to get all of the titles, use the .dump_properties() method
dim allTitles as c 
allTitles = content.rss.channel.item.dump_properties("title")]]></example>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Working with XML Documents</title>
                <description>
                    <p>The *property_from_xml() function and XML document viewer make it easy to work with XML documents. Watch the video below to learn how to use these features when working with XML documents using Xbasic.</p>
                </description>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/53c03ff3</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link link="server xb parsing xml documents with xbasic">Parsing XML Documents with Xbasic</link>
    </links>
    <see>
        <ref link="server xb parsing xml documents with xbasic">Parsing XML Documents with Xbasic</ref>
    </see>
    <terms>xml,function,logical,pointer</terms>
</page> 