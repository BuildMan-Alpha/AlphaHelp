<page source="Xbasicaddins/ajax_webcomponents.a5lib/scripts/qrcode_bitmap.a5udf" generated="true" >
  <shortlink>api qrcode bitmap function</shortlink>
    <topic>qrcode_bitmap Function</topic>
    <description>Generates a qrcode image. Returns either binary PNG data or base64 encoded string with 'data:image/png;base64,' prefix</description>
    <prototypes>
        <prototype>B blobOrString = qrcode_bitmap(C text [,C correctionLevel [,N width [,N height [,L flagBase64encodedWithPrefix ]]]])</prototype>
        <prototype>C blobOrString = qrcode_bitmap(C text [,C correctionLevel [,N width [,N height [,L flagBase64encodedWithPrefix ]]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>text</name>
            <type>C</type>
            <description>Character</description>
        </argument>
        <argument optional="true">
            <name>correctionLevel</name>
            <type>C</type>
            <description>
                <p>Character. Default is 'M'</p>
                <p>Correction level can be L, M, Q or H (L=7%, M=15%, Q=25%, H=30%). See [QRCode Namespace] for more information.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>width</name>
            <type>N</type>
            <description>Width of bitmap in pixels</description>
        </argument>
        <argument optional="true">
            <name>height</name>
            <description>Height of bitmap in pixels. If .t. then return a base64 encoded string with the 'data:image/png;base64,' prefix</description>
        </argument>
        <argument optional="true">
            <name>flagBase64encodedWithPrefix</name>
            <type>L</type>
            <description>If .t. then return a base64 encoded string with the 'data:image/png;base64,' prefix</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>blobOrString</name>
            <types>
                <type>B</type>
                <type>C</type>
            </types>
            <description>
                <p>Returns a QR Code image in PNG file format. If *[xb:base64Encode]* was set to .t., the returned data will be a character string containing the QR Code as a base64 encoded value.</p>
                <p>If *[xb:base64Encode]* was set to .f. (the default), the returned data will be a blob containing the PNG image binary.</p>
            </description>
        </return>
    </returns>
    <discussion>
        <p>Generates a bitmap of a QR Code - This function is a wrapper for the [::QRCode::Creator::GeneratePng function]. However, it is able to scale the bitmap to an explicit size.</p>
        <p>
            <example><![CDATA[dim qrcode as b = qrcode_bitmap("Hello World","M",300,300)]]></example>
        </p>
        <p></p>
    </discussion>
    <tip>
        <p>*[xb:qrcode_bitmap()]* can be used to create QR Codes in reports. To embed a calculated field directly into the report that contains a QR Code image generated using this function, you must convert the PNG binary to mime object:</p>
        <p>
            <example code="xb"><![CDATA[qrcodeCalcField = *mime_object("PNG",qrcode_bitmap("Hello World","M",300,300))]]></example>
        </p>
        <p>See also the [printQRCode() Function].</p>
    </tip>
    <links>
        <link link="api print QR code function">printQRCode() Function</link>
        <link link="QRCode Namespace">QRCode Namespace</link>
        <link link="QRCode::Creator::GeneratePng Method">::QRCode::Creator::GeneratePng function</link>
    </links>
    <terms>image,function,height,logical,string,text</terms>
</page> 