<page api="xb">
    <shortlink>api a5 generate html table function</shortlink>
    <topic>a5_generate_html_table Function</topic>
    <description>Takes a pointer to an open DBF table or SQL::ResultSet and generates an HTML table for all of the columns in the row.</description>
    <prototype>P a5_Generate_HTML_Table(P rs, C style [,N maxRows [,L flagShowHTML ]])</prototype>
    <arguments>
        <argument>
            <name>rs</name>
            <types>
                <type>SQL::ResultSet</type>
                <type>TABLE Pointer</type>
            </types>
            <description>A SQL::Result set or pointer to an [open DBF TABLE object].</description>
        </argument>
        <argument build="5260">
            <name>style</name>
            <type>C</type>
            <description>
                <p>The style name is used to generate the class names assigned to the table elements in the generated HTML. E.g. "Alpha" or "GrBlue".</p>
                <p>If you specify a "modern" style (e.g. "Alpha" or "GrBlue"), the classes assigned to the parts of the generated table will be those which map to the abstract class map names listed below (see [Resolve abstract CSS class names] to learn more about abstract class names):</p>
                <p>
                    <list>
                    <item>
                        <item-title>Abstract Class Name</item-title>
                        <description-title>Description</description-title>
                    </item>
                    <item>
                        <name>[class.gridPart]</name>
                        <description>Added to the &lt;table&gt; element.</description>
                    </item>
                    <item>
                        <name>[class.gridHeader]</name>
                        <description>Added to &lt;th&gt; elements.</description>
                    </item>
                    <item>
                        <name>[class.gridData]</name>
                        <description>Added to &lt;td&gt; elements containing data. Used in all odd data rows.</description>
                    </item>
                    <item>
                        <name>[class.gridDataAltOn]</name>
                        <description>Added to &lt;td&gt; elements containing data. Used in all even data rows.</description>
                    </item>
                    <item>
                        <name>[class.gridSeparator]</name>
                        <description>Added to the &lt;td&gt; element in separator rows</description>
                    </item>
                    </list>
                </p>
                <p>If a "legacy" style is used (e.g. "MobBlue"), the class names in the generated HTML will be similar to the ones listed below. (This is also the behavior in version 4.5.4.5 and older of Alpha Anywhere.):</p>
                <p><list>
                    <item>
                        <name>&lt;style&gt;FormTABLE</name>
                        <description>Added to the &lt;table&gt; element.</description>
                    </item>
                    <item>
                        <name>&lt;style&gt;ColumnTD</name>
                        <description>Added to &lt;th&gt; elements.</description>
                    </item>
                    <item>
                        <name>&lt;style&gt;DataTD</name>
                        <description>Added to &lt;td&gt; elements containing data. Used in all odd data rows.</description>
                    </item>
                    <item>
                        <name>&lt;style&gt;AltDataTD</name>
                        <description>Added to &lt;td&gt; elements containing data. Used in all even data rows.</description>
                    </item>
                    <item>
                        <name>&lt;style&gt;SeparatorTD</name>
                        <description>Added to the &lt;td&gt; element in separator rows</description>
                    </item>
                </list></p>
            </description>
        </argument>
        <argument optional="true">
            <name>maxRows</name>
            <type>N</type>
            <description>Default = 0 (all rows). The number of rows to to include in the table.</description>
        </argument>
        <argument optional="true">
            <name>flagShowHTML</name>
            <type>L</type>
            <description>Default = .f.. *[Desktop Applications Only]* If .t., the generated HTML will be shown in a popup window. This property should be set to *[xb:.f.]* in all web applications.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>html</name>
            <types>
                <type>P</type>
            </types>
            <description>Returns a dot variable with the following properties:</description>
            <properties>
                <property>
                    <name>completePage</name>
                    <type>C</type>
                    <description>A full HTML page that includes the generated table.</description>
                </property>
               <property>
                    <name>htmlTable</name>
                    <type>C</type>
                    <description>The HTML for the table.</description>
                </property>
            </properties>
        </return>
    </returns>
    <example code="xb"><![CDATA[stylename = "MobBlue"
dim cn as sql::Connection
cn.open("::Name::AADemo-Northwind")
cn.execute("SELECT CustomerId, Address, City, Country FROM CUSTOMERS")
dim html as p = a5_Generate_HTML_table(cn.ResultSet,stylename,14)

dim html2 as c 
' Process html table with style information
html2 = a5_html_page_prepare(html.htmltable,"",.f.,stylename)

' Show the page
a5_show_htmlchrome(html2)

stylename = "Alpha"
cn.execute("SELECT CustomerId, Address, City, Country FROM CUSTOMERS")
html = a5_Generate_HTML_table(cn.ResultSet,stylename,4)

' Process html table with style information
html2 = a5_html_page_prepare(html.htmltable,"",.f.,stylename)

' Show the page
a5_show_htmlchrome(html2)]]></example>
    <terms>html,a5,column,function,logical,pointer,styles</terms>
    <links>
        <link link="api%20objects%20table%20object%20functions%20and%20methods">open DBF TABLE object</link>
        <link link="ux%20properties%20resolve%20abstract%20css%20class%20names">Resolve abstract CSS class names</link>
    </links>
</page>