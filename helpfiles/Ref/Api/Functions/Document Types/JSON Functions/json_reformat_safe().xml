<page api="xb">
	<shortlink>json_reformat_safe Function</shortlink>
	<topic>json_reformat_safe Function</topic>
	<syntax>c json_text = json_reformat_safe(json_text as C [, flagIndent as L])</syntax>
	<arguments>
		<argument>
			<name>json_text</name>
			<type>C</type>
			<description>A string of JSON to reformat.</description>
		</argument>
		<argument optional="true">
			<name>flagIndent</name>
			<type>L</type>
			<description>Default value is .t.</description>
		</argument>
	</arguments>
	<description>The json_reformat_safe() function reformats a string of JSON data with line-breaks and optional indentation. </description>
	<discussion>json_reformat_safe() wraps the lower level json_reformat() function. The json_reformat() function only accepts 'properly formed' JSON strings (property names must be double quoted and string values must be double quoted). json_reformat_safe() will automatically convert JSON strings where property names are not quoted and strings are single quoted.</discussion>
	<example><![CDATA[dim json as c 
json = <<%txt%
{firstname: 'Fred', lastname: 'Smith', Address: {
Street: '123 Main St', 
City: 'Boston', 
State: 'Ma'
}
}
%txt%

?json_reformat_safe(json)
= {
    "firstname": "Fred",
    "lastname": "Smith",
    "Address": {
        "Street": "123 Main St",
        "City": "Boston",
        "State": "Ma"
    }
}

?json_reformat_safe(json,.f.)
= {"firstname":"Fred","lastname":"Smith","Address":{"Street":"123 Main St","City":"Boston","State":"Ma"}}
]]></example>
	<see>
		<ref link="json_reformat Function">json_reformat()</ref>
		<ref link="json_sample_array Function">json_sample_array()</ref>
		<ref link="JSON Data">JSON Data</ref>
	</see>
	<terms>JSON,function,string</terms>
</page>