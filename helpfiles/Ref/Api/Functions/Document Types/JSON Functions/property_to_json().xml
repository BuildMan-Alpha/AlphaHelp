<page api="xb">
    <shortlink>property_to_json Function</shortlink>
    <topic>property_to_json Function</topic>
    <prototype>dim json as C = property_to_json(p prop [, l changesOnly] )</prototype>
    <description>Takes a property, like a dot variable, and converts it to a JSON object.</description>
    <arguments>
        <argument>
            <name>prop</name>
            <type>p</type>
            <description>An object that contains the properties to convert to JSON.</description>
        </argument>
        <argument optional="true">
            <name>changesOnly</name>
            <type>L</type>
            <description></description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>json</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>Returns the dot variable as a JSON object.</p>
            </description>
        </return>
    </returns>
    <discussion> 
        <p>The property_to_json() function shares similarities with the json_generate() function. However, it uses a different mechanism and doesn't do nearly as much as json_generate.</p>
        <p>
            <example code="xb"><![CDATA[dim prop as p
prop.name_first = "John"
prop.name_last = "Smith"
prop.occupation = "Cobbler"

? property_to_json(prop)
= {"name":"John","name_first":"John","name_last":"Smith","occupation":"Cobbler"}]]></example>
        </p>
        <p>Json_generate() is designed so that you can do a full "round trip" (i.e. json_generate(), followed by json_parse() of the string produced by json_generate()) without losing any information.</p>
        <p>This is not the case with property_to_json().</p>
        <p>For example:</p>
        <p>
            <example code="xb"><![CDATA[dim p as p
p.name = "Fred"
p.city = "Boston"
p.date = date()
?json_reformat(property_to_json(p))
= {
    "name": "Fred",
    "city": "Boston",
    "date": "2019-04-11"
}]]></example>
        </p>
        <p>The above string is a valid JSON string, but notice that we have lost information about the original type of type of the "date" property.</p>
    </discussion>
    <see>
        <ref link="property_from_json Function">property_from_json Function</ref>
        <ref link="json_generate function">json_generate Function</ref>
        <ref link="JSON Data">JSON Data</ref>
    </see>
    <terms>JSON,function</terms>
</page>