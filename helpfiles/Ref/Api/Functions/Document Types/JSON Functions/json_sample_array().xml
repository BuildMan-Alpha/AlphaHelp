<page>
	
	<topic>json_sample_array()</topic>
<description>Enumerate top level properties in array entries and return name+count. </description>
	<syntax>json_sample_array(c jsontext[, format [,n limit]])</syntax>
	
<sections>
	<section>
		<description>Uses format spec parameters.  Note that you can combine specs - i.e.  $ao for arrays and objects, $ar  for arrays and recursion.
</description>
	</section>
  <section>
	<list>
	<item><name>$n</name><description>name</description></item>
	<item><name>$i</name><description>case insensitive name,</description></item>
	<item><name>$t</name><description>type (C-charcter/N-number/L-logical/Z-null/?-unknown)</description></item>
	<item><name>$c</name><description>count - occurences of field,</description></item>
	<item><name>$m</name><description>records sampled,</description></item>
	<item><name>$s</name><description>field is sparse (true or false).</description></item>
	<item><name>$r</name><description>Recurse into child objects.</description></item>
	<item><name>$a</name><description>Recurse into array objects, adding [] suffix.</description></item>
	<item><name>$o</name><description>Recurse into objects, adding {} suffix.</description></item>
	</list>	
	<example>
	<![CDATA[dim json as c 
json = <<%json%
[
	{"Firstname" : "Fred", "Lastname" : "Smith"},
	{"Firstname" : "Harry", "Lastname" : "Jones","age" : 30},
]
%json%
? json_sample_array(json)
= Firstname
Lastname
age

? json_sample_array(json,"$n - $t")
= Firstname - C
Lastname - C
age - N
]]></example>
 </section>
 <section>
    <description> Example showing recursion into name.</description>
	<example>
	<![CDATA[
dim json as c 
json = <<%json%
[
	{"Firstname" : "Fred", "Lastname" : "Smith" , "address" : { "city" : "Boston" , "state" : "ma" } },
	{"Firstname" : "Harry", "Lastname" : "Jones","age" : 30},
]
%json%
? json_sample_array(json,"$r")
= Firstname
Lastname
address.city
address.state
age
]]>
	</example>
 </section>
 <section>
    <description> Example showing recursion into arrays and objects.</description>
	<example>
	<![CDATA[json = <<%json%
[
    {
        "Firstname": "John",
        "Lastname": "Smith",
        "City": "Boston",
        "State": "MA",
        "Company": {
            "name": "alpha",
            "software": true
        },
        "children": [
            {
                "name": "Jill"
            },
            {
                "name": "Jack"
            }
        ]
    }
]
%json%

dim newField as c = json_sample_array(json,"$ao|$s")

? newField
= Firstname|false
Lastname|false
City|false
State|false
Company{}
Company{}.name|false
Company{}.software|false
children[]
children[].name|false
]]></example>
  </section>
</sections>  




	<see>
		<ref href="/Api/Functions/Document Types/JSON Functions/json_reformat_safe().xml">json_reformat_safe()</ref>
		<ref href="/Api/Functions/Document Types/JSON Functions/a5_sql_schema_to_json().xml">a5_sql_schema_to_json()</ref>
		<ref href="/Server/Guide/Design/Api/JSON Data.xml">JSON Data</ref>
	</see>
	
	<terms>JSON,function,array</terms>
	
</page>