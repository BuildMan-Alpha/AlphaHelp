<page>
    <shortlink>json_reformat Function</shortlink>
    <topic>json_reformat Function</topic>
    <description>Takes json and reformats it so that it is presented on one line or extended to include multiple lines.</description>
    <syntax>C formatedJSON = json_reformat(jsonText as C [, indented as L ])</syntax>
    <arguments>
        <argument>
            <name>jsonText</name>
            <type>C</type>
            <description>The JSON text to format. The JSON must be properly formed.</description>
        </argument>
        <argument optional="true">
            <name>indented</name>
            <type>L</type>
            <description>Default value is .t.. Defines whether or not the JSON should be indented. If .f., the JSON be generated on a single line with no line breaks or indentation.</description>
        </argument>
    </arguments>
    <discussion>The json_reformat function only accepts 'properly formed' JSON strings (property names must be double quoted and string values must be double quoted).</discussion>
    <example><![CDATA[dim json as c 
json = <<%txt%
{"firstname":"Fred",
"lastname":"Smith",
"Address":
{"Street":"123 Main St",
"City":"Boston",
"State":"Ma"}
}
%txt%

? json_reformat(json)
= {
    "firstname": "Fred",
    "lastname": "Smith",
    "Address": {
        "Street": "123 Main St",
        "City": "Boston",
        "State": "Ma"
    }
}]]></example>
    <see>
        <ref href="/documentation/index?search=json_parse Function">json_parse()</ref>
        <ref href="/documentation/index?search=json_reformat_safe Function">json_reformat_safe()</ref>
        <ref href="/documentation/index?search=JSON Data">JSON Data</ref>
    </see>
    <terms>JSON,function,string</terms>
</page>