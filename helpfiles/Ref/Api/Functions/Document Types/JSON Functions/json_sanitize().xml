<page api="xb">
    <shortlink>json_sanitize Function</shortlink>
    <topic>json_sanitize Function</topic>
    <prototypes>
        <prototype>C result = json_sanitize(javascript as C [, method as L or C])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>javascript</name>
            <type>C</type>
            <description>Javascript object notation input - doesn't require names be quoted, and allows for single quotes.</description>
        </argument>
        <argument optional="true">
            <name>method</name>
            <types>
                <type>C</type>
                <type>L</type>
            </types>
            <description>
                <p>Default = .f.. Specifies how aggressive or what formatting method should be used when sanitizing the JSON. If set to .t., numeric data and other values that are not quoted will be quoted. If the JSON contains Javascript functions, specifying "A5" converts the functions to strings.</p>
            </description>
        </argument>
    </arguments>
    <description>Convert javascript object data to strict JSON, useful when copying snippets from javascript.</description>
    <sections>
        <section>
            <description>
                <p>Converts a JSON string to 'strict' JSON syntax - Javascript objects can be created from literal definitions that do not follow the strict JSON syntax.</p>
                <p>For example:</p>
            </description>
            <example><![CDATA[var obj = {name: 'Fred'}]]></example>
        </section>
        <section>
            <description>
                <p>However the JSON.parse() function can only parse strict JSON strings.</p>
                <p>Similarly, on the server-side, the Xbasic json_parse() function can parse JSON strings that do not follow the strict syntax. However, many of the other Xbasic JSON functions (e.g. json_extract() ) require strict syntax.</p>
                <p>The json_sanitize function will convert a JSON string to strict syntax</p>
            </description>
    <example><![CDATA[dim json as c = "{name: 'Fred'}"

?json_sanitize(json)
= {"name": "Fred"}]]></example>
        </section>
    </sections>
</page>