<page>
    <shortlink>api a5w checkboxes function</shortlink>
    <topic>A5W_CHECKBOXES Function</topic>
    <description>Generate code for Checkbox controls.</description>
    <prototypes>
        <prototype>HTML_Input_Code as C = a5w_CheckBoxes(C choices ,C name [,C selected [,C style [,C orientation [,C events [,C id [,C separator [,L flagUseArraySyntaxForSingleChoice [,C class [,L flagDisabled [,C spanClass [,C verticalSpaceBetweenControls [,C customAttributes]]]]]]]]]]]])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>choices</name>
            <type>C</type>
            <description>
                <p>A CR-LF delimited list of choices to include in the checkbox list. Each choice is defined using the format *[code:displayValue|storedValue|attributes]*. *[em:storedValue]* and *[em:attributes]* are optional. If the *[em:storedValue]* is not specified, the value of the checkbox will be identical to the *[em:displayValue]*. Examples:</p>
                <p>
                    <example caption="Simple list of choices"><![CDATA[apple
orange
mango]]></example>
                </p>
                <p>
                    <example caption="List of choices with customized stored values"><![CDATA[January|1
February|2
March|3]]></example>
                </p>
                <p>
                    <example caption="Defining Attributes"><![CDATA[Not Applicable|1|required myCustomAttribute="some value"
Yes|2|required
No|3|required]]></example>
                </p>
                <p>To assign an attribute to all checkbox options, use the *[xb:customAttributes]* argument.</p>
            </description>
        </argument>
        <argument>
            <name>name</name>
            <type>C</type>
            <description>The name of the checkbox group. This is required.</description>
        </argument>
        <argument optional="true">
            <name>selected</name>
            <type>C</type>
            <description>Default = "". The default selected value for the checkbox group.</description>
        </argument>
        <argument optional="true">
            <name>style</name>
            <type>C</type>
            <description>Default = "". Optional inline CSS styles to add to the *[html:style]* attribute for each choice in the checkbox group.</description>
        </argument>
        <argument optional="true">
            <name>orientation</name>
            <type>C</type>
            <description>
                <p>Default = "horizontal". The orientation of the checkbox choices. The orientation can be one of the following:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Orientation</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>"horizontal"</name>
                            <description>Choices are side by side, left to right.</description>
                        </item>
                        <item>
                            <name>"vertical*[em::verticalSpace]*"</name>
                            <description>Choices are on separate lines, top to bottom. You can optionally specify additional space to include between each value using the syntax *[em::verticalSpace]* after the word "vertical". For example, *[xb:"vertical:20px"]*.</description>
                        </item>
                        <item>
                            <name>"COLUMNS:LRTB:*[em:count]*"</name>
                            <description>Choices snake from left-to-right, top-to-bottom where *[em:count]* is the number of columns</description>
                        </item>
                        <item>
                            <name>"COLUMNS:TBLR:*[em:count]*"</name>
                            <description>Choices snaking from top-to-bottom, left-to-right where *[em:count]* is the number of rows</description>
                        </item>
                    </list>
                </p>
            </description>
        </argument>
        <argument optional="true">
            <name>events</name>
            <type>C</type>
            <description>Default = "". Optional event attributes to add to each checkbox. For example, *[xb:"onclick=\"alert('clicked '+this.value+'!');\""]*. See *[extlink:HTMLElement (MDN)@https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement]* to learn more about HTML element event attributes.</description>
        </argument>
        <argument optional="true">
            <name>id</name>
            <type>C</type>
            <description>Default = "". An optional ID to assign each checkbox element. The generated id is the form "id.*[em:count]*" where *[em:count]* is a numeric value assigned to the choice. Numeric values are assigned to choices in the order listed in the *[xb:choices]* variable, beginning with the number 1.</description>
        </argument>
        <argument optional="true">
            <name>separator</name>
            <type>C</type>
            <description>Default = "|". The character string used to separate each setting in the *[xb:choices]* parameter. If *[xb:choices]* use a separator other than "|" to define the display, stored, and optional attribute values, you pass in the separator string into the *[xb:separator]* argument.</description>
        </argument>
        <argument optional="true">
            <name>flagUseArraySyntaxForSingleChoice</name>
            <type>L</type>
            <description>
                <p>Default = *[xb:.t.]*. If *[xb:choices]* contains one value, setting *[xb:flagUseArraySyntaxForSingleChoice]* to *[xb:.f.]* omits the brackets from the name assigned to the *[html:name]* attribute for the generated output. I.e., *[html:name="myCheckboxes"]* instead of *[html:name="myCheckboxes[]"]*.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>class</name>
            <type>C</type>
            <description>Default = "". One or more optional classes to assign to the *[html:class]* attribute for each checkbox option.</description>
        </argument>
        <argument optional="true">
            <name>flagDisabled</name>
            <type>L</type>
            <description>Default = *[xb:.f.]*. If *[xb:.t.]*, the generated output creates a checkbox group that is disabled (the choices cannot be modified when interacted with in a browser.)</description>
        </argument>
        <argument optional="true">
            <name>spanClass</name>
            <type>C</type>
            <description>Default = "". One or more class names to add to the *[html:&lt;span&gt;]* tag that wraps each choice.</description>
        </argument>
        <argument optional="true">
            <name>verticalSpaceBetweenControls</name>
            <type>C</type>
            <description>
                <p>Default = "". A CSS length value that defines the vertical space to include between controls when *[xb:orientation]* is set to "vertical". E.g. *[css:25px]*.</p>
            </description>
        </argument>
        <argument optional="true">
            <name>customAttributes</name>
            <type>C</type>
            <description>
                <p>Default = "". One or more attributes to add to each checkbox. For example: *[xb:"required myCustomAttribute=\"some value\""]*</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>HTML</name>
            <types>
                <type>C</type>
            </types>
            <description>Returns the generated *[html:&lt;input&gt;]* markup for a list of checkboxes that can then be added to the HTML for an application.</description>
        </return>
    </returns>
    <discussion>
        <p>The A5W_CHECKBOXES() function generates *[html:&lt;input&gt;]* HTML elements for a list of choices. The generated markup can be inserted into the HTML for an application, such as a *[html:&lt;div&gt;]* on an .a5w page or a Static Text control in a UX component.</p>
        <p>For example:</p>
        <p>
            <example code="xb"><![CDATA[dim choices as c =<<%txt%
apple
orange
mango
%txt%

dim name as c = "fruit"

dim html as c = a5w_checkboxes(choices,name)

? html
= <span><input id="fruit.1" type="checkbox" value="apple" name="fruit[]"  />apple</span>
<span><input id="fruit.2" type="checkbox" value="orange" name="fruit[]"  />orange</span>
<span><input id="fruit.3" type="checkbox" value="mango" name="fruit[]"  />mango</span>]]></example>
        </p>
        <p>The *[html:value]* attribute can be a different value from the displayed choice by specifying a stored value. For example, in the Xbasic script below, a numeric value is specified for each choice. Note that the *[html:value]* attribute in the generated output contains the stored values:</p>
        <p>
            <example code="xb"><![CDATA[dim choices as c =<<%txt%
January|1
February|2
March|3
%txt%

dim name as c = "Q1"

dim html as c = a5w_checkboxes(choices,name)

? html
= <span><input id="Q1.1" type="checkbox" value="1" name="Q1[]"  />January</span>
<span><input id="Q1.2" type="checkbox" value="2" name="Q1[]"  />February</span>
<span><input id="Q1.3" type="checkbox" value="3" name="Q1[]"  />March</span>]]></example>
        </p>
        <p>You can also specify optional attributes to include in the *[html:&lt;input&gt;]* tag for a choice after the stored value. For example:</p>
        <p>
            <example code="xb"><![CDATA[dim choices as c =<<%txt%
Not Applicable|1|myCustomAttribute="some value"
Yes|2
No|3
%txt%

dim name as c = "yesNo"

dim html as c = a5w_checkboxes(choices,name)

? html
= <span><input id="yesNo.1" myCustomAttribute="some value" type="checkbox" value="1" name="yesNo[]"  />Not Applicable</span>
<span><input id="yesNo.2" type="checkbox" value="2" name="yesNo[]"  />Yes</span>
<span><input id="yesNo.3" type="checkbox" value="3" name="yesNo[]"  />No</span>]]></example>
        </p>
    </discussion>
    <terms>web application,array,box,checkbox,events,function,html,list,logical,orientation</terms>


</page>