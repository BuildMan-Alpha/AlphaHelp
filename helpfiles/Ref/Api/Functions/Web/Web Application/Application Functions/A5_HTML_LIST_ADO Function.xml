<page>
   <topic>A5_HTML_LIST_ADO Function</topic>
      <description>Queries an ADO Record Set to return an OPTION list for use in an HTML form.</description>

   <syntax>HTML_List as C =  a5_HTML_List_ADO(P ADO [,C default_value [,N maxRows [,L htmlEncode ]]])</syntax>
   <arguments>
     
     <argument>
         <name>HTML_List</name>
         <description>A formatted HTML option list.</description>
     </argument>
     
     <argument>
         <name>ADO</name>
         <description>A pointer variable containing values for:</description>
         <list>
         
         <item>
         <name-title>Variable</name-title>
         <description-title>Description</description-title>
         </item>
          

         <item>
         <name>Type</name>
         <description>"Access"</description>
         </item>
         
         <item>
         <name>MdbFileName</name>
         <description>Path and filename of the MDB file.</description>
         </item>
         
         <item>
         <name>SQL</name>
         <description>An SQL SELECT statement that defines the records and fields to return.</description>
         </item>
         
         
         </list>
     </argument>
     <argument>
         <name>default_value</name>
         <description>Optional. The default selection.</description>
     </argument>
     <argument>
         <name>maxRows</name>
         <description>Optional. Default = 0 (All rows returned).</description>
     </argument>
     <argument>
         <name>htmlEncode</name>
         <description>Optional. Default = .T.

 .T. = Format as HTML

 .F. = Do not format as HTML 
</description>
     </argument>
   </arguments>
   <discussion>
Optionally populate the ado.parameters array, then call the function.
   </discussion>
  
   <sections>
       <section>
            <description>put description here</description>
            
       </section>
   </sections>
   
   
   
   <sections>
       <section><title>Syntax for Microsoft SQL Server</title>
            <description>Optionally populate the ado.parameters array, then call the function.
 HTML_List as C = A5_HTML_LIST_ADO( Data as P [, Default as C [, Rows as N ]] )</description>
            
            
            
<list>
<item>
<name-title>Argument</name-title>
<description-title>Description</description-title>
</item>

<item>
<name>HTML_List</name>
<description>A formatted HTML option list.</description>
</item>

<item>
<name>Data</name>
<description>A pointer variable containing values for:</description>
<list>


<item>
<name-title>Variable</name-title>
<description-title>Description</description-title>
</item>
 
 
<item>
<name>Type</name>
<description>"connectionstring"</description>
</item>

<item>
<name>Parameter_Query</name>
<description>.T.</description>
</item>

<item>
<name>Connection_String</name>
<description>The connection string required to open the database.</description>
</item>

<item>
<name>SQL</name>
<description>An SQL SELECT statement that defines the records and fields to return.</description>
</item>
 
 </list>
  
 </item> 
  
<item>
<name>Default</name>
<description>Optional. The default selection.</description>
</item>

<item>
<name>Rows</name>
<description>Optional. Default = 0 (All rows returned).</description>
</item>

<item>
<name>HTML_Encoded</name>
<description>Optional. Default = .T.   .T. = Format as HTML .F. = Do not format as HTML</description>
</item>


</list>
       </section>
   </sections>
   
   <sections>
   <section>
   <description>The A5_HTML_LIST_ADO() function is used in Alpha Anywhere Application Server applications to query an ADO record source and return a list of choices for a list box or combo box control on an HTML Form.
</description>
   
   
   
   </section>
   </sections>
   
   <sections>
   <section><title>Example</title>
   
   <example><![CDATA[dim ado as P
ado.Type = "Access"
ado.MdbFileName = "C:\Northwind.mdb"
ado.sql = "select distinct city from customers order by city"
? a5_HTML_List_ADO(ADO)
= Aachen
Albuquerque
Anchorage
?hus
Barcelona
Barquisimeto
]]></example>
</section></sections>
<sections><section>



   <description>You can provide three optional arguments to the function. The first optional argument is the Default selected value. If no value is supplied, then when the SELECTED="SELECTED" keyword is not inserted into the list. The second optional argument specifies the maximum number of Rows to return. The default value for this argument is 0. If 0, then all rows in the query are returned. This could cause a problem if a very large number of rows is returned. The third optional argument is a logical flag that has a default value of .T.. This flag controls whether the data in the list should be HTML_Encoded. HTML encoding makes the function slower, so if you know that your data will not include any high order characters, you can speed up this function by setting the HTML_Encoded flag to .F..
This example show how the option list is selected with a default value and a maximum of 10 rows.
</description>
   <example><![CDATA[
dim ado as P
ado.Type = "Access"
ado.MdbFileName = "C:\Northwind.mdb"
ado.sql = "select distinct city from customers order by city"
? a5_HTML_List_ADO(ADO,"Barcelona",10)
= Aachen
Albuquerque
Anchorage
?hus
Barcelona
Barquisimeto
Bergamo
Bern
Boise
Boston

   
   ]]></example>
   
   
   
   </section>
   </sections>
   
   
<sections><section>
<title>ADO.Parameters</title>
<description>This example shows how you can use parameters in your SQL query string. Note the use of the ? placeholders for the parameters, and the ado.parameters array which contains the values of the replaceable parameters. In this case the query is searching for all cities that start with "L" or "N".</description>
<example><![CDATA[
dim ado as P
dim ado.parameters2 as a
ado.Type = "Access"
ado.MdbFileName = "C:\Northwind.mdb"
ado.sql = "select distinct city from customers where city like ? or city like ? order by city"
ado.parameter_query = .t.
ado.parameters1 = "l%"
ado.parameters2 = "n%"
? a5_HTML_List_ADO(ADO)
= Lander
Leipzig
Lille
Lisboa
London
Lyon
Nantes


]]></example>

</section></sections>
   
<sections><section>
<title>SQL Server
</title>
<description>This example is similar to the one above, but instead of going against an Access .mdb file, the query is going against a table in a SQL Server database.</description>
<example><![CDATA[
dim ado as P
dim ado.parameters2 as a
ado.connectionstring = "Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=Northwind;Data Source=selwyn1500"
ado.type = "connectionstring"
ado.sql = "select distinct city from customers where city like ? or city like ? order by city"
ado.parameter_query = .t.
ado.parameters1 = "l%"
ado.parameters2 = "n%"
?a5_HTML_List_ADO(ADO)
= Lander
Leipzig
Lille
Lisboa
London
Lyon
Nantes


]]></example>

</section></sections>
   
   
   <see>
      <ref link="A5_HTML_LIST_POPULATE Function">A5_HTML_LIST_POPULATE()</ref>
      <ref link="A5_HTML_LIST_DBF Function">A5_HTML_LIST_DBF()</ref>
   </see>
  
 
 <terms>web application,a5,application server,array,arguments,box,case,contains,control,default value,filename,function,html,keyword,list,logical,number,pointer,populate,query,record,searching,sql,sql query,string,variable</terms>
 

</page>