<page api="xb">
    <shortlink>api html encode function</shortlink>
    <topic>HTMLENCODE Function</topic>
    <description>HTMLENCODE() transforms a string in order to make it HTML-safe. Certain characters are have special meanings within HTML documents and should  not be used directly.</description>
    <prototypes>
        <prototype>Encoded_String as C = HTMLENCODE(input as C [,   strict as L])</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>input</name>
            <type>C</type>
            <description>The string to be encoded.</description>
        </argument>
        <argument optional="true">
            <name>strict</name>
            <type>L</type>
            <description>Default = .F.. Indicates whether or not strict encoding should be used. If .F., only the  most common characters are substituted with their HTML entity value. If .T., all characters  which have HTML character entities will be converted.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>encode_html</name>
            <types>
                <type>C</type>
            </types>
            <description>Returns the encoded string.</description>
        </return>
    </returns>
    <sections>
        <section>
            <list bullet="true">
                <item>
                    <name>&amp; becomes &amp;amp;</name>
                </item>
                <item>
                    <name>" becomes &amp;quote;</name>
                </item>
                <item>
                    <name>' becomes &amp;#039;</name>
                </item>
                <item>
                    <name>&lt; becomes &amp;lt;</name>
                </item>
                <item>
                    <name>&gt; becomes &amp;gt;</name>
                </item>
            </list>
        </section>
        <section>
            <description>This is sufficient for most all web applications and allows you to easily  store HTML and other reserved characters in your database and convert  them on-the-fly for display within a web page.</description>
        </section>
        <section>
            <title>Example</title>
            <example><![CDATA[dim html as c =<<%html%
<div style="width:50%;height:400px;">
— Northwinds Trading Co. 2017 —
</div>
%html%

? htmlencode(html)
= &lt;div style=&quot;width:50%;height:400px;&quot;&gt;
&mdash; Northwinds Trading Co. 2017 &mdash;
&lt;/div&gt;

? htmlencode(html, .f.)
= &lt;div style=&quot;width:50%;height:400px;&quot;&gt;
— Northwinds Trading Co. 2017 —
&lt;/div&gt;
]]></example>
        </section>
        <section>
            <title>Decoding HTML</title>
            <description>
                <p>To decode an encoded string, use [*html_unescape()]:</p>
            </description>
            <example code="xb"><![CDATA[dim encodedHtml as c = htmlencode(html)
? encodedHTML
= &lt;div style=&quot;width:50%;height:400px;&quot;&gt;
— Northwinds Trading Co. 2017 —
&lt;/div&gt;


? *html_unescape(encodedHtml)
= <div style="width:50%;height:400px;">
— Northwinds Trading Co. 2017 —
</div>
]]></example>
        </section>
    </sections>
    <links>
        <link link="api star html unescape function">*html_unescape()</link>
    </links>
    <see>
        <ref link="api star html escape function">*html_escape()</ref>
        <ref link="api star html unescape function">*html_unescape()</ref>
    </see>
    <terms>encryption,control,database,defaults,display,function,html,string,users</terms>
</page>