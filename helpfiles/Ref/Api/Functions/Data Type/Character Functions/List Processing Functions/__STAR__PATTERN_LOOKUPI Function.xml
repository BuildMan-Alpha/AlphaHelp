<page api="xb">
    <shortlink>api star pattern lookupi function</shortlink>
    <topic>*PATTERN_LOOKUPI Function</topic>
    <description>Looks up a value matching a key on text, if none found return 'otherwise' condition.</description>
    <prototype>Result as C = *PATTERN_LOOKUPI(text as c, key as c, pattern as c, otherwise as c)</prototype>
    <arguments>
        <argument>
            <name>text</name>
            <type>C</type>
            <description>Contains a delimited list to search for a pattern. The delimiter is the last character in the Pattern string.</description>
        </argument>
        <argument>
            <name>key</name>
            <type>C</type>
            <description>The value to find in Text.</description>
        </argument>
        <argument>
            <name>pattern</name>
            <type>C</type>
            <description>A string with two "*" placeholders in it. The first placeholder encountered is the Key. The second is the Result to return. The Pattern must have one or more characters between the two placeholders, and a list delimiter at the beginning, at the end, or at both the beginning and end of the Pattern string.</description>
        </argument>
        <argument>
            <name>otherwise</name>
            <type>C</type>
            <description>The value to return if the Key is not found in the list.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result</name>
            <type>C</type>
            <description>The value returned by the function.  If the Key is not found, the function returns Otherwise.</description>
        </return>
    </returns>
    <discussion>The *PATTERN_LOOKUPI() function performs a case-insensitive search of a character string for the specified *[xb:key]* value.</discussion>
    <example code="xb">
        <![CDATA[? *pattern_lookupi("one=1,two=2,three=3","two","*=*,","0")
= "2"

? *pattern_lookupi("one=1,two=2,three=3","four","*=*,","0") 
= "0"

? *pattern_lookupi("one=1,two=2,three=3","three","*=*,","0") 
= "3"]]>
    </example>
    <see>
        <ref link="List Processing Functions">List Processing Functions</ref>
    </see>
    <terms>list processing,case,contains,function,list,placeholder,search,string,text</terms>

</page>