<page api="xb">
    <shortlink>api count textblocks function</shortlink>
   <topic>COUNT_TEXTBLOCKS Function</topic>
     <description>Counts the number of occurrences of a sub-string starting with 'start_string' and ending with 'end_string'.</description>


   <prototype>Count as N = count_textblocks(C string ,C start_string ,C end_string [,L case_sensitive [,L regex_safe ]])</prototype>
   <arguments>
     <argument>
         <name>string</name>
         <type>C</type>
         <description>The string to examine for the find text.</description>
     </argument>
     <argument>
         <name>start_string</name>
         <type>C</type>
         <description>The beginning characters of the variable length text.</description>
     </argument>
     <argument>
         <name>end_string</name>
         <type>C</type>
         <description>The ending characters of the variable length text.</description>
     </argument>
     <argument optional="true">
         <name>case_sensitive</name>
         <type>L</type>
         <description>Default = .F.; .T. = Case sensitive, .F. = Case insensitive </description>
     </argument>
     <argument optional="true">
         <name>regex_safe</name>
         <type>L</type>
         <description>
            <p>Default = .F. The "unsafe" characters are ., |, *, ?, +, (, ), {, }, , , ^, $ and \. If your Start_Find_Text and End_Find_Text do not contain any of these characters, you should set Regex_Safe to true to maximize performance. </p>
            <p>.T. = Improves performance by declaring that the start and end tags are already regular expression safe and COUNT_TEXTBLOCKS() does not need to escape special characters. </p>
            <p>.F. = Unsafe characters are replaced. This decreases performance on a large string.</p>
 </description>
     </argument>
   </arguments>
   <returns>
        <return>
         <name>Count</name>
         <type>N</type>
         <description>The number of instances of the find text in Search_in_Text.</description>
     </return>
   </returns>
    <discussion>
The COUNT_TEXTBLOCKS() function returns the number of instances of the variable length text found in string.
   </discussion>
   <example><![CDATA[txt = <<%txt%
this is line one

this is line 2

this is line 3

%txt%
st = "TH"
en = "NE"
? count_textblocks(txt, st, en, .t.)
= 0
? count_textblocks(txt, st, en, .f.)
= 3]]></example>
   
   <see>
      <ref link="api character search functions">Character Search Functions</ref>
   <ref link="api character counting functions">Character Counting Functions</ref>
      <ref link="api character replacement functions">Character Replacement Functions</ref>
   </see>
<terms>string,counting,case,contains,defaults,expressions,function,number,performance,replacement,search,set,text,variable</terms>
</page>