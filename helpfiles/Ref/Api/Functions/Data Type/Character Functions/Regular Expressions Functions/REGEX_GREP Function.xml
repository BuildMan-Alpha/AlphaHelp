<page api="xb">
    <shortlink>api regex grep function</shortlink>
   <topic>REGEX_GREP Function</topic>
    <description>Performs a regex grep on text. format takes \0 for all text \N for tagged expression. options same as regex_match with additional options:
	N  No copy of unmatched text.
	F  Only process first match.
</description>

   <syntax>New_String as C = REGEX_GREP( text as c , RegExp as c , Format as c[,options as c])</syntax>
   <arguments>
      <argument>
         <name>New_String</name>
         <description>The lines or elements that match the Search_Expresssion.</description>
     </argument>
     <argument>
         <name>text</name>
         <description>The character string to examine. The parentheses characters " ( " and " ) " have special meaning. If present, they enclose a regular expression argument. If you want parentheses characters to be part of the text, you must precede them with " \ " characters.
</description>
     </argument>
     <argument>
         <name> RegExp</name>
         <description>A regular expression that contains one or more search arguments. Refer to Regular Expressions for detailed information.
</description>
     </argument>
     <argument>
         <name> Format</name>
         <description>Character</description>
<list>
<item><name>
"\0" = All text.
</name></item><item><name>
 "\N" = Tagged text expression.
</name></item><item><name>
 "N" = No copy of unmatched text.
</name></item><item><name>
 "F" = Only process first match.
</name></item><item><name>
 "$(OFFSET)" = Return the offset of the match.
</name></item><item><name>
 "$(LENGTH)" = Return the length of the match.
</name></item><item><name>
 "$(END)" = Return the ending offset of the match.
</name></item><item><name>
 "$(LINE)" = Return the line the match started on.
</name></item><item><name>
 "$(ENDLINE)" = Return the line the match ended on.
</name></item><item><name>
 "$(LINES)" = Return the number of lines the match crosses.
</name></item><item><name>
 "$(LINETEXT)" = Return the complete line(s) of text the match(es) occurred on.
</name></item><item><name>
 "$(LINEOFFSET)" = Return the offset of the beggining of the match line.
</name></item><item><name>
 "$(ENDLINEOFFSET)" = Return the offset of the end of the line the match ended on.
</name></item><item><name>
 "$(COUNT)" = Return the number of matches encountered so far.
</name></item><item><name>
 "$(NEXTLINE)" = Advance the search pointer to the next line. 
 </name></item>
 </list>
         
         
     </argument>
     <argument>
         <name>options</name>
         <description>Optional. Default = "S". Specify which compatibility with a common implementation. ThE flags for Emacs, Awk, Grep, Egrep and Sed conventions allow the pattern to follow the conventions of those utilities (which have slightly different variants regarding what is escaped and what is not escaped).
</description>
<list>
<item><name>
"I" = Ignore case
</name></item><item><name>
 "E" = Follow Emacs conventions
</name></item><item><name>
 "A" = Follow Awk conventions
</name></item><item><name>
 "G" = Follow Grep conventions
</name></item><item><name>
 "EG" = Follow Egrep conventions
</name></item><item><name>
 "S" = Follow Sed conventions
</name></item><item><name>
 "X" = Extended (similar to Awk but no need to escape '' inside of []) 
 </name></item>
 </list>


     </argument>
   </arguments>
  
   <discussion>
The REGEX_GREP() function returns information about or text elements from the target text or list that match a regular expression. It offers functionality above and beyond GREP, especially when used in the context of Xbasic.
   </discussion>
   <example><![CDATA[
dim cc as C
cc = file.to_string("c:\ALPHA4V8\README.TXT")
? regex_grep(cc, "(W|w)indows", "$(LINETEXT)" + crlf() )
=Running With Windows 95
Using Alpha Four with Microsoft Windows for Workgroups
Running With Windows 95
Four to crash when running Windows 95. To avoid this problem, do the
Using Alpha Four with Microsoft Windows for Workgroups
To configure Windows for Workgroups to work properly with Alpha Four,
Field Rules: Lookup Windows can Now Use Custom Column Headings and Custom
]]></example>
   <sections>
       <section>
            <description>The REGEX_GREP() function acts like the command line GREP utility if you use the format.</description>
            <example><![CDATA[
"$(OFFSET%4d) : (LINETEXT)" + crlf()
]]></example>
       </section>
       
       <section>
            <description>This example returns the offset to each occurrence of a word.</description>
            <example><![CDATA[
dim cc as C
cc = <<%a%
My house has 3 doors
and 26 windows
I don't miss Windows 3.1
Who does?
Ira, did you leave the window open?
%a%
txt = regex_grep(cc, "(W|w)indow", "$(offset): $(LINETEXT)" + crlf() )
? txt
= 30: and 26 windows
52: I don't miss Windows 3.1
99: Ira, did you leave the window open?

]]></example>
       </section>
       
       
   </sections>
   <see>
      <ref link="Regular Expression Functions">Regular Expression Functions</ref>
      <ref link="Extension::Regex Class">Extension::Regex Class</ref>
      <ref link="Extension::Regex grep Method">Extension::Regex Grep Method</ref>
   </see>
  <terms>regular expression,case,contains,defaults,expressions,function,list,number,pointer,search,string,text</terms>
</page>