<page api="xb" build="5431">
    <shortlink>api word uniquec function</shortlink>
   <topic>WORD_UNIQUE_C Function</topic>
    <description>Remove duplicate words from a list doing a case-sensitive comparison.</description>
   <prototype>Output_String as C = Word_Unique_C(C Source [,C Delimiter])</prototype>
   <arguments>
     <argument>
         <name>Source</name>
         <description>A string containing a series of delimited words or values.</description>
     </argument>
     <argument optional="true">
         <name>Delimiter</name>
         <description>Default = CRLF(). The delimiter that separates the words or values.</description>
     </argument>
   </arguments>
   <returns>
       <return>
           <name>Output_String</name>
           <types>
               <type>C</type>
           </types>
           <description>Returns a list of unique words (case-sensitive) in a delimited string.</description>
       </return>
   </returns>
   <discussion>
        <p>The WORD_UNIQUE_C() function generates a list of unique words in a delimited string using a case-sensitive comparison.  This means two words spelled the same but with difference case will be considered individually unique. For example:</p>
        <p>
            <example><![CDATA[dim txt as c
txt = comma_to_clf("NO,no,NO")

? word_unique_c(txt)
= NO
no]]></example>
        </p>
        <p>The result of performing a WORD_UNIQUE_C() search on the character list *[xb:"NO,no,NO"]* results in a list of two words: "NO" and "no". While both words are spelled the same, they use different cases and are therefore considered to be unique.</p>
        <p>For a case-insensitive comparison, use the [WORD_UNIQUE()] function.</p>
   </discussion>
   <links>
       <link link="api word unique function">WORD_UNIQUE()</link>
   </links>
   <see>
       <ref link="api character extraction functions">Character Extraction Functions</ref>
      <ref link="api list processing functions">List Processing Functions</ref>
   </see>
<terms>string,extraction,function,list,list processing</terms>
</page>