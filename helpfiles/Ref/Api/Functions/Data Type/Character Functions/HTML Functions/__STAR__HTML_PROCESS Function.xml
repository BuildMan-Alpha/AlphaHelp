<page api="xb">
    <shortlink>api star html process function</shortlink>
   <topic>*HTML_PROCESS Function</topic>
    <description>Html processor.</description>
    
   <syntax>Processed_HTML as C = *HTML_PROCESS(C html,C format[,C options[,C patterns]])</syntax>
   <arguments>
     <argument>
         <name>html</name>
         <description><![CDATA[The HTML text to process.]]></description>
     </argument>
     
     <argument>
         <name>format</name>
         <description>Character. Indicates which type of data to search for.</description>
         <list> 
         	<item>
         	<name>"K"</name>
         	<description><![CDATA[Kind of HTML tag (i.e. TABLE, INPUT, %A5)]]></description>
         	</item>
         	
         	<item>
         	<name>"N"</name>
         	<description>Name (Type + Name or id)</description>
         	</item>
         	
         	<item>
         	<name>"H"</name>
         	<description>Hierarchy (Parents + Type + Name or id)</description>
         	</item>
         	
         	<item>
         	<name>"U"</name>
         	<description>Guaranteed Unique name (HIERARCHY + optional counter)</description>
         	</item>
         	
         	<item>
         	<name>"T"</name>
         	<description><![CDATA[Contents of Tag (including <> characters).]]></description>
         	</item>
         	
         
         	<item>
         	<name>"X"</name>
         	<description>Embedded Xbasic code (for a5w tags).</description>
         	</item>
         	
         	<item>
         	<name>"E"</name>
         	<description>
         	Trimmed Embedded Xbasic code (useful for expressions - which we don't want leading/trailing CR-LF's in)
			</description>
         	</item>
         	
         	<item>
         	<name>"I"</name>
         	<description>inner HTML (inside a block tag)</description>
         	</item>
         	
         	<item>
         	<name>"O"</name>
         	<description>Outer HTML (include outside tags of block, or just the tag itself if the tag is not a block)</description>
         	</item>
         	
         </list>
     </argument>
     
     <argument>
         <name>options</name>
         <description>Indicates how to process the data that is found.</description>
         <list>
	         <item>
	         	<name>"A"</name>
	         	<description>process A5W tags only</description>
	         </item>
	         <item>
	         	<name>"E"</name>
	         	<description>process end tags as well as start tags</description>
	         </item>
	         <item>
	         	<name>"M"</name>
	         	<description>output merge - include all code not</description>
	         </item>
	         <item>
	         	<name>"I"</name>
	         	<description>make greps in search case insensitive</description>
	         </item>
	         <item>
	         	<name>"T"</name>
	         	<description>merge resumes after the current matching tag</description>
	         </item>
	         <item>
	         	<name>"B"</name>
	         	<description>merge resumes after the current tag block </description>
	         </item>
         </list>
     </argument>
     
     <argument>
         <name>patterns</name>
         <description>A CR-LF delimited list of search options required to generate a match:</description>
   		<list>
   			<item>
   				<name><![CDATA["<Format>=<value>" ]]></name>
   				<description>Match an exact string.</description>
   			</item>
   			<item>
   				<name><![CDATA["<Format>!=<value>"]]></name>
   				<description>Find strings that don't match.</description>
   			</item>
   			<item>
   				<name><![CDATA["<Format>$<value>"]]></name>
   				<description>Find strings that match a regular expression.</description>
   			</item>
   			<item>
   				<name><![CDATA["<Format>!$<value>"]]></name>
   				<description>Find strings that don't match a regular expression.</description>
   			</item>
   		</list>
     </argument>
   </arguments>
  

   <discussion><![CDATA[
The *HTML_PROCESS() function returns information about a HTML file, such as:
the contents of a tag
the IDs of all the controls of a type
an outline list of all HTML tags
a named tag
Xbasic code that matches a regular expression
a version of the HTML without a tag
a version of the HTML without a tag block
a version of the HTML without Xbasic expressions that match a pattern 
its title, a list of input controls on the page.
  ]]> </discussion>
  
 <sections>
 <section>
   		<list>
   			<item>
   			<name-title>Example</name-title>
   			<description-title>Search String</description-title>
   			</item>
   		
   			<item>
   			<name>K = INPUT</name>
   			<description>Process all html tags of type INPUT.</description>
   			</item>
   		
   			<item>
   			<name>E = ?firstname </name>
   			<description>Process all html a5w tags where trimmed expression is ?firstname.</description>
   			</item>
   		
   			<item>
   			<name>E$\?x_customer\.body.?</name>
   			<description>Process all html a5w tags that match the regular expression $\?x_customer\.body.?.</description>
   			</item>
   		
   			<item>
   			<name>U=HTML|BODY|TABLE#1</name>
   			<description>Process object that matches unique name HTML|BODY|TABLE#1.</description>
   			</item>
   		</list>
</section>
</sections>
   
<sections>
       <section>
       <title>Example</title>
       </section>

       <section>
       		<title>Retrieve the contents of a tag</title>
            <description>
            Example 1 uses *html_process() to extract information from HTML. In the interactive window create an HTML string and extract the inner text of the title tag.
			</description>
            <example><![CDATA[
html = "<html><title>The html pages title</title><body></body></html>"
? *html_process(html, "I", "", "K=TITLE")
= "The html pages title"
]]></example>
       </section>
       
       
       <section>
        <description>
        The result is the inner html ( Format: "I") of tags of type TITLE ( Search: "K = TITLE").
         </description>
         </section>     

</sections>
   
   
<sections>
   <section>
   <title>Retrieve the IDs of all the controls of a type</title>
   <description>Example 2 retrieves the IDs or names of all the input controls on an html page.</description>
   <example><![CDATA[html = "<html><title>The html pagestitle</title><body><input id=\"firstname\"><input id=\"lastname\"></body></html>"
? *html_process(html, "N" + crlf() , "", "K=INPUT")
= input:firstname
input:lastname]]></example>
   </section>
</sections>
   
<sections>

   <section>
   <title>Retrieve an outline list of all HTML tags</title>
   <description>Example 3 generates an outline list of tags in the HTML text, which could be used to build a simple DOM browser.
</description>
   <example><![CDATA[html = "<html><title>The html pagestitle</title><body><input id=\"firstname\"><input id=\"lastname\"></body></html>"
? *html_process(html,"U"+crlf() )
= html
html|title
html|body
html|body|input:firstname
html|body|input:lastname]]></example>
   </section>
   
   <section>
   	<description>This example visits all tags (except end tags) and a returns a hierarchical unique name for each.</description>
   </section>
   
</sections>
   
<sections>
   <section>
   	<title>Retrieve a named tag</title>
   	<description>Example 4, given a unique name, example 4 extracts a tag.</description>
   	<example><![CDATA[html = "<html><title>The html pagestitle</title><body><input id=\"firstname\"><input id=\"lastname\"></body></html>"
? *html_process(html, "T", "", "U=html|body|input:firstname")
= <input id="firstname">]]></example>
   </section>
   
   <section>
   	<description>Combined with example 3, this example could be used to browse tags.</description>
   </section>
   
</sections>
   
<sections>
   
   <section>
   	<title>Retrieve Xbasic code that matches a regular expression</title>
   	<description>Example 5 extracts embedded Xbasic that matches a regular expression.</description>
   	<example><![CDATA[
html= "<html><body><%a5 ? x_customer.body.title %><%a5 ? x_customer.body.detail %><%a5 ? x_product.body.title %><%a5 ? x_product.body.detail %></body></html>"
? *html_process(html,"E"+crlf() ,"A","E$.+customer.+")
= ? x_customer.body.title
? x_customer.body.detail
   	]]></example>
   </section>
   
   <section>
   	<description>The "A" option indicates that only embedded Xbasic tags should be processed. The "E$" search denotes a regular expression to match against expressions. This makes use of the regular expression merge functionality.
</description>
   </section>
   
</sections>
   
<sections>
   <section>
   	<title>Remove a tag</title>
   	<description>Example 6 removes a tag from HTML.</description>
   	<example><![CDATA[
html = "<html><title>The html pagestitle</title><body><input id=\"firstname\"><input id=\"lastname\"></body></html>"
? *html_process(html,"","M","U=html|body|input:firstname")
= <html><title>The html pagestitle</title><body><input id="lastname"></body></html>
   	]]></example>
   </section>
   <section>
   	<description>When the merge flag is used ( Option: "M") and the format is NULL, *html_process() deletes the tag.</description>
   </section>
</sections>
   
<sections>
   <section>
   
   	<title>Remove a tag block</title>
   	<description>Example 7 removes a tag block from HTML.</description>
   	<example><![CDATA[
html = "<html><title>The html pagestitle</title><body><input id=\"firstname\"><input id=\"lastname\"></body></html>"
? *html_process(html,"","MB","U=html|title")
= <html><body><input id="firstname"><input id="lastname"></body></html>
   	]]></example>
   	
   </section>
   
   <section>
<description><![CDATA[When the merge and block flags are used ( Option: "MB") and the format is NULL, *html_process() deletes the block.
]]></description>
   </section>
   
</sections>
   
<sections>
   <section>
   <title>Remove Xbasic expressions that match a pattern</title>
   <description>Example 8 removes expressions that match a pattern.</description>
   <example><![CDATA[html = "<html><body><%a5 ? x_customer.body.title %><%a5 ? x_customer.body.detail %><%a5 ? x_product.body.title %><%a5 ? x_product.body.detail %></body></html>"
? *html_process(html, "", "AM", "E$.+customer.+")
= "<html><body><%a5 ? x_product.body.title %><%a5 ? x_product.body.detail %></body></html>"
]]></example>
   </section>
   
   <section>
   <description><![CDATA[Since the format is empty, all matching expression tags get eliminated from the html.
   ]]></description>
   </section>

</sections>

   <see>
      <ref href="/Api/Functions/Web/Internet Functions/Internet Functions and Methods.html">Internet Functions</ref>
      <ref link="Character Replacement Functions">Character Replacement Functions</ref>
   </see>
<terms>string,html,a5w,browse,case,control,delete,expressions,function,list,object,replacement,search,text,window,xbasic</terms>
</page>