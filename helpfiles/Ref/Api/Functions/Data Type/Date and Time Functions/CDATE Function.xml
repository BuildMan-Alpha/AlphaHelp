<page>
   <topic>CDATE Function</topic>
    <description>Converts a date to a character value in the form 'YYYYMMDD'.</description>
   <prototypes><prototype>C CDATE(D date)</prototype>
   
<prototype>Formatted_Date as C = CDATE( date as D )</prototype>
<prototype>Formatted_Date as C = CDATE( date_time as T )</prototype>
   
   </prototypes>
   <arguments>
     <argument>
         <name>date</name>
         <description>A variable containing a date value or a character string containing a legitimate representation of a date value ( ISDATE (Date_Value) = .T.).
</description>
     </argument>
     
     <argument>
         <name>date-time</name>
         <description>A variable containing a date time value.</description>
     </argument>
     
   </arguments>
  
   <discussion>
CDATE() interprets a Date value and returns a Formatted_Date character string in the form "YYYYMMDD". This function is useful for constructing multi-level indexes that contain both character and date fields.
Indexes containing the CDATE() function order dates chronologically (year, then month, then day), while those containing DTOC() order dates by month, day, and year.

   </discussion>
  
  <sections>
  <section>
  <title>Example</title>
  <example><![CDATA[? cdate(date() )
= "20050617"
? cdate({6/15/05})
= "20050615"
INV_DATE = {12/18/1993}
? cdate(INV_DATE)
= "19931218"]]></example>
  </section>
  <section>
  <description> Assume you want to order an employee table by department and within each department by seniority. The table has a character field, DEPT, and a date field, STARTDATE. Use the following index expression:
</description>
  <example><![CDATA[DEPT + cdate(START)]]></example>
  
  </section>
  
<section>
<description>The following table shows the order created by this index:</description>
<list>
<item>
<name></name>
<description></description>
</item>

<item>
<name-title>EMPLOYEE</name-title>
<description-title>></description-title>
</item>

<item>
<name-title>FIRSTNAME</name-title>
<description-title>DEPT and START DATE</description-title>
</item>

<item>
<name>Steve</name>
<description>Marketing, 03/21/78</description>
</item>

<item>
<name>Kate</name>
<description>Marketing, 04/17/79</description>
</item>

<item>
<name>Sarah</name>
<description>Marketing, 01/02/83</description>
</item>

<item>
<name>Ralph</name>
<description><![CDATA[R&D, 01/01/80]]></description>
</item>

<item>
<name>Tim</name>
<description><![CDATA[R&D 03/20/80]]></description>
</item>

<item>
<name>Francie</name>
<description><![CDATA[R&D 02/17/84]]></description>
</item>

</list>


</section>
  
<section>
<description>Compare this result with the DTOC() function. If the DTOC() function is used in the above index expression instead of CDATE() , the following ordering results:
</description>

<list>
<item>
<name-title>EMPLOYEE</name-title>
<description-title>></description-title>
</item>

<item>
<name-title>FIRSTNAME</name-title>
<description-title>DEPT and START DATE</description-title>
</item>


<item>
<name>Sarah</name>
<description>Marketing, 01/02/83</description>
</item>

<item>
<name>Steve</name>
<description>Marketing, 03/21/78</description>
</item>

<item>
<name>Kate</name>
<description>Marketing 04/17/79</description>
</item>

<item>
<name>Ralph</name>
<description><![CDATA[R&D 01/01/80]]></description>
</item>

<item>
<name>Francie</name>
<description><![CDATA[R&D 02/17/84]]></description>
</item>
</list>

<item>
<name>Tim</name>
<description><![CDATA[R&D 03/20/80]]></description>
</item>


</section>
  
<section>
<description>Entering search criteria to search on a date field presents a problem because you cannot type in a date directly as a text string. You must either surround the text you enter with the CTOD() function, or use a function to convert the date field to a character field before comparing it with the text.
If you want to search a date field, BIRTHDAY, for the date, "September 20, 1966," you can enter the following criteria:
</description>
<example><![CDATA[cdate(BIRTHDAY) = "19660920" or
BIRTHDAY = ctod("09/20/1966") or
BIRTHDAY = ctod("09/20/66") or
BIRTHDAY = {9/20/66}]]></example>

</section>
<section>

<description>If you want to test for a blank date, use the following expression:</description>
<example><![CDATA[if (trim(cdate(datevalue) ) = "") then
    ' blank value code
else
    ' valid date code
end if]]></example>
</section>
  
  </sections>
  
  
  
  
  
 
   <see>
      <ref link="index.xml">Date and Time Functions</ref>
   </see>
 
 
<terms>time,contains,expressions,field,forms,function,index,search,string,text,variable</terms>
 
</page>