<page>
  <shortlink>api bank routing valid function</shortlink>
   <topic>BankRoutingValid Function</topic>
    <description> Returns .T. if routing_num is a valid bank routing number.</description>
    
   <syntax>Result_Flag as L = bankroutingvalid(C routing_num )</syntax>
   <arguments>
   
      <argument>
         <name>Result_Flag</name>
         <description>.T. (TRUE) indicates that the bank routing number passes the checksum test.</description>
     </argument>
     <argument>
         <name>routing_num</name>
         <description>A character string containing 9 numeric characters.</description>
     </argument>
   </arguments>
  
   <discussion>
The BankRoutingValid() function takes a bank routing number as a character string and returns true or false if the bank routing number is valid. First the function strips out any non-numeric characters (like dashes or spaces) and makes sure the resulting string's length is nine digits. Then it multiplies the first digit by 3, the second by 7, the third by 1, the fourth by 3, the fifth by 7, the sixth by 1, etc., and sums the result. 

 
 
 

   </discussion>
   <sections><section>
   <list>
   <item><name>(*7* x 3) + (*8* x 7) + (*9* x 1) + </name></item>
   <item><name>(*4* x 3) + (*5* x 7) + (*6* x 1) + </name></item>
   <item><name>(*1* x 3) + (*2* x 7) + (*4* x 1) = 160</name></item>
   
   </list>
   </section>
   <section>
   <description>If this sum is an integer multiple of 10 (e.g., 10, 20, 30, 40, 50,...) then the number is valid, as far as the checksum is concerned.
 </description>
   
   </section>
   
   
   </sections>
   
   <sections>
   <section>
   
   <example><![CDATA[
 ? BankRoutingValid( "7 8 9 4 5 6 1 2 3" )
= .F.
]]></example>
   </section></sections>
   
 
<terms>financial,function,number,string</terms>

</page>