<page>
   <topic>CCVALID Function</topic>
    <description>Returns TRUE if a field contains a valid credit card number.</description>
    
   <syntax>Validation_Flag as L = CCVALID(C credit_card_number[,N option])</syntax>
   <arguments>
     <argument>
         <name>credit_card_number</name>
         <description>A string of numbers in character format.</description>
     </argument>
     <argument>
         <name>option</name>
         <description>Optional. A number that indicates the type of checksum to calculate. 0 = Credit Card (Default), 1 = PostNet, 2 = UPC </description>
     </argument>
   </arguments>
  
   <discussion>
CCVALID() returns .T. (TRUE) if a field contains a valid Credit_Card_Number ; otherwise, it returns .F. (FALSE). Only digits, dashes ("-"), and blanks spaces are allowed in the Credit_Card_Number. Alpha Anywhere automatically strips out blank spaces and dashes in the Credit_Card_Number before checking its validity.
A common requirement in invoicing applications is to catch data entry errors in credit card numbers. For example, to prevent the entry of invalid card numbers into a field called CARDNO, create a validation rule for the card number field with the expression CCVALID(CARDNO).
The CCVALID() function works as follows: the last digit of the card number (the checksum digit) is ignored. For the remaining numbers, Alpha Anywhere computes a checksum (see the CHKDIGIT()function). If the checksum equals the checksum digit, the card number is valid.
   </discussion>
   <example><![CDATA[
ccvalid(CARDNO) -> TRUE, if CARDNO contains a valid credit card number
]]></example>
   
   <see>
      <ref href="/Api/Functions/System/Encryption Functions/CHKDIGIT Function.xml">CHKDIGIT()</ref>
      <ref href="/Api/Functions/Data Type/Numeric Functions/index.xml">Encryption Functions</ref>
   </see>
<terms>expressions,validation,contains,credit card,encryption,error,field,function,number,string</terms>   
   
</page>