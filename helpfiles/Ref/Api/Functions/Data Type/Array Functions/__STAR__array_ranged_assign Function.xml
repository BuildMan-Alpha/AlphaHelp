<page>
   <topic>*array_ranged_assign Function</topic>
   <description>The *ARRAY_RANGE_ASSIGN() function copies a range of elements from one array to another. It performs a ranged array assignment, destinition to source, on array patterns passed in.</description>

   <syntax>V *ARRAY_RANGED_ASSIGN(C destination,C source)</syntax>
   <arguments>
     <argument>
         <name>destination</name>
         <description>The array to receive the copied elements.</description>
     </argument>
     <argument>
         <name>source</name>
         <description>The array to provide the elements to be copied.</description>
     </argument>
   </arguments>

<example><![CDATA[dim arr.row[2] as P
dim arr.row[1].col[3] as P
dim arr.row[2].col[3] as P
arr.row[1].col[1].old = "one"
arr.row[1].col[2].old = "two"
arr.row[1].col[3].old = "three"
arr.row[2].col[1].old = "four"
arr.row[2].col[2].old = "five"
arr.row[2].col[3].old = "six"
*array_range_assign("arr.row[*].col[*].new", "arr.row[*].col[*].old")
? arr.row[1].col[1]
= new = "one"
old = "one"
? arr.row[1].col.dump_properties("new")
= one
two
three
? arr.row[2].col.dump_properties("new")
= four
five
six
]]></example>

<sections>
<section>
<description>Here is an example that uses an explicit row, not a wildcard.</description>
<example><![CDATA[*array_ranged_assign("arr.row[1].col[*].new", "arr.row[1].col[*].old")
? arr.row[2].col.dump_properties("new")
=]]></example>
</section>
</sections>

<see>
<ref href="/Api/Functions/Data Type/Array Functions/Array Functions and Methods.html">ARRAY Functions and Methods </ref>
</see>

<terms>array,function</terms>

</page>