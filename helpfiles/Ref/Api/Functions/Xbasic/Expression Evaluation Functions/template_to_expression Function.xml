<page api="xb">
    <shortlink>api template to expression function</shortlink>
    <topic>template_to_expression Function</topic>
    <description>From a template, following cr-lf delimited rules, convert to expression.</description>
    <prototype>C TEMPLATE_TO_EXPRESSION(template as c , general_rules as c , specific_rules as c [, taggedStrings as l [, concatFunction as l [, trimConcat as l [, supportIf as l]]]])</prototype>
    <arguments>
        <argument>
            <name>template</name>
            <type>C</type>
            <description>Template string</description>
        </argument>
        <argument>
            <name>general_rules</name>
            <type>C</type>
            <description>Rules string, cr-lf delimited</description>
        </argument>
        <argument>
            <name>specific_rules</name>
            <type>C</type>
            <description>Rules string, cr-lf delimited</description>
        </argument>
        <argument optional="true">
            <name>taggedStrings</name>
            <type>L</type>
            <description>Are the strings tagged</description>
        </argument>
        <argument optional="true">
            <name>concatFunction</name>
            <type>L</type>
            <description>Concatenate</description>
        </argument>
        <argument optional="true">
            <name>trimConcat</name>
            <type>L</type>
            <description>Trim</description>
        </argument>
        <argument optional="true">
            <name>supportIf</name>
            <type>L</type>
            <description>Support IF statements in the template</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>Returns the output expression.</p>
            </description>
        </return>
    </returns>
    <example code="xb"><![CDATA[? template_to_expression("{firstname} {lastname}","{e}=(e)","",.f.,.f.,.t.)
= (firstname)-" "+(lastname)

? template_to_expression("embedded if {if .t.}hello{else}bye{endif} example","{e}=(e)","",.f.,.f.,.f.,.t.)
= "embedded if "+if(.t.,"hello","bye")+" example"

? template_to_expression("embedded elseif {if .f.}hello{elseif .t.}try{else}bye{endif} example","{e}=(e)","",.f.,.f.,.f.,.t.)
= "embedded elseif "+case(.f.,"hello",.t.,"try",.t.,"bye")+" example"]]></example>
    <terms>expressions,function,logical,template,templates</terms>

</page>