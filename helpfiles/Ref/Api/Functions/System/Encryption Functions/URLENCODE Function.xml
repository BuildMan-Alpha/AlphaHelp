<page api="xb">
    <shortlink>api urlencode function</shortlink>
    <topic>URLENCODE Function</topic>
    <description>URL Encodes text so that it can be safely used as part of a URL.</description>
    <syntax>Output_String as C = URLENCODE(url as c [,flags as c])</syntax>
    <arguments>
        <argument>
            <name>url</name>
            <type>C</type>
            <description>A URL address. Character</description>
        </argument>
        <argument optional="true">
            <name>flags</name>
            <type>C</type>
            <description>Formatting flags (see examples below). Flags can be a combination of the following options:</description>
            <list>
                <item>
                    <name-title>Flag</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>u</name>
                    <description>Use uppercase hex codes</description>
                </item>
                <item>
                    <name>s</name>
                    <description>Do not convert spaces</description>
                </item>
                <item>
                    <name>r</name>
                    <description>Do not convert legal characters: '-', '_', '.', and '~'</description>
                </item>
                <item>
                    <name>o</name>
                    <description>'oAuth' encoding -  a special flag that is a shorthand for the combined 'sru' flags.</description>
                </item>
                <item>
                    <name></name>
                    <description></description>
                </item>
            </list>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Output_String</name>
            <type>C</type>
            <description>URL encoded string.</description>
        </return>
    </returns>
    <discussion>
        <p>URLENCODE() encodes text so that it can be safely used as Part of a URL. Many characters are not allowed within URLs so their representation must be encoded in order to use them. This function automatically handles the encoding. Many characters are not allowed within URLs, so their representation must be encoded in order to use them. URLENCODE() creates a character string by converting all illegal URL address characters in the URL_String to their escape sequences.</p>
        <p>If you had a URL like the following, with multiple name-value pairs separated by ampersands "&amp;", then you would have to encode each of the pairs separately.</p>
    </discussion>
    <sections>
        <section>
            <example>
                <![CDATA[http://zip4.usps.com/zip4/welcome.jsp?address1=3350 e marconi ave&address2=Apt 2&city=Phoenix&state=Arizona]]>
            </example>
        </section>
    </sections>
    <sections>
        <section>
            <description>The result would be the following.</description>
            <example>
                <![CDATA[
url_to_use = urlencode("http://zip4.usps.com/zip4/welcome.jsp?address1=3350 e marconi ave") + 
"&" urlencode("address2=Apt 2") + "&" + urlencode("city=Phoenix") + "&" + urlencode("state=Arizona")
]]>
            </example>
        </section>
    </sections>
    <sections>
        <section>
            <title>Example</title>
            <description>Encoding an entire URL:</description>
            <example>
                <![CDATA[
? urlencode("http://www.alphasoftware.com/about/default.asp")
= "http%3A%2F%2Fwww%2Ealphasoftware%2Ecom%2Fabout%2Fdefault%2Easp"

]]>
            </example>
        </section>
        <section>
            <description>Encoding URL parameters to perform an HTTP GET request:</description>
            <example><![CDATA[
dim home_page as C
home_page = "/Development&Documentation/usersElarrabee/index.html"
http_get("http://www.server.com/ed.asp?home_page=" + urlencode(home_page))]]></example>
        </section>
        <section>
            <title>Parameters to Make Signing Requests when Using oAuth Easier</title>
            <description>
                <p>The urlencode() function takes optional arguments that are useful when working with APIs that require oAuth authentication. In many APIs, the request body must be specially encoded.</p>
            </description>
        </section>
        <section>
            <description>Examples:</description>
            <example>
                    <![CDATA[? urlencode("text-value=foo bar;")
= "text%2dvalue%3dfoo%20bar%3b"

? urlencode("text-value=foo bar;","u")
= "text%2Dvalue%3Dfoo%20bar%3B"

? urlencode("text-value=foo bar;","s")
= "text%2dvalue%3dfoo bar%3b"

? urlencode("text-value=foo bar;","r")
= "text-value%3dfoo%20bar%3b"

? urlencode("text-value=foo bar;","o")
= "text-value%3Dfoo bar%3B"]]>
                </example>
            </section>
        </sections>
        <see>
            <ref>Encryption Function and Methods</ref>
            <ref link="api urldecode function">URLDECODE()</ref>
            <ref>What Characters Must be Encoded</ref>
        </see>
        <terms>encryption,function,oauth,text,encodeuri</terms>
    </page>