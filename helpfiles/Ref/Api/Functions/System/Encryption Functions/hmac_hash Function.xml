<page api="xb">
    <shortlink>api hmac hash function</shortlink>
    <topic>hmac_hash Function</topic>
    <description>Generates a digital signature of the data using the key and HMACSHA1, HMACSHA256, or any other signing method supported by the .NET Framework</description>
    <prototype>C hmac_hash(C data ,C key [,C algorithm [,L toHex ]])</prototype>
    <arguments>
        <argument>
            <name>data</name>
            <type>C</type>
            <description>Data to sign</description>
        </argument>
        <argument>
            <name>key</name>
            <type>C</type>
            <description>Secret key to use for signature</description>
        </argument>
        <argument optional="true">
            <name>algorithm</name>
            <type>C</type>
            <description>Defaults to "HMACSHA1". Algorithm to use for signing.</description>
        </argument>
        <argument optional="true">
            <name>toHex</name>
            <type>L</type>
            <description>Default = .f.. Returns the value as a hex encoded value instead of a base64 encoded value. If .t., returned value is hex encoded. Otherwise, return value is base64 encoded.</description>
        </argument>
    </arguments>
    <discussion>Generates a base64 digital signature of the data using the key and HMACSHA1, HMACSHA256, or any other signing method supported by the .NET Framework. This is useful for verifying file uploads and downloads, and for signing e-commerce documents as required by sites such as Amazon.
    </discussion>
    <sections>
        <section>
            <title>Example</title>
            <description>Interactive session:</description>
            <example code="xb"><![CDATA[?HMAC_HASH("my data", "my key") 'defaults to "HMACSHA1"
= "Wnw05dPAEo44+bw1luJqAWksvhE="
 
?HMAC_HASH("my data", "my key", "HMACSHA1")
= "Wnw05dPAEo44+bw1luJqAWksvhE="
 
?HMAC_HASH("my data", "my key", "HMACSHA256")
= "kBhEzgLKNjSjjzQw7s240hvoY62kDG/wHDjYXry++nA="
 
?HMAC_HASH("my data", "my key", "HMACSHA384")
= "1819IdbuGcIweTIhYBwIK1mOmNrlpgRKK98gnDlVJyXug36wQoDWuBoGlB/GfMqc"

?HMAC_HASH("my data", "1234567890123456", "MACTripleDES") 
= "XV17/zrLgzk="
 
?HMAC_HASH("my data", "123456789012345678901234", "MACTripleDES") 
= "MvLeC8oR/vw="
 
?HMAC_HASH("my data", "my key", "hMACmd5") 'not case sensitive
= "6YeAf6EEZBgdF4BqkAQe/w=="]]></example>
        </section>
        <section>
            <note>The value returned is in base64, which is what most e-commerce sites want. If you try to compare base64 with an online hash calculator that returns hexadecimal, they will not appear to match. Also, HMAC hashes are encrypted with a key, unlike simple unencrypted hashes such as SHA-1.</note>
        </section>
    </sections>
    <see>
        <ref link="DotNet Example: Digital Hash">DotNet Example: Digital Hash</ref>
        <ref href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography?view=netframework-4.7.2">.NET System.Security.Cryptography Namespace</ref>
    </see>
    <terms>dotnet,defaults,file,function,logical,namespace</terms>
</page>