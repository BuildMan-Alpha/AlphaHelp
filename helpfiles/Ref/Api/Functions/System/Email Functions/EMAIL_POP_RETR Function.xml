<page api="xb">
    <shortlink>api email pop retr function</shortlink>
   <topic>EMAIL_POP_RETR Function</topic>
   <syntax>Result_Flag as L = email_pop_retr(P pResult ,P pSocket ,N nMessage [,L lDelete [,N nBlockSize [,L lStatus ]]])</syntax>
   <arguments>
     <argument>
         <name>Result_Flag</name>
         <description>.T. = The message was successfully downloaded. 
.F. = The message was not downloaded.</description>
     </argument>
     <argument>
         <name>pResult</name>
         <description>A pointer variable that is populated by EMAIL_POP_RETR().</description>
         <list>
         <item><name-title>pMessage Component</name-title><description-title>Description</description-title></item>
         <item><name>.headers</name><description>Contains the headers for the entire message.</description></item>
         <item><name>.message</name><description>contains the entire text of the message</description></item>
         <item><name>.nBytes</name><description>contains the number of bytes that the server reported  is in the message</description></item>
         <item><name>.content_type</name><description>has the value of the "content-type:" field  from the headers.</description></item>
         <item><name>.parts</name><description>If the message has many parts (Content-Type: Multipart/Alternative  or similar), there will be an array named parts in the pMessage structure. Each element of this  array contains: headers, message,  content_type, and perhaps another parts array. The parts array will usually be there if the message contains html  or attachments, as is seen below.
</description></item>
         
         </list>
     </argument>
     <argument>
         <name>pSocket</name>
         <description>A pointer variable that is populated by EMAIL_POP_OPEN().</description>
     </argument>
     <argument>
         <name>nMessage</name>
         <description>The message number that you want to retrieve from the  server. Numeric</description>
     </argument>
     <argument>
         <name>lDelete</name>
         <description>Logical. Optional. Default = .F.
.T. = The message  will be deleted from the server after it is downloaded
.F. = The message  is not deleted.</description>
     </argument>
     <argument>
         <name>nBlockSize</name>
         <description>Numeric. Optional. Default = 64KB. The number of bytes that should  be retrieved from the server at one time.
</description>
     </argument>
     <argument>
         <name>lStatus</name>
         <description>Logical</description>
     </argument>
   </arguments>
   <description>The EMAIL_POP_RETR() function retrieves a single message from a POP3  server. The connection must have been previously opened with EMAIL_POP_OPEN().
, i.e. the pSocket.s must be an open connection</description>
   
   <example><![CDATA[DIM pSocket as P
DIM pMessage as P
? email_pop_open(pSocket, "mail.mycompany.com",  "john_doe", "sneaky")
= .T.
? pSocket.nMessages
= 5
? email_pop_retr(pMessage, pSocket, 2)
= .T.
? properties_enum(pMessage)
= headers
message
nBytes
content_type
parts]]></example>
   <sections>
       <section>
           <title>Example 2</title>
            <example><![CDATA[? pMessage.content_type
= "Multipart/Mixed"
? pMessage.parts1.content_type
= "Multipart/Alternative"
? pMessage.parts1.parts1.content_type
= "Text/Plain"
? pMessage.parts1.parts1.message
= "This is a plain text email"
? pMessage.parts1.parts2.content_type
= "Text/Html"]]></example>
       </section>
   </sections>
   <see>
      <ref href="/documentation/pages/Ref/Api/Functions/System/Email%20Functions/index.xml">Email Functions and  Methods</ref>
   </see>
<terms>email,array,contains,defaults,field,function,header,html,logical,number,pointer,text,variable</terms>
</page>