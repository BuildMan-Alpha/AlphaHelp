<page api="xb">
	<shortlink>api email smtp send function</shortlink>
	<topic>EMAIL_SMTP_SEND Function</topic>
	<description>
		The EMAIL_SMTP_SEND() function sends a message through a SMTP mail server. This function, along with EMAIL_SMTP_OPEN()and EMAIL_SMTP_CLOSE(), will allow you to send email from a computer that does not have an Alpha Anywhere email profile.
	</description>
	<syntax>Result as L = email_smtp_send(P pMessage ,P pSocket [,L lStatus [,L autowrap ]])</syntax>
	<arguments>
		<argument>
			<name>pMessage</name>
			<type>P</type>
			<description>A pointer variable containing the message with the following properties:</description>
			<properties>
				<property>
					<name>FROM</name>
					<type>C</type>
					<description>The sender's email address.</description>
				</property>
				<property optional="true">
					<name>FROM_ALIAS</name>
					<type>C</type>
					<description>The sender's name.</description>
				</property>
				<property>
					<name>TO</name>
					<type>C</type>
					<description>The recipient list. Multiple entries are separated by commas. Microsoft Outlook allows you to format the address as "recipient_name". This hides the "" portion of the field from the recipient.</description>
				</property>
				<property>
					<name>CC</name>
					<type>C</type>
					<description>The CC list. Multiple entries are separated by commas.</description>
				</property>
				<property optional="true">
					<name>CHARSET</name>
					<type>C</type>
					<description>Specifies the character set you want to use, ex. UTF8.</description>
				</property>
				<property optional="true">
					<name>BCC</name>
					<type>C</type>
					<description>The BCC list. Multiple entries are separated by commas.</description>
				</property>
				<property>
					<name>SUBJECT</name>
					<type>C</type>
					<description>The subject line of the email.</description>
				</property>
				<property>
					<name>MESSAGE</name>
					<type>C</type>
					<description>The body of a text message.</description>
				</property>
				<property>
					<name>HTML_MESSAGE</name>
					<type>C</type>
					<description>The body of a HTML message.</description>
				</property>
				<property optional="true">
					<name>ATTACHMENTS</name>
					<type>C</type>
					<description>A semi-colon (;), comma, or CR-LF delimited list of filenames.</description>
				</property>
				<property optional="true">
					<name>XMAILER</name>
					<type>C</type>
					<description>Default = NULL. The sending email program.</description>
				</property>
				<property optional="true">
					<name>LRELATED</name>
					<type>L</type>
					<description>Default = .F.. If .T. = Attachments are embedded image in the HTML message. If .F. = Attachments are separate files.
					</description>
				</property>
				<property optional="true">
					<name>RETURNRECEIPT</name>
					<type>L</type>
					<description>Default = .F. (Requires V8, addin build 3090 or later). If .t. then an e-mail will be sent to the sender acknowledging that the recipient has read the e-mail. Note that not all e-mail clients support this feature and the recipient might decline to send the receipt.</description>
				</property>
			</properties>
		</argument>
		<argument>
			<name>pSocket</name>
			<type>P</type>
			<description>A pointer variable that is populated by EMAIL_SMTP_OPEN().</description>
		</argument>
		<argument optional="true">
			<name>lStatus</name>
			<type>L</type>
			<description>Default = .F. Whether to show a progreess meter or not. .T. = Show a progress meter. .F. = Do not show a progress meter.</description>
		</argument>
		<argument optional="true">
			<name>autowrap</name>
			<type>L</type>
			<description>Default = .T. Whether to force text emails to wrap at 72 characters per line. .T. = Automatically wrap all lines of text at 72 characters or less. .F. = Leave text email body unchanged.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>Result</name>
			<type>L</type>
			<description>
				.T. = The message was sent successfully.
				.F. = The message was not sent.
			</description>
		</return>
	</returns>

	<sections>
		<section>
			<title>Example</title>

			<example>
				<![CDATA[DIM ps as P
DIM pm as P

pm.from = "aaron@alphasoftware.com"
pm.from_alias = "Aaron Brown"
pm.to = "ed@alphasoftware.com"
pm.cc = "selwyn@alphasoftware.com"
pm.bcc = "richard@alphasoftware.com
pm.subject = "This is a test"
pm.message = "This is the body of the message"
pm.html_message = "HTML Body goes here

pm.attachments = <<%str%
C:\dev\test.zip
C:\my documents\report.zip
%str%

'optional header fields
pm.xmailer = "Alpha Mailer"
pm.lRelated = .F.

' send message
IF email_smtp_open(ps, "mail.alphasoftware.com")

email_smtp_send(pm, ps)
END IF
Email_smtp_close(ps)]]>
			</example>
		</section>

		<section>
			<title>Character Sets</title>
			<description>You can specify the character set when using the email_smtp_send() function.</description>
			<example>
				<![CDATA[DIM ps as P
DIM pm as P
pm.from = "aaron@alphasoftware.com"
pm.from_alias = "Aaron Brown"
pm.to = "ed@alphasoftware.com"
pm.subject = "This is a test"
' Text that contains non ascii characters - encoded as UTF8
pm.message = convert_acp_to_utf8("même manière")
' Indicate that we want to send the text with 'utf8' encoding
pm.charset = "utf8"
IF email_smtp_open(ps, "mail.alphasoftware.com")
email_smtp_send(pm, ps)
END IF
Email_smtp_close(ps)]]>
			</example>

		</section>


	</sections>
	<see>
		<ref href="/documentation/pages/Ref/Api/Functions/System/Email%20Functions/index.xml">Email Functions and Methods</ref>
		<ref link="EMAIL_SMTP_OPEN Function">EMAIL_SMTP_OPEN()</ref>
		<ref link="EMAIL_SMTP_CLOSE Function">EMAIL_SMTP_CLOSE()</ref>
	</see>
	<terms>email,addin,components,defaults,embedded image,field,function,header,html,image,images,list,pointer,send email,text,variable</terms>

</page>