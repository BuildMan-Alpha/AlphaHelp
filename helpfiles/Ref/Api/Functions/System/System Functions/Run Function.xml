<page api="xb">
    <shortlink>run function</shortlink>
    <topic>RUN function</topic>
    <prototype>V RUN(C command_line [,L show_window [, N timeout [, L terminateOnTimeout]]])</prototype>
    <arguments>
        <argument>
            <name>command_line</name>
            <type>C</type>
            <description>The Windows command that you wish to run.</description>
        </argument>
        <argument optional="true">
            <name>show_window</name>
            <type>L</type>
            <description>Default = .T. If .T., Display window. If .F., Hide window.</description>
        </argument>
        <argument optional="true">
            <name>timeout</name>
            <type>N</type>
            <description>Default = -1. Length in milliseconds to wait before timing out. -1 = INFINITE.</description>
        </argument>
        <argument optional="true">
            <name>terminateOnTimeout</name>
            <type>L</type>
            <description>Default = .F.. If a timeout occurs and this parameter is set to true, the created process will be terminated using a pattern that injects a thread into the new process and calls Exit Process. This is to prevent handles from remaining locked. Kill process (TerminateProcess()) does not release handles gracefully.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The RUN() function runs a command and waits until it is completed before returning control to Alpha Anywhere.</p>
        <p>If an error occurs, the RUN() function will fail with an error. If RUN() fails, use [ON ERROR GOTO] to trap the error information.</p>
        <p>Example Interactive Window Session:</p>
     </discussion>
    <example code="xb">
        <![CDATA[? Run("CMD.EXE /C \"DIR C:\*.* /s\"", .t.,1000,.t.)
ERROR: Application timed out.]]>
    </example>
    <limitations>Desktop applications only.</limitations>
    <links>
        <link link="Xbasic on error goto">ON ERROR GOTO</link>
    </links>
    <see>
        <ref link="System Functions">System Functions</ref>
        <ref link="SYS_OPEN Function">SYS_OPEN()</ref>
        <ref link="SYS_SHELL_WAIT function">SYS_SHELL_WAIT()</ref>
    </see>
    <terms>system,control,display,function</terms>
</page>