<page api="xb">
    <shortlink>api sys shell wait function</shortlink>
    <topic>SYS_SHELL_WAIT Function</topic>
    <description>Run a program and wait until the program closes before returning.</description>
    <prototype>V sys_shell_wait(C command_line [,L show_window [, N timeout [, L terminateOnTimeout]]])</prototype>
    <arguments>
        <argument>
            <name>command_line</name>
            <type>C</type>
            <description>The Windows command that you wish to run.</description>
        </argument>
        <argument optional="true">
            <name>show_window</name>
            <type>L</type>
            <description>Default = .T. If .T., Display window. If .F., Hide window.</description>
        </argument>
        <argument optional="true">
            <name>timeout</name>
            <type>N</type>
            <description>Default = -1. Length in milliseconds to wait before timing out. -1 = INFINITE.</description>
        </argument>
        <argument optional="true">
            <name>terminateOnTimeout</name>
            <type>L</type>
            <description>Default = .F.. If a timeout occurs and this parameter is set to true, the created process will be terminated using a pattern that injects a thread into the new process and calls Exit Process. This is to prevent handles from remaining locked. Kill process (TerminateProcess()) does not release handles gracefully.</description>
        </argument>
    </arguments>
    <note>SYS_SHELL_WAIT() does not throw any errors if something fails.</note>
    <discussion>The SYS_SHELL_WAIT() function runs a command and waits until it is completed before returning control to Alpha Anywhere.   </discussion>
    <example>
        <![CDATA[sys_shell_wait("explorer.exe", .T.)]]>
    </example>
    <sections>
        <section>
            <description>Here is the code for using the DOS XCopy function to copy the contents of c:\alpha\newha\Practice Before Multiple States\*.* to c:\alpha\newha\test33\*.*.</description>
            <example>
                <![CDATA[
sys_shell_wait("xcopy c:\alpha\newha\Practic~\*.* c:\alpha\newha\test34\*.* /E /Y",.t.)
]]>
            </example>
        </section>
        <section>
            <description>The following example demonstrates using the timeout and terminateOnTimeout parameters:</description>
            <example><![CDATA[SYS_SHELL_WAIT("CMD.EXE /C \"DIR C:\*.* /s\"", .t.,1000,.t.)]]></example>
        </section>
    </sections>
    <limitations>Desktop applications only.</limitations>
    <see>
        <ref link="System Functions">System Functions</ref>
        <ref link="SYS_OPEN Function">SYS_OPEN()</ref>
        <ref link="run function">Run()</ref>
    </see>
    <terms>system,control,display,function</terms>
</page>