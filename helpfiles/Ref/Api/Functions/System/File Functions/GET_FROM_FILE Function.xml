<page api="xb">
    <shortlink>api get from file function</shortlink>
    <topic>GET_FROM_FILE Function</topic>
    <description>Returns the contents of a file as a text string.</description>
    <prototype>Result as C = get_from_file(C fileLocation [,L flagBase64Encode])</prototype>
    <arguments>
        <argument>
            <name>filename</name>
            <type>C</type>
            <description>The fully qualified file path and name on the local machine, the URL of a remote file, or a JSON string defining the following properties:</description>
            <properties>
                <property>
                    <name>connectionString</name>
                    <type>C</type>
                    <description>The name of a saved [Storage Connection].</description>
                </property>
                <property>
                    <name>objectName</name>
                    <type>C</type>
                    <description>The name of the file object to read.</description>
                </property>
            </properties>
        </argument>
        <argument>
            <name>flagBase64Encode</name>
            <type>L</type>
            <description>
                <p>Default = *[xb:.f.]*. If *[xb:.t.]*, Base64 encodes the data before returning it.</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Result</name>
            <types>
                <type>C</type>
            </types>
            <description>
                <p>Returns the file contents. If the operation fails, returns an empty string.</p>
            </description>
        </return>
    </returns>
    <discussion>GET_FROM_FILE() opens a file specified by filename and reads the contents of the file. Returns a character string with the contents of the file.</discussion>
    <sections>
        <section>
            <title>Example: Reading a file</title>
            <description>This script reads the contents of a file.</description>
            <example code="xb"><![CDATA[dim fileLocation as C = A5.GET_PATH() + "simpleExample.txt"
dim fileContents as C = get_from_file(fileLocation)]]></example>
        </section>
        <section>
            <title>Example: Reading a file from a URL</title>
            <description>
                <p>This script reads the contents of a file located at a URL.</p>
            </description>
            <example code="xb"><![CDATA[dim fileLocation as C = "https://www.example.com/simpleExample.txt"

dim fileContents as C = get_from_file(fileLocation)]]></example>
        </section>
        <section>
            <title>Example: Reading a file from AmazonS3</title>
            <description>
                <p>This script reads the contents of a file from AmazonS3.</p>
            </description>
            <example code="xb"><![CDATA[dim fileReadParams as P
fileReadParams.connectionString = "AmazonS3" 'The name of a saved Storage Connection string
fileReadParams.objectName = "logs\myFile.txt" 'The name of the object to read

' Generate a JSON string:
dim containsSpecialFlags as L = .f.
dim compactJSON as L = .t.

dim fileLocation as C = json_generate(fileReadParams,containsSpecialFlags,compactJSON)

dim fileContents as C = get_from_file(fileLocation)]]></example>
        </section>
    </sections>
    <links>
        <link link="named%20storage%20connection%20strings">Storage Connection</link>
    </links>
    <see>
        <ref href="File Functions">File Functions</ref>
        <ref link="Directory Functions">Directory Functions</ref>
        <ref link="SAVE_TO_FILE Function">Save_TO_FILE()</ref>
        <ref link="named%20storage%20connection%20strings">Storage Connections</ref>
    </see>
    <terms>file,directory,filename,function,script,set,text,variable</terms>
</page>