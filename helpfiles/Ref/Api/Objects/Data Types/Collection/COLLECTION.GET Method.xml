<page>
    <shortlink>api collection object get function</shortlink>
    <topic>COLLECTION.GET Function</topic>
    <description>Get the value for an element from the collection.</description>
    <prototypes>
        <prototype>Data as A = &lt;COLLECTION&gt;.GET( Key as A )[. Child_Name as C ])</prototype>
        <prototype>Data as A = &lt;COLLECTION&gt;.GET( Key as D )</prototype>
        <prototype>Data as A = &lt;COLLECTION&gt;.GET( Key as N )</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>key</name>
            <types>
                <type>A</type>
                <type>D</type>
                <type>N</type>
            </types>
            <description>Any type</description>
        </argument>
        <argument>
            <name>Child_Name</name>
            <types>
                <type>C</type>
            </types>
            <description>The name of a child variable.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>Data</name>
            <types>
                <type>A</type>
            </types>
            <description>Returns the value for the specified Key. If the key does not exist, the type of the returned value will be "Z".</description>
        </return>
    </returns>
    <discussion>The *[xb:&lt;COLLECTION&gt;.GET()]* method returns the Data associated with a specified Key.</discussion>
    <sections>
        <section>
            <note>
                <p>Trailing spaces in the specified key are considered part of the key and are not trimmed.</p>
            </note>
        </section>
        <section>
            <example><![CDATA[
dim mycollection as u
mycollection.set("FJ", "Fred Jones")
mycollection.set("BB", "Bryan Boyd")
mycollection.set("KL", "Kim Lee")
mycollection.set("KB", "Karen Boyd")
mycollection.set("EL", "Erica Loyd")
? mycollection.get("BB")
= "Bryan Boyd"
' The key is not case sensitive
? mycollection.GET("bb")
= "Bryan Boyd"
? mycollection.get("b")
= <No data returned>
x = mycollection.get("somekeythatdoesnotexist") ?typeof(x) ="Z"
]]></example>
        </section>
        <section>
            <description>The "value" that you assign to a collection entry does not have to be a scalar. It can be a dot variable with multiple children, as shown in the following example.</description>
            <example><![CDATA[
dim a as P
dim b as P
dim u as U
a.name = "Fred"
a.city = "Boston"
a.company = "Alpha"
b.name = "Ed"
b.city = "Nashua"
b.company = "Beta
u.set("Fred", a)
u.set("Ed", b)
? u.get("Ed").company
= "Beta"
? u.get("Fred").city
= "Boston"
]]></example>
        </section>
        <section>
            <description>
                <p>If the data in a field is a logical field that allows NULL values, *[xb:&lt;COLLECTION&gt;.GET()]* can return up to three possible values: *[xb:.t.]*, *[xb:.f.]*, or NULL. This primarily applies to collections populated from a DBF table using the [from_table()] method. For example:</p>
            </description>
            <example code="xb"><![CDATA[dim collection as U
t = table.open("products")
filename = t.filename_get()
collection.from_table(filename,"product_id","discontinued")
t.close()

? collection.get("122")
= .F.

? collection.get("123")
= .T.

? collection.get("124")
= NULL]]></example>
        </section>
    </sections>
    <links>
        <link link="api collection object from table function">from_table()</link>
    </links>
    <see>
        <ref>Collection Methods</ref>
    </see>
    <terms>collection,function,variable</terms>
</page>