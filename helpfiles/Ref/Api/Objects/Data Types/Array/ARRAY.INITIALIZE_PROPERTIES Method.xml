<page api="xb">
    <topic>ARRAY.INITIALIZE_PROPERTIES Function</topic>
    <syntax>V &lt;ARRAY&gt;.initialize_properties(C format,C data[,L append])</syntax>
    <arguments>
        <argument>
            <name>format</name>
            <type>C</type>
            <description>Defines the structure of the Data string and also defines the names of the array properties. The names of the array properties are separated by a delimiter (a non alphanumeric character or string, such as "|", "@", or "~~"). A property name may be followed by an optional type designation in the format Property_Name:Type_Designation. The default type is character. The following type designations are possible.</description>
            <list>
                <item>
                    <name-title>Format</name-title>
                    <description-title>Meaning</description-title>
                </item>
                <item>
                    <name>C</name>
                    <description>Character</description>
                </item>
                <item>
                    <name>N</name>
                    <description>Numeric</description>
                </item>
                <item>
                    <name>D</name>
                    <description>Date</description>
                </item>
                <item>
                    <name>L</name>
                    <description>Logical</description>
                </item>
                <item>
                    <name>B</name>
                    <description>Blob</description>
                </item>
                <item>
                    <name>F</name>
                    <description>Function </description>
                </item>
                <item>
                    <name>*</name>
                    <description>Supplied with the data element.</description>
                </item>
            </list>
        </argument>
        <argument>
            <name>data</name>
            <type>C</type>
            <description>A CR-LF delimited string of data values.</description>
        </argument>
        <argument optional="true">
            <name>append</name>
            <type>L</type>
            <description>If .t., data will be appended to existing data in the array.</description>
        </argument>
    </arguments>
    <description>Initialize property array subfields from a string of newline separated 'rows'.</description>
    <discussion>
        <p>The &lt;ARRAY&gt;.INITIALIZE_PROPERTIES() method loads field values from a data string into a property array. The Format string defines the structure of the data string and also defines the names of the array properties. Data is a CR-LF delimited string of data values. Each format element can be followed by an optional type.</p>
        <p>For example, assume you supplied the following Format string:</p>
    </discussion>  
    <sections>
        <section>
            <example><![CDATA["Name + Age:N + Occupation"]]></example>
        </section>
        <section>
            <description>
                <p>Alpha Anywhere would create an array with three properties: name, age and occupation. It would look in the Data string for values separated by the " + " separator. The Age property is Numeric.</p>
                <p>For example, the following Data string could be used with the above Format string:</p>
            </description>
        <example><![CDATA["Fred + 23 + Sales
Tom + 45 + Development
Joanne + 55 + President"]]></example>
        </section>
        <section>
            <description>The optional type in the format string can also be '*' (in addition to 'C' 'N' 'D' 'L' 'B' and 'F' (for Function) ). If you use the '*' type, then it is assumed that the data that you are reading in is prefixed with the type (see example below). The array element is initialized with the type specified in the data that is being read in.</description>
        </section>
        <section>
            <title>Example</title>
            <description>The following script initializes a property array:</description>
            <example><![CDATA[Data = <<%string%
Stephanie + 23 + Sales
Joanne + 45 + Development
Rita + 55 + President
%string%
dim name[3] as P
name.initialize_properties("Name + Age:N + Position",data)]]></example>
        </section>
        <section>
            <description>This creates the following array:</description>
        </section>
        <section>
            <content><![CDATA[<table>
    <tr><th>Element</th><th>Name</th><th>Age</th><th>Position</th></tr>
    <tr><td>Name[1]</td><td>Stephanie</td><td>23</td><td>Sales</td></tr>
    <tr><td>Name[1]</td><td>Joanne</td><td>45</td><td>Development</td></tr>
    <tr><td>Name[1]</td><td>Rita</td><td>55</td><td>CEO</td></tr>
</table>]]></content>
        </section>
        <section>
            <description>The following example shows the use of the '*' parameter in the format string.</description>
            <example><![CDATA[dim p[3] as P
p[1].NAME = "name"
p[1].VALUE = "fred"
p[2].NAME = "age"
p[2].VALUE = 47
p[3].NAME = "dob"
p[3].VALUE = {12/18/52}

string = p.dump_properties("name::value:*")

? string
= name::Cfred
age::N47
dob::D12/18/1952
::

dim s[3] as P
s.initialize_properties("name::value:*",string)
? s[1].VALUE
= "fred"

? s[2].VALUE
= 47

? s[3].VALUE
= {12/18/1952}

? typeof(s[3].VALUE)
= "D"]]></example>
        </section>
    </sections>
    <terms>array,addition,blob,defaults,development,function,logical,script,string</terms>
</page>