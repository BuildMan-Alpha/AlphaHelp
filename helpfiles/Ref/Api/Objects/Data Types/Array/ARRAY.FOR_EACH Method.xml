<page api="xb">
    <shortlink>api objects array for each function</shortlink>
    <topic>ARRAY.FOR_EACH Function</topic>
    <prototype>List as C = &lt;ARRAY&gt;.FOR_EACH(format as C [, filter as C])</prototype>
    <arguments>
        <argument>
            <name>format</name>
            <type>C</type>
            <description>An Xbasic expression defining how entries are formatted. Individual properties can be referenced by the format expression. See example below.</description>
        </argument>
        <argument optional="true">
            <name>filter</name>
            <type>C</type>
            <description>Default = "". A filter expression that returns a true (.t.) or false (.f.) value used to determines what values to include in the result.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>List</name>
            <type>C</type>
            <description>A CR-LF delimited list of formatted array entries.</description>
        </return>
    </returns>
    <description>Converts a property array to a formatted list of CR-LF separated entries.</description>
    <discussion>The *[xb:FOR_EACH]* array method creates a CR-LF delimited list of formatted entries for a property array. This method can only be used with property arrays.</discussion>
    <example code="xb"><![CDATA[dim arr[0] as p
arr[].fname = "john"
arr[..].lname = "smith"
arr[].fname = "tim"
arr[..].lname = "jones"
arr[].fname = "liz"
arr[..].lname = "harrison"

? arr.for_each("f_upper(lname)+\", \"+f_upper(fname)")
= Smith, John
Jones, Tim
Harrison, Liz

? arr.for_each("f_upper(fname)","lname<'m'")
= Tim
Liz]]></example>
    <see>
        <ref link="api star for each function">*FOR_EACH()</ref>
        <ref link="Xbasic for each next">FOR EACH ... NEXT</ref>
    </see>
</page>