<page api="xb" build="5982">
    <shortlink>xb array dump_json method</shortlink>
    <topic>Array dump_json Method</topic>
    <description>
        <p>Creates a JSON string from data in a property array.</p>
    </description>
    <prototypes>
        <prototype>C dump_json(C pattern)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>pattern</name>
            <type>C</type>
            <description>
                <p>A pattern that defines how to format the data in the array as a JSON object. The pattern is defined as a JSON string.</p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <type>C</type>
            <description>
                <p>Returns the array data formatted as a JSON object using the specified pattern.</p>
            </description>
        </return>
    </returns>
    <discussion>
        <p>The *[xb:.dump_json()]* method creates a JSON string from data in a property array (this method is similar to the [.dump_properties()] method). You must specify a pattern to define the shape of the JSON to generate.</p>
        <p>For example, assume the following JSON object represents the data in an Xbasic property array.</p>
        <p>
            <example code="xb"><![CDATA[dim json as c = <<%str%
[
    {"Firstname": "John", "Lastname" : "Smith",  "Address": { "Street" : "14 Main Street", "City" : "Boston", "State" : "MA"}}, 
    {"Firstname": "Henry", "Lastname" : "Rhodes", "Address": { "Street" : "4 Circle Drive", "City" : "New York", "State" : "NY"}}, 
    {"Firstname": "Allison", "Lastname" : "Berman", "Address": { "Street" : "11 Beaver Avenue", "City" : "Los Angeles", "State" : "CA"}}
]
%str%]]></example>
        </p>
        <p>This JSON can be parsed into an Xbasic property array as follows:</p>
        <p>
            <example code="xb"><![CDATA[dim p as p = json_parse(json)]]></example>
        </p>
        <p>The pattern shown below can be used to define the required shape of the JSON to be dumped out using the *[xb:.dump_json()]* method:</p>
        <p>
            <example code="xb"><![CDATA[dim pattern as c = <<%str%
{
    "Lastname": "",
    "Married": true,
    "Address": {
        "City": ""
    }
}
%str%]]></example>
        </p>
        <p>Notice that the pattern can specify property names (and corresponding default value) for properties that may not exist in the source property array. For example, the pattern specifies a "Married" property with a default value of *[js:true]*.</p>
        <p>The *[xb:.dump_json()]* method can be called on the Xbasic property array. For example:</p>
        <p>
            <example code="xb"><![CDATA[var resultJSON = p.dump_json(pattern)]]></example>
        </p>
        <p>The resulting JSON from the method is shown below:</p>
        <p>
            <example code="json"><![CDATA[[
    {
        "Lastname": "Smith",
        "Married": true,
        "Address": {
            "City": "Boston"
        }

    },
    {
        "Lastname": "Rhodes",
        "Married": true,
        "Address": {
            "City": "New York"
        }

    },
    {
        "Lastname": "Berman",
        "Married": true,
        "Address": {
            "City": "Los Angeles"
        },
    }
]
]]></example>
        </p>
    </discussion>
    <links>
        <link link="api objects array dump properties function">.dump_properties()</link>
    </links>
</page>