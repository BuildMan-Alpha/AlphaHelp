<page>
	<shortlink>api objects request object</shortlink>
	<topic>Request Object</topic>
	<description>The Request Object is used with the Alpha Anywhere Standard Application Server. To access the Request object in the Alpha Anywhere Application Server for IIS, use the [Context.Request] object.</description>
	<discussion>A5W pages have access to a system object named Request. This object represents the parsed HTTP request that was received by the Application Server and has a number of properties available.</discussion>
	<sections>
		<section>
			<note>Prior to Version 10, the Request object was local to the page (script) and had to be passed to any functions that need access to it.</note>
		</section>
	</sections>
	<properties>
		<property readonly="true">
			<name>Request.A5WIncluePath</name>
			<type>C</type>
			<description>Indicates the path that will be used as the default location for the *[link:a5w_include function]*.</description>
		</property>
		<property readonly="true">
			<name>Request.Accept</name>
			<type>C</type>
			<description>The value of the Accept HTTP header, which indicates the MIME types that the client can accept. This property was optionally created in versions 6-9, but will always exist in version 10. If an Accept header was not included in the request, the value will be blank. Previously, this property would not exist if the header was not included, requiring additional Xbasic code to test for its existence first.</description>
			<deprecated build="4304">*[xb:Request.Accept]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("Accept")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.AcceptCharset</name>
			<type>C</type>
			<description>The value of the Accept-Charset HTTP header, which indicates the character sets that the client can accept.  If an Accept-Charset header was not included in the request, the value will be blank. Previously, this property would not exist if the header was not included, requiring additional Xbasic code to test for its existence first.</description>
			<deprecated build="4304">*[xb:Request.AcceptCharset]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("Accept-Charset")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.AcceptEncoding</name>
			<type>C</type>
			<description>The value of the Accept-Encoding HTTP header, which indicates the types of transfer encoding accepted by the client. This replaces the optional Accept_Encoding property in versions 6-9. If an Accept-Encoding header was not included in the request, the value will be blank. Previously, this property would not exist if the header was not included, requiring additional Xbasic code to test for its existence first.</description>
			<deprecated build="4304">*[xb:Request.AcceptEncoding]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("Accept-Encoding")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.AcceptLanguage</name>
			<type>C</type>
			<description>The value of the Accept-Language HTTP header, which indicate the languages that the client is configured to accept. This replaces the optional Accept_Language property in versions 6-9. If an Accept-Language header was not included in the request, the value will be blank. Previously, this property would not exist if the header was not included, requiring additional Xbasic code to test for its existence first.</description>
			<deprecated build="4304">*[xb:Request.AcceptLanguage]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("Accept-Language")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.ApplicationRoot</name>
			<type>C</type>
			<description>The path to the root of the current application, as  seen from the server. For example, if you publish an application to c:\a5webroot\app1 on your server, Request.ApplicationRoot will contain the value c:\a5webroot\app1 for all requests for anything in that application, even if it is in a subfolder. So http://server/app1/page1.a5w would see the same value as  http://server/app1/subfolder1/page2.a5w.</description>
		</property>
		<property readonly="true">
			<name>Request.Body</name>
			<type>C</type>
			<description>The full body of the HTTP request. This will be empty for a GET request, as a GET does not include a body.</description>
		</property>
		<property readonly="true">
			<name>Request.Browser.CookiesEnabled</name>
			<type>L</type>
			<description>A logical value that indicates whether or not the client browser accepts cookies.</description>
		</property>
		<property readonly="true">
			<name>Request.Connection</name>
			<type>C</type>
			<description>The value of the Connection HTTP header, which contains the connection type requested by the client, such as "Keep-Alive". This property was optionally created in versions 6-8, but will always exist in version 9.</description>
		</property>
		<property readonly="true">
			<name>Request.ContentType</name>
			<type>C</type>
			<description>A string that describes any encoding applied by the client before sending the request.  It is typically blank, but some HTML forms may use a type of "multipart/form-data".</description>
		</property>
		<property readonly="true">
			<name>Request.Cookie</name>
			<type>C</type>
			<description>The value of the Cookie HTTP header, which is a string containing all cookies sent by the client. This property was optionally created in versions 6-9, but will always exist in version 10. If a Cookie header was not included in the request, the value will be blank. Previously, this property would not exist if the header was not included, requiring additional Xbasic code to test for its existence first.</description>
			<deprecated build="4304">*[xb:Request.Cookie]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("Cookie")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.Cookies</name>
			<type>P</type>
			<description>An object containing all of the variables created from the cookie(s) included in the HTTP request sent from the client.</description>
		</property>
		<property readonly="true">
			<name>Request.Headers</name>
			<type>C</type>
			<description>The headers of the request in a CR or CR-LF delimited list.</description>
		</property>
		<property readonly="true">
			<name>Request.HTTP_Request</name>
			<type>C</type>
			<description>The first line of the request headers, which tells the server what file to retrieve and how to retrieve it.</description>
			<deprecated build="4304">*[xb:Request.HTTP_Request]* is deprecated. No replacement for this property exists.</deprecated>
		</property>
		<property readonly="true" build="4304">
			<name>Request.HttpMethod</name>
			<type>C</type>
			<description>A read-only character property indicating the HTTP method used when the request was made.</description>
		</property>
		<property readonly="true">
			<name>Request.Host</name>
			<type>C</type>
			<description>The hostname that this request was sent to. Request.Host will always exist if the client uses HTTP/1.1, but it may not if the client uses HTTP/1.0.</description>
		</property>
		<property readonly="true">
			<name>Request.IfModifiedSince</name>
			<type>C</type>
			<description>The value of the If-Modified-Since HTTP header, which a client may include to ask the server to compare a client cached version of the resource with the resource on the server.</description>
			<deprecated build="4304">*[xb:Request.IfModifiedSince]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("If-Modified-Since")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.IfUnmodifiedSince</name>
			<type>C</type>
			<description>The value of the If-Unmodified-Since HTTP header, which a client may include to ask the server to compare a client cached version of the resource with the resource on the server.</description>
			<deprecated build="4304">*[xb:Request.IfUnmodifiedSince]* is deprecated. Use *[link:Request.GetHeader Method]* instead. E.g. *[xb:Request.GetHeader("If-Unmodified-Since")]*</deprecated>
		</property>
		<property readonly="true">
			<name>Request.Query_String</name>
			<type>C</type>
			<deprecated>Request.Query_String is deprecated in Alpha Anywhere. Use [Context.Request.queryString.toString()] instead.</deprecated>
			<description>The query string of a GET request, such as "foo=bar&amp;this=that".</description>
		</property>
		<property readonly="true">
			<name>Request.Raw</name>
			<type>C</type>
			<description>The complete raw request received by the server.</description>
		</property>
		<property readonly="true">
			<name>Request.Referer</name>
			<type>C</type>
			<description>Contains the URL of the page from which the user came.</description>
			<important>Request.Referer is extremely unreliable for any type of run-time decision making. It is really only useful for statistical analysis of your logs, for example to determine whether your traffic came from a search engine or another site's recommendation.</important>
		</property>
		<property readonly="true">
			<name>Request.Remote_Addr</name>
			<type>C</type>
			<description>The IP address of the remote client making the request. Do not attempt to use Request.Remote_Addr as a unique identifier for the session. All users behind a firewall or proxy server typically show up as a single IP address.</description>
		</property>
		<property readonly="true">
			<name>Request.Request_Method</name>
			<type>C</type>
			<description>The request method, such as "GET" or "POST". </description>
			<deprecated build="4304">*[xb:Request.Cookie]* is deprecated. Use the *[xb:Request.HttpMethod]* property instead.</deprecated>
		</property>
		<property readonly="true">
			<name>Request.Request_URI</name>
			<type>C</type>
			<description>The requested file including any GET query string, such as " /index.html?foo=bar&amp;this=that ".</description>
		</property>
		<property readonly="true">
			<name>Request.Script_Name</name>
			<type>C</type>
			<description>The requested file, such as " /index.html " (the currently running page).</description>
		</property>
		<property readonly="true">
			<name>Request.Server_Protocol</name>
			<type>C</type>
			<description>The protocol used by the request, such as "HTTP/1.1" or "HTTP/1.0".</description>
		</property>
		<property readonly="true">
			<name>Request.UserAgent</name>
			<type>C</type>
			<description>The value of the User-Agent HTTP header, which is a string identifying the software used on the client to send this request. Replaces the Request.User_Agent property in versions 6-9.</description>
		</property>
		<property readonly="true">
			<name>Request.Variables</name>
			<type>P</type>
			<description>A dot variable containing all variables sent from the client. This is a combination of GET variables, POST variables and cookies.</description>
		</property>
	</properties>
	<!--list:.-->
	<links>
		<link link="context.request object">Context.Request.queryString.toString()</link>
		<link link="context.request object">Context.Request</link>
	</links>
	<see>
		<ref link="Sessions">Sessions</ref>
		<ref link="Status Codes">Status Codes</ref>
		<ref link="Configuring Internet Explorer after Running Maxthon">Configuring Internet Explorer</ref>
		<ref link="request object">Request Object</ref>
		<ref link="context.response object">Context.Response Object</ref>
		<ref link="context.request object">Context.Request Object</ref>
	</see>
</page>