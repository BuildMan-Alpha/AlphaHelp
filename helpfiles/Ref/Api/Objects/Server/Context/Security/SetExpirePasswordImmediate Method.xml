<page>
     <shortlink>api objects security object set expire password immediate method</shortlink>
    <topic>SetExpirePasswordImmediate Method</topic><description>Sets or clears a user's passwor as expired or not.</description>
    <syntax>Context.Security.SetExpirePasswordImmediate as V (UserName as C, Expire as L)</syntax>
    <arguments>
        <argument>
            <name>V</name>
            <description>Return type.</description>
        </argument>
        <argument>
            <name>UserName as C</name>
            <description>The name of a user.</description>
        </argument>
        <argument>
            <name>Expire as L</name>
            <description>Use .T. to set the user's password as expired. Use .F. to set the user's password as no longer expired. (See note below.)</description>
        </argument>
    </arguments>
    
    <discussion>Context.Security.SetExpirePasswordImmediate() sets or clears a user's password as expired or not. Check *[link:Context.Security.CallResult.Success@./index.xml#section1_CallResult]* to check whether the method was successful or not. After this method is called with Expire set to .T. a call to *[link:PasswordHasExpired()@PasswordHasExpired Method.xml]* with the same user name will return .T. whether or not the password expiration timespan has elapsed or not. </discussion>
    <sections>
        <section>
            <note>Context.Security.SetExpirePasswordImmediate() does not affect the last changed timestamp of the user's password. Calling this method with Expire .T. and then calling it again with .F. will not reset the password's last changed timestamp. Only an actual password change will update the password's last changed timestamp. </note>
        </section>
    </sections>
    <terms>password,security,expired</terms>
</page>