<page>
<topic>Login Method</topic>
<description>logs in a user to a specific page and sets the authentication cookie's lifetime.</description>
<syntax>Context.Security.Login as L (UserName as C, Password as C, RedirectPage as C = null_value(), ClientCookie as L = .F., DaysUntilExpiration as N = 10)</syntax>

<arguments>
<argument>
<name>L</name>
<description>Return type, .T. if the user is logged in; otherwise .F.</description>
</argument>

<argument>
<name>UserName as C</name>
<description>The name of the user.</description>
</argument>

<argument>
<name>Password as C 
</name>
<description>The password for the user.</description>
</argument>

<argument>
<name>RedirectPage as C</name>
<description>The page the user will be redirected to on successful login. If not specified the application defined redirect page will be used.</description>
</argument>

<argument>
<name>ClientCookie as L</name>
<description>Set to .T. to create a persistent cookie. This type of cookie will remain across browser sessions. That is, if you close your browser and restart the cookie will be available. When set to .F. the cookie will not be available across browser sessions. The cookie is deleted when close your browser. This is the default and is a more secure setting. </description>
</argument>

<argument>
<name>DaysUntilExpiration as N</name>
<description>The number of days the authentication cookie is valid. This is calculated from the time of the last request made with the cookie.</description>
</argument>

</arguments>


<discussion>Context.Security.Login() logs in a user and optionally letting you redirect the successful login to a specific page and set the authentication cookie's lifetime. When login is successful the Context.Security.CallResult.ReturnDataValue will contain the redirect page URL. Check *[link:Context.Security.CallResult.Success@./index.xml#section1_CallResult]* before using the return value. </discussion>

<terms>security,contains,defaults,login,number,pages,password,redirect,time,users</terms>




</page>