<page api="xb" build="0">
    <shortlink>api objects context security object</shortlink>
    <topic>Context.Security Object</topic>
    <description>Context.Security object properties and methods</description>
    <discussion>
        <p>The Context.Security object is an object on the Application Server that contains properties and methods for working with the users and roles (groups) in a web application using security. This includes logging a user in, logging a user out, adding and deleting users from the security framework, managing roles, resetting and generating passwords, validating user credentials, etc.</p>
        <p>The term "Role" and "Group" are synonymous in this API. The UI in Alpha Anywhere Developer Edition generally uses the term "Group" while the security property and methods use the term "Roles".</p>
    </discussion>
    <sections>
        <section>
            <important>The Context.Security object has a CallResult property. Use this property to see if a method call or property get succeeds before using a method's returned value or property's value. See the following examples.</important>
        </section>
        <section>
            <example code="xb"><![CDATA[dim errorMsg as C = "" 
dim created as L = .F. 

' Create new user
created = Context.Security.CreateUser("John-Doe@acme.com", "secret") 

if Context.Security.CallResult.Success then 
    if .not. created then
        error_generate("User was not created.") 
    end if 
else
    error_generate(Context.Security.CallResult.Text) 
end if 

' Get current user:
dim userName as C = Context.Security.CurrentUser 

if .not. Context.Security.CallResult.Success then 
    ' Something went wrong retrieving current user
    error_generate(Context.Security.CallResult.Text) 
end if 

if alltrim(userName) = "" then
    ' No user is logged in
    ' Display  "no user is logged in." 
else 
    ' Display user name 
end if 
]]></example>
        </section>
    </sections>
    <properties>
        <property readonly="true">
            <name>CallResult</name>
            <type>CallResult</type>
            <description>Context.Security.CallResult is used to check the success or failure of a method call or property get in the Security object. See the note in the Security class description above for more details and examples. Read Only.</description>
        </property>
        <property readonly="true">
            <name>CurrentUser</name>
            <type>C</type>
            <description>Context.Security.CurrentUser returns the name of the current user if one is logged in. Otherwise a zero length character value is returned. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>DefaultRoles</name>
            <type>C</type>
            <description>Context.Security.DefaultRoles returns a crlf delimited list of the default roles to which a new user will be assigned. This value is set in the security settings on the Customize Options tab. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>IsActive</name>
            <type>L</type>
            <description>Context.Security.IsActive returns .T. if the web application is running with security and returns .F. if the web application is not running with security. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
		<property readonly="true">
			<name>LoginPage</name>
			<type>C</type>
			<description>
				<p>Context.Security.LoginPage returns the page used for logging into an application with security enabled. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</p>
				<p>The following code is an example of how to get and application relative path for the page:</p>
                <p>
					<example code="xb"><![CDATA[dim relativeUrl as c = Context.Request.ApplicationRootUrl + Context.Security.LoginPage]]></example>
                </p>
			</description>
		</property>
        <property readonly="true">
            <name>PasswordChangeOnFirstUse</name>
            <type>L</type>
            <description>Context.Security.PasswordChangeOnFirstUse returns .T. if users are required to change password on first use. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>PasswordExpirationTime</name>
            <type>N</type>
            <description>Context.Security.PasswordExpirationTime returns the number of minutes user's password expires after it was last changed. A value of 0 means passwords don't expire. The default is set to 1 year (525,600 minutes) in the security configuration in the Developer Edition. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>PasswordExpires</name>
            <type>L</type>
            <description>Context.Security.PasswordExpires returns .T. if passwords for users can expire. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>PasswordResetAllowed</name>
            <type>L</type>
            <description>Context.Security.PasswordResetAllowed returns .T. if users are allowed to reset their password. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only</description>
        </property>
        <property readonly="true">
            <name>PasswordRetrievalAllowed </name>
            <type>L</type>
            <description>Context.Security.PasswordRetrievalAllowed returns .T. if users are allowed to retrieve their password. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>RedirectAfterLoginPage</name>
            <type>C</type>
            <description>
				<p>Context.Security.RedirectAfterLoginPage returns the page used after successfully logging into an application with security enabled. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</p>
				<p>The following code is an example of how to get and application relative path for the page:</p>
                <p>
					<example code="xb"><![CDATA[dim relativeUrl as c = Context.Request.ApplicationRootUrl + Context.Security.RedirectAfterLoginPage]]></example>
                </p>
			</description>
        </property>
        <property readonly="true">
            <name>RedirectNoPermissionPage</name>
            <type>C</type>
            <description>
				<p>Context.Security.RedirectNoPermissionPage returns the page to be used when a user is not authorized to view a page. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</p>
				<p>The following code is an example of how to get and application relative path for the page:</p>
                <p>
					<example code="xb"><![CDATA[dim relativeUrl as c = Context.Request.ApplicationRootUrl + Context.Security.RedirectNoPermissionPage]]></example>
                </p>
			</description>
        </property>
        <property readonly="true">
            <name>RequiresQuestionAndAnswer</name>
            <type>L</type>
            <description>Context.Security.RequiresQuestionAndAnswer returns .T. if users are required to supply an answer to a security question in order to reset or retrieve their password. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>RolesAreEnabled</name>
            <type>L</type>
            <description>Context.Security.RolesAreEnabled returns a .T. if roles are enabled for the security settings of the application. .F. is returned otherwise. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned. Read Only.</description>
        </property>
        <property readonly="true">
            <name>SecurityQuestionList</name>
            <type>C</type>
            <description>Context.Security.SecurityQuestionList returns a *[link:crlf@CRLF Function]* delimited string of security questions defined by the security system. Use this list when a user is created or updated and a security question needs to be selected. Check *[xb:Context.Security.CallResult.Success]* before using the value that is returned.</description>
        </property>
    </properties>
    <!--list:.-->
</page>