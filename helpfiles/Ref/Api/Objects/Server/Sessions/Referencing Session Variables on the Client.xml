<page>
    <shortlink>referencing session variables on the client</shortlink>
    <topic>Referencing Session Variables on the Client</topic>
    <description>
        <p>Session variables are only available on the server unless they are explicitly published to the client. Published session variable are read-only and cannot be modified by the client.</p>
    </description>
    <discussion>
        <p>Grid and UX Components allow you to 'publish' session variables to the client, making session variables available to client side. Published session variables can be referenced in client-side expressions, including:</p>
        <p>
            <list bullet="true">
                <item>
                    <name>Calculated Fields</name>
                </item>
                <item>
                    <name>Show/hide Expressions</name>
                </item>
                <item>
                    <name>Enable Expressions</name>
                </item>
                <item>
                    <name>Dynamic Images</name>
                </item>
                <item>
                    <name>Conditional Style Expressions</name>
                </item>
            </list>
        </p>
        <p>Published session variables can also be referenced in custom JavaScript in client-side events.</p>
        <p>The *[ui:Published Session Variables]* property is used to define the session variables to publish to the client.</p>
    </discussion>
    <sections>
        <section>
            <figure>
                <title>Published session variables property in the UX Builder</title>
                <link>images/publishedSessionVarsUX.png</link>
            </figure>
        </section>
        <section>
            <figure>
                <title>Published session variables property in the Grid Builder</title>
                <link>images/publishedSessionVarsGrid.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Published session variables can also be defined using the *[ui:Publish SESSION Variables]* link found in many of the client-side dialogs for defining expressions.</p>
            </description>
        </section>
        <section>
            <figure>
                <link>images/pubishSessionVars2.png</link>
            </figure>
        </section>
        <section>
            <description>
                <p>When the component is executed, the values of the published session variables are stored in the Component's JavaScript object. The variables can be accessed directly through the *[js:_vars]* sub-object of the component's JavaScript object or using the *[js:getSessionVariable()]* method (available for both the UX and Grid Components.)</p>
                <p>For example, if you publish a session variable called 'VAR1', you can use the following JavaScript to read its value (the name is always uppercase):</p>
                <p><example code="js"><![CDATA[{dialog.object}.getSessionVariable('VAR1');]]></example></p>
                <p>The following example shows how you can set the text of a button control in the UX to the value of a session variable (session.var1).</p>
                <p>
                    <example code="js"><![CDATA[//The following code is in the onRenderComplete client-side event
var sVar1;
sVar1 = {dialog.object}.getSessionVariable('VAR1');

// Test the value!
// getSessionVariable returns undefined if the 
// session variable is not available on the client.
if(typeof sVar1 != 'undefined') {

    //Set the text shown on 'BUTTON_1':
    {dialog.object}.setValue('BUTTON_1', sVar1);

}]]></example>
                </p>
            </description>
        </section>
        <section>
            <title>Referencing Published Session Variables in Client-side Expressions</title>
            <description>
                <p>Published session variables can be used in client-side expression. Client-side expressions are case-sensitive. The session variable must be referred to using the 'SESSION.' prefix and using uppercase. For example:</p>
                <p>
                    <example><![CDATA[SESSION.COMPANYNAME = "Alpha"]]></example>
                </p>
            </description>
        </section>
        <section>
            <title>Modifying Published Session Variables</title>
            <description>
                <p>Session variables on the client are read-only. They cannot be modified. In order to change the value of a session variable, an Ajax Callback is required.</p>
                <p>Similarly, if a session variable changes on the server, it will not be updated on the client until an Ajax Callback is made from the client.</p>
            </description>
        </section>
        <section>
            <title>Methods</title>
            <description>
                <p>The following client-side functions can be used to work with published session variables in JavaScript:</p>
            </description>
            <list>
                <item>
                    <name-title>Method</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>[{dialog.object}.getSessionVariable]</name>
                    <description>Get the value of a session variable.</description>
                </item>
                <item>
                    <name>[{grid.object}.getSessionVariable]</name>
                    <description>Get the value of a session variable.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Videos</title>
            <description>
                <p></p>
            </description>
        </section>
        <section>
            <videos>
                <title>Using Session Variables in Client-side Enable Expressions</title>
                <description>In this video, we show how to use published session variables in a client-side enable expression.</description>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/8fcf3024</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link link="ux component getsessionvariable method">{dialog.object}.getSessionVariable</link>
        <link link="grid component getsessionvariable method">{grid.object}.getSessionVariable</link>
        <link link=""></link>
    </links>
    <see>
        <ref link="gridproperties miscellaneous published session variables property">Published Session Variables property (Grid)</ref>
        <ref link="ux properties published session variables">Published Session Variables property (UX)</ref>
    </see>
</page>