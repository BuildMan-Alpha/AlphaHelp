<page>
	<shortlink>api objects image resource object get function</shortlink>
	<topic>ImageResource.Get Function</topic>
	<description>The ImageResource.Get() method creates an image resource object, which you may use to create a logical image name.</description>
	
	<prototype>as P = ImageResource.Get()</prototype>
	<arguments>
		<argument>
			<name>P</name>
			<description>An image resource object.</description>
		</argument>
		
	</arguments>
	
	
	<sections>

	<section>
	<title>Aliasing Image Names</title>
	<description>
	Aliases for image names are useful because they let you create "logical" image names and then map them to the physical image names defined in Alpha Anywhere. If you use  logical image names, then you don't have to change your code if you want to change the image that it uses, you just have to change the image map.
	</description>
	</section>
	
	<section>
	<title>Example</title>
	<example><![CDATA[
ir = ImageResource.get() 
nm = ir.GetBitmapNameMap()
]]></example>
	
	</section>
	<section>
	<description>There is no such image name as  a5_control:browse, so this dialog box will not display correctly.</description>
	<example><![CDATA[ui_dlg_box("","{image=a5_control:browse}")]]></example>
	</section>
	
	<section>
	<description>Now define the logical image name a5_control:browse and map it to an existing image: $a5_browse.</description>
	<example><![CDATA[
nm.Initialize(<<%str% 
a5_control:browse=$a5_browse 
%str%)]]></example>
	</section>
	
	<section>
	<description>Now the command works because Alpha Anywhere maps the image internally to $a5_browse.</description>
	<example><![CDATA[
ui_dlg_box("","{image=a5_control:browse}")
]]></example>
	</section>
	
	</sections>
	
	
	
	
	
	<see>
		<ref href="/Api/Objects/ImageResource/index.xml">ImageResource.Get()</ref>
	</see>
	
	<terms>image,images,box,display,logical,map</terms>
	
</page>