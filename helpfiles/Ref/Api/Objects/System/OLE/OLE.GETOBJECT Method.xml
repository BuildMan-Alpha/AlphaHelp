<page>
     <shortlink>api objects ole object get object function</shortlink>
   <topic>OLE.GETOBJECT Function</topic>
     <description>Get an object by name from an OLE automation server.</description>
   <prototype>as P = GetObject(C ObjectName, [,C ProgId])</prototype>
   <arguments>
     <argument>
         <name>ObjectName</name>
         <description>The full path and name of the file containing the object to retrieve. If  ObjectName is blank, ProgId is required. </description>
     </argument>
     <argument>
         <name>ProgId</name>
         <description>A string representing the class of the object. If  ObjectName is not null, ProgId is optional. The ProgId argument has the following syntax and parts: appname.objecttype
</description>
     </argument>
   </arguments>
 
   <discussion>
Uses an existing OLE automation object, if available. Otherwise, it creates a new one. The OLE.GETOBJECT() method returns a pointer to an existing OLE automation object, if available. Otherwise, it creates a new one.
If ProgId is not specified, but ObjectName is, then the the associated application is launched and a pointer to that application is returned.
For example:
   </discussion>
   <sections>
      
    
   </sections>
   <sections>
       <section>
           
            <example><![CDATA[
Dim CADObject As Object
 CADObject = GetObject("C:\CAD\SCHEMA.CAD")
]]></example>
       </section>
       
 <section>
            <description>When this code is executed, the application associated with the specified  ObjectName is started and the object in the specified file is activated.
</description>
          
       </section>
       
       
       
   </sections>
   
<sections><section>
<title>Example</title>

<example><![CDATA[
Dim WB as P
Dim OldText as C
Dim NewText as C
Dim I as N
Dim CH as C
NewText = ""
WB = ole.getobject("","Word.Basic")
WB.FileNew()
WB.Insert("Ths iz pur splling fur sore!")
WB.ToolsSpelling()
WB.EditSelectAll()
OldText = WB.selection()
WB.FileExit(2)
delete WB
ui_dlg_box("Corrected","{text=50,5:oldtext}")
ui_modeless_dlg_setfocus("corrected")
]]></example>


</section>


<section>

<description>The following script returns the serial numbers of a computer's drives.</description>
<example><![CDATA[
dim strComputer as C
dim objWMIService as P
dim colItems as P
objWMIService = ole.GetObject("winmgmts:\\.\root\cimv2")
colItems = objWMIService.ExecQuery("Select * from Win32_LogicalDisk")
for each objItem in colItems
    ui_msg_box("Volume Serial Number for drive " + objItem.Name, objItem.VolumeSerialNumber)
next
]]></example>


</section>

<section>

<description>When using OLE with Microsoft Word, you must use the .QUIT() method to close the program.</description>
<example><![CDATA[
dim x as P
x = ole.GetObject("","word.application")
... x.application.quit()
]]></example>


</section>







</sections>
   
<sections>
<section>
<title>Retrieving a Disk Serial Number</title>
<example><![CDATA[
dim strComputer as C
dim objWMIService as P
dim colItems as P
objWMIService = ole.GetObject("winmgmts:\\.\root\cimv2")
colItems = objWMIService.ExecQuery("Select * from Win32_LogicalDisk")
for each objItem in colItems
    ui_msg_box("Volume Serial Number for drive " + objItem.Name,objItem.VolumeSerialNumber)
next
]]></example>
</section>
</sections>
   
   
   
   
   
   
   <see>
      <ref link="OLE and ActiveX Methods">OLE and ActiveX Methods</ref>
   </see>
  <terms>OLE,file,function,number,object,pointer,script,string</terms>
</page>