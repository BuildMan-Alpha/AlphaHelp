<page api="xb">
  <shortlink>FILE.TEXT_ENCODING Function</shortlink>
   <topic>FILE.TEXT_ENCODING Function</topic>
   <description>Get the encoding type of a text file. Possible Values Include: (ASCII, UTF16LE, UTF16BE, UTF32LE, UTF32BE)</description>
   <prototype>Encoding_Mode as C = file_pointer.text_encoding()</prototype>
   
<returns><return>
   
   <name>Encoding_Mode</name>
   <description>Possible return values include:</description>
<list>
<item>
<name>"ASCII"</name>
</item>

<item>
<name>"UTF8"</name><description>Unicode Transformation Format 8 bit (Multi-byte)</description>
</item>

<item>
<name>"UTF16LE"</name><description>Unicode Transformation Format 16 bit Little-endian</description>
</item>

<item>
<name>"UTF16BE"</name><description>Unicode Transformation Format 16 bit Big-endian</description>
</item>

<item>
<name>"UTF32LE"</name><description>Unicode Transformation Format 32 bit Little-endian</description>
</item>

<item>
<name>"UTF32BE"</name><description>Unicode Transformation Format 32 bit Big-endian</description>
</item>


</list>
   
</return></returns>   
   
   
   <discussion>
The .TEXT_ENCODING() method returns the text encoding method of the data. When most people reference Unicode, they are referring to UTF16LE.
   </discussion>
   <example code="xb"><![CDATA[
h = FILE.open("c:\r_broken.bin", FILE_RO_SHARED)
? h.bytes_get()
= 38
? h.chars_get()
= 18
? h.read(19)
= x this is a test
? h.text_encoding()
= "UTF16LE"
]]></example>
   
   <see>
       <ref link="file functions">File Functions</ref>
      <ref link="file methods">File Methods</ref>
   </see>
 <terms>file,function</terms>
</page>