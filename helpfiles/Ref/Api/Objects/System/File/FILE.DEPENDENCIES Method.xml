<page>
   <topic>FILE.DEPENDENCIES Function</topic>
     <description><![CDATA[Pass in a list of dependencies (file that must be >= is always first separate with '|') - returns list of dependencies that are not >=.]]></description>

   <syntax>File_List as C = Dependencies(C file_dependencies)</syntax>
   <arguments>
     <argument>
         <name>File_List</name>
         <description>The dependent files that have been updated.
</description>
     </argument>
     <argument>
         <name>file_dependencies</name>
         <description>The list of dependencies for a given file.
</description>
     </argument>
   </arguments>
    <discussion>
When a master file is based on the contents of one or more transaction files, then the master file is out of date when any of the transaction files is updated. The FILE.DEPENDENCIES() method can be used to determine if the master file is out of date.
   </discussion>
   <example><![CDATA[
string = <<%a%
c:\result.txt|c:\file1.txt
c:\result.txt|c:\file2.txt
%a%
' assume that result.txt is up to date
? file.dependencies(string)
= ""
' now update file2.txt
? file.dependencies(string)
= c:\result.txt|c:\file2.txt
]]></example>
 
   <see>
      <ref>File Functions and  Methods</ref>
      <ref href="/Api/Objects/index.xml">Directory Functions</ref>
      <ref href="/Api/Objects/index.xml">Filename Functions</ref>
      <ref href="/Api/Objects/index.xml">Database  Functions</ref>
      <ref href="/Api/Objects/File/FILE.WATCH_CREATE Method.xml">FILE.WATCH_CREATE()</ref>
      <ref href="/Api/Objects/File/FILE.WATCH_DESTROY Method.xml">FILE.WATCH_DESTROY()</ref>
   </see>
   
<terms>file,database,directory,filename,function,list</terms>
   
  </page>