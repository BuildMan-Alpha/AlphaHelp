<page api="xb">
  <shortlink>FILE.DEPENDENCIES Function</shortlink>
   <topic>FILE.DEPENDENCIES Function</topic>
     <description>Determines if the master file for a list of dependencies is out of date.</description>

   <prototype static="true">File_List as C = FILE.Dependencies(C file_dependencies)</prototype>
   <arguments>
     <argument>
         <name>file_dependencies</name>
         <type>C</type>
         <description>The list of dependencies for a given file.</description>
     </argument>
   </arguments>
   <returns>
      <return>
         <name>File_List</name>
         <type>C</type>
         <description>Returns the dependent files that have been updated.</description>
     </return>
   </returns>
    <discussion>
When a master file is based on the contents of one or more transaction files, then the master file is out of date when any of the transaction files is updated. The FILE.DEPENDENCIES() method can be used to determine if the master file is out of date.
   </discussion>
   <example code="xb"><![CDATA[
string = <<%a%
c:\result.txt|c:\file1.txt
c:\result.txt|c:\file2.txt
%a%
' assume that result.txt is up to date
? file.dependencies(string)
= ""
' now update file2.txt
? file.dependencies(string)
= c:\result.txt|c:\file2.txt
]]></example>
 
   <see>
   <ref link="file functions">File Functions</ref>
      <ref link="file methods">File Methods</ref>
      <ref link="directory functions">Directory Functions</ref>
      <ref link="filename functions">Filename Functions</ref>
      <ref link="databases">Databases</ref>
      <ref link="FILE.WATCH_CREATE Function">FILE.WATCH_CREATE()</ref>
      <ref link="FILE.WATCH_DESTROY Function">FILE.WATCH_DESTROY()</ref>
   </see>
   
<terms>file,database,directory,filename,function,list</terms>
   
  </page>