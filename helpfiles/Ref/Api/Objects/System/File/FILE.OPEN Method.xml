<page>
   <topic>FILE.OPEN Function</topic>
     <description>Open an existing file.</description>
   <syntax>> as P = Open(C Filename,N file_open_mode)</syntax>
   <arguments>
     <argument>
         <name>Filename</name>
         <description>The name of the file.
</description>
     </argument>
     <argument>
         <name>file_open_mode</name>
         <description>The Open Mode system variables are:
</description>
<list>
<item>
<name-title>Variable
</name-title>
<description-title>Function
</description-title>
</item>

<item>
<name>FILE_RO_EXCLUSIVE
</name>
<description>
Read Only (Exclusive)
 </description>
</item>

<item>
<name>FILE_RW_EXCLUSIVE</name>
<description>Read or Write (Exclusive)</description>
</item>

<item>
<name>FILE_RO_SHARED</name>
<description>Read Only (Shared)</description>
</item>

<item>
<name>FILE_RW_SHARED</name>
<description>Read or Write (Shared)</description>
</item>


</list>
     </argument>
   </arguments>
 
   <discussion>
The OPEN() method opens a data file for input or output and returns the  object pointer to the file. The Open_Mode parameter determines how the file is to be accessed.
You must supply an existing Filename with the appropriate Open_Mode system variable.
Note : When you delete , Alpha Anywhere closes the file.
   </discussion>
 
   <sections>
       <section><title>Example</title>
            <description>Open any file and preview the first 20 characters.</description>
            <example><![CDATA[
dim file_pointer as P
dim filename as C
dim text as C
filename = ui_get_file("Choose File", "Text File (*.txt)", "", "X")
if filename = "" then
    end
end if
file_pointer = file.open(filename, FILE_RW_SHARED)
text = file_pointer.read(20)
trace.writeln("First 20 chars: " + text)
file_pointer.close()
]]></example>
       </section>
   </sections>
   <see>
      <ref link="Objects">FILE.CREATE()</ref>
    <ref link="file functions">File Functions</ref>
      <ref link="file methods">File Methods</ref>
      <ref link="directory functions">Directory Functions</ref>
      <ref link="filename functions">Filename Functions</ref>
      <ref link="databases">Databases</ref>
   </see>
   
   <terms>file,database,delete,directory,filename,function,object,pointer,preview,system,variable</terms>
   
  </page>