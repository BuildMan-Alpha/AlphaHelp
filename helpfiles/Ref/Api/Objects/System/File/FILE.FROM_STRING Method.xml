<page api="xb">
      <shortlink>FILE.FROM_STRING Function</shortlink>
   <topic>FILE.FROM_STRING Function</topic>
    <description>Writes a string to a file.</description>
   <prototype static="true">Byte_Count as N = FILE.From_string(C Filename,C string[,C Encoding])</prototype>
   <arguments>
     <argument>
         <name>Filename</name>
         <type>C</type>
         <description>The path and name of the file to create.</description>
     </argument>
     <argument>
         <name>string</name>
         <type>C</type>
         <description>The character data to write into the file.</description>
     </argument>     
     <argument>
         <name>Encoding</name>
         <type>C</type>
         <description>Specifies alternate encoding, supplying 'utf8' with add the standard UTF8 beggining of file marker to the text file.</description>
     </argument>     
   </arguments>
     <returns>
       <return>
           <name>Byte_Count</name>
           <types>
               <type>N</type>
           </types>
           <description>Returns the size of the file.</description>
       </return>
   </returns>
   <discussion>
The FILE.FROM_STRING() method creates a file from character data.
   </discussion>
   <note>The target directory must exist or the function will fail.</note>
   <example code="xb"><![CDATA[
dim cc as C
cc = FILE.to_string("C:\Frame.Txt")
? len(cc)
= 1777.000000
FILE.from_string("c:\new_frame.txt", cc)

' Write a UTF encoded string with a UTF header
ustring = convert_acp_to_utf8("MusÃ©e d'anthropologie")
file.from_string("c:\data\museum.txt",ustring,"utf8")
]]></example>
   
   <see>
     <ref link="file functions">File Functions</ref>
      <ref link="file methods">File Methods</ref>
      <ref link="directory functions">Directory Functions</ref>
      <ref link="filename functions">Filename Functions</ref>
      <ref link="databases">Databases</ref>
   </see>
<terms>file,database,directory,filename,function,set,string</terms>
</page>