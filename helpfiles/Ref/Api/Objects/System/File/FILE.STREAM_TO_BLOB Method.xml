<page>
   <topic>FILE.STREAM_TO_BLOB Function</topic>
     <description>Perform a streamed copy to a blob- control variables include .exit and .bytes .</description>

   <syntax>Data as B = Stream_To_Blob(P stream_from,P control[,N chunksize[,N max_length]])</syntax>
   <arguments>
    <argument>
         <name>Data</name>
         <description>The resulting blob data.
</description>
     </argument>
     <argument>
         <name>stream_from</name>
         <description>A file pointer or socket pointer.

</description>
     </argument>
     <argument>
         <name>control</name>
         <description>A pointer with two elements.
</description>
<list>
<item>
<name-title>Argument</name-title>
<description-title>Description</description-title>
</item>

<item>
<name>pControl.bytes</name>
<description>a running count of how many bytes have been streamed so far. It does not matter what you set this to, it gets reset to 0 at the beginning of the stream operation and it automatically updated as the stream progresses. This can be used to implement a progress bar.
</description>
</item>

<item>
<name>pControl.exit</name>
<description>A logical flag. If it is set to .t., the stream operation will abort. This can be used to implement a cancel button
</description>
</item>

</list>


     </argument>
     <argument>
         <name>chunksize</name>
         <description>Numeric</description>
     </argument>
     <argument>
         <name>max_length</name>
         <description>Numeric</description>
     </argument>
   </arguments>
    <discussion>
Streaming is a faster, optimized way of copying. The FILE.STREAM_TO_BLOB() method copies data from a file or socket to a blob variable.
   </discussion>
   
   <see>
      <ref>File Functions and  Methods</ref>
      <ref link="FILE.STREAM_FROM_BLOB Function">FILE.STREAM_FROM_BLOB()</ref>
   </see>
 <terms>file,blob,button,control,function,logical,operation,pointer,set</terms>
</page>