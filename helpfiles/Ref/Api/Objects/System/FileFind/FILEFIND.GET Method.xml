<page>
    <shortlink>api objects system filefind object get function</shortlink>
    <topic>FILEFIND.GET Function</topic>
    <description>Returns a string containing all the files - you can specify what gets listed.</description>
    <prototype>list as C = FILEFIND.Get(C pattern [,N file_attribute [,C filefindformat]])</prototype>
    <arguments>
        <argument>
            <name>pattern</name>
            <type>C</type>
            <description>
                A pattern to select file names using wildcard characters like ?*' and ?? '.
            </description>
        </argument>
        <argument optional="true">
            <name>file_attribute</name>
            <type>N</type>
            <description>Default = 0 (normal files). The File_Attribute parameter is a numeric value specifying the type of file to find. You can find files that have one or more of the following attributes:</description>

            <list>
                <item>
                    <name-title>File Attribute</name-title>
                    <description-title>Description</description-title>
                </item>

                <item>
                    <name>FILE_FIND_NORMAL</name>
                    <description>Normal</description>
                </item>

                <item>
                    <name>FILE_FIND_READONLY</name>
                    <description>Read-only</description>
                </item>

                <item>
                    <name>FILE_FIND_HIDDEN</name>
                    <description>Hidden</description>
                </item>

                <item>
                    <name>FILE_FIND_SYSTEM</name>
                    <description>System</description>
                </item>

                <item>
                    <name>FILE_FIND_LABEL</name>
                    <description>Label</description>
                </item>

                <item>
                    <name>FILE_FIND_DIRECTORY</name>
                    <description>Directory</description>
                </item>

                <item>
                    <name>FILE_FIND_ARCHIVE</name>
                    <description>Archive</description>
                </item>

                <item>
                    <name>FILE_FIND_AND_FLAGS</name>
                    <description>Specifies that multiple flags should be ANDed together rather than ORed. By default flags are ORed.</description>
                </item>

                <item>
                    <name>FILE_FIND_NOT_READONLY</name>
                    <description>Files that are NOT readonly</description>
                </item>

                <item>
                    <name>FILE_FIND_NOT_DIRECTORY</name>
                    <description>Files that are NOT directory files</description>
                </item>

                <item>
                    <name>FILE_FIND_NOT_ARCHIVE</name>
                    <description>Files that do not have their archive bit turned on.</description>
                </item>

                <item>
                    <name>FILE_FIND_AND_NOT_FLAGS</name>
                    <description>Specifies that when multiple "NOT" flags are used that the flags should be ANDed together.</description>
                </item>
            </list>
        </argument>
        <argument optional="true">
            <name>filefindformat</name>
            <type>C</type>
            <description>Specifies the type of file to retrieve. The format string can contain these characters:</description>
            <list>
                <item>
                    <name-title>Format Character</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>P</name>
                    <description>Path</description>
                </item>

                <item>
                    <name>N</name>
                    <description>Filename</description>
                </item>

                <item>
                    <name>D</name>
                    <description>Directory - "d" if file is a directory, "-" if not.</description>
                </item>
                <item>
                    <name>H</name>
                    <description>Hidden - "h" if file is hidden, "-" if not.</description>
                </item>

                <item>
                    <name>S</name>
                    <description>System - "s" if file is a system file, "-" if not.</description>
                </item>

                <item>
                    <name>T</name>
                    <description>Date and time file was last updated</description>
                </item>

                <item>
                    <name>L</name>
                    <description>Size</description>
                </item>

                <item>
                    <name>C</name>
                    <description>Creation date and time</description>
                </item>

                <item>
                    <name>R</name>
                    <description>Last time read</description>
                </item>

                <item>
                    <name>A</name>
                    <description>Archive bit</description>
                </item>

                <item>
                    <name>X</name>
                    <description>DOS short name (8.3), if the file is a long file name</description>
                </item>
            </list>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>list</name>
            <types>
                <type>C</type>
            </types>
            <description>Returns a CR-LF delimited list of files and details about files in a directory that match the specified pattern.</description>
        </return>
    </returns>
    <discussion>The FILEFIND.GET() method creates a CR-LF delimited string with information about the files in a directory that match a pattern. The format string controls the format in which the information is returned.</discussion>
    <sections>
        <section>
            <title>Example</title>
            <description>The following script populates an array with information about the files in a folder. The '0' attribute is used to select normal files. The format string returns the full name, the directory flag, and the date time stamp. The information is displayed in a dialog box.</description>
            <example code="xb">
                <![CDATA[
list = FILEFIND.get("C:\Program Files (x86)\Alpha Anywhere\*.*",0,"PN|D|T")
format = "name|directory|time"
dim pp[0] as P
pp.initialize_properties(format,list)
dim indx as N
indx = 1
ui_dlg_box("Display File Information",<<%a%
Name|Directory|Time;
[.30,20indx^#pp[\].name]|[.10,20indx^#pp[\].directory]|[.40,20indx^#pp[\].time];
%a%)
]]>
            </example>
        </section>
        <section>
            <title>How To Identify an Empty Directory</title>
            <description>The following script determines if a directory is empty.</description>
            <example code="xb"><![CDATA[dim path as C
dim files as C
path = "YOUR DIRECTORY"
files = FILEFIND.get(path + "\*.*", FILE_FIND_NOT_DIRECTORY, "N")
if (files = "") then
'The directory is empty
end if
]]>
            </example>
        </section>
    </sections>
    <see>
        <ref link="FILEFIND Methods">FILEFIND Methods</ref>
        <ref link="File Functions">File Functions</ref>
        <ref link="File Methods">File Methods</ref>
    </see>
    <terms>filefind,array,directory,file,function,label,script,string,system,time</terms>
</page>