<page>
    <shortlink>api registry object sys set function</shortlink>
    <topic>REGISTRY.SYS_SET Function</topic>
    <description>Set an existing system setting (requires full registry path).</description>
    <prototype>C REGISTRY.SYS_SET(C name [,C data [,C architecture]])</prototype>
    <arguments>
        <argument>
            <name>name</name>
            <type>C</type>
            <description>The registry entry name and full path.</description>
        </argument>
        <argument optional="true">
            <name>data</name>
            <type>C</type>
            <description>The value to write into the Registry.</description>
        </argument>
        <argument optional="true">
            <name>architecture</name>
            <type>C</type>
            <description>Default = 'Any'. The registry to write: '32', ' 64' or 'Any'. If set to 'Any', the 32-bit registry is searched first.</description>
        </argument>
    </arguments>
    <discussion>The REGISTRY.SYS_SET() method modifies the value of an existing Registry entry. This method will modify any registry entry, and is not limited to the Alpha Anywhere section, as is REGISTRY.SAVE_SETTINGS(). The power of this function makes it dangerous to use. *[Back up your Registry before making any changes.]*</discussion>
    <warning>
        <p>The power of this function makes it dangerous to use. *[Back up your Registry before using this function.]*</p>
    </warning>
    <see>
        <ref link="Registry Methods">Registry Methods</ref>
    </see>
    <terms>registry,function,system</terms>
</page>