<page>
   <topic>table.ORDER Function</topic>
      <description>Public user defined function.</description>
   
   
   <syntax>as P =  Table.order(C Order [,C filter [,C flags ]])</syntax>
   <arguments>
     <argument>
         <name>Order</name>
         <description>A character  order expression that sorts selected records.</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Optional. Default = ".T." (all records). A character  filter expression that evaluates to a logical value. Selects records in the table.
</description>
     </argument>
     <argument>
         <name>flags</name>
         <description>Character</description>
     </argument>
   </arguments>

   <discussion><![CDATA[
The <TBL>.ORDER() method orders, and optionally filters, data from the table referenced by <TBL>.
An object pointer, <INDEX>, is returned. <INDEX> will reference either:]]>
   </discussion>
   <sections>
       <section>
           <list>
           <item>
           <name>an index that matches Order_Expression and Filter_Expression</name>
           </item>
           <item>
           <name>if no index matches, a new query list.</name>
           </item>
           </list>
       </section>
       <section>
            <description><![CDATA[Use this method as an alternative to <TBL>.INDEX_PRIMARY_PUT() when you want to specify order and filter expressions, rather than index tag names.
An advantage of this method over <TBL>.INDEX_PRIMARY_PUT()is that <TBL>.INDEX_PRIMARY_PUT()could fail if the data dictionary file for a table is missing. The data dictionary contains the long index tag names.
In addition to using an index if one is available, <TBL>.ORDER()does not use the global query variables ( query.filter, query.order, etc.).
]]></description>
           
       </section>
       
       
   </sections>
   <sections>
       <section><title>Example</title>
            <description>put description here</description>
            <example><![CDATA[
dim tbl as P
tbl = table.open("customer")
i = tbl.order("lastname")
i.type_get() ? 2.00000  'indicates that Alpha Anywhere selected an index
i = tbl.order("address2")
? i.type_get() ? 6.00000   'indicates that Alpha Anywhere built a query because no index existed
i = tbl.order("lastname","city = 'boston'")
i = tbl.order("recno()")   'puts table in record number order
i = tbl.order("")   'puts table in record number order
]]></example>
       </section>
   </sections>
   <see>
        <ref link="Table Object Functions and Methods">Table Object Functions and Methods</ref>
        <ref link="Table Functions">Other Table Functions</ref>
      <ref href="/Api/Functions/Document Types/DBF/Index Functions/Index Functions and Methods.html">Index  Functions and Methods</ref>
      <ref link="Writing Expressions">Writing  Expressions</ref>
   </see>
  <terms>table,defaults,expressions,filter,function,index,logical,query,record,users,writing</terms>
</page>