<page>
   <topic>table.DUPLICATE Function</topic>
 <description>Create a copy of the table, with all records and layouts.</description>  
   <syntax>V Duplicate(C tablename[,N flags])</syntax>
   <arguments>
     <argument>
         <name>tablename</name>
         <description>The resulting table's path, filename and extension (.dbf).</description>
     </argument>
     <argument>
         <name>flags</name>
         <description>Optional. Default = 0. The Flags parameter allows you to control the options to the duplication.
</description>
<list>
<item>
<name-title>Flag
</name-title>
<description-title>Details</description-title>
</item>

<item>
<name>0</name>
<description>
Records: No, Layouts/ Operations: No, Field Rules: No, Indexes: No
 </description>
</item>

<item>
<name>1</name>
<description>
Records: No, Layouts/ Operations: No, Field Rules: No, Indexes: Yes
 </description>
</item>

<item>
<name>2</name>
<description>
Records: No, Layouts/ Operations: Yes, Field Rules: Yes, Indexes: No
 </description>
</item>

<item>
<name>3</name>
<description>
Records: No, Layouts/ Operations: Yes, Field Rules: Yes, Indexes: Yes
 </description>
</item>

<item>
<name>4</name>
<description>
Records: Yes, Layouts/ Operations: No, Field Rules: No, Indexes: No
 </description>
</item>

<item>
<name>5</name>
<description>
Records: Yes, Layouts/ Operations: No, Field Rules: No, Indexes: Yes
 </description>
</item>

<item>
<name>6</name>
<description>
Records: Yes, Layouts/ Operations: Yes, Field Rules: Yes, Indexes: No
 </description>
</item>


<item>
<name>7</name>
<description>
Records: Yes, Layouts/ Operations: Yes, Field Rules: Yes, Indexes: Yes
 </description>
</item>

<item>
<name>8</name>
<description>
Records: No, Layouts/ Operations: No, Field Rules: Yes, Indexes: No
 </description>
</item>

<item>
<name>9</name>
<description>
Records: No, Layouts/ Operations: No, Field Rules: Yes, Indexes: Yes
 </description>
</item>

<item>
<name>12</name>
<description>
Records: Yes, Layouts/ Operations: No, Field Rules: Yes, Indexes: No
 </description>
</item>

<item>
<name>13</name>
<description>
Records: Yes, Layouts/ Operations: No, Field Rules: Yes, Indexes: Yes
 </description>
</item>




</list>
     </argument>
   </arguments>
   
   <discussion><![CDATA[
The <TBL>.DUPLICATE() method makes a duplicate copy of the table. You must specify the resulting table's path, filename and extension (.dbf) in the Filename parameter.
Note : If you select a flag of 0, the dictionary is not copied. However, any fields in the source <TBL> that are defined as auto-increment in field rules are kept as auto-increment fields in Filename.
If you want to copy all of the fields and all of the records in a table to a new table, the <TBL>.DUPLICATE() method is appropriate. However, if you want to select which fields and records to copy, use the <TBL>.COPY() method.
]]>   </discussion>
   
   <sections>
       <section><title>Example</title>
            <description>This script duplicates the structure of the current table (but does not copy the dictionary, records or indexes) then copies the current record to the new table.
</description>
            <example><![CDATA[
dim tbl as P
tbl_source = table.current()
'Use the 0 paremeter to copy structure only
tbl_source.duplicate("c:\A5\new.dbf",0)
'Open the new table
tbl_new = table.open("c:\A5\new.dbf")
'Put new table into enter mode
tbl_new.enter_begin()
'Clone the record from the current table
tbl_new.record_clone(tbl_source)
tbl_new.enter_end(.T.)
tbl_new.close()
]]></example>
       </section>
   </sections>
   <see>
      <ref href="/Api/Functions/Document Types/DBF/Table Functions/Table Functions and Methods.html">Table Functions and  Methods</ref>
   </see>
<terms>table,control,defaults,field,filename,function,record,script</terms>

</page>