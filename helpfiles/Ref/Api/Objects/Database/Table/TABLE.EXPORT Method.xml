<page>
   <topic>table.EXPORT Function</topic>
    <description>Export records in table to specified output file.</description>
   <syntax>V Export(), Specify the required values in the Export dot variable, then use the following command:</syntax>
  
  <arguments>
  <argument>
  <name>export.file</name>
  <description>Type "C". The path and name of the file being created.
</description>
  </argument>
  
  <argument>
  <name>export.type</name>
  <description>Type "N". A code that specifies the type of file being created.</description>  
  <list>
  <item>
  	<name-title>Code</name-title>
  	<description-title>Details</description-title>
  </item>
  
  <item>
  	<name>FILE_FORMAT_ASCII</name>
  	<description>Number: 0
Description: Character-Separated ASCII
Ext: .ASC
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_TABLE_ASCII</name>
  	<description>Number: 1
Description: Table ASCII
Ext: .TBL
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_RICH_TEXT</name>
  	<description>Number: 2
Description: Rich Text Format (RTF)
Ext: .RTF
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_EXCEL_VERSION_3</name>
  	<description>Number: 3
Description: Microsoft Excel, Version 3.0
Ext: .XLS
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_EXCEL_VERSION_4</name>
  	<description>Number: 4
Description: Microsoft Excel, Version 4.0
Ext: .XLS
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_123_VERSION_1</name>
  	<description>Number: 5
Description: Lotus 1-2-3, Version 1.0/1A
Ext: .WKS
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_123_VERSION_2</name>
  	<description>Number: 6
Description: Lotus 1-2-3, Version 2.0
Ext: .WK1
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_123_VERSION_3</name>
  	<description>Number: 7
Description: Lotus 1-2-3, Version 3.0
Ext: .WK3
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_SYMPHONY_VERSION_1</name>
  	<description>Number: 8
Description: Lotus Symphony, Version 1.0
Ext: .WRK
</description>
  </item>
  
  <item>
  	<name>FILE_FORMAT_SYMPHONY_VERSION_2</name>
  	<description>Number: 9
Description: Lotus Symphony, Version 2.0
Ext: .WR1
</description>
  </item>
  
  </list>
  </argument>
  
  <argument>
  <name>export.names</name>
  <description>Type "C". Specifies whether or not the field names should be exported along with the data.</description>  
  <list>
  <item>
  <name>TRUE (.T.) = export fieldnames</name>
  </item>
  <item>
  <name>FALSE (.F.) = do not export fieldnames.</name>
  </item>
  

  </list>
  
  
  </argument>
  
  <argument>
  <name>export.options</name>
  <description>Type "C". The format for a character-separated ASCII file can vary. The default character-separated ASCII file is a comma-delimited file, with character fields in quotation marks, and a carriage return and line feed to separate records. If you want a different format for a character-separated ASCII file, you can adjust the export settings using one or more of the codes in the Options String:</description>  
  <list>
  <item>
  <name-title>Option Code</name-title>
  <description-title>Function</description-title>
  </item>
  
  <item>
  <name>Q</name>
  <description>Quote character fields</description>
  </item>
  
  <item>
  <name>L</name>
  <description>Strip leading blanks from fields</description>
  </item>
  
  <item>
  <name>T</name>
  <description>Strip trailing blanks from fields</description>
  </item>
  
  <item>
  <name>S</name>
  <description>Suppress trailing separators</description>
  </item>
  
  <item>
  <name>N</name>
  <description>Preserve line breaks. Converts line breaks in exported memo fields to "\N". If this option is not specified, then line breaks are converted to spaces.</description>
  </item>
  </list>
  </argument>
  
  <argument>
  <name>export.field_sep</name>
  <description>Type "C". The Field Separator String and the Record Separator String parameters are also used with character-separated ASCII files to define how to denote the end of fields and records. These strings can include any characters, including the following special separator characters:</description>  
  </argument>
  
  <argument>
  <name>export.rec_sep</name>
  <description>Type "C".</description>  
  <list>
  <item>
  <name>
  Carriage return and line feed combination
  </name></item><item><name>
Carriage return
</name></item><item><name>
Line feed
</name></item><item><name>
Escape
</name></item><item><name>
Tab
</name></item>
</list>
  
  
  </argument>
  
  <argument>
  <name>export.fetch_parent</name>
  <description>Type "L". Used only parent tables in sets. </description>
  <list>
  <item>
  <name>TRUE (.T.) = When exporting data from a set with one-to-many links, only exports data from the parent table, and one-to-one links off the parent table.</name>
  </item>
  
  <item>
  <name>FALSE (.F.) = Exports a parent record for each matching one-to-many child record.</name>
  </item>
  </list>
  
  
  </argument>
  
   <argument>
  <name>export.fields</name>
  <description>Type "N". Specifies how many fields are to be exported.</description>
  </argument>
  
   <argument>
  <name>export.field1 ...
export.fieldN
</name>
  <description>Type "C". The names of the fields to be exported.</description>
  </argument>
  
  </arguments>
  
  
  
   <discussion>
The .EXPORT() method is a high-level utility function you use to export the records of a table or set to a file of a different format. Most parameters passed to export through the export function variable correspond directly with the prompts and options appearing on the Export Builder.
You perform an Export operation on the table referenced by the object pointer, .

   </discussion>
  
   <sections>
       <section><title>Example</title>
            <description>This script exports 4 fields from the Customer table to 'an ASCII table file. The export of field names is optional.</description>
            <example><![CDATA[
dim tbl as P
tbl = table.open("customers")
filename = ui_get_file("Destination File", "ASCII(*.ASC)", "customer.asc","N")
if filename = "" then
    end
end if
response = ui_get_radio("Export Fieldnames To File? ",1,"Yes","No")
if response = "Yes" then
    export_names = .T.
else
    export_names = .F.
end if
export.file = filename
export.type = 1
export.names = export_names
export.options = "Q"
export.field_sep = ","
export.rec_sep = ""
export.fields = 5
export.field1 = "cust_id"
export.field2 = "salutation"
export.field3 = "first_name"
export.field4 = "last_name"
export.field5 = "home_phone"
tbl.export()
]]></example>
       </section>
   </sections>
   <see>
        <ref href="/Ref/Api/Objects/Database/Table/index.xml">Table Object Functions and Methods</ref>
        <ref href="/Ref/Api/Functions/Document Types/DBF/Table Functions/index.xml">Other Table Functions</ref>
      <ref href="/Api/Objects/Table/Table Operation Methods.html">Table Operation  Methods</ref>
   </see>
   
   <terms>table,defaults,export,field,file,function,memo,object,operation,record,script,set,string,tabs,text,,variable</terms>

</page>