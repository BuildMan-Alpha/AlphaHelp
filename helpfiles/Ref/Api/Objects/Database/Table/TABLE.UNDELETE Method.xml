<page>
    <shortlink>api objects table object undelete function</shortlink>
   <topic>table.UNDELETE Function</topic>
    <description>Un-delete records in a table</description>
  
   <prototype>Records_Undeleted as N = table.undelete([N start_rec [,N end_rec [,L mark_rec ]]])</prototype>
   <arguments>
   
     <argument>
         <name>Records_Undeleted</name>
         <description>The number of records that were undeleted.
</description>
     </argument>
     <argument>
         <name>start_rec</name>
         <description>Optional. Default = first deleted record of table. The number of the first deleted record to be undeleted.
</description>
     </argument>
     <argument>
         <name>end_rec</name>
         <description>Optional. Default = last deleted record of table. The number of the last deleted record to be undeleted.
</description>
     </argument>
     <argument>
         <name>mark_rec</name>
         <description>Optional. Default = .F. (FALSE). Specifies whether to mark undeleted records.</description>
     <list>
     <item>
     <name>.T. = mark undeleted records</name>
     <description></description>
     </item>
     
     <item>
     <name>.F. = do not mark undeleted records</name>
     <description></description>
     </item>
     </list>
     </argument>
     
     
     
     
   </arguments>
  
  <discussion><![CDATA[The <TBL>.UNDELETE() method undeletes a range of records in a table. The operation is performed on the records in the table pointed to by the object pointer, <TBL>. If Starting_Record and Ending_Record are not supplied, then Alpha Anywhere undeletes all of the records in the table.
Note : Records can only be undeleted before the table has been packed.
]]></discussion>
  
  
  
   <sections>
       <section><title>Example</title>
            <description>Type the following in the Interactive window.</description>
            <example><![CDATA[
t = table.open("Customer")
t.records_get()-> 60
'delete all records
t.delete_range(".T.")
t.records_get()-> 0
'Undelete records 10 through 20
t.undelete(10,20)
t.records_get()-> 11
'Undelete all records
t.undelete()
t.records_get()-> 60
'undelete all records, and mark those that are undeleted
'(assume that 99999999 will be more that total records in table)
t.undelete(1,99999999,.T.)
]]></example>
       </section>
   </sections>
   <see>
      <ref link="Table Object Functions and Methods">Table Functions and  Methods</ref>
   </see>
 <terms>table,defaults,function,number,record</terms>
</page>