<page>
    <shortlink>api objects table object create begin function</shortlink>
    <topic>TABLE.CREATE_BEGIN Function</topic>
    <description>Start defining a new Table, defines the first field.</description>
    <syntax>V Create_Begin(C Fieldname,C Fieldtype[,N Field_Width[, N Field_Decimal[,C flags]]])</syntax>
    <arguments>
        <argument>
            <name>Fieldname</name>
            <type>C</type>
            <description>The name of the field.</description>
        </argument>
        <argument>
            <name>Fieldtype</name>
            <type>C</type>
            <description>The field types, the single character codes used to represent them, and the valid parameters associated with them are:</description>
            <list>
                <item>
                    <name-title>Field Type</name-title>
                    <description-title>Type Code and Valid Parameters</description-title>
                </item>
                <item>
                    <name>Bitmap</name>
                    <description>"B", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Character</name>
                    <description>"C", Fieldname, Field Type, Width</description>
                </item>
                <item>
                    <name>Date</name>
                    <description>"D", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Exponent Numeric</name>
                    <description>"E", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Linked image</name>
                    <description>"I", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>JPEG</name>
                    <description>"J", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Logical</name>
                    <description>"L", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Memo</name>
                    <description>"M", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Numeric</name>
                    <description>"N", Fieldname, Field Type, Width , Decimal Width</description>
                </item>
                <item>
                    <name>OLE</name>
                    <description>"O", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Rich text memo</name>
                    <description>"R", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Time</name>
                    <description>"T", Fieldname, Field Type</description>
                </item>
                <item>
                    <name>Short Time</name>
                    <description>"Y", Fieldname, Field Type</description>
                </item>
            </list>
        </argument>
        <argument optional="true">
            <name>Field_Width</name>
            <type>N</type>
            <description>The number of characters (including any decimal characters) to allocate to the field. Available if *[xb:Field_Type]* is "C" or "N".</description>
        </argument>
        <argument optional="true">
            <name>Field_Decimal</name>
            <type>N</type>
            <description>The number of characters after the decimal point. Only available if *[xb:Field_Type]* is "N".</description>
        </argument>
        <argument optional="true">
            <name>flags</name>
            <type>C</type>
            <description>Additional flags.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The TABLE.CREATE_BEGIN() method is used together with the TABLE.FIELD_ADD() and TABLE.CREATE_END() methods to define and create a new table file. The first field of the table is defined in TABLE.CREATE_BEGIN(). Subsequent fields are then defined using TABLE.FIELD_ADD(). When the table definition is complete, use TABLE.CREATE_END() to actually create and open the table file.</p>
        <p>A field definition consists of at least two parameters, the Field_Name and Field_Type, and can contain up two optional parameters, Width and Decimal_Width. Field_Type is a string containing a single-character code representing one of the field types.</p>
        <p>The chosen field type determines how the optional parameters are used. If the Field_Type is Character, an additional Width parameter is supplied, and if the Field Type is Numeric, the additional Width and optional Decimal Width parameters are specified. Date, Memo, Rich text memo, Bitmap, OLE, and Logical fields are always defined with two parameters because the field widths for these field types are set automatically.</p>
    </discussion>
    <sections>
        <section>
            <title>Example</title>
            <description>Create a table.</description>
            <example>
                <![CDATA[
table.create_begin("firstname","c",30)
table.field_add("lastname","c",30)
table.field_add("price","n",5,2)
table.field_add("quantity","n",2)
table.field_add("birthday","d")
'The create_end() method creates the table and assign an object pointer to the table
tbl = table.create_end("c:\sample.dbf")

' optionally get the fully qualified name of the new table and add it to the workspace
newtable = tbl.filename_get()
file_add_to_db(newtable)
tbl.close()]]>
            </example>
        </section>
    </sections>
    <see>
        <ref link="Table Object Functions and Methods">Table Object Functions and Methods</ref>
        <ref link="Table Functions">Other Table Functions</ref>
        <ref>Table_and_Field_Names</ref>
    </see>
    <terms>table,contains,field,function,logical,number,string,text</terms>
</page>