<page>
   <topic>TABLE.EXTERNAL_FIELD_NAME_GET Function</topic>
 <description><![CDATA[Retrieve external tables field names (and other optional info) in a cr-lf separated list.
]]></description>   
   
   
   <syntax>Field_List as C = External_Field_Name_Get(C tablename[,C format])</syntax>
   <arguments>
    
     <argument>
         <name>tablename</name>
         <description>The table that contains the fields you wish to retrieve information about.</description>
     </argument>
     <argument>
         <name>format</name>
         <description>A character, numeric, logical, or date data display format. Options are:</description>
     
     
<list><item><name>
"n" = field name
</name></item><item><name>
"N" = uppercased field name
</name></item><item><name>
"t" = simple field type
</name></item><item><name>
"T" = full field type
</name></item><item><name>
"W" = field width
</name></item><item><name>
"D" = field decimal
</name></item><item><name><![CDATA[
"R" = field rule (INCREMENT/CALCULATED=<expression>)
]]></name></item><item><name>
"L" = Label, the field rule's 'descriptive' name for the field if it is defined, or else the field name properly cased with spaces replacing underbars 
</name></item><item><name>
"P" = Presentation width, which may be different from the field width. For example, even though date fields take only 8 characters, their default display format adds two separator characters. 
</name></item>
</list></argument>
     
   </arguments>
  
   <discussion><![CDATA[
The TABLE.EXTERNAL_FIELD_NAME_GET() method creates a CR-LF delimited string with information about the fields in Table_Name. Table_Name does not have to be open. This function is useful for populating an array with information about the fields in a table.
 ]]>  </discussion>
  
   <sections>
       <section><title>Example</title>
            <description><![CDATA[The following script populates an array with information about the fields in a table.]]></description>
            <example><![CDATA[
dim field_data[100] as P
Format = "n|T|W|D"
String = table.external_field_name_get("customer",format)
Array_format = "fieldname|fieldtype|width|decimals"
field_data.initialize_properties(array_format,string)
? field_data[1].fieldname -> "Customer_Id"
]]></example>
       </section>
       
       <section>
            <description><![CDATA[To retrieve a list of field names to put in a list box, you might use something like the following code. This approach also gives you a blank (no selection) entry.]]></description>
            <example><![CDATA[
dim flist as C
flist = crlf()+ table.external_field_name_get("customer","n")
]]></example>
       </section>
       
       <section>
            <description>Using the L format to get the field labels: </description>
            <example><![CDATA[
? table.external_field_name_get("customer","l")
= Customer Id
First Name
Last Name
Company
Phone Number
Fax Number
Bill Address 1
Bill Address 2
Bill City
Bill State/Region
Bill Postal Code
Bill Country
]]></example>
       </section>
       
   </sections>
   <see>
        <ref href="/Ref/Api/Objects/Database/Table/index.xml">Table Object Functions and Methods</ref>
        <ref href="/Ref/Api/Functions/Document Types/DBF/Table Functions/index.xml">Other Table Functions</ref>
      <ref><![CDATA[<TBL>.FIELDS_GET()]]></ref>
   </see>
   
<terms>table,contains,defaults,display,field,function</terms>

</page>