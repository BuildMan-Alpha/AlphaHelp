<page>
   <topic>SET.OPEN_REPAIR Function</topic>
    <description>Open an existing set - repair problems interactively if encoutered.</description>
   <syntax><![CDATA[<Set>]]> as P = SET.Open_Repair(C setname[,N file_open_mode[,C password]])</syntax>
   <arguments>
     <argument>
         <name>setname</name>
         <description>The name of a set. The extension ".set" is assumed.</description>
     </argument>
     <argument>
         <name>file_open_mode</name>
         <description>Optional. Determines the access privileges that apply to the open set file. You can use one of the following system variables:</description>
<list>
<item>
<name>Variable</name>
<description>Function</description>
</item>

<item>
<name>FILE_RO_EXCLUSIVE</name>
<description>Read Only (Exclusive)</description>
</item>

<item>
<name>FILE_RW_EXCLUSIVE</name>
<description>Read or Write (Exclusive)</description>
</item>

<item>
<name>FILE_RO_SHARED</name>
<description>Read Only (Shared)</description>
</item>

<item>
<name>FILE_RW_SHARED</name>
<description>Read or Write (Shared)</description>
</item>


</list>
 
 
 
     </argument>
     <argument>
         <name>password</name>
         <description>Optional. Needed if the set has been encrypted, and the default encryption key has not been set (using the DEFAULT_ENCRYPTION_KEY_SET() function), of if the set was encrypted using a different encryption key than the default encryption key.</description>
     </argument>
   </arguments>
  
   <discussion>The SET.OPEN_REPAIR() method opens an existing set, repairing problems interactively as they are encountered.</discussion>
   <example><![CDATA[
dim ptr as P
ptr = set.open_repair("invoice", FILE_RW_EXCLUSIVE) 
]]></example>
   
   <see>
      <ref>Set Functions and Methods</ref>
   </see>
  
</page>