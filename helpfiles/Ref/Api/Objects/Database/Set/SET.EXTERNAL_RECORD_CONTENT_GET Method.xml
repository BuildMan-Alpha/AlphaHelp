<page>
     <shortlink>api objects set object external record content get function</shortlink>
   <topic>SET.EXTERNAL_RECORD_CONTENT_GET Function</topic>
     <description>Extacts data from a set in a cr-lf delimited string</description>
   <prototype>C set.external_record_content_get(C setname ,C content_expression [,C order [,C filter [,N level ]]])</prototype>
   <arguments>
     <argument>
         <name>setname</name>
         <description>The name of the set.
</description>
     </argument>
     <argument>
         <name>content_expression</name>
         <description>An expression that defines the fields to return.
</description>
     </argument>
     <argument>
         <name>order</name>
         <description>Optional. Default = record order. A character order expression that sorts selected records. You can only sort on fields from the primary table and any tables that are linked to the primary table with a one-to-one link.
</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Optional. Default = ".T." (All records). A character filter expression that evaluates to a logical value and selects records from the set.
</description>
     </argument>
     <argument>
         <name>level</name>
         <description>Optional. Default = 0. Used when fetching through the records of a set. The level determines the depth of the fetch, so that tables at lower levels in the set can be excluded from the Fetch operation.</description>
   
<list>
<item><name>
0 = Fetch through all of the one-to-many links.
</name></item><item><name>

1 = Fetch only through primary table records,  meaning that the method will return data from any primary table fields, and tables linked to the primary table one-to-one.
</name></item><item><name>

2 = Fetch through primary table records, and records in the child one-to-many links.
</name></item><item><name>

3 = Fetches through primary, child and grand-child one-to-many links
</name></item>
</list>
   
   
     </argument>
   </arguments>
 
   <discussion>
The SET.EXTERNAL_RECORD_CONTENT_GET() method returns records from a set.
   </discussion>
  
   <sections>
       <section><title>Example</title>
            <description>In this example, we extract data from the Invoice.set in Alphasports. Since the level is not specified, Alpha Anywhere extracts data from all of the child records in the one-to-many links.</description>
            <example><![CDATA[
? set.external_record_content_get("invoice.set", "invoice_number +' ' +
product->description", "invoice_number")
= 000001 SIP Binoculars
000001 TrueNorth Compass
000001 EuroPal Pocket Knife
000001 Reeler's 40 # Fishing Line 200'
000001 Fast Trak Cross Trainers (Women)
000001 Arctic Trek Dome Tent
000002 Alpha Sports Cap
000002 Slazinger Cricket Bat
000003 Techelon Hybrid Racquet
]]></example>
       </section>
       
        <section>
            <description>In this example, the level is set to 1 so Alpha Anywhere only fetches through primary table records.</description>
            <example><![CDATA[
? set.external_record_content_get("invoice.set", "invoice_number +' ' +
customer->lastname", "invoice_number", "", 1)
= 000001 Fuller
000002 Rigan
000003 Mesner
000004 Feld
000005 Eagle
]]></example>
       </section>
       
        <section>
            <description>This example is same as Prior one, but the level is set to 0. Notice that since is fetching through the one-many link, there ?appears' to be duplicate records.</description>
            <example><![CDATA[
? set.external_record_content_get("invoice.set", "invoice_number +' ' +
customer->lastname", "invoice_number", "", 0)
= 000001 Fuller
000001 Fuller
000001 Fuller
000001 Fuller
000001 Fuller
000001 Fuller
000002 Rigan
000002 Rigan
000003 Mesner
000003 Mesner
]]></example>
       </section>
       
        <section>
            <description>By adding in a field from the one-many child link, you see that Alpha Five was not really returning duplicate records.</description>
            <example><![CDATA[
? set.external_record_content_get("invoice.set", "invoice_number +' ' +
customer->lastname + ' ' + product->description", "invoice_number", "", 0)
= 000001 Fuller SIP Binoculars
000001 Fuller TrueNorth Compass
000001 Fuller EuroPal Pocket Knife
000001 Fuller Reeler's 40 # Fishing Line 200'
000001 Fuller Fast Trak Cross Trainers (Women)
000001 Fuller Arctic Trek Dome Tent
000002 Rigan Alpha Sports Cap
000002 Rigan Slazinger Cricket Bat
000003 Mesner Techelon Hybrid Racquet
000003 Mesner Reeler's 40 # Fishing Line 200'
]]></example>
       </section>
   </sections>
   <see>
	<ref link="set functions">Set Functions</ref>
	<ref link="set methods">Set Methods</ref>
   </see>
  <terms>set,field,filter,function,logical,record,string</terms>
</page>