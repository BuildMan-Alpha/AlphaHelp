<page api="js">
  <shortlink>grid component setValue method</shortlink>
  <topic>{grid.object}.setValue Method</topic>
  <description>Set the value of a control in the Grid, Search or Detail View part.</description>
  <prototypes>
      <prototype>{grid.Object}.setValue(part, name, row, value [, honorChangeEvent]);</prototype>
      <prototype>{grid.Object}.setValue(part, name, value [, honorChangeEvent]);</prototype>
  </prototypes>
  <arguments>
    <argument>
      <name>part</name>
      <type>string</type>
      <description>'G' , 'D' or 'S' (Grid, Detail View or Search part). *[Must be UPPERCASE]*. </description>
    </argument>
    <argument>
      <name>name</name>
      <type>string</type>
      <description>
        <p>The control to set the value. *[The name must be UPPERCASE.]* For example, *[js:'STATE']* or *[js:'FIRST_NAME']*.</p>
        <p>If specifying multiple values for a control, such as a checkbox, append '[]' to the name. For example, *[js:'COLORS[]']*.</p>
      </description>
    </argument>
    <argument>
      <name>row</name>
      <types>
          <type>number</type>
      </types>
      <description>*[Required if part has been set to 'G'.]* The row number in the grid to update. If part has been set to 'S' or 'D', *[js:row]* should be omitted. New rows are specified as a negative number (e.g. -1, -2, etc.)</description>
    </argument>
    <argument>
        <name>value</name>
        <types>
            <type>a</type>
            <type>array of values</type>
        </types>
        <description>The value to set in the control. If the control can have multiple values, specify the value as an array of values. For example, *[js:['green','blue','orange']]*.</description>
    </argument>
    <argument optional="true">
        <name>honorChangeEvent</name>
        <type>boolean</type>
        <description>Default = *[js:true]*. If true, watch events (such as calculated expressions or client-side show/hide expressions) that reference the field will be triggered. If false, watch events will not be triggered.</description>
    </argument>
  </arguments>
  <discussion>
      <p>Part is 'G' , 'D' or 'S' (Grid, Detail View or Search part). Row is only needed for Grid part. For new record rows, row is negative. By default honorChangeEvent is true. This causes the onChange event for the control to fire when the value is set.</p>
  </discussion>
  <sections>
    <section>
      <important>The 'name' and 'part' parameters MUST be all UPPERCASE.</important>
    </section>
    <section>
      <description>Also, unlike standard JavaScript techniques to set the value of a control, the .setValue() method sets the control's state in the Grid Object to be dirty (in the same way that the control becomes dirty if the user types a value into the control). This will set the row to become dirty and the Submit button to become enabled. For checkbox and Multi-value Dropdownbox Controls - See the example for information on how to set the value of a multi-valued control (e.g. Checkbox or multi-line Dropdownbox).</description>
      <important>You cannot use this method for a field in the Search Part that has been configured as a 'Range' search. See "Setting the Value of a 'range' Field in the Search Part" below for more information </important>
    </section>
    <section>
      <title>Examples</title>
      <description>
          <p>Set value in 'LASTNAME' field from the Grid part, row 4. Note that field name must be uppercase.</p>
      </description>
      <example><![CDATA[{grid.object}.setValue('G','LASTNAME',4,'Smith');]]></example>
    </section>
  </sections>
  <sections>
    <section>
      <description>Set value in 'LASTNAME' field from the Grid part, 'current row'. Note that field name must be uppercase.</description>
      <example><![CDATA[{grid.object}.setValue('G','LASTNAME',{grid.rowNumber},'Smith'); ]]></example>
    </section>
  </sections>
  <sections>
    <section>
      <description>Setting the value in 'COLORS' checkbox field from the Grid part, 'current row'. Note that brackets [] are appended to the field name and that the value is an array. This will set the value of the 'COLORS' field to 'blue' and 'red':</description>
      <example><![CDATA[{grid.object}.setValue('G','COLORS[]',{grid.rowNumber},['blue','red']); ]]></example>
    </section>
  </sections>
  <sections>
    <section>
      <description>Setting the value for the 'LASTNAME' field in the Search part. Note that row number has been omitted.</description>
      <example><![CDATA[{grid.object}.setValue('S','LASTNAME','Smith');]]></example>
    </section>
  </sections>
  <sections>
    <section>
      <description>Setting the value for the 'LASTNAME' field in the Detail View part. Note that row number has been omitted.</description>
      <example><![CDATA[{grid.object}.setValue('D','LASTNAME','Smith');]]></example>
    </section>
    <section>
      <description>Set the value in 'FAVORITECOLOR'. Assume that 'FAVORITECOLOR' is a multi-valued field (e.g. a Checkbox control or a Dropdown control configured to allow multiple values):</description>
      <example><![CDATA[{grid.Object}.setValue('S','FAVAORITECOLOR[]',['alpha','beta','gamma']);]]></example>
    </section>
    <section>
      <description>Notice that the fieldname has a trailing [] - to indicate that it is an array of values, and the values you want to set are passed in in the form of a JavaScript array.</description>
    </section>
    <section>
      <title>Setting the Value of a 'range' Field in the Search Part</title>
      <description>You can't use .setValue() to set the value of 'range' fields in the Search Part. You have to use the [$()] and low-level JavaScript functions instead:</description>
      <example><![CDATA[// Get a pointer to the "from" control for STARTDATE:
var startDateEle = $('{grid.componentName}.S.STARTDATE');
startDateEle.value = '12/1/2010';

// Get a pointer to the "to" control for STARTDATE:
var endDateEle = $('{grid.componentName}.S._TO.STARTDATE');
endDateEle.value = '12/31/2010';]]></example>
    </section>
    <section>
      <title>Example: Multiple Values in the Search Part</title>
      <description>The Search Part allows you to define the initial value of each control in the Search Part. However, in the case of a multi-valued controls, such as a Checkbox control, you might want to set the initial value of the control to two or more checked values. You can do this by specifying some JavaScript in the client-side onSearchRender event. Use the .setValue() method and pass in an array of the initial selections. For example:</description>
      <example><![CDATA[{grid.object}.setValue('S','COLOR',['Red','Green']);]]></example>
    </section>
  </sections>
  <see>
    <ref link="Grid Component Properties and Methods">{grid.object}</ref>
  </see>
  <links>
      <link link="corejs%20dollar">$()</link>
  </links>
  <terms>grid component,array,button,buttons,checkbox,checkbox control,control,defaults,detail view,dropdown,dropdown control,events,field,forms,javascript,new record,object,record,search,search part,submit,users</terms>
</page> 