<page api="js">
    <shortlink>grid component _selectAllRowCheckboxes method</shortlink>
    <topic parent="{grid.object}" parentType="object" elementName="_selectAllRowCheckboxes Method">{grid.object}._selectAllRowCheckboxes Method</topic>
    <description>If a Grid has a checkbox column, sets the state of the checkbox in all rows of the Grid on the current Grid Page. </description>
    <prototypes>
        <prototype>{grid.object}._selectAllRowCheckboxes(flag);</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>flag</name>
            <type>boolean</type>
            <description>State to select for all rows on the current Grid Page. A value of *[js:true]* will check all rows on the current Grid page. A value of *[js:false]* will uncheck all rows on the current Grid page.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:_selectAllRowCheckboxes()]* method selects all of the rows on the current grid page. This method is only available if the [Checkbox Column] has been enabled for the Grid Component.</p>
    </discussion>
    <sections>
        <section>
            <example code="js">
                <![CDATA[// Check all rows on current page:
{grid.object}._selectAllRowCheckboxes(true);

// Uncheck all rows on current page:
{grid.object}._selectAllRowCheckboxes(false);]]>
            </example>
        </section>
        <section>
            <title>Unchecking All Rows Across Multiple Pages</title>
            <description>
                <p>If the Checkbox Select type is set to 'Multiple Rows', the selected rows on each page are stored in the Grid's *[js:{grid.object}._checkRowKeys]* array. Since *[js:_selectAllRowCheckboxes()]* only applies to the current Grid page, it cannot be used to uncheck selected rows that are not on the current page. Instead, you need to reset the *[js:_checkRowKeys]* array:</p>
            </description>
            <example code="js"><![CDATA[// Uncheck all rows across all pages in Grid
{grid.object}._checkedRowKeys = [];

// Refresh the Grid to update the UI:
{grid.object}.refresh();]]></example>
        </section>
    </sections>
    <links>
        <link link="has%20checkbox%20select%20column">Checkbox Column</link>
    </links>
    <see>
        <ref link="grid%20components">Grid Component</ref>
        <ref link="how%20to%20export%20selected%20records%20to%20excel%20in%20a%20grid%20component%20with%20a%20checkbox%20selector">How to Export Selected Records to Excel in a Grid Component with a Checkbox Select Column</ref>
        <ref link="server%20grid%20grid%20component%20checkbox%20column%20custom%20ajax%20callbacks">Working with Checkbox Select Columns in Ajax Callbacks (Xbasic)</ref>
    </see>
    <terms>grid component,checkbox</terms>
</page> 