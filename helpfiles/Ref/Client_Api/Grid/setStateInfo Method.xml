<page api="js">
    <shortlink>grid component setStateInfo method</shortlink>
    <topic parent="{grid.object}" parentType="object" elementName="setStateInfo Method">{grid.object}.setStateInfo Method</topic>
    <description>Allows you to store arbitrary data in the Grid Component's 'state' object. </description>
    <prototype>{Grid.Object}.setStateInfo(obj)</prototype>
    <arguments>
        <argument>
            <name>obj</name>
            <description>A JSON object that specifies what data you want to store in the state object.</description>
        </argument>
    </arguments>
    <sections>
        <section>
            <title>Discussion</title>
            <description>The data in the 'state' object is submitted along with the data in the Grid controls every time you submit the Grid, or make an Ajax callback. The data will be in the __si2 variable.</description>
        </section>
        <section>
            <title>Example</title>
            <example code="js"><![CDATA[{Grid.object}.setStateInfo({myvar1: 'value for myvar1', myvar2: 'value for myvar2'});]]></example>
        </section>
        <section>
            <description>TIP: If you are using Xbasic to construct the Javascript .setStateInfo() command in an Ajax callback, you might find the Xbasic varToJSON() function to be useful. For example:</description>
            <example code="js"><![CDATA[dim ar as p
ar.myvar1 = "value for myvar1"
ar.myvar2 = "value or myvar2"
dim jscmd as c 
'.t. flag condenses JSON object to a single line
jscmd = "{grid.object}.setStateInfo(" + varToJSON(ar,.f.,.t.) + ");"]]></example>
        </section>
    </sections>
    <see>
        <ref link="grid%20components">Grid Component</ref>
        <ref link="Grid Component Properties and Methods">{grid.object}</ref>
    </see>
    <terms>grid component,ajax,control,function,javascript,object,submit,time,Xbasic</terms>
</page> 