<page api="js">
    <shortlink>grid component gridfilterset method</shortlink>
    <topic parent="{grid.object}" parentType="object" elementName="gridFilterSet Method">{grid.object}.gridFilterSet Method</topic>
    <description>
        <p>Set an explicit filter and/or order for the Grid Component.</p>
    </description>
    <prototypes>
        <prototype>{grid.object}.gridFilterSet(filterExpression, [ orderExpression [, filterParameters]]);</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>filterExpression</name>
            <type>string</type>
            <description>An expression used to filter records in the Grid component. If the Grid is based on DBF files, use Xbasic syntax for the expression. If the Grid is based on a SQL data source, use SQL syntax for the expression.</description>
        </argument>
        <argument optional="true">
            <name>orderExpression</name>
            <type>string</type>
            <description>Default = "". An expression describing how to order the records in the match the *[js:filterExpression]*. If the Grid is based on DBF files, use Xbasic syntax for the expression. If the Grid is based on a SQL data source, use SQL syntax for the expression.</description>
        </argument>
        <argument>
            <name>filterParameters</name>
            <type>string</type>
            <description>Default = "". A list of one or more newline ('*[js:\n]*') separated filter parameters defined using the following syntax: *[js:value|||type|parameterName]*. The *[js:type]* can be one of the following Xbasic types:</description>
            <list>
                <item>
                    <name-title>Type</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>B</name>
                    <description>Blob</description>
                </item>
                <item>
                    <name>C</name>
                    <description>Character</description>
                </item>
                <item>
                    <name>D</name>
                    <description>Date</description>
                </item>
                <item>
                    <name>K</name>
                    <description>GUID</description>
                </item>
                <item>
                    <name>L</name>
                    <description>Logical</description>
                </item>
                <item>
                    <name>N</name>
                    <description>Number</description>
                </item>
                <item>
                    <name>T</name>
                    <description>Time</description>
                </item>
                <item>
                    <name>Y</name>
                    <description>Short time</description>
                </item>
            </list>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:{grid.object}.gridFilterSet()]* method sets and explicit filter and/or order expression for the Grid component. The expression syntax used for the filter and order expressions is determined by the Grid component's data source. If the Grid is based on DBF tables, Xbasic syntax should be used. Otherwise, expressions should use SQL syntax.</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[//Filter the Grid to show orders above $1,000, ordered by orderTotal.
{grid.object}.gridFilterSet('ordertotal > 1000');

//Sort the Grid by Lastname and within Lastname, by Firstname. (SQL Table)
{grid.object}.gridFilterSet('','Lastname, Firstname');

//Sort the Grid by Lastname and within Lastname, by Firstname. (DBF Table)
{grid.object}.gridFilterSet('','Lastname+Firstname');]]></example>
            <important>
                <p>The filter and order expression must be enclosed in single quotes. Therefore if your filter uses single quotes you must escape the single quote. e.g. *[js:'customername = \'smith\'']*.</p>
                <p>Alternatively, you can use double quotes to enclose the JavaScript string. e.g. *[js:"customername = 'smith'"]*.</p>
                <p>You cannot use double quotes in the filter as it will cause a Javascript error. To prevent unintentional errors created from using double quotes in filter or order expressions, use arguments in the filter or order expressions. The argument values can be supplied using the *[js:filterParameters]* parameter.</p>
            </important>
        </section>
        <section>
            <description>
                <p>If you use arguments in the filter (e.g. *[js:orderdate = :whatOrderdate]*), then you can specify parameter values with the *[js:filterParameters]* argument. The syntax for parameters is a '*[js:\n]*' (Javascript CRLF character) delimited string with *[js:value|||type|parameterName]*. For example:</p>
            </description>
            <example code=""><![CDATA[//Search for records where City is 'London'. Order result by 'Contactname' 
var filter = 'city = :whatCity';
var order = 'Contactname';
var filterParameters = 'london|||c|whatCity';

{grid.object}.gridFilterSet(filter, order, filterParameters);]]></example>
        </section>
        <section>
            <description>
                <p>In the example below, the filter uses 2 arguments (*[js::whatCity]* and *[js::whatCountry]*). Therefore the third parameter passed into the method defines these two arguments. Each argument is delimited with '*[js:\n]*' - the Javascript encoding of a CRLF character.</p>
            </description>
            <example code="js"><![CDATA[//Search for records where City is 'London' and Country is 'UK'
var filter = 'city = :whatCity and country = :whatCountry';
var order = '';
var filterParameters = ['london|||c|whatCity','uk|||c|whatcountry'];

// join filterParameters array into a '\n' delimited list:
filterParameters = filterParameters.join('\n');

{grid.object}.gridFilterSet(filter, order, filterParameters);]]></example>
        </section>
    </sections>
    <see>
        <ref link="grid%20components">Grid Component</ref>
        <ref link="Grid Component Properties and Methods">{grid.object}</ref>
        <ref link="grid component gridBaseFilterSet method">{grid.object}.gridBaseFilterSet()</ref>
    </see>
</page>
