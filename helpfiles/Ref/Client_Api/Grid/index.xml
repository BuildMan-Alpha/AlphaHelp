<page api="js" build="0">
    <topic>Grid Component Properties and Methods</topic>
    <description>Properties and methods that can be used on the client side to automate grid components.</description>
    <properties>
        <property readonly="true">
            <name>_totalRecordsInGrid</name>
            <type>number</type>
            <description>
                <p>The total number of records in the Grid.</p>
            </description>
        </property>
        <property readonly="true">
            <name>isDirty</name>
            <type>boolean</type>
            <description>Indicates if the Grid has been modified (is "dirty".) If true, records in the Grid (either the Grid part or Detail View part) have been edited, but not yet saved.</description>
        </property>
    </properties>
    <sections>
        <section>
            <title>Placeholders</title>
            <description>Placeholders are dynamic objects that can be used JavaScript code to reference objects that are defined by the Application Server.</description>
            <cases>
                <case>
                    <title nested="2">{grid.object}</title>
                    <description>Gets replaced with the name of the JavaScript Grid Component Object. For example, if the Grid alias is 'GRID1', then is replaced with 'GRID1_GridObj'. Use this placeholder when you want to call a method of the Grid Object. e.g. {grid.Object}.sort(2), to sort the Grid on column 2.</description>
                </case>
                <case>
                    <title nested="2">{grid.componentName}</title>
                    <description>Gets replaced with the alias of the Grid Component. For example, if the Grid alias is 'GRID1', then *[js:{grid.componentName}]* is replaced with 'GRID1'.</description>
                </case>
                <case>
                    <title nested="2">{grid.childObject}</title>
                    <description>For use in the case when you are opening a child Grid in a pop-up Ajax window. Gets replaced with the name of the JavaScript Grid Component Object for the child Grid that is opened in a pop-up Ajax window. Use this placeholder when you want to call a method of the child Grid Object. e.g. *[js:{grid.childObject}.sort(2);]* to sort the Grid on column 2.</description>
                </case>
                <case>
                    <title nested="2">{grid.childComponentName}</title>
                    <description>For use in the case when you are opening a child Grid in a pop-up Ajax window. Gets replaced with the alias of the child Grid Component.</description>
                </case>
                <case build="5663">
                    <title nested="2">{grid.clientSideDateFormat}</title>
                    <description>
                        <p>Placeholder for the client-side date format defined in the Grid component. This placeholder can be used in the *[ui:Initial value]* property to set the default date for the initial value of a search or detail view field. For example:</p>
                        <p>
                            <example><![CDATA[=time("{grid.clientSideDateFormat}",date())]]></example>
                        </p>
                    </description>
                </case>
                <case>
                    <title nested="2">{grid.controlId}</title>
                    <description>The control Id of the control. Note: See comment on {grid.ControlIDEscaped}.</description>
                </case>
                <case>
                    <title nested="2">{grid.controlIdEscaped}</title>
                    <description>The control Id of the control. Special characters in the id are JavaScript escaped. You must use this placeholder (and not {grid.ControlId}) if you want to use this placeholder in a selector (such as jQuery - *[js:jQuery('#{grid.controlIDEscaped}');]* )</description>
                </case>
                <case>
                    <title nested="2">{grid.rowID}</title>
                    <description>Gets replaced with the row number of the Grid in which the JavaScript is inserted. For new record rows, the 'NEWROW' prefix is used (e.g. for the first new record row - 'NEWROW1'). Used in constructing JavaScript object names where the use of a - sign would result in an invalid object name.</description>
                </case>
                <case>
                    <title nested="2">{grid.rowNumber}</title>
                    <description>Replaced with the row number of the Grid in which the JavaScript is inserted. For new record rows, negative numbers are used. For example, the 2nd new record row is -2.</description>
                </case>
                <case>
                    <title nested="2">{grid.style}</title>
                    <description>Gets replaced with the style name of the Grid. For example, if the style is 'GlassOlive', then gets replaced with 'GlassOlive'. See [] for more information.</description>
                </case>
            </cases>
        </section>
    </sections>
    <!--list:.-->
</page>