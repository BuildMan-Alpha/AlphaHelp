<page deprecated="true" api="js">
    <shortlink>corejs u_n_toStr</shortlink>
    <topic>$u.n.toStr Function</topic>
    <prototype>$u.n.toStr(value as number, decimalPlace as number [, format as string [, prefix as string [, suffix as string]]])</prototype>
    <description>
        <p>Convert a number into a string.</p>
    </description>
    <arguments>
        <argument>
            <name>value</name>
            <type>number</type>
            <description>The numeric value to format into a string.</description>
        </argument>
        <argument>
            <name>decimalPlace</name>
            <type>number</type>
            <description>The number of decimal places to round the number.</description>
        </argument>
        <argument optional="true">
            <name>format</name>
            <type>string</type>
            <description>
                <p>Format flags indicating how to format the value. Available format flags are:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Format Flag</name-title>
                            <description-title>Definition</description-title>
                        </item>
                        <item>
                            <name>*[js:B]*</name>
                            <description>Return a blank string if the number equals "0". </description>
                        </item>
                        <item>
                            <name>*[js:,]*</name>
                            <description>Include a thousands separator. The default string used as a thousands separator is a comma ",". The thousands separator used is defined in *[js:$u.comma]*. You can change the thousands separator to any string you desire.</description>
                        </item>
                        <item>
                            <name>*[js:-]*</name>
                            <description>Use a "-" before the number if it is negative.</description>
                        </item>
                        <item>
                            <name>*[js:(]*</name>
                            <description>Bracket the number in parentheses if it is negative.</description>
                        </item>
                    </list>
                </p>
            </description>
        </argument>
        <argument optional="true">
            <name>prefix</name>
            <type>string</type>
            <description>A prefix that should be prepended to the string.</description>
        </argument>
        <argument optional="true">
            <name>suffix</name>
            <type>string</type>
            <description>A suffix that should be appended to the string.</description>
        </argument>
    </arguments>
    <sections>
        <section>
            <title>Example</title>
            <example code="js"><![CDATA[var value = 11222.152;
var decimalPlace = 2;
var format = ",";
var prefix = "$";
var suffix = "(US)";

var string1 = $u.n.toStr(value, decimalPlace, format, prefix, suffix);
/* string1 is: '$11,222.15 (US)'*/

value = -11222.152;
format = "(,";

var string2 = $u.n.toStr(value, decimalPlace, format, prefix, suffix);
/* string2 is: '($11,222.15 (US))'*/]]></example>
        </section>
        <section>
            <title>Thousands Separator and Decimal Character</title>
            <description>The default value for the thousands separator and decimal character are a comma "," and period ".", respectively. These values can be changed using the *[js:$u.comma]* and *[js:$u.decimal]* properties. EG:</description>
            <example code="js"><![CDATA[// Set the thousands separator to a period:
$u.comma = ".";

// Set the decimal to a comma:
$u.decimal = ",";

var value = 11222.152;
var decimalPlace = 2;
var format = ",";

// Format the value:
var string3 = $u.n.toStr(value, decimalPlace, format);

/* string3 is : '11.222,15' */]]></example>
        </section>
    </sections>
</page>