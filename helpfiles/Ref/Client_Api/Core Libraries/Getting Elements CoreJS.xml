<page>
    <shortlink>getting elements core javascript library</shortlink>
    <topic>Getting Elements Core.JS</topic>
    <description>The following functions can be used to get pointers to elements in an HTML document.</description>
    <sections>
        <section>
            <note>If you need to get a pointer to an object in a UX componet, use the {dialog.object}.getPointer() method.</note>
        </section>
        <section>
            <title>$(ID as string [..., ID-N as string])</title>
            <description>
                <p>The $() function gets a pointer to elements in the HTML. It takes an arbitrary number of arguments, each a string with the ID of the element you wish to get a pointer to.</p>
                <p>If you pass it a single ID, the function will return a pointer to that element.</p>
                <p>If you pass it multiple IDs, the function will return a Javascript array of the HTML elements.</p>
                <p>If an element with the ID specified does not exist, the function will automatically look for an element that has a NAME of the passed in string, and return it.</p>
                <p>The $() function is a convenient alternative to the native Javascript getElementById() function.</p>
                <p>Examples:</p>
            </description>
            <example><![CDATA[$('firstname').value = 'Fred';
 
var p = $('lastname');
p.value = 'Smith';
 
/*Get an array of pointers to elements on the page */
var arr = $('firstame','lastname','city','state','zip');
arr[0].value = 'Fred';
arr[1].value = 'Smith';]]></example>
        </section>
        <section>
            <title>$n(NAME as string [..., NAME-N as string])</title>
            <description>
                <p>The $n() functions gets elements in the HTML. It takes an arbitrary number of arguments, each a string with the NAME of the element you wish to get a pointer to.</p>
                <p>Getting elements by NAME returns an array because the NAME attribute is used to describe groups of controls - such as radio and checkbox groups. Therefore, even if there is only a single element with the given NAME, it will be returned inside a Javascript array.</p>
                <p>If you pass a single NAME, the function will return a Javascript array of pointers to the elements that match the NAME passed in.</p>
                <p>If you pass it multiple NAMEs, the function will return a Javascript array of arrays of the HTML elements.</p>
                <p>If an element with the NAME specified does not exist, the function will automatically look for an element that has a ID of the passed in string, and return it.</p>
                <p>Examples:</p>
            </description>
            <example><![CDATA[/*Assume that you have two radio buttons with choices 'Male' and 'Female'. Each radio button has a unique ID, but they both have the same NAME, 'gender' */
var genderInputs = $n('gender');

/*Select the first radio button in the group*/
genderInputs[0].checked = true;]]></example>
        </section>
    </sections>
    <see>
        <ref>{dialog.object}.getPointer Method</ref>
     </see>
</page>