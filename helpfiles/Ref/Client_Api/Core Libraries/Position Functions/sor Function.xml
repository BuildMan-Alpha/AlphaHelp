<page api="js">
    <shortlink>corejs dollar sor function</shortlink>
    <topic>$sor Function</topic>
    <prototype>$sor(element as element/string, parentElement as element/string, type as string [, firstOffset as number [, secondOffset as number]])</prototype>
    <arguments>
        <argument>
            <name>element</name>
            <type>element|string</type>
            <description>The element you wish to size.</description>
        </argument>
        <argument>
            <name>parentElement</name>
            <type>element|string</type>
            <description>The element you wish to size relatively to.</description>
        </argument>
        <argument>
            <name>type</name>
            <type>string</type>
            <description>A string defining what properties to size. Values can be:</description>
            <list>
                <item>
                    <name-title>Value</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>w</name>
                    <description>Size width only</description>
                </item>
                <item>
                    <name>h</name>
                    <description>Size height only</description>
                </item>
                <item>
                    <name>wh</name>
                    <description>Size width and height.</description>
                </item>
                <item>
                    <name>hw</name>
                    <description>Size height and width.</description>
                </item>
            </list>
        </argument>
        <argument optional="true">
            <name>firstOffset</name>
            <type>number</type>
            <description>Specifies an offset in pixels. If 'wh' or 'hw' are specified as the type, defines the offset for the first character.</description>
        </argument>
        <argument optional="true">
            <name>secondOffset</name>
            <type>number</type>
            <description>Specifies an offset in pixels. If 'wh' or 'hw' are specified as the type, defines the offset for the second character.</description>
        </argument>
    </arguments>
    <description>Sizes an element relatively to another element.</description>
    <discussion>
        <p>The $sor() function sizes an element relatively to another element. IE, the function makes one object the same size as another object.</p>
        <p>The firstOffset and secondOffset parameters allow you to optionally specify pixel offsets. For example, if you specify to size the object to be 10 pixels wider and 5 pixels higher than the reference element, you would specify a FIRSTOFFSET of 10 and a SECONDOFFSET of 5 (assuming that you specified the TYPE as 'wh'). If you specified the TYPE as 'hw', then you would swap the order of the offsets.</p>
    </discussion>
    <example code="js"><![CDATA[/*Sets the child object to have the same width and height as the parent object.*/
$sor('childObject','parentObject','wh');

/*Sets the child object to have the same width + 6 px and same height + 4 px as the parent object.*/
$sor('childObject','parentObject','wh',6,4);

/*Same as above example, but since TYPE was specified as 'hw' (and not 'wh'), the order of the offsets is swapped.*/
$sor('childObject','parentObject','hw',4, 6);]]></example>
            <important>Use *[link:{dialog.object}.getPointer()@ux component getpointer method]* to get the DOM element for a control.</important>
    <see>
        <ref link="Using Core Libraries in Components">Using Core Library Functions in Components</ref>
    </see>
</page>