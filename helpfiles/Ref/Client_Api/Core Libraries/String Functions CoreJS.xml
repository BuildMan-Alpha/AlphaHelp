<page>
    <shortlink></shortlink>
    <topic>String Functions Core.JS</topic>
    <description>Utility functions for working with strings.</description>
    <sections>
        <section>
            <title>$u.s.toNum(STRING as string)</title>
            <description>
                <p>Convert a string into a number. Non-numeric characters are stripped out. The default thousands separator is a comma and decimal separator is a period. However, you can specify the values to use by setting $u.decimal and $u.comma.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var amountString = '$2,623.23';
var amountValue = $u.s.toNum(amountString);
var discountValue = amountValue * .9;
var amountEuropeanString = 'E2.623,23';
$u.decimal = ',';
$u.comma = '.';
var amountValue = $u.s.toNum(amountEuropeanString);]]></example>
        </section>
        <section>
            <title>$u.s.toBool(STRING as string)</title>
            <description>
                <p>Convert a string into a logical.  If a string is one of the following values (case insensitive), it is converted to true: true, t, yes, 1, .t.. Any other value is false.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[/*Assume that the page has in input control called 'married' in  which
a user might have typed 'Yes'*/
var isMarried = $u.s.toBool($gvs('married'));]]></example>
        </section>
        <section>
            <title>$u.s.lTrim(STRING as string [, CHR as string])</title>
            <description>
                <p>Trim the left of a string, removing spaces and any passed in characters.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var string1 = '   this is a string with leading spaces';
string1 = $u.s.lTrim(string1);

var string1 = '    -   this string has a leading dash';
string1 = $u.s.lTrim(string1,' -');

/*the resulting string is 'this string has a leading dash'. The  leading spaces and - have been removed.*/]]></example>
        </section>
        <section>
            <title>$u.s.rTrim(STRING as string [, CHR as string])</title>
            <description>
                <p>Trim the right of a string, removing spaces and any passed in characters.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var string1 = 'this is a string with trailing spaces      ';
string1 = $u.s.rTrim(string1);
/*resulting string is 'this is a string with trailing  spaces'*/

var string1 = '    -   this string has a leading and trailing  dash and spaces   -    ';
string1 = $u.s.rTrim(string1,' -');
/*the resulting string is '    -   this string has a leading and  trailing dash and spaces'. The trailing spaces and - have been removed.*/]]></example>
        </section>
        <section>
            <title>$u.s.aTrim(STRING as string [, CHR as string])</title>
            <description>
                <p>Trim the both sides of a string, removing spaces and any passed in characters.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var string1 = '    -   this string has a leading and trailing  dash and spaces   -    ';
string1 = $u.s.aTrim(string1,' -');
/*the resulting string is 'this string has a leading and  trailing dash and spaces'. The leading and trailing spaces and - have been  removed.*/
]]></example>
        </section>
        <section>
            <title>$u.s.tran(STRING as string, SEARCH as string/array of strings, REPLACE as string/array of strings)</title>
            <description>
                <p>Replace single or multiple strings in a string.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var str = 'The boy wore a yellow shirt';
str = $u.s.tran(str,'boy','girl');
/* result is: 'The girl wore a yellow shirt'*/
 
str = $u.s.tran(str,['boy','yellow'],['girl','green']);
/*result is 'The girl wore a green shirt'*/]]></example>
        </section>
        <section>
            <title>$u.s.word(STRING as string, WORDNUMBER as number [, SEPARATOR as string])</title>
            <description>
                <p>Fetch a given word from a string, based of a separator (the default separator is a space).</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var str = 'The boy wore a yellow shirt';
str = $u.s.word(str,2,'wore');
/* result is: ' a yellow shirt'*/
]]></example>
        </section>
        <section>
            <title>$u.s.pad(STRING as string, PADLENGTH as number, PADSTRING as string [, POSITION as string])</title>
            <description>
                <p>Pad a string with a passed in padding string. Optionally choose where the padding should be positioned, by passing in a fourth parameter of "l", "r", or "c".</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var str = 'hello';
str = $u.s.pad(str,11,'*');
/* result is: '******hello'*/

str = 'hello';
str = $u.s.pad(str,11,'*','r');
/* result is: 'hello******'*/

str = 'hello';
str = $u.s.pad(str,11,'*','c');
/* result is: '***hello***'*/]]></example>
        </section>
        <section>
            <title>$u.s.replicate(STRING as string, REPEAT as number)</title>
            <description>
                <p>Replicate a string a given number of times.</p>
                <p>Example</p>
            </description>
            <example><![CDATA[var str = 'bye';
str = $u.s.replicate(str,4);
/* result is: 'byebyebyebye'*/]]></example>
        </section>
        <section>
            <title>$u.s.changeCase(STRING as string, TYPE as string)</title>
            <description>
                <p>Change the case of a string. Types can be:</p>
            </description>
            <list>
                <item>
                    <name>u</name>
                    <description>upper</description>
                </item>
                <item>
                    <name>l</name>
                    <description>lower</description>
                </item>
                <item>
                    <name>fu</name>
                    <description>first character upper</description>
                </item>
                <item>
                    <name>furl</name>
                    <description>first character upper, lowercase the rest</description>
                </item>
                <item>
                    <name>wfu</name>
                    <description>first character of each word upper</description>
                </item>
                <item>
                    <name>wfurl</name>
                    <description>first character of each word upper, lowercase the rest</description>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>Example</p>
            </description>
            <example><![CDATA[var str = 'hello world!';
str = $u.s.changeCase(str,'u');
/* result is: 'HELLO WORLD!'*/

str = $u.s.changeCase(str,'l');
/* result is: 'hello world!'*/

str = 'hello WORLD!';
str = $u.s.changeCase(str,'fu');
/* result is: 'Hello WORLD!'*/

str = 'hello WORLD!';
str = $u.s.changeCase(str,'furl');
/* result is: 'Hello world!'*/

str = 'hello WORLD!';
str = $u.s.changeCase(str,'wfu');
/* result is: 'Hello WORLD!'*/

str = $u.s.changeCase(str,'wfurl');
/* result is: 'Hello World!'*/]]></example>
        </section>
    </sections>
</page>