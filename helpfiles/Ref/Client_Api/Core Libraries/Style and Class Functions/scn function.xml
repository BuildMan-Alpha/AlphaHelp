<page>
    <shortlink>corejs dollar scn function</shortlink>
<topic>$scn()</topic>
<prototype>$scn(ELEMENT as element/string/array of ELEMENTs, CLASSNAME as string)</prototype>
<arguments>
    <argument>
        <name>ELEMENT</name>
        <types>
            <type>DOM Element</type>
            <type>string</type>
            <type>DOM Element Array</type>
        </types>
        <description>The element(s) to assign the class. Can be a single DOM element, an element ID specified as a string, or an array of DOM Element objects. If specifying the ID as a string, the ID corresponds to the value for the id HTML attribute for the element you wish to assign a style.</description>
    </argument>
    <argument>
        <name>CLASSNAME</name>
        <type>string</type>
        <description>The class to assign to the element(s). Any existing classes for the element(s) will be overwritten with the specified class.</description>
    </argument>
</arguments>
<description>The $scn() function sets the class name of the passed-in element(s). This will overwrite any class names the already being using by the element(s). Contrast this with the $acn() function which adds the class name to the element.</description>
<note>An element can have more than one class name.</note>
<example><![CDATA[
/*Set the class name of the 'firstname' element.*/
$scn('firstname','formInput');
 
/*Set the class name of multiple elements. Any existing class names for the elements will be removed.*/
$scn(['firstname','lastname','address','city','state','zip'],'formInput');]]></example>
            <important>Use *[link:{dialog.object}.getPointer()@ux component getpointer method]* to get the DOM element for a control.</important>
    <see>
        <ref link="Using Core Libraries in Components">Using Core Library Functions in Components</ref>
    </see>
</page>