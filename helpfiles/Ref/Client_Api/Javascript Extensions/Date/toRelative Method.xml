<page build="4872" api="js" generated="true">
	<shortlink>api client api date torelative method</shortlink>
	<topic parent="Date" parentType="class" elementName="toRelative Method" >Date.toRelative Method</topic>
	<prototype>Date.toRelative([precision[,scope]])</prototype>
	<arguments>
		<argument optional="true" >
			<name>precision</name>
			<type>number</type>
			<description>How many units of time to show in the relative date. The default is 1, a value of -1 can be used to show all units.</description>
		</argument>
		<argument optional="true" >
			<name>scope</name>
			<types><type>string</type><type>array</type></types>
			<description>The scope of difference. By default it will be the full range from years to seconds. See *[link:Date.diff]*.</description>
		</argument>
	</arguments>
	<description> Extension to the native date variable to allow the conversion of the date into string showing the date relative to the current date.</description>
	<discussion>
<p>
The Date.toRelative method can be used to show a date in a relative format such as "3 days ago".
The "precision" argument can be used to change the level of detail of the relative date.
A value of 1 would return "3 days ago" or "in 1 hour", while a value of 2 might show "3 days 2 hours ago" or "in 1 hour 5 minutes".
</p>
<p>
The "scope" argument can be used to default the granularity of the units of time used.
For instance, setting it to a value of "years-days" will only ever show the difference in days, week, months and years, but never in hours, minutes or seconds.
If the given "scope" results in a relative date that is the same, then the corresponding "same" template for the smallest unit is used.
This means that if the smallest unit of comparison is "weeks", and the date is within a week of the current date then the value returned would be whatever is in the same week template (e.g. "this week").
</p>
</discussion>
	<example code="js">
var d = new Date();
d.adjust('day',2);
d.adjust('hour',1);
var dStr = d.toRelative();
// dStr = 'in 2 days'
dStr = d.toRelative(2);
// dStr = 'in 2 days 1 hour'</example>
	<annotations>/Ref/Client_Api/JavaScript Extensions/Date/Date.toRelative Method.xml</annotations>
</page>
