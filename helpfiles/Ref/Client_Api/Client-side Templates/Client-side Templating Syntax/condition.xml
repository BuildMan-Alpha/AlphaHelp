<page api="cstemplate">
    <shortlink>condition cst</shortlink>
   <topic>{condition:logical_expression}</topic>
   <syntax>{condition:logical_expression}...{conditionEnd} {condition:else}...{conditionEnd}</syntax>
   <arguments>
       <argument>
           <name>logical_expression</name>
           <description>A javascript logical expression that evaluates a true or false value. If the expression evaluates to true, the template within the beginning and ending condition tags will be shown.</description>
       </argument>
   </arguments>
   <description>Dynamically show or hide parts of a template.</description>
   <discussion>
        <p>When defining a freeform template for a List control, multiple sub-templates can be defined and dynamically shown using the *[js:{condition:logical_expression}...{conditionEnd}]* directive. This allows you to dynamically decide the template to use when display data in a List, FormView, ViewBox, or any other control that supports client-side template syntax.</p>
        <p>For example, here is a very simple freeform template:</p>
   </discussion>
   <sections>
        <section>
            <example code="cstemplate"><![CDATA[{Firstname} {Lastname}, {State}]]></example>
        </section>
       <section>
           <description> Every row of data in the List will be rendered using the same template. So, row 1 of the List might look like this:</description>
       </section>
       <section>
            <content><![CDATA[<b><font color="#0000FF">John Smith, MA</font></b>]]></content>
       </section>
       <section>
           <description>and row 2 of the List might look like this:</description>
       </section>
       <section>
            <content><![CDATA[<b><font color="#0000FF">Fred Tyson, CA</font></b>]]></content>
       </section>
       <section>
           <description>However, if you wanted the template to be completely different for all people in the state of MA and CA. Here is how you would define the freeform template:</description>
           <example code="cstemplate"><![CDATA[{condition:data.state == 'MA'}
    <span style="color:green;">{Firstname} {Lastname}, {State}</span>
{conditionEnd}
{condition:data.state == 'CA'}
    <span style="color:blue;font-weight:bold;">{Firstname} {Lastname}, {State}</span>
{conditionEnd}
{condition:else}
    <span style="color:#808080;">{Firstname} {Lastname}, {State}</span>
{conditionEnd}]]></example>
       </section>
       <section>
           <description>The statement following the *[js:condition:]* directive is a Javascript logical expression. The 'data' object can be used to reference values in the current row.</description>
       </section>
   </sections>
</page>