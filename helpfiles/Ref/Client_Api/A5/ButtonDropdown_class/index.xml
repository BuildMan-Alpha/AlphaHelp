<page api="js" generated="true">
	<shortlink>api client api a5 buttondropdown class</shortlink>
	<topic parent="A5" parentType="namespace" elementName="ButtonDropdown Class" >A5.ButtonDropdown Class</topic>
	<description> Dropdown button control.</description>
	<discussion>
<p>
The A5.ButtonDropdown can be displayed as etiher a "split" or "dropdown" button.
A "dropdown" button will include a dropdown indicator otherwise threat the button in much the same way as a normal button.
A "split" button will split the clickable area of the button in two.
In a "split" button the dropdown indicator area of the button will call the click event with a "type" of "split", while clicking elsewhere on the button will call the click event with the "type" to "normal".
</p>
<p>
A "split" button is useful for two scenarios.
The first being that the dropdown content selects what the button will do.
For example an "Export" button in which you can select the file format to export to.
The second being that the dropdown content is actions associated  with the button.
For example a "New Document" button, which should have options for "From Template..." and "From Existing...".
</p>
</discussion>
	<properties>
		<property>
			<name>settings</name>
			<type>object</type>
			<description>The settings to use to create the button.</description>
			<properties>
				<property optional="true" >
					<name>type</name>
					<type>string</type>
					<description>The type of dropdown button. Values can be "dropdown" (the default), or "split".</description>
				</property>
				<property optional="true" >
					<name>dropdown</name>
					<type>object</type>
					<description>The settings for the dropdown indicator.</description>
					<properties>
						<property optional="true" >
							<name>location</name>
							<type>string</type>
							<description>The location of dropdown indicator. Values can be "right" (the default) or "bottom".</description>
						</property>
						<property optional="true" >
							<name>className</name>
							<type>string</type>
							<description>The class name to put on the dropdown indicator.</description>
						</property>
						<property optional="true" >
							<name>hoverClassName</name>
							<type>string</type>
							<description>The class name to put on the dropdown indicator when the user hovers over it.</description>
						</property>
						<property optional="true" >
							<name>html</name>
							<type>string</type>
							<description>The HTML to put in the dropdown indicator.</description>
						</property>
						<property optional="true" >
							<name>icon</name>
							<type>string</type>
							<description>The icon to put in the dropdown indicator. See *[link:A5.u.icon]*.</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>onClick</name>
					<type>function</type>
					<description>The code to execute when the button is clicked. The "this" variable of the function will be the BUTTON element.</description>
					<arguments>
						<argument>
							<name>button</name>
							<type>object</type>
							<description>The button class.</description>
						</argument>
						<argument>
							<name>type</name>
							<types><type>string</type><type>number</type></types>
							<description>The "type" of click when the dropdown button is a "split" button. Value will be either "normal" or "split".</description>
						</argument>
					</arguments>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>dropdown</name>
			<type>object</type>
			<description>An A5.Window or A5.Menu class, or any object with a "show" method and an "onHide" event. The "show" method will be called when the user clicks the dropdown button, and the "onHide" event will be extended so that the state of the dropdown button is restored to normal when the dropdown is hidden.</description>
		</property>
	</properties>
	<example code="js">
// assume that bEle is a pointer to an BUTTON element, and wObj is an A5.Window
var newDocButton = new A5.ButtonDropdown({
	theme: 'Alpha',
	type: 'split',
	onClick: function(btc,type){
		if(type == 'normal'){
			// new document
		}
	}
},wObj);
newDocButton.bind(bEle);</example>
	<!--list:.-->
	<annotations>/Ref/Client_Api/A5/ButtonDropdown_class/index.xml</annotations>
</page>
