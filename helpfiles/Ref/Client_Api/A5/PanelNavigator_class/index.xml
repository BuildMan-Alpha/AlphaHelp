<page api="js" generated="true">
	<shortlink>api client api a5 panelnavigator class</shortlink>
	<topic parent="A5" parentType="namespace" elementName="PanelNavigator Class" >A5.PanelNavigator Class</topic>
	<inherits>A5.PanelCard</inherits>
	<arguments>
		<argument>
			<name>panels</name>
			<type>array</type>
			<description>The panels to use in the navigator. See *[link:A5.PanelNavigator Panel Object]*.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>Settings for the panel navigator. This will override the initial values of the properties of the A5.PanelNavigator class.</description>
		</argument>
	</arguments>
	<description> Panel navigator.</description>
	<properties>
		<property optional="true" >
			<name>theme</name>
			<type>string</type>
			<description>The theme to use on the panel navigator.</description>
		</property>
		<property optional="true" >
			<name>override</name>
			<type>string</type>
			<description>The overrides to use on the panel navigator.</description>
		</property>
		<property optional="true" >
			<name>renderMode</name>
			<type>string</type>
			<description>If the panel navigator is in a navigator or layout, renderMode controls when the panel navigator is created. A blank value (the default) will create the panel automatically when the parent is created. A value of "auto-create" will create the panel when it becomes. A value of "auto-create-destroy" will do the same, but also destroy it when it is hidden.</description>
		</property>
		<property optional="true" >
			<name>type</name>
			<type>string</type>
			<description>The type of panel navigator to create. Values can be "tabband" (to use a tabband to navigate) or "carousel" (to allow the user to drag the panel to navigate). Not specifying a value will mean the the panel navigator will the navigated programmatically.</description>
		</property>
		<property optional="true" >
			<name>location</name>
			<type>string</type>
			<description>If the type of panel navigator is "tabband", then the "location" of the tabband can be set to either "top" or "bottom"</description>
		</property>
		<property optional="true" >
			<name>flow</name>
			<type>string</type>
			<description>The flow of the panels in the navigator. Values can be "ltr" (left to right), "rtl" (right to left), "ttb" (top to bottom) or "btt" (bottom to top). The default is "ltr".</description>
		</property>
		<property optional="true" >
			<name>loopNavigate</name>
			<type>boolean</type>
			<description>In the "carousel" type of panel navigator, whether or not to allow user navigation from the last panel directly to the first and from the first directly to the last. The default is false.</description>
		</property>
		<property optional="true" >
			<name>initialPanel</name>
			<types><type>string</type><type>number</type></types>
			<description>The name or index of the initial panel to display. If not defined then the first "shown" panel will be visible.</description>
		</property>
		<property optional="true" >
			<name>placeholderHTML</name>
			<type>string</type>
			<description>If the panel navigator is created dynamically the placeholder HTML to use until it has been created. This can be used to display a waiting message while the panel is being rendered.</description>
		</property>
		<property optional="true" >
			<name>className</name>
			<type>string</type>
			<description>The class name to put on the panel navigator.</description>
		</property>
		<property optional="true" >
			<name>header</name>
			<type>object</type>
			<description>The panel header settings.</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the panel header.The default value is false if the HTML is blank, and true if it is not.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to put in the panel header. The placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout) will be automatically replaced.</description>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the panel header.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the panel header.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>body</name>
			<type>object</type>
			<description>The panel body settings.</description>
			<properties>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the panel body.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the panel body.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>footer</name>
			<type>object</type>
			<description>The panel footer settings.</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the panel footer.The default value is false if the HTML is blank, and true if it is not.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to put in the panel footer. The placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout) will be automatically replaced.</description>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the panel footer.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the panel footer.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>overlay</name>
			<type>object</type>
			<description>The panel overlay settings. The panel overlay is for HTML elements to be absolutely positioned over the panel (such as floating buttons).</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the panel overlay.The default value is false if the HTML is blank, and true if it is not.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to put in the panel overlay. The placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout) will be automatically replaced.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>indicator</name>
			<type>object</type>
			<description>Panel indicator settings (set of dots for each panel in the navigator with the active one highlighted).</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the indicator. The default value is false.</description>
				</property>
				<property optional="true" >
					<name>location</name>
					<type>string</type>
					<description>The location of the indicator. Values can be "auto", "top", "bottom", "left" or "right". The "auto" location will put the indicator on the bottom if thee flow is "ltr" or "rtl" and on the right if the flow is "ttb" or btt".  The default is "bottom".</description>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on indicator element.</description>
				</property>
				<property optional="true" >
					<name>panelClassName</name>
					<type>string</type>
					<description>The class name to put on each dot in indicator element.</description>
				</property>
				<property optional="true" >
					<name>panelSelectedClassName</name>
					<type>string</type>
					<description>The class name to put on the active panel dot in indicator element.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>controls</name>
			<type>object</type>
			<description>Navigation control bindings.</description>
			<properties>
				<property optional="true" >
					<name>prev</name>
					<type>object</type>
					<description>A previous panel button.</description>
					<properties>
						<property optional="true" >
							<name>has</name>
							<type>boolean</type>
							<description>Whether or not the panel navigator has a previous panel button. The default value is false.</description>
						</property>
						<property optional="true" >
							<name>id</name>
							<type>string</type>
							<description>The ID of the button element (which must already be in the DOM). The default is "{panel.id}.CTRL.PREV".</description>
						</property>
						<property optional="true" >
							<name>settings</name>
							<type>object</type>
							<description>The button settings.</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>next</name>
					<type>object</type>
					<description>A next panel button.</description>
					<properties>
						<property optional="true" >
							<name>has</name>
							<type>boolean</type>
							<description>Whether or not the panel navigator has a next panel button. The default value is false.</description>
						</property>
						<property optional="true" >
							<name>id</name>
							<type>string</type>
							<description>The ID of the button element (which must already be in the DOM). The default is "{panel.id}.CTRL.NEXT".</description>
						</property>
						<property optional="true" >
							<name>settings</name>
							<type>object</type>
							<description>The button settings.</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>back</name>
					<type>object</type>
					<description>A history back panel button.</description>
					<properties>
						<property optional="true" >
							<name>has</name>
							<type>boolean</type>
							<description>Whether or not the panel navigator has a history back panel button. The default value is false.</description>
						</property>
						<property optional="true" >
							<name>id</name>
							<type>string</type>
							<description>The ID of the button element (which must already be in the DOM). The default is "{panel.id}.CTRL.BACK".</description>
						</property>
						<property optional="true" >
							<name>settings</name>
							<type>object</type>
							<description>The button settings.</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>forward</name>
					<type>object</type>
					<description>A history forward panel button.</description>
					<properties>
						<property optional="true" >
							<name>has</name>
							<type>boolean</type>
							<description>Whether or not the panel navigator has a history forward panel button. The default value is false.</description>
						</property>
						<property optional="true" >
							<name>id</name>
							<type>string</type>
							<description>The ID of the button element (which must already be in the DOM). The default is "{panel.id}.CTRL.FORWARD".</description>
						</property>
						<property optional="true" >
							<name>settings</name>
							<type>object</type>
							<description>The button settings.</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>panels</name>
					<type>array</type>
					<description>An array of buttons to bind to the showing of individual panels. The array should contain objects, each of which have an "id" property with the id of the button, a "panel" property with the name of the panel in the navigator, and a "settings" property with the button settings.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>animation</name>
			<type>object</type>
			<description>Navigation animation.</description>
			<properties>
				<property optional="true" >
					<name>type</name>
					<type>string</type>
					<description>The type of animation to use. Values can be "slide" (the default) , "slide-left", "slide-right", "slide-up", "slide-down", "slide-horizontal", "slide-veritcal", "fade" and "none". The "slide", "slide-horizontal" and "slide-veritcal" types will animate based on the order of panels and the flow.</description>
				</property>
				<property optional="true" >
					<name>duration</name>
					<type>number</type>
					<description>How long the animation should take in millisecond. The default is 400.</description>
				</property>
			</properties>
		</property>
		<property readonly="true" >
			<name>state</name>
			<type>object</type>
			<description>The current state of the panel navigator.</description>
			<properties>
				<property readonly="true" >
					<name>activePanel</name>
					<type>string</type>
					<description>The name of the active panel.</description>
				</property>
				<property readonly="true" >
					<name>hasPrevPanel</name>
					<type>boolean</type>
					<description>Whether or not there is a previous panel.</description>
				</property>
				<property readonly="true" >
					<name>prevPanelIndex</name>
					<type>number</type>
					<description>The index (in the panels array) of the previous panel.</description>
				</property>
				<property readonly="true" >
					<name>prevPanel</name>
					<type>string</type>
					<description>The name of the previous panel.</description>
				</property>
				<property readonly="true" >
					<name>hasNextPanel</name>
					<type>boolean</type>
					<description>Whether or not there is a next panel.</description>
				</property>
				<property readonly="true" >
					<name>nextPanelIndex</name>
					<type>number</type>
					<description>The index (in the panels array) of the next panel.</description>
				</property>
				<property readonly="true" >
					<name>nextPanel</name>
					<type>string</type>
					<description>The name of the next panel.</description>
				</property>
				<property readonly="true" >
					<name>history</name>
					<type>array</type>
					<description>The history of order or visited panels.</description>
				</property>
				<property readonly="true" >
					<name>historyIndex</name>
					<type>number</type>
					<description>The current index into the history array.</description>
				</property>
				<property readonly="true" >
					<name>hasHistoryBack</name>
					<type>boolean</type>
					<description>Whether or not there is a back panel in the history.</description>
				</property>
				<property readonly="true" >
					<name>historyBack</name>
					<type>string</type>
					<description>The name of the panel visited before the current.</description>
				</property>
				<property readonly="true" >
					<name>hasHistoryForward</name>
					<type>boolean</type>
					<description>Whether or not there is a forward panel in the history.</description>
				</property>
				<property readonly="true" >
					<name>historyForward</name>
					<type>string</type>
					<description>The name of the panel visited after the current.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>onInitialize</name>
			<type>function()</type>
			<description>Event fired when the panel is initialized. This does not necessarily mean the panel elements have been created, but rather that the class was.</description>
		</property>
		<property optional="true" >
			<name>onSize</name>
			<type>function(data)</type>
			<description>Event fired when the panel is sized.</description>
			<arguments>
				<argument>
					<name>data</name>
					<type>object</type>
					<description>The sizing data.</description>
				</argument>
				<argument>
					<name>width</name>
					<type>number</type>
					<description>The width of the panel in pixels.</description>
				</argument>
				<argument>
					<name>height</name>
					<type>number</type>
					<description>The height of the panel in pixels.</description>
				</argument>
				<argument>
					<name>changed</name>
					<type>boolean</type>
					<description>Whether the size actually changed.</description>
				</argument>
				<argument>
					<name>old</name>
					<type>object</type>
					<description>The old size of the panel.</description>
				</argument>
				<argument>
					<name>width</name>
					<type>number</type>
					<description>The old width of the panel in pixels.</description>
				</argument>
				<argument>
					<name>height</name>
					<type>number</type>
					<description>The old height of the panel in pixels.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onCreate</name>
			<type>function(element,bodyElement,headerElement,footerElement)</type>
			<description>Event fired when the panel is created.</description>
			<arguments>
				<argument>
					<name>element</name>
					<type>element</type>
					<description>The panel element.</description>
				</argument>
				<argument>
					<name>bodyElement</name>
					<type>element</type>
					<description>The panel body element.</description>
				</argument>
				<argument>
					<name>headerElement</name>
					<type>element</type>
					<description>The panel header element.</description>
				</argument>
				<argument>
					<name>footerElement</name>
					<type>element</type>
					<description>The panel footer element.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onActivate</name>
			<type>function()</type>
			<description>Event fired when the panel is activated by a parent panel navigator or layout.</description>
		</property>
		<property optional="true" >
			<name>onView</name>
			<type>function()</type>
			<description>Event fired when the panel is viewed by a parent panel navigator or layout. It should be noted that unlike the onActivate event, this event will fire regardless of the panel already being active.</description>
		</property>
		<property optional="true" >
			<name>onBeforeDestroy</name>
			<type>function()</type>
			<description>Event fired before the panel is destroyed.</description>
		</property>
		<property optional="true" >
			<name>onDestroy</name>
			<type>function()</type>
			<description>Event fired when the panel is destroyed.</description>
		</property>
		<property optional="true" >
			<name>onBeforePanelActivate</name>
			<type>function(panel,index)</type>
			<description>Event fired before a panel in the navigator is activated. Can return false to stop activation.</description>
			<arguments>
				<argument>
					<name>panel</name>
					<type>string</type>
					<description>The name of the panel being activated.</description>
				</argument>
				<argument>
					<name>index</name>
					<type>number</type>
					<description>The index of the panel being activated.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onPanelActivate</name>
			<type>function(panel,index)</type>
			<description>Event fired when a panel in the navigator is activated.</description>
			<arguments>
				<argument>
					<name>panel</name>
					<type>string</type>
					<description>The name of the panel being activated.</description>
				</argument>
				<argument>
					<name>index</name>
					<type>number</type>
					<description>The index of the panel being activated.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onPanelActivateComplete</name>
			<type>function(panel,index)</type>
			<description>Event fired when the activated panel completely in view.</description>
			<arguments>
				<argument>
					<name>panel</name>
					<type>string</type>
					<description>The name of the panel being activated.</description>
				</argument>
				<argument>
					<name>index</name>
					<type>number</type>
					<description>The index of the panel being activated.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onPanelView</name>
			<type>function(panel,index)</type>
			<description>Event fired when a panel in the navigator is viewed. It should be noted that unlike the onPanelActivate event, this event will fire regardless of the panel already being active.</description>
			<arguments>
				<argument>
					<name>panel</name>
					<type>string</type>
					<description>The name of the panel being activated.</description>
				</argument>
				<argument>
					<name>index</name>
					<type>number</type>
					<description>The index of the panel being activated.</description>
				</argument>
			</arguments>
		</property>
	</properties>
	<!--list:* Method-->
	<!--list:*index.xml-->
	<annotations>/Ref/Client_Api/A5/PanelNavigator_class/index.xml</annotations>
</page>
