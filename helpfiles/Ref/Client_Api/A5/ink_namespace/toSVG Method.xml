<page api="js" generated="true">
	<shortlink>api client api a5 ink tosvg method</shortlink>
	<topic parent="A5.ink" parentType="namespace" elementName="toSVG Method" >A5.ink.toSVG Method</topic>
	<prototype>A5.ink.toSVG(ink,settings[,attributes])</prototype>
	<arguments>
		<argument>
			<name>ink</name>
			<type>string</type>
			<description>The ink to get the SVG version of.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>Settings for the SVG.</description>
		<properties>
			<property optional="true" >
				<name>size</name>
				<type>object</type>
				<description>The size for the SVG returned.</description>
				<properties>
					<property optional="true" >
						<name>width</name>
						<types><type>string</type><type>number</type></types>
						<description>The width of the SVG. Values can be in CSS units (for example "2in"), a number of pixels, or "auto" (the default) to automatically adjust the width.</description>
					</property>
					<property optional="true" >
						<name>height</name>
						<types><type>string</type><type>number</type></types>
						<description>The height of the SVG. Values can be in CSS units (for example "2in"), a number of pixels, or "auto" (the default) to automatically adjust the height.</description>
					</property>
					<property optional="true" >
						<name>scale</name>
						<type>number</type>
						<description>Size the SVG based on a scale of the ink. A value of "0.5" will be half the size of the ink, and "2" will be twice the size.</description>
					</property>
				</properties>
			</property>
			<property optional="true" >
				<name>bounds</name>
				<types><type>string</type><type>object</type></types>
				<description>The bounds of the area to convert to SVG. The default value is "page", and will show the entire ink page. If a more specific area is needed, an object must be passed in.</description>
				<properties>
					<property>
						<name>type</name>
						<type>string</type>
						<description>The type of bonds to use. A value of "ink" will size the returned SVG to only show the boundaries of the actually drawn ink. A value of "explicit" will allow for an explicit clip area. All sizes will be in ink units.</description>
					</property>
					<property optional="true" >
						<name>margin</name>
						<type>number</type>
						<description>If the type if "ink" then a margin around the drawn ink can be specified.</description>
					</property>
					<property optional="true" >
						<name>x</name>
						<type>number</type>
						<description>The x position for an "explicit" bounds.</description>
					</property>
					<property optional="true" >
						<name>y</name>
						<type>number</type>
						<description>The y position for an "explicit" bounds.</description>
					</property>
					<property optional="true" >
						<name>width</name>
						<type>number</type>
						<description>The width for an "explicit" bounds.</description>
					</property>
					<property optional="true" >
						<name>height</name>
						<type>number</type>
						<description>The height for an "explicit" bounds.</description>
					</property>
				</properties>
			</property>
			<property optional="true" >
				<name>page</name>
				<type>object</type>
				<description>Overrides for the ink page.</description>
				<properties>
					<property optional="true" >
						<name>background</name>
						<type>boolean</type>
						<description>Whether or not to include the ink background.</description>
					</property>
					<property optional="true" >
						<name>lines</name>
						<type>boolean</type>
						<description>Whether or not to include the ink page lines.</description>
					</property>
				</properties>
			</property>
		</properties>
		</argument>
		<argument optional="true" >
			<name>attributes</name>
			<type>string</type>
			<description>Extra attributes to add to the SVG tag, for example 'class="myClass"'.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>svg</name>
			<type>string</type>
			<description>SVG string based on the ink and settings.</description>
		</return>
	</returns>
	<description> Converts an ink format string to SVG.</description>
	<example code="js">
// assume the variable "inkStr" is an ink string.
var svg = A5.ink.toSVG(inkStr,{
	size: { width: '300px' }, // make the resulting SVG 300px wide
	bounds: { type: 'ink', margin: 20 }, // only show the drawn ink with a 20 ink unit margin
	page: { lines: false } // don't render page lines
})</example>
	<annotations>/Ref/Client_Api/A5/ink_namespace/A5.ink.toSVG Method.xml</annotations>
</page>
