<page api="js">
	<shortlink>api client api recorder class</shortlink>
	<topic>A5.audio.Recorder Class</topic>
	<arguments>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>Settings for the audio recorder. This will override the initial values of the properties of the A5.audio.Recorder class.</description>
		</argument>
	</arguments>
	<description> Audio recorder class.</description>
	<properties>
		<property optional="true" >
			<name>heartbeat</name>
			<type>number</type>
			<description>Rate of heartbeat in seconds, "0" equals no heartbeat, the default in "0.25".</description>
		</property>
		<property optional="true" >
			<name>maxDuration</name>
			<type>number</type>
			<description>Maximum duration of audio recording in seconds. A value of "0" or less allow for any recording duration.</description>
		</property>
		<property optional="true" >
			<name>fidelity</name>
			<type>string</type>
			<description>Recording fidelity. Values can be "very-high", "high", "medium", "low" and "very-low". The default is "medium".</description>
		</property>
		<property optional="true" >
			<name>onStart</name>
			<type>function()</type>
			<description>Event for when recording is initiated.</description>
		</property>
		<property optional="true" >
			<name>onChange</name>
			<type>function()</type>
			<description>Event fired when audio recorder state changes.</description>
		</property>
		<property optional="true" >
			<name>onPause</name>
			<type>function()</type>
			<description>Event fired when recording is paused.</description>
		</property>
		<property optional="true" >
			<name>onResume</name>
			<type>function()</type>
			<description>Event fired when recording is resumed.</description>
		</property>
		<property optional="true" >
			<name>onMaximum</name>
			<type>function()</type>
			<description>Event fired when the recording hits the maximum duration and is paused. If you define this event, you must either use A5.audio.Recorder.save() or A5.audio.Recorder.cancel() to complete the recording. If the event is not defined, then the recording will be saved with an automatically generated name.</description>
		</property>
		<property optional="true" >
			<name>onSaved</name>
			<type>function()</type>
			<description>Event fired when the recording is done, and the file is saved.</description>
			<arguments>
				<argument readonly="true" >
					<name>src</name>
					<type>string</type>
					<description>The full source URL of the recording.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onError</name>
			<type>function()</type>
			<description>Event fired when there is an error with the recording.</description>
		</property>
		<property optional="true" >
			<name>onDone</name>
			<type>function(data)</type>
			<description>Event fired when the recording is done, regardless of if it succeeded or failed.</description>
			<arguments>
				<argument readonly="true" >
					<name>data</name>
					<type>object</type>
					<description>The data for that done event</description>
				</argument>
				<argument readonly="true" >
					<name>type</name>
					<type>string</type>
					<description>The type of done event. "cancel" if the user canceled the recording and it was not saved, "save" if the recording is saved.</description>
				</argument>
			</arguments>
		</property>
		<property readonly="true" >
			<name>state</name>
			<type>object</type>
			<description>The state of the audio player. State is updated by audio events, if you want to refresh "stale" state information use the A5.audio.Player.getState() method.</description>
			<properties>
				<property readonly="true" >
					<name>active</name>
					<type>boolean</type>
					<description>Whether recording is currently active.</description>
				</property>
				<property readonly="true" >
					<name>src</name>
					<type>string | boolean</type>
					<description>The source of the last successfully saved recording. Once an new recording is started, the value will be set to "false".</description>
				</property>
				<property readonly="true" >
					<name>recording</name>
					<type>boolean</type>
					<description>Whether recording is currently active and not paused.</description>
				</property>
				<property readonly="true" >
					<name>level</name>
					<type>number</type>
					<description>Level of recording volume between 0.0 and 1.0. Note: this is not acurate, but gives an idea of the recording.</description>
				</property>
				<property readonly="true" >
					<name>current</name>
					<type>number</type>
					<description>Current recording time in seconds.</description>
				</property>
				<property readonly="true" >
					<name>duration</name>
					<type>number</type>
					<description>Maximum allowed duration of the recording in seconds.</description>
				</property>
			</properties>
		</property>
	</properties>
	<!--list:.-->
</page>
