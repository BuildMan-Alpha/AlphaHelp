<page api="js" generated="true">
	<shortlink>api client api a5 buttonlist class</shortlink>
	<topic parent="A5" parentType="namespace" elementName="ButtonList Class" >A5.ButtonList Class</topic>
	<arguments>
		<argument>
			<name>containerId</name>
			<type>string</type>
			<description>The ID of the element the button list should be rendered in.</description>
		</argument>
		<argument>
			<name>buttons</name>
			<type>array</type>
			<description>An array of object containing the text, icon(s), state and value of each button in the button list.</description>
		<properties>
			<property>
				<name>value</name>
				<type>any</type>
				<description>The value of the button.</description>
			</property>
			<property optional="true" >
				<name>hide</name>
				<type>boolean</type>
				<description>If true then the button will not appear in the list. The default is false.</description>
			</property>
			<property optional="true" >
				<name>disabled</name>
				<type>boolean</type>
				<description>If true then the button will not appear in the list. The default is false.</description>
			</property>
			<property optional="true" >
				<name>html</name>
				<type>string</type>
				<description>The HTML to put in the button.</description>
			</property>
			<property optional="true" >
				<name>icon</name>
				<type>string</type>
				<description>The icon to put in the button. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>hoverIcon</name>
				<type>string</type>
				<description>The icon to put in the button when the user hovers over it. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>pressedIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is pressed. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>disabledIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is disabled. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>disabledSelectedIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is disabled and selected. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>tip</name>
				<type>string</type>
				<description>The TITLE attribute to put in the button that will appear as a tool tip when the user hovers over the button.</description>
			</property>
		</properties>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>The settings to use to create the button list.</description>
		</argument>
	</arguments>
	<description> Button list control.</description>
	<discussion>
<p>
The button list control creates a list of buttons that the user can select from.
Button lists can be used in much the same way as radio button or checkbox groups.
</p>
</discussion>
	<properties>
		<property>
			<name>theme</name>
			<type>string</type>
			<description>The theme to use on the button.</description>
		</property>
		<property optional="true" >
			<name>override</name>
			<type>string</type>
			<description>The overrides to use on the button.</description>
		</property>
		<property optional="true" >
			<name>inputId</name>
			<type>string</type>
			<description>The ID of the INPUT into which the value of the button list should be set every time the button list value changes.</description>
		</property>
		<property optional="true" >
			<name>multiple</name>
			<type>boolean</type>
			<description>Whether or not the button list allows multiple values to be selected.</description>
		</property>
		<property optional="true" >
			<name>separator</name>
			<type>string</type>
			<description>The separator string to use for combining multiple values when the value is being put into the INPUT specified by A5.ButtonList.inputId.</description>
		</property>
		<property optional="true" >
			<name>allowNullSelection</name>
			<types><type>boolean</type><type>string</type></types>
			<description>Whether or not to allow the button list to have a null selection. The default value of "auto" allows multi-select button lists to have null selections while single-select button lists must have a value selected. This is useful as is prevents double clicking on a button from deselecting the button in a single-select button list.</description>
		</property>
		<property optional="true" >
			<name>fill</name>
			<type>string</type>
			<description>By default no value is set. If a value of "width" is set then the buttons in the button list will grow to fill the available width. If a value of "height" is set then the buttons in the button list will grow to fill the available height.</description>
		</property>
		<property optional="true" >
			<name>disabled</name>
			<type>boolean</type>
			<description>If set to "true" then the button list will appear disabled. By default the value is false.</description>
		</property>
		<property optional="true" >
			<name>className</name>
			<type>string</type>
			<description>The class name to put on the button list container element.</description>
		</property>
		<property optional="true" >
			<name>nullSelectionClassName</name>
			<type>string</type>
			<description>The class name to put on the button list container element when no value is selected.</description>
		</property>
		<property optional="true" >
			<name>button</name>
			<type>object</type>
			<description>The settings for the individual buttons in the button list.</description>
		</property>
		<property optional="true" >
			<name>layout</name>
			<type>string</type>
			<description>The layout of the button. A value of "icon text" (the default) or  "text icon" which will layout the "icon" and "html" horizontally. A value of "icon" or "text" will only use only "icon" or "text" in the layout. A value of "icon/text" or  "text/icon" will layout the "icon" and "html" vertically. A value of "icon-text" or  "text-icon" will layout the "icon" and "html" horizontally, but align them to the left and right of the button with any additional width consumed in the center of the button. In all cases the "icon" will be automatically dropped if none is specified.</description>
		</property>
		<property optional="true" >
			<name>style</name>
			<type>string</type>
			<description>The CSS to put on the button.</description>
		</property>
		<property optional="true" >
			<name>className</name>
			<type>string</type>
			<description>The class name to put on the button.</description>
		</property>
		<property optional="true" >
			<name>firstClassName</name>
			<type>string</type>
			<description>The class name to put on the first button in the list.</description>
		</property>
		<property optional="true" >
			<name>middleClassName</name>
			<type>string</type>
			<description>The class name to put on buttons in the list that are neither the first or last.</description>
		</property>
		<property optional="true" >
			<name>lastClassName</name>
			<type>string</type>
			<description>The class name to put on the last button in the list.</description>
		</property>
		<property optional="true" >
			<name>hoverClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the user hovers over it.</description>
		</property>
		<property optional="true" >
			<name>pressedClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the user presses it.</description>
		</property>
		<property optional="true" >
			<name>selectedClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the button is selected.</description>
		</property>
		<property optional="true" >
			<name>disabledClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the button is disabled.</description>
		</property>
		<property optional="true" >
			<name>disabledSelectedClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the button is disabled and selected.</description>
		</property>
		<property optional="true" >
			<name>iconStyle</name>
			<type>string</type>
			<description>The CSS to put on the button icon.</description>
		</property>
		<property optional="true" >
			<name>iconClassName</name>
			<type>string</type>
			<description>The class name to put on the button icon.</description>
		</property>
		<property readonly="true" >
			<name>selection</name>
			<type>array</type>
			<description>The indexes of the selected buttons in the button list.</description>
		</property>
		<property readonly="true" >
			<name>value</name>
			<type>array</type>
			<description>The values of the selected buttons in the button list.</description>
		</property>
		<property optional="true" >
			<name>onSelect</name>
			<type>function</type>
			<description>The code to execute when a value is the button list is selected.</description>
		</property>
		<property optional="true" >
			<name>onClick</name>
			<type>function</type>
			<description>The code to execute when a button in the button list is clicked.</description>
		</property>
		<property optional="true" >
			<name>onBeforePopulate</name>
			<type>function(buttons)</type>
			<description>The code to execute before the button list is populated. If a value of "false" is returned then the populate will not occur.</description>
			<arguments>
				<argument>
					<name>buttons</name>
					<type>array</type>
					<description>The buttons to populate the button list with.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onPopulate</name>
			<type>function(buttons)</type>
			<description>The code to execute when the button list is populated.</description>
			<arguments>
				<argument>
					<name>buttons</name>
					<type>array</type>
					<description>The buttons in the button list.</description>
				</argument>
			</arguments>
		</property>
	</properties>
	<example code="js">
// assume that bEle is a pointer to an BUTTON element
var colorsBtnList = new A5.ButtonList('colorsButtonList',[
	{html: 'Red', value: 'red'},
	{html: 'Green', value: 'green'},
	{html: 'Blue', value: 'blue'}
],{
	theme: 'Alpha',
	inputId: 'colors'
});</example>
	<!--list:.-->
	<annotations>/Ref/Client_Api/A5/ButtonList_class/index.xml</annotations>
</page>
