<page api="js" generated="true">
	<shortlink>api client api a5 u html highlight method</shortlink>
	<topic parent="A5.u.html" parentType="namespace" elementName="highlight Method" >A5.u.html.highlight Method</topic>
	<prototypes>
		<prototype>A5.u.html.highlight(html,search[,prefix,suffix])</prototype>
		<prototype>A5.u.html.highlight(html,search,replacer)</prototype>
</prototypes>
	<arguments>
		<argument>
			<name>html</name>
			<type>string</type>
			<description>The HTML to preform the highlight on.</description>
		</argument>
		<argument>
			<name>search</name>
			<types><type>string</type><type>array</type></types>
			<description>An array of strings or single string to search for in the HTML.</description>
		</argument>
		<argument optional="true" >
			<name>prefix</name>
			<type>string</type>
			<description>The prefix to put before a search match. If no value is specified then an HTML B tag will be used.</description>
		</argument>
		<argument optional="true" >
			<name>suffix</name>
			<type>string</type>
			<description>The suffix to put after a search match. If no value is specified then an HTML B tag will be used.</description>
		</argument>
		<argument optional="true" >
			<name>replacer</name>
			<type>function</type>
			<description>A function to use to replace each match. This can be used to generate IDs for each highlight.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>html</name>
			<type>string</type>
			<description>The HTML with search results highlighted.</description>
		</return>
	</returns>
	<description> Search highlighting for text in and HTML string.</description>
	<discussion>
<p>
This method will take an arbitrary HTML string, and place prefix and suffix HTML around matches that are not in HTML tags.
</p>
</discussion>
	<example code="js"><![CDATA[
// highlight with an I tag
var html = '<a title="hello world">hello world</a>';
html = A5.u.html.highlight(html,['hello','world'],'<i>','</i>');
// html = '<a title="hello world"><i>hello</i> <i>world</i></a>'
// reset and highlight with an I tag with a dynamic ID
html = '<a title="hello world">hello world</a>';
var count = 0;
A5.u.html.highlight(html,['hello','world'],function(search,match,offset,html){
	count++;
	return '<i id="match.'+count+'">'+match+'</i>';
});
// html = '<a title="hello world"><i id="match.1">hello</i> <i id="match.2">world</i></a>']]></example>
	<annotations>/Ref/Client_Api/A5/u_namespace/html_namespace/A5.u.html.highlight Method.xml</annotations>
</page>
