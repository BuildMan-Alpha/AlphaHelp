<page build="5456" api="js" generated="true">
	<shortlink>api client api a5 u array stack method</shortlink>
	<topic parent="A5.u.array" parentType="namespace" elementName="stack Method" >A5.u.array.stack Method</topic>
	<prototype>A5.u.array.stack(array,settings)</prototype>
	<arguments>
		<argument>
			<name>array</name>
			<type>array</type>
			<description>The array to stack.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>The settings to use for stacking the array.</description>
		<properties>
			<property>
				<name>start</name>
				<type>string</type>
				<description>The property name in each array entry in which the start value is stored.</description>
			</property>
			<property optional="true" >
				<name>end</name>
				<type>string</type>
				<description>The property name in each array entry in which the end value is stored.</description>
			</property>
			<property optional="true" >
				<name>size</name>
				<type>string</type>
				<description>The property name in each array entry in which the size value is stored.</description>
				<properties>
					<property>
						<name>stack</name>
						<type>array</type>
						<description>An array of arrays stacked so that if visually presented no array entries would overlap.</description>
					</property>
				</properties>
			</property>
		</properties>
		</argument>
	</arguments>
	<description> Stack an array of object for visual presentation based on a start value and an end or size value.</description>
	<discussion>
<p>
The A5.u.object.stack method allows for the linear stacking of an array of objects so that when visually presented there will be now overlaps.
A "start" property must always be passed in, but the "end" can be automatically calcualted by passing in a "size" property (which will be added to the "start" to get the "end").
</p>
</discussion>
	<example code="js">
var d = [
	{start: 25, end: 300, color: 'red'},
	{start: 10, end: 20, color: 'blue'},
	{start: 25, end: 200, color: 'green'},
	{start: 300, end: 320, color: 'purple'},
	{start: 310, end: 340, color: 'yellow'},
	{start: 340, end: 400, color: 'red'},
	{start: 340, end: 400, color: 'purple'},
	{start: 340, end: 400, color: 'blue'},
	{start: 340, end: 400, color: 'green'}
]
var stack = A5.u.array.stack(d,{start: 'start', end: 'end'});
// stack = [
//		[{"start":10,"end":20,"color":"blue"},{"start":25,"end":300,"color":"red"},{"start":300,"end":320,"color":"purple"},{"start":340,"end":400,"color":"red"}],
//		[{"start":25,"end":200,"color":"green"},{"start":310,"end":340,"color":"yellow"},{"start":340,"end":400,"color":"purple"}],
//		[{"start":340,"end":400,"color":"blue"}],[{"start":340,"end":400,"color":"green"}]
//	]</example>
	<annotations>/Ref/Client_Api/A5/u_namespace/array_namespace/A5.u.array.stack Method.xml</annotations>
</page>
