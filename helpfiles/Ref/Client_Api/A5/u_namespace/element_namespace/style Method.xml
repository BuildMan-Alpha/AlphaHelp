<page api="js" generated="true">
	<shortlink>api client api a5 u element style method</shortlink>
	<topic parent="A5.u.element" parentType="namespace" elementName="style Method" >A5.u.element.style Method</topic>
	<prototype>A5.u.element.style(element,[css[,css[...css]]])</prototype>
	<arguments>
		<argument>
			<name>element</name>
			<types><type>element</type><type>string</type></types>
			<description>A pointer to a DOM element or the ID of an element.</description>
		</argument>
		<argument optional="true" >
			<name>css</name>
			<type>string</type>
			<description>CSS string(s).</description>
		</argument>
	</arguments>
	<description> Get and/or set the inline style of an element.</description>
	<discussion>
<p>
The A5.u.element.style() method allows for the setting of the inline style of an element.
By default the passed in CSS will overwrite all other inline CSS.
</p>
<p>
CSS can be added to the current inline style by using a "+=" prefix.
</p>
<p>
A prefix of "-=" can be used to remove specific CSS attributes and values from the current inline style.
For example, "-=color: red;" will remove the "color" attribute if the value of it is currently "red".
To remove any value a "*" can be used in the values place ("-=color: *;").
</p>
<p>
A prefix of "~=" can be used to toggle the values of specific CSS attributes.
For example, "~=color: red;" would set the "color" to "" if the value is "red", and otherwise set the value to "red".
</p>
<p>
On remove and toggle the operation is performed on each attribute as opposed to all of the attributes at once.
For example, if the inline style was "color: red;" and "~=color: red; background: green;" was passed in, the resulting inline style would be "background: green;".
</p>
<p>
Zero or more CSS values can be passed in.
Each CSS value will be preformed sequentially, allowing for multiple operations in one call.
The current inline style of the element will be returned by the A5.u.element.style() method if no CSS is passed in.
Otherwise the resulting inline style after the CSS operations are performed will be returned.
</p>
</discussion>
	<example code="js">
// assume "id" is the ID of DIV that wants to be styled
// assume the DIV has an inline style of "color: red; background-color: green;"
var css = A5.u.element.style(id);
// css = "color: red; background-color: green;"
css = A5.u.element.style(id,'+=border: 1px solid red;','-=color: *;');
// css = "background-color: green; border: 1px solid red;"</example>
	<annotations>/Ref/Client_Api/A5/u_namespace/element_namespace/A5.u.element.style Method.xml</annotations>
</page>
