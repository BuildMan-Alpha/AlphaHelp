<page api="js" generated="true">
	<shortlink>api client api a5 viewbox updatelayout method</shortlink>
	<topic parent="A5.ViewBox" parentType="class" elementName="updateLayout Method" >A5.ViewBox.updateLayout Method</topic>
	<prototype>A5.ViewBox.updateLayout(layout,setting[,keepValue[,animation]])</prototype>
	<arguments>
		<argument>
			<name>layout</name>
			<type>string</type>
			<description>The name of the layout to show in the view box.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>The settings to apply to the layout.</description>
		</argument>
		<argument optional="true" >
			<name>keepValue</name>
			<type>boolean</type>
			<description>Whether or not to keep the previous value of the view box, or reset it. This only applies if the currently shown layout is the layout being updated.</description>
		</argument>
		<argument optional="true" >
			<name>animation</name>
			<types><type>boolean</type><type>string</type><type>object</type></types>
			<description>What animation to perform. To not animate pass in false. If a string is passed in the value of the string is assumed to be the name of the animation to do. If an object is passed in it must conform to the view box animation object. See *[link:A5.ViewBox Animation Object]*. This only applies if the currently shown layout is the layout being updated.</description>
		</argument>
	</arguments>
	<description> Update a layout.</description>
	<example code="js">
// To get a pointer to the A5.ViewBox class see {dialog.object}.getControl
// assume vbObj is a pointer to an instance of the A5.ViewBox class
vbObj.updateLayout('sub1',{template: 'Hello {name}'}); // update the template of the layout named "sub1"</example>
	<annotations>/Ref/Client_Api/A5/ViewBox_class/A5.ViewBox.updateLayout Method.xml</annotations>
</page>
