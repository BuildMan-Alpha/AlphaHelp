<page api="js">
    <shortlink>js a5 form populateselect method</shortlink>
    <topic>A5.form.populateSelect Method</topic>
    <prototypes>
        <prototype>A5.form.populateSelect(eleId, curValue, data, clearExistingEntries);</prototype>
    </prototypes>
    <description>
        <p>Populates a dropdown box.</p>
    </description>
    <arguments>
        <argument>
            <name>eleId</name>
            <type>string</type>
            <description>The ID attribute of the select control.</description>
        </argument>
        <argument>
            <name>curValue</name>
            <type>string</type>
            <description>The value to show as selected when the control is populated.  If it is specified, the control will not show any "blank" or empty option.  If it is not specified (value = ""), a blank option will be shown at the bottom of the list of options.</description>
        </argument>
        <argument>
            <name>data</name>
            <type>object array</type>
            <description>The list of values used to create the option list.</description>
        </argument>
        <argument>
            <name>clearExistingEntries</name>
            <type>boolean</type>
            <description>A *[js:true]*/*[js:false]* value. If *[js:true]*, it clears any values in the select control on the page before creating the new list.  If *[js:false]*, it does not clear the list.  In most cases, *[js:clearExistingEntries]* should be set to *[js:true]*.</description>
        </argument>
    </arguments>
    <discussion>
        <p>Select boxes or dropdowns are common controls on a page.  This function allows populating a dropdown with values from a callback page.</p>
        <p>There are four required input parameters:</p>
    </discussion>
    <warning>Do not use this method to populate a dropdown box in a UX or Grid Component. Use *[link:{dialog.object}.populateDropdownBox@ux component populatedropdownbox method]* or *[link:{grid.object}.populateDropdownBox@grid component populatedropdownbox method]* instead.</warning>
    <sections>
        <section>
            <list bullet="true">
                <item>
                    <name>eleId</name>
                </item>
                <item>
                    <name>curValue</name>
                </item>
                <item>
                    <name>data</name>
                </item>
                <item>
                    <name>clearExistingEntries</name>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>'data' can be an array of single values such as:</p>
            </description>
            <example code="js"><![CDATA[['AL','MA','TX','VA'] ]]></example>
        </section>
        <section>
            <description>
                <p>When the list is created the display value and the saved value will be the same.  This would be equivalent to:</p>
            </description>
            <example code="js"><![CDATA[< select name="states">
     < option value="AL">AL</option>
    < option  value="MA">MA</option>
    < option  value="TX">TX</option>
    < option  value="VA">VA</option>
</select>]]></example>
        </section>
        <section>
            <description>
                <p>However, it is often desired to show one value, but select another.  The saved value may be a state code, but the display may be the full state name.  If the an entry in the array is itself an array, then the first value in the array will be the displayed text, and the second will be the returned value. The following array would create the equivalent select options listed below:</p>
            </description>
            <example code="js"><![CDATA[[['Alabama','AL'],['Massachusetts','MA'],['Texas','TX'],['Virginia','VA']]

< select  name="states">
    < option value="AL">Alabama< /option>
     < option value="MA">Massachusetts< /option>
    < option  value="TX">Texas< /option>
    < option  value="VA">Virginia< /option>
< /select>]]></example>
        </section>
        <section>
            <description>
                <p>The full code to set a SELECT with an ID of "Bill_State" to a VALUE of "MA" using the list of states above, and removing any old entries from the SELECT would be:</p>
            </description>
            <example code="js"><![CDATA[A5.form.populateSelect('Bill_State','MA',[['Alabama','AL'],['Massachusetts','MA'],</br>['Texas','TX'],['Virginia','VA']],true);]]></example>
        </section>
    </sections>
</page>