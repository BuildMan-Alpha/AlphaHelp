<page api="js" generated="true">
	<shortlink>api client api a5 listbox getindex method</shortlink>
	<topic parent="A5.ListBox" parentType="class" elementName="getIndex Method" >A5.ListBox.getIndex Method</topic>
	<prototypes>
		<prototype>A5.ListBox.getIndex(value)</prototype>
		<prototype>A5.ListBox.getIndex(index)</prototype>
		<prototype>A5.ListBox.getIndex(customMatch)</prototype>
</prototypes>
	<arguments>
		<argument>
			<name>value</name>
			<type>string</type>
			<description>The value of the row.</description>
		</argument>
		<argument>
			<name>index</name>
			<type>number</type>
			<description>The render index of the row.</description>
		</argument>
		<argument>
			<name>customMatch</name>
			<type>object</type>
			<description>Custom matching of rows. This is useful if the row might not be rendered because of filtering or sorting.</description>
		<properties>
			<property>
				<name>type</name>
				<type>string</type>
				<description>The type of match to perform. Values can be "index", "match", "match-first", "match-last" or "match-all".</description>
			</property>
			<property>
				<name>index</name>
				<type>number</type>
				<description>If the "type" is "index" then this is used to select an item by the index in the data or the list before sorting and filtering.</description>
			</property>
			<property>
				<name>match</name>
				<types><type>function(data,index)</type><type>object</type></types>
				<description>The function to use to match rows in the list, or an object with matching values.</description>
				<arguments>
					<argument>
						<name>data</name>
						<type>object</type>
						<description>The data of the row.</description>
					</argument>
					<argument>
						<name>index</name>
						<type>number</type>
						<description>The index in the list data of the row.</description>
					</argument>
				</arguments>
				<properties>
					<property>
						<name>index</name>
						<type>array</type>
						<description>The found index(es). This will be an array of one or more objects.</description>
					</property>
				</properties>
			</property>
		</properties>
		</argument>
	</arguments>
	<description> Get the indexes of row(s) in the list.</description>
	<discussion>
<p>
The get index method will return an array of objects for each match that is found.
Each object will have a property of "renderIndex" and "index".
The "renderIndex" is the index of the item given current list filtering and sorting. A value of -1 is returned if the item is not rendered in the list.
The "index" if the index in the data for the list before filtering and sorting. A value of -1 is returned if the item is not in the list data.
</p>
<p>
When an object is passed in, a custom match is done.
This can either be to match a given index, or to match rows with a function or object.
The types of "match" and "match-first" will return the indexes of the first match found.
The "match-last" type will return the indexes of the last match found.
The "match-all" type will return as many matching indexes as are found in the list.
</p>
<p>
Matching can be do with either a function or object.
When using a function then the function will be called with the data and index for each row.
If true is returned then the "index" and "renderIndex" for the row will be returned.
When using an object, one or more columns of data in each row can be match by the corresponding column value from the passed in object.
</p>
</discussion>
	<example code="js"><![CDATA[
// To get a pointer to the A5.ListBox class see {dialog.object}.getControl
// assume lObj is a pointer to an instance of the A5.ListBox class
var indx = lObj.getIndex('ALFKI'); // get the index for the row with a value of "ALFKI"
indx = lObj.getIndex(2); // get the index for the 3rd row currently rendered in the list
indx = lObj.getIndex({type: 'index', index: 2}); // get the index for the 3rd row in the list list data - depending on sorting and ordering, this may be different from the result of the previous getIndex
lObj.currentState = 'MA';
indx = lObj.getIndex({
	type: 'match-all',
	match: function(data,index){
		if(data.ContactName == 'Fred' && data.State == this.currentState && index < 100) return true;
		return false;
	}
}); // get all of the indexes that have a "ContactName" of "Fred", a "State" of the stored "currentState" value, and an index less then 100]]></example>
	<annotations>/Ref/Client_Api/A5/ListBox_class/A5.ListBox.getIndex Method.xml</annotations>
</page>
