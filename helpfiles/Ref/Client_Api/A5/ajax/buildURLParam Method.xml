<page api="js">
    <shortlink>js a5 ajax buildurlparam method</shortlink>
    <topic>A5.ajax.buildURLParam Method</topic>
    <prototypes>
        <prototype>A5.ajax.buildURLParam(parameter,value)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>parameter</name>
            <type>string</type>
            <description>The name of the parameter.</description>
        </argument>
        <argument>
            <name>value</name>
            <types>
                <type>A</type>
                <type>array</type>
            </types>
            <description>A single value, or an array of values</description>
        </argument>
    </arguments>
    <description>Builds a URL encoded query string that can be used when making an Ajax callback.</description>
    <discussion>
        <p>This function can be used when creating a string of data to be passed back to the server by *[js:A5.ajax.callback()]*. It ensures both the parameter name and value are URL encoded.</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[
var data = A5.ajax.buildURLParam('_name','Alpha&Beta');
//returns _name=Alpha%26Beta
/*
If you want multiple name/value pairs, the following pattern is often used
*/
var arr = [];
arr.push( A5.ajax.buildURLParam('_name1','Alpha&Beta') );
arr.push( A5.ajax.buildURLParam('_name2','Alpha Beta') );
arr.push( A5.ajax.buildURLParam('_name3','Alpha+Beta') );
var queryString = arr.join('&');]]></example>
        </section>
        <section>
            <description>The *[js:value]* can either be a single value:</description>
            <example code="js"><![CDATA[A5.ajax.buildURLParam('value','my&text');
/* returns: 'value=my%26text'*/]]></example>
        </section>
        <section>
            <description>
                <p>or an array of value:</p>
            </description>
            <example code="js"><![CDATA[A5.ajax.buildURLParam('value','my&text');
/* returns: 'value=my%26text'*/]]></example>
        </section>
    </sections>
    <see>
        <ref link="ux component ajaxcallback method">{dialog.object}.ajaxCallback()</ref>
        <ref link="grid component ajaxcallback method">{grid.object}.ajaxCallback()</ref>
    </see>
</page>