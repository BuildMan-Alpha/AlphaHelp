<page api="js" generated="true">
	<shortlink>api client api a5 buttons element method</shortlink>
	<topic parent="A5.buttons" parentType="namespace" elementName="element Method" >A5.buttons.element Method</topic>
	<prototype>A5.buttons.element(id,settings)</prototype>
	<arguments>
		<argument>
			<name>id</name>
			<type>string</type>
			<description>The ID to put on the BUTTON element.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>The settings to use to create the button.</description>
		<properties>
			<property>
				<name>theme</name>
				<type>string</type>
				<description>The theme to use on the button.</description>
			</property>
			<property optional="true" >
				<name>layout</name>
				<type>string</type>
				<description>The layout of the button. A value of "icon text" (the default) or  "text icon" which will layout the "icon" and "html" horizontally. A value of "icon" or "text" will only use only "icon" or "text" in the layout. A value of "icon/text" or  "text/icon" will layout the "icon" and "html" vertically. A value of "icon-text" or  "text-icon" will layout the "icon" and "html" horizontally, but align them to the left and right of the button with any additional width consumed in the center of the button. In all cases the "icon" will be automatically dropped if none is specified.</description>
			</property>
			<property optional="true" >
				<name>html</name>
				<type>string</type>
				<description>The HTML to put in the button.</description>
			</property>
			<property optional="true" >
				<name>icon</name>
				<type>string</type>
				<description>The icon to put in the button. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>hoverIcon</name>
				<type>string</type>
				<description>The icon to put in the button when the user hovers over it. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>pressedIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is pressed. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>disabledIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is disabled. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>tip</name>
				<type>string</type>
				<description>The TITLE attribute to put in the button that will appear as a tool tip when the user hovers over the button.</description>
			</property>
			<property optional="true" >
				<name>style</name>
				<type>string</type>
				<description>The CSS to put on the button.</description>
			</property>
			<property optional="true" >
				<name>className</name>
				<type>string</type>
				<description>The class name to put on the button.</description>
			</property>
			<property optional="true" >
				<name>hoverClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the user hovers over it.</description>
			</property>
			<property optional="true" >
				<name>pressedClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the user presses it.</description>
			</property>
			<property optional="true" >
				<name>iconStyle</name>
				<type>string</type>
				<description>The CSS to put on the button icon.</description>
			</property>
			<property optional="true" >
				<name>iconClassName</name>
				<type>string</type>
				<description>The class name to put on the button icon.</description>
			</property>
		</properties>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>button</name>
			<type>element</type>
			<description>A BUTTON element.</description>
		</return>
	</returns>
	<description> Create a BUTTTON DOM element.</description>
	<discussion>
<p>
This method will create a BUTTON element based on the passed in settings.
The passed in settings are the same as the *[link:A5.Button]* settings.
Unlike the *[link:A5.Button]* class, the A5.buttons.element method will not bind events or other javascript logic beyond basic UI interactions such as hover class name changes.
</p>
</discussion>
	<example code="js">
// assume cEle is an element into which the BUTTON wants to be added
var bEle = A5.buttons.element('saveButton',{theme: 'Alpha', html: 'Save'});
bEle.onclick = function(){
	// save code
}
cEle.appendChild(bEle);</example>
	<annotations>/Ref/Client_Api/A5/buttons_namespace/A5.buttons.element Method.xml</annotations>
</page>
