<page api="js" generated="true">
	<shortlink>api client api a5 buttons html method</shortlink>
	<topic parent="A5.buttons" parentType="namespace" elementName="html Method" >A5.buttons.html Method</topic>
	<prototype>A5.buttons.html(id,settings[,attributes[,state[,templateSafe]]])</prototype>
	<arguments>
		<argument>
			<name>id</name>
			<type>string</type>
			<description>The ID to put on the BUTTON element.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>The settings to use to create the button.</description>
		<properties>
			<property>
				<name>theme</name>
				<type>string</type>
				<description>The theme to use on the button.</description>
			</property>
			<property optional="true" >
				<name>layout</name>
				<type>string</type>
				<description>The layout of the button. A value of "icon text" (the default) or  "text icon" which will layout the "icon" and "html" horizontally. A value of "icon" or "text" will only use only "icon" or "text" in the layout. A value of "icon/text" or  "text/icon" will layout the "icon" and "html" vertically. A value of "icon-text" or  "text-icon" will layout the "icon" and "html" horizontally, but align them to the left and right of the button with any additional width consumed in the center of the button. In all cases the "icon" will be automatically dropped if none is specified.</description>
			</property>
			<property optional="true" >
				<name>html</name>
				<type>string</type>
				<description>The HTML to put in the button.</description>
			</property>
			<property optional="true" >
				<name>icon</name>
				<type>string</type>
				<description>The icon to put in the button. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>hoverIcon</name>
				<type>string</type>
				<description>The icon to put in the button when the user hovers over it. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>pressedIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is pressed. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>selectedIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is selected. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>disabledIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is disabled. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>disabledSelectedIcon</name>
				<type>string</type>
				<description>The icon to put in the button when it is disabled and selected. See *[link:A5.u.icon]*.</description>
			</property>
			<property optional="true" >
				<name>tip</name>
				<type>string</type>
				<description>The TITLE attribute to put in the button that will appear as a tool tip when the user hovers over the button.</description>
			</property>
			<property optional="true" >
				<name>style</name>
				<type>string</type>
				<description>The CSS to put on the button.</description>
			</property>
			<property optional="true" >
				<name>className</name>
				<type>string</type>
				<description>The class name to put on the button.</description>
			</property>
			<property optional="true" >
				<name>hoverClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the user hovers over it.</description>
			</property>
			<property optional="true" >
				<name>pressedClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the user presses it.</description>
			</property>
			<property optional="true" >
				<name>selectedClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the button is selected.</description>
			</property>
			<property optional="true" >
				<name>disabledClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the button is disabled.</description>
			</property>
			<property optional="true" >
				<name>disabledSelectedClassName</name>
				<type>string</type>
				<description>The class name to put on the button when the button is disabled and selected.</description>
			</property>
			<property optional="true" >
				<name>iconStyle</name>
				<type>string</type>
				<description>The CSS to put on the button icon.</description>
			</property>
			<property optional="true" >
				<name>iconClassName</name>
				<type>string</type>
				<description>The class name to put on the button icon.</description>
			</property>
		</properties>
		</argument>
		<argument optional="true" >
			<name>attributes</name>
			<type>string</type>
			<description>Any other HTML attributes that want to be included in the BUTTON tag.</description>
		</argument>
		<argument optional="true" >
			<name>state</name>
			<type>string</type>
			<description>The state the button should be in. Values can be "normal" (the default), "selected", "pressed", "disabled" or "disabled-selected".</description>
		</argument>
		<argument optional="true" >
			<name>templateSafe</name>
			<type>boolean</type>
			<description>If true then the returned HTML will be template safe. This will escape sepcial template characters (see *[link:A5.u.template]*). This only need to be done if the button is being injected into a template before the template is parsed. If the A5.buttons.html method is being called from inside a template, then it does not need to be made template safe. The default value is false.</description>
		</argument>
	</arguments>
	<returns>
		<return>
			<name>html</name>
			<type>string</type>
			<description>The resulting HTML for the given button settings.</description>
		</return>
	</returns>
	<description> Create a BUTTTON HTML string.</description>
	<discussion>
<p>
This method will create a BUTTON HTML string based on the passed in settings.
The passed in settings are the same as the *[link:A5.Button]* settings.
Unlike the *[link:A5.Button]* class, the A5.buttons.html method will not bind events or other javascript logic beyond basic UI interactions such as hover class name changes.
This method can be useful for creating themed buttons inside of a template (see *[link:A5.u.template]*).
</p>
</discussion>
	<example code="js">
// create a BUTTON tag that uses the "Alpha" theme with the text "Save" and has an attribute "a5-item" with a value of "save"
var html = A5.buttons.html('saveButton',{theme: 'Alpha', html: 'Save'},'a5-item="save"');</example>
	<annotations>/Ref/Client_Api/A5/buttons_namespace/A5.buttons.html Method.xml</annotations>
</page>
