<page>
	<topic>A5.ControlBar Class</topic>
	<arguments>
		<argument>
			<name>containerId</name>
			<type>string</type>
			<description>The ID of the element the control bar should be rendered in.</description>
		</argument>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>Settings for the control bar. This will override the initial values of the properties of the A5.ControlBar class.</description>
		</argument>
	</arguments>
	<description> Control bar.</description>
	<properties>
		<property>
			<name>theme</name>
			<type>string:optional</type>
			<description>The theme to use on the control bar.</description>
		</property>
		<property>
			<name>override</name>
			<type>string:optional</type>
			<description>The overrides to use on the control bar.</description>
		</property>
		<property>
			<name>edge</name>
			<type>string:optional</type>
			<description>The "edge" the control bar considers outside. The options are "top" (the default), "bottom", "left" and "right". Lines of the layout are laid out away from this edge. For example in a "top" edge layout, the second line would be below the first. However, on a "bottom" edge layout, the second line would be above the first.</description>
		</property>
		<property>
			<name>topClassName</name>
			<type>string:optional</type>
			<description>The class name to put on the control bar layout (main or disclosure) when the edge is "top".</description>
		</property>
		<property>
			<name>bottomClassName</name>
			<type>string:optional</type>
			<description>The class name to put on the control bar layout (main or disclosure) when the edge is "bottom".</description>
		</property>
		<property>
			<name>leftClassName</name>
			<type>string:optional</type>
			<description>The class name to put on the control bar layout (main or disclosure) when the edge is "left".</description>
		</property>
		<property>
			<name>rightClassName</name>
			<type>string:optional</type>
			<description>The class name to put on the control bar layout (main or disclosure) when the edge is "right".</description>
		</property>
		<property>
			<name>separator</name>
			<type>object:optional</type>
			<description>Separator settings.</description>
			<properties>
				<property>
					<name>horizontalClassName</name>
					<type>string:optional</type>
					<description>The class name to apply to a horizontal separator.</description>
				</property>
				<property>
					<name>verticalClassName</name>
					<type>string:optional</type>
					<description>The class name to apply to a vertical separator.</description>
				</property>
			</properties>
		</property>
		<property>
			<name>items</name>
			<type>object</type>
			<description>The definition of named items to be used in layouts. Each property in this object will be then name of the item, and must be one of these obejcts: *[link:A5.ControlBarItem HTML Object]*, *[link:A5.ControlBarItem Button Object]*, *[link:A5.ControlBarItem Button Toggle Object]*, *[link:A5.ControlBarItem Button List Object]* or *[link:A5.ControlBarItem Disclosure Button Object]*.</description>
		</property>
		<property>
			<name>actions</name>
			<type>object</type>
			<description>The definition of named actions to be used by items, or programmatically via the A5.ControlBar.action method. Each property in this object will be then name of the action, and must be a function. The function will be called with a data argument. The argument is either passed in by the A5.ControlBar.action method, or dynamically created by the item when the user interacts with. See *[link:A5.ControlBarAction Data Object]*.</description>
		</property>
		<property>
			<name>layout</name>
			<type>string|function</type>
			<description>If a string the name of the layout to use. If a function then the function should return the name of the layout to use, and will be called every time the control bar is refreshed.</description>
		</property>
		<property>
			<name>layouts</name>
			<type>object</type>
			<description>The definition of named layouts to use in the A5.ControlBar. See *[link:A5.ControlBarLayout Object]*.</description>
		</property>
		<property>
			<name>disclosure</name>
			<type>object:optional</type>
			<description>Disclosure settings.</description>
			<properties>
				<property>
					<name>animation</name>
					<type>object:optional</type>
					<description>Disclosure animation settings.</description>
					<properties>
						<property>
							<name>duration</name>
							<type>number:optional</type>
							<description>The number of milliseconds a disclosure should take to animate in or out.</description>
						</property>
						<property>
							<name>tween</name>
							<type>string:optional</type>
							<description>The CSS "tween" for a disclosure animation. The default is "ease-in-out".</description>
						</property>
					</properties>
				</property>
				<property>
					<name>coverClassName</name>
					<type>string:optional</type>
					<description>The class name to put on the element that covers the screen while the disclosure is up. This can be used to "grey out" the background.</description>
				</property>
				<property>
					<name>cover</name>
					<type>object:optional</type>
					<description>Disclosure settings for when the disclosure is shown as "cover".</description>
					<properties>
						<property>
							<name>topClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the top edge.</description>
						</property>
						<property>
							<name>bottomClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the bottom edge.</description>
						</property>
						<property>
							<name>leftClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the left edge.</description>
						</property>
						<property>
							<name>rightClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the right edge.</description>
						</property>
					</properties>
				</property>
				<property>
					<name>extend</name>
					<type>object:optional</type>
					<description>Disclosure settings for when the disclosure is shown as "extend".</description>
					<properties>
						<property>
							<name>topClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the top edge.</description>
						</property>
						<property>
							<name>bottomClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the bottom edge.</description>
						</property>
						<property>
							<name>leftClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the left edge.</description>
						</property>
						<property>
							<name>rightClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the right edge.</description>
						</property>
					</properties>
				</property>
				<property>
					<name>expand</name>
					<type>object:optional</type>
					<description>Disclosure settings for when the disclosure is shown as "expand".</description>
					<properties>
						<property>
							<name>topClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the top edge.</description>
						</property>
						<property>
							<name>bottomClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the bottom edge.</description>
						</property>
						<property>
							<name>leftClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the left edge.</description>
						</property>
						<property>
							<name>rightClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the element that clips the disclosure when the disclosure is shown from the right edge.</description>
						</property>
					</properties>
				</property>
				<property>
					<name>defaults</name>
					<type>object:optional</type>
					<description>Disclosure default settings.</description>
					<properties>
						<property>
							<name>className</name>
							<type>string:optional</type>
							<description>The class name to put on the disclosure element.</description>
						</property>
					</properties>
				</property>
			</properties>
		</property>
		<property>
			<name>disclosures</name>
			<type>object:optional</type>
			<description>The definition of named disclosures. See *[link:A5.ControlBarDisclosure Object]*.</description>
		</property>
		<property>
			<name>state</name>
			<type>object:readonly</type>
			<description>The state information for the control bar.</description>
			<properties>
				<property>
					<name>layout</name>
					<type>string:readonly</type>
					<description>The name of the current layout shown in the control bar.</description>
				</property>
				<property>
					<name>disclosure</name>
					<type>object:readonly</type>
					<description>State information for the disclosure.</description>
					<properties>
						<property>
							<name>shown</name>
							<type>boolean:readonly</type>
							<description>Whether or not a disclosure is shown.</description>
						</property>
						<property>
							<name>name</name>
							<type>string:readonly</type>
							<description>The name of the currently shown disclosure. If the disclosure being shown is a layout, the name will be the layout name prefixed with "layout:".</description>
						</property>
						<property>
							<name>type</name>
							<type>string:readonly</type>
							<description>The show type of the disclosure.</description>
						</property>
						<property>
							<name>edge</name>
							<type>string:readonly</type>
							<description>The edge the disclosure is shown from. The value will be either "top", "left", "right" or "bottom".</description>
						</property>
					</properties>
				</property>
			</properties>
		</property>
		<property>
			<name>onBeforePopulate</name>
			<type>function(data):optional</type>
			<description>Event fired before the control bar is populated. If a value of false is returned by the function the populate will not be done.</description>
			<arguments>
				<argument>
					<name>data</name>
					<type>object</type>
					<description>The data to populate the control bar with.</description>
				</argument>
			</arguments>
		</property>
		<property>
			<name>onPopulate</name>
			<type>function(data):optional</type>
			<description>Event fired when the control bar is populated.</description>
			<arguments>
				<argument>
					<name>data</name>
					<type>object</type>
					<description>The data the control bar was populated with.</description>
				</argument>
			</arguments>
		</property>
		<property>
			<name>onBeforeDraw</name>
			<type>function(path):optional</type>
			<description>Event fired before the a layout in the control bar is drawn.</description>
			<arguments>
				<argument>
					<name>path</name>
					<type>string:readonly</type>
					<description>The part of the control bar the layout is being drawn in. Values can be either "main" or "disclosure".</description>
				</argument>
			</arguments>
		</property>
		<property>
			<name>onDraw</name>
			<type>function(path,element):optional</type>
			<description>Event fired when a layout in the control bar is drawn.</description>
			<arguments>
				<argument>
					<name>path</name>
					<type>string:readonly</type>
					<description>The part of the control bar the layout was drawn in. Values can be either "main" or "disclosure".</description>
				</argument>
				<argument>
					<name>element</name>
					<type>object:readonly</type>
					<description>The DOM element of the part of the control bar the layout was drawn in.</description>
				</argument>
			</arguments>
		</property>
		<property>
			<name>onChange</name>
			<type>function(paths,values):optional</type>
			<description>Event fired when a value in the data is changed, either by user interaction with an item or by the A5.ControlBar.update method.</description>
			<arguments>
				<argument>
					<name>paths</name>
					<type>array:readonly</type>
					<description>An array of all the paths in the data that have been changed.</description>
				</argument>
				<argument>
					<name>values</name>
					<type>array:readonly</type>
					<description>An array of all the values corresponding to the paths in the data that have been changed.</description>
				</argument>
			</arguments>
		</property>
	</properties>
	<!--list:* Method-->
	<!--list:*index.xml-->
</page>
