<page>
	<topic>Item Button List Object</topic>
	<description> Definition of a button list.</description>
	<properties>
		<property>
			<name>type</name>
			<type>string:required</type>
			<description>The type of item. For a button list item the value must be "button-list".</description>
		</property>
		<property>
			<name>size</name>
			<type>string:optional</type>
			<description>The size of the item.</description>
		</property>
		<property>
			<name>autoHideDisclosure</name>
			<type>string:optional</type>
			<description>Whether or not to hide the disclosure when the button list is clicked. The default is "auto" which will close the disclosure if the disclosures autoHide property is set to true, but leave it open if it is false. A value of "always" will always hide the disclosure. A value of "never" will never hide the disclosure.</description>
		</property>
		<property>
			<name>actions</name>
			<type>object</type>
			<description>Bindings of events to named actions. The property names are those of events that occur on the item. Values are "click", "down", "up", "downhold", "contextclick", "dblclick" and "swipe". The value of these properties is then name of the action to fire when the event occurs. If an action named "back" should fire then the user clicks the item, the JSON would be "{click: 'back'}".</description>
		</property>
		<property>
			<name>settings</name>
			<type>object:optional</type>
			<description>The settings for the button.</description>
			<properties>
				<property>
					<name>theme</name>
					<type>string:optional</type>
					<description>The theme to use for the button.</description>
				</property>
				<property>
					<name>multiple</name>
					<type>boolean:optional</type>
					<description>Whether or not to allow multiple values to be selected.</description>
				</property>
				<property>
					<name>allowNullSelection</name>
					<type>boolean:optional</type>
					<description>Whether or not to allow no value to be selected.</description>
				</property>
				<property>
					<name>fill</name>
					<type>string:optional</type>
					<description>Whether the buttons should fill the width or height of the button list container. Values are "none", "width" or "height".</description>
				</property>
				<property>
					<name>className</name>
					<type>string:optional</type>
					<description>The class name to put on the element that contains the button list.</description>
				</property>
				<property>
					<name>nullSelectionClassName</name>
					<type>string:optional</type>
					<description>The class name to put on the element that contains the button list when no value is selected.</description>
				</property>
				<property>
					<name>button</name>
					<type>object:optional</type>
					<description>Settings for buttons in the button list.</description>
					<properties>
						<property>
							<name>keepPressed</name>
							<type>boolean:optional</type>
							<description>Whether or not to keep buttons pressed when they are selected.</description>
						</property>
						<property>
							<name>layout</name>
							<type>string:optional</type>
							<description>The layout of a button in the button. Values are "text", "icon", "text icon", "icon text", "text/icon", "icon/text", "text-icon" and "icon-text".</description>
						</property>
						<property>
							<name>style</name>
							<type>string:optional</type>
							<description>The inline CSS to put on a button in the list.</description>
						</property>
						<property>
							<name>className</name>
							<type>string:optional</type>
							<description>The class name to put on a button in the list.</description>
						</property>
						<property>
							<name>firstClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the first button in the list.</description>
						</property>
						<property>
							<name>lastClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the last button in the list.</description>
						</property>
						<property>
							<name>middleClassName</name>
							<type>string:optional</type>
							<description>The class name to put on any button in the list that isn't the first or last.</description>
						</property>
						<property>
							<name>hoverClassName</name>
							<type>string:optional</type>
							<description>The class name to put on a button in the list when the user hovers over it.</description>
						</property>
						<property>
							<name>pressedClassName</name>
							<type>string:optional</type>
							<description>The class name to put on a button in the list when the user presses it.</description>
						</property>
						<property>
							<name>disabledClassName</name>
							<type>string:optional</type>
							<description>The class name to put on a button in the list when it is disabled.</description>
						</property>
						<property>
							<name>iconStyle</name>
							<type>string:optional</type>
							<description>The inline CSS to put on the icon in a button in the list.</description>
						</property>
						<property>
							<name>iconClassName</name>
							<type>string:optional</type>
							<description>The class name to put on the icon in a button in the list.</description>
						</property>
					</properties>
				</property>
			</properties>
		</property>
		<property>
			<name>bind</name>
			<type>object:required</type>
			<description>Bindings for the item.</description>
			<properties>
				<property>
					<name>value</name>
					<type>string:required</type>
					<description>The path to the property in the data that the value for the button list is stored. The property must be an array if the button list supports multiple selection.</description>
				</property>
				<property>
					<name>data</name>
					<type>string:required</type>
					<description>The path to the property in the data in which the button definitions for a button list are stored. The property must be an array. If the buttons only use text layout, the data can be an array of strings which will be both the display, and value of the button in the list. Otherwise the array must contain objects that specify the "html", "icon", and "value" to use. It may also specify "iconHover", "iconPressed" and "iconDisabled". Disabling buttons can be done by setting a property named "disabled" to a value of "true". Hiding buttons can be done by setting a property of "show" to a value of "false".</description>
				</property>
				<property>
					<name>show</name>
					<type>string:optional</type>
					<description>The show expression for the item.</description>
				</property>
			</properties>
		</property>
	</properties>
	<!--list:.-->
</page>
