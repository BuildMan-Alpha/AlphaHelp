<page api="js" generated="true">
	<shortlink>api client api a5 button class</shortlink>
	<topic parent="A5" parentType="namespace" elementName="Button Class" >A5.Button Class</topic>
	<arguments>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>The settings to use to create the button.</description>
		</argument>
	</arguments>
	<description> Button control.</description>
	<discussion>
<p>
The button control is a class that can be used to bind one or more BUTTON elements in the DOM to the styling and content specified by the button control.
</p>
</discussion>
	<properties>
		<property>
			<name>theme</name>
			<type>string</type>
			<description>The theme to use on the button.</description>
		</property>
		<property optional="true" >
			<name>override</name>
			<type>string</type>
			<description>The overrides to use on the button.</description>
		</property>
		<property optional="true" >
			<name>layout</name>
			<type>string</type>
			<description>The layout of the button. A value of "icon text" (the default) or  "text icon" which will layout the "icon" and "html" horizontally. A value of "icon" or "text" will only use only "icon" or "text" in the layout. A value of "icon/text" or  "text/icon" will layout the "icon" and "html" vertically. A value of "icon-text" or  "text-icon" will layout the "icon" and "html" horizontally, but align them to the left and right of the button with any additional width consumed in the center of the button. In all cases the "icon" will be automatically dropped if none is specified.</description>
		</property>
		<property optional="true" >
			<name>html</name>
			<type>string</type>
			<description>The HTML to put in the button.</description>
		</property>
		<property optional="true" >
			<name>icon</name>
			<type>string</type>
			<description>The icon to put in the button. See *[link:A5.u.icon]*.</description>
		</property>
		<property optional="true" >
			<name>hoverIcon</name>
			<type>string</type>
			<description>The icon to put in the button when the user hovers over it. See *[link:A5.u.icon]*.</description>
		</property>
		<property optional="true" >
			<name>pressedIcon</name>
			<type>string</type>
			<description>The icon to put in the button when it is pressed. See *[link:A5.u.icon]*.</description>
		</property>
		<property optional="true" >
			<name>disabledIcon</name>
			<type>string</type>
			<description>The icon to put in the button when it is disabled. See *[link:A5.u.icon]*.</description>
		</property>
		<property optional="true" >
			<name>tip</name>
			<type>string</type>
			<description>The TITLE attribute to put in the button that will appear as a tool tip when the user hovers over the button.</description>
		</property>
		<property optional="true" >
			<name>style</name>
			<type>string</type>
			<description>The CSS to put on the button.</description>
		</property>
		<property optional="true" >
			<name>className</name>
			<type>string</type>
			<description>The class name to put on the button.</description>
		</property>
		<property optional="true" >
			<name>hoverClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the user hovers over it.</description>
		</property>
		<property optional="true" >
			<name>pressedClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the user presses it.</description>
		</property>
		<property optional="true" >
			<name>disabledClassName</name>
			<type>string</type>
			<description>The class name to put on the button when the button is disabled.</description>
		</property>
		<property optional="true" >
			<name>iconStyle</name>
			<type>string</type>
			<description>The CSS to put on the button icon.</description>
		</property>
		<property optional="true" >
			<name>iconClassName</name>
			<type>string</type>
			<description>The class name to put on the button icon.</description>
		</property>
		<property optional="true" >
			<name>badge</name>
			<type>object</type>
			<description>The settings for a button badge.</description>
			<properties>
				<property optional="true" >
					<name>location</name>
					<type>string</type>
					<description>The location of the button badge. Values can be "none" (the default), any combination of "top", "left", "right" and "bottom" separated by a "-" and optionally including a "-edge" sufix to place the badge on the edge of the button. A value of "custom" will place the badge in the button either at the end of content, or where a placeholder of "&lt;badge/&gt;" is placed.</description>
				</property>
				<property optional="true" >
					<name>text</name>
					<types><type>string</type><type>number</type><type>boolean</type></types>
					<description>The default text for the badge, or a true/false value for display of the badge without text.</description>
				</property>
				<property optional="true" >
					<name>max</name>
					<type>number</type>
					<description>If the text is a number then then maximum value to show in the badge. Any value higher then the max will be the max followed by a "+". The default is 99, so if the number 120 was set on the badge, the badge would show "99+".</description>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the badge.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The style to put on the badge.</description>
				</property>
				<property optional="true" >
					<name>offset</name>
					<type>number</type>
					<description>The offset of the badge when the location is inside the button but not custom.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>onClick</name>
			<type>function(button)</type>
			<description>The code to execute when the button is clicked. The "this" variable of the function will be the BUTTON element.</description>
			<arguments>
				<argument>
					<name>button</name>
					<type>object</type>
					<description>The button class.</description>
				</argument>
			</arguments>
		</property>
	</properties>
	<example code="js">
// assume that bEle is a pointer to an BUTTON element
var saveButton = new A5.Button({
	theme: 'Alpha',
	html: 'Save',
	onClick: function(){
		// save action
	}
});
saveButton.bind(bEle);</example>
	<!--list:.-->
	<annotations>/Ref/Client_Api/A5/Button_class/index.xml</annotations>
</page>
