<page api="js" generated="true">
	<shortlink>api client api a5 panelcard class</shortlink>
	<topic parent="A5" parentType="namespace" elementName="PanelCard Class" >A5.PanelCard Class</topic>
	<arguments>
		<argument>
			<name>settings</name>
			<type>object</type>
			<description>Settings for the panel card. This will override the initial values of the properties of the A5.PanelCard class.</description>
		</argument>
	</arguments>
	<description> Panel card.</description>
	<properties>
		<property optional="true" >
			<name>theme</name>
			<type>string</type>
			<description>The theme to use on the panel card.</description>
		</property>
		<property optional="true" >
			<name>override</name>
			<type>string</type>
			<description>The overrides to use on the panel card.</description>
		</property>
		<property optional="true" >
			<name>renderMode</name>
			<type>string</type>
			<description>If the panel card is in a navigator or layout, renderMode controls when the panel card is created. A blank value (the default) will create the panel automatically when the parent is created. A value of "auto-create" will create the panel when it becomes. A value of "auto-create-destroy" will do the same, but also destroy it when it is hidden.</description>
		</property>
		<property optional="true" >
			<name>placeholderHTML</name>
			<type>string</type>
			<description>If the panel card is created dynamically the placeholder HTML to use until it has been created. This can be used to display a waiting message while the panel is being rendered.</description>
		</property>
		<property optional="true" >
			<name>className</name>
			<type>string</type>
			<description>The class name to put on the panel card.</description>
		</property>
		<property optional="true" >
			<name>header</name>
			<type>object</type>
			<description>The panel header settings.</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the panel header.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to put in the panel header. The placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout) will be automatically replaced.</description>
				</property>
				<property optional="true" >
					<name>scroll</name>
					<types><type>boolean</type><type>object</type></types>
					<description>Scroll settings for the panel header. By default the value is set to scroll on both axes. A value of false can be used to preventing the body from scrolling.</description>
					<properties>
						<property optional="true" >
							<name>axis</name>
							<type>string</type>
							<description>The axis to allow scrolling on. Values can be "x", "y" or "both".</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the panel header.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the panel header.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>body</name>
			<type>object</type>
			<description>The panel body settings.</description>
			<properties>
				<property>
					<name>content</name>
					<type>object</type>
					<description>The panel body content settings. Defines where the contents on the panel body come from. Any injected HTML can use the placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout).</description>
					<properties>
						<property>
							<name>type</name>
							<type>string</type>
							<description>The type of contents in the panel body. Values can be "html", "callback" and "url". A type of "html" will fill the panel body with the supplied html. A type of "callback" will perform a callback and fill in the panel body with the response text. A type of "url" will create the panel body as an IFRAME, and set the url of the IFRAME to the specified url.</description>
						</property>
						<property optional="true" >
							<name>src</name>
							<types><type>string</type><type>function</type></types>
							<description>If the type is "callback" or "url", then "src" is the source of the content. If "src" is a function, then it will be called to retrieve the value when the panel card is created.</description>
						</property>
						<property optional="true" >
							<name>data</name>
							<types><type>string</type><type>function</type></types>
							<description>If the type is "html" then "data" is the html to inject in the panel body. If the type is "callback" or "url", then "data" is the data to append to the "src". If "data" is a function, then it will be called to retrieve the value when the panel card is created.</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>scroll</name>
					<types><type>boolean</type><type>object</type></types>
					<description>Scroll settings for the panel footer. By default the value is false - preventing the footer from scrolling.</description>
					<properties>
						<property optional="true" >
							<name>axis</name>
							<type>string</type>
							<description>The axis to allow scrolling on. Values can be "x", "y" or "both".</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the panel body.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the panel body.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>footer</name>
			<type>object</type>
			<description>The panel footer settings.</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the panel footer.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to put in the panel footer. The placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout) will be automatically replaced.</description>
				</property>
				<property optional="true" >
					<name>scroll</name>
					<types><type>boolean</type><type>object</type></types>
					<description>Scroll settings for the panel footer. By default the value is false - preventing the footer from scrolling.</description>
					<properties>
						<property optional="true" >
							<name>axis</name>
							<type>string</type>
							<description>The axis to allow scrolling on. Values can be "x", "y" or "both".</description>
						</property>
					</properties>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the panel footer.</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the panel footer.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>overlay</name>
			<type>object</type>
			<description>The panel overlay settings. The panel overlay is for HTML elements to be absolutely positioned over the panel (such as floating buttons).</description>
			<properties>
				<property optional="true" >
					<name>show</name>
					<type>boolean</type>
					<description>Whether or not to show the panel overlay.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to put in the panel overlay. The placeholders "{panel.id}" (the ID of the panel), "{panel.name}" (the name of the panel if it is in a panel navigator or layout) and "{panel.title}" (the title of the panel if it is in a panel navigator or layout) will be automatically replaced.</description>
				</property>
			</properties>
		</property>
		<property optional="true" >
			<name>onInitialize</name>
			<type>function()</type>
			<description>Event fired when the panel is initialized. This does not necessarily mean the panel elements have been created, but rather that the class was.</description>
		</property>
		<property optional="true" >
			<name>onSize</name>
			<type>function(data)</type>
			<description>Event fired when the panel is sized.</description>
			<arguments>
				<argument>
					<name>data</name>
					<type>object</type>
					<description>The sizing data.</description>
				</argument>
				<argument>
					<name>width</name>
					<type>number</type>
					<description>The width of the panel in pixels.</description>
				</argument>
				<argument>
					<name>height</name>
					<type>number</type>
					<description>The height of the panel in pixels.</description>
				</argument>
				<argument>
					<name>changed</name>
					<type>boolean</type>
					<description>Whether the size actually changed.</description>
				</argument>
				<argument>
					<name>old</name>
					<type>object</type>
					<description>The old size of the panel.</description>
				</argument>
				<argument>
					<name>width</name>
					<type>number</type>
					<description>The old width of the panel in pixels.</description>
				</argument>
				<argument>
					<name>height</name>
					<type>number</type>
					<description>The old height of the panel in pixels.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onCreate</name>
			<type>function(element,bodyElement,headerElement,footerElement)</type>
			<description>Event fired when the panel is created.</description>
			<arguments>
				<argument>
					<name>element</name>
					<type>element</type>
					<description>The panel element.</description>
				</argument>
				<argument>
					<name>bodyElement</name>
					<type>element</type>
					<description>The panel body element.</description>
				</argument>
				<argument>
					<name>headerElement</name>
					<type>element</type>
					<description>The panel header element.</description>
				</argument>
				<argument>
					<name>footerElement</name>
					<type>element</type>
					<description>The panel footer element.</description>
				</argument>
			</arguments>
		</property>
		<property optional="true" >
			<name>onBeforeDestroy</name>
			<type>function()</type>
			<description>Event fired before the panel is destroyed.</description>
		</property>
		<property optional="true" >
			<name>onDestroy</name>
			<type>function()</type>
			<description>Event fired when the panel is destroyed.</description>
		</property>
	</properties>
	<!--list:.-->
</page>
