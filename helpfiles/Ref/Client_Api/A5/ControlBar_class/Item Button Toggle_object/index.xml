<page api="js" generated="true">
	<shortlink>api client api a5 controlbar item button toggle object</shortlink>
	<topic>Item Button Toggle Object</topic>
	<description> Definition of a toggle button.</description>
	<properties>
		<property>
			<name>type</name>
			<type>string</type>
			<description>The type of item. For a toggle button item the value must be "button-toggle".</description>
		</property>
		<property optional="true" >
			<name>size</name>
			<type>string</type>
			<description>The size of the item.</description>
		</property>
		<property optional="true" >
			<name>autoHideDisclosure</name>
			<type>string</type>
			<description>Whether or not to hide the disclosure when the toggle button is clicked. The default is "auto" which will close the disclosure if the A5.ControlBar.showDisclosure methods settings autoHide property is set to true, but leave it open if it is false. A value of "always" will always hide the disclosure. A value of "never" will never hide the disclosure.</description>
		</property>
		<property>
			<name>actions</name>
			<type>object</type>
			<description>Bindings of events to named actions. The property names are those of events that occur on the item. Values are "click", "down", "up", "downhold", "contextclick", "dblclick" and "swipe". The value of these properties is then name of the action to fire when the event occurs. If an action named "back" should fire then the user clicks the item, the JSON would be "{click: 'back'}".</description>
		</property>
		<property optional="true" >
			<name>settings</name>
			<type>object</type>
			<description>The settings for the toggle button.</description>
			<properties>
				<property optional="true" >
					<name>theme</name>
					<type>string</type>
					<description>The theme to use for the toggle button.</description>
				</property>
				<property optional="true" >
					<name>type</name>
					<type>string</type>
					<description>The type of toggle button. The default is "two-state", "multi-state" can be used for a multiple state button.</description>
				</property>
				<property optional="true" >
					<name>keepPressed</name>
					<type>boolean</type>
					<description>Whether or not to keep a two-state button pressed when the value of it is true.</description>
				</property>
				<property optional="true" >
					<name>layout</name>
					<type>string</type>
					<description>The layout of the toggle button. Values are "text", "icon", "text icon", "icon text", "text/icon", "icon/text", "text-icon" and "icon-text".</description>
				</property>
				<property optional="true" >
					<name>style</name>
					<type>string</type>
					<description>The inline CSS to put on the toggle button.</description>
				</property>
				<property optional="true" >
					<name>className</name>
					<type>string</type>
					<description>The class name to put on the toggle button.</description>
				</property>
				<property optional="true" >
					<name>hoverClassName</name>
					<type>string</type>
					<description>The class name to put on the toggle button when the user hovers over it.</description>
				</property>
				<property optional="true" >
					<name>pressedClassName</name>
					<type>string</type>
					<description>The class name to put on the toggle button when the user presses it.</description>
				</property>
				<property optional="true" >
					<name>disabledClassName</name>
					<type>string</type>
					<description>The class name to put on the toggle button when it is disabled.</description>
				</property>
				<property optional="true" >
					<name>iconStyle</name>
					<type>string</type>
					<description>The inline CSS to put on the icon in the toggle button.</description>
				</property>
				<property optional="true" >
					<name>iconClassName</name>
					<type>string</type>
					<description>The class name to put on the icon in the toggle button.</description>
				</property>
				<property optional="true" >
					<name>html</name>
					<type>string</type>
					<description>The HTML to use in the toggle button. Can contain template syntax that references control bar data. If there is a value in the data named "customer", it can be accessed by putting "{customer}" into the HTML.</description>
				</property>
				<property optional="true" >
					<name>icon</name>
					<type>string</type>
					<description>The icon to use in the toggle button.</description>
				</property>
				<property optional="true" >
					<name>hoverIcon</name>
					<type>string</type>
					<description>The icon to use in the toggle button when the user hovers over it.</description>
				</property>
				<property optional="true" >
					<name>pressedIcon</name>
					<type>string</type>
					<description>The icon to use in the toggle button when the user presses it.</description>
				</property>
				<property optional="true" >
					<name>disabledIcon</name>
					<type>string</type>
					<description>The icon to use in the toggle button when it is disabled.</description>
				</property>
			</properties>
		</property>
		<property>
			<name>bind</name>
			<type>object</type>
			<description>Bindings for the item.</description>
			<properties>
				<property>
					<name>value</name>
					<type>string</type>
					<description>The path to the property in the data that the value for the toggle button is stored. When the toggle button is two-state, the value will be a boolean, for multi-state it will be a number index into the data array.</description>
				</property>
				<property optional="true" >
					<name>data</name>
					<type>string</type>
					<description>The path to the property in the data in which the button definitions for a multi-state button are stored. The property must be an array of objects with each object containing the settings to display in the button (html, icon, hoverIcon, etc.).</description>
				</property>
				<property optional="true" >
					<name>show</name>
					<type>string</type>
					<description>The show expression for the item.</description>
				</property>
				<property optional="true" >
					<name>disabled</name>
					<type>string</type>
					<description>The disabled expression for the item.</description>
				</property>
			</properties>
		</property>
	</properties>
	<!--list:.-->
</page>
