<page api="js" build="5007">
    <shortlink>ux component setclean method</shortlink>
    <topic>{dialog.object}.setClean Method</topic>
    <description>Set the UX Component's data modified state to "clean".</description>
    <prototypes>
        <prototype>{dialog.object}.setClean([flagSetDataClean]);</prototype>
    </prototypes>
    <arguments>
        <argument optional="true">
            <name>flagSetDataClean</name>
            <type>boolean</type>
            <description>Default = false. If true, controls in the UX Component that are data bound will be set to clean.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:setClean()]* method can be used to mark the UX Component as "clean" or unmodified.</p>
        <p>The method takes an optional parameter, *[js:flagSetDataClean]*. Modified controls in the UX Component are tracked using two separate variables: _isDirty and _isDataDirty. _isDirty will be false if no control on the UX Component has been modified. _isDataDirty will only be false if no data bound controls have been modified. The *[js:flagSetDataClean]* parameter can be used to set the _isDataDirty variable to false, indicating that data bound controls are clean.</p>
        <p>See [setDirty()] for more information.</p>
    </discussion>
    <example code="js"><![CDATA[{dialog.object}.setClean();]]></example>
    <links>
        <link link="ux component setdirty method">setDirty()</link>
    </links>
    <see>
        <ref link="ux component setdirty method">{dialog.object}.setDirty()</ref>
        <ref link="ux%20components%20data%20binding">Data Binding</ref>
    </see>
</page>