<page api="js" build="3922">
    <shortlink>ux component getdatevalue method</shortlink>
    <topic>{dialog.object}.getDateValue Method</topic>
    <description>
        <p>Get the valuel of a control in the UX Component as a JavaScript Date object.</p>
    </description>
    <prototypes>
        <prototype>var d = {dialog.object}.getDateValue(ControlId);</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>ControlId</name>
            <type>string</type>
            <description>The name of the control to get the value and return as a date object.</description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>d</name>
            <types>
                <type>Date</type>
            </types>
            <description>Returns the value of the specified control parsed as a date object.</description>
        </return>
    </returns>
    <discussion>
        <p>When you use the *[js:.getValue()]* method to retrieve the value of any control, a string is returned, regardless of the control's defined data type. In the case of numeric and logical types, casting the value to the required Javascript type is easy (using the *[js:$u.s.toNum()]* or *[js:$u.s.toBool()]*) functions, but casting to a date value is harder because the data value has to be parsed. The *[js:.getDateValue()]* method can be used to get the value from a control in the UX Component as a JavaScript Date object.</p>
        <p>For example:</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[function setShipDate() {
    var orderDate = {dialog.object}.getDateValue('orderDate');

    var shipDate = orderDate.addTime('week',1);
    {dialog.object}.setValue('shipDate', shipDate.toFormat("MM/dd/yyyy"));
}]]></example>
        </section>
        <section>
            <description>
                <p>The date string in the control is parsed into a date object using the client-side date and time format defined in the UX component.</p>
            </description>
        </section>
    </sections>
    <see>
        <ref link="corejs date functions">Date Functions</ref>
    </see>
</page>