<page api="js">
    <shortlink>ux component debuginfotofile method</shortlink>
    <topic>{dialog.object}.debugInfoToFile Method</topic>
    <prototype>{dialog.object}.debugInfoToFile(data, filename [, append [, silent]]);</prototype>
    <arguments>
        <argument>
            <name>data</name>
            <type>A</type>
            <description>The data you want to write to the file. If the data is an Object, you must serialize it using *[js:JSON.stringify()]*</description>
        </argument>
        <argument>
            <name>filename</name>
            <type>string</type>
            <description>The fully qualified filename on the server where the data should be written</description>
        </argument>
        <argument optional="true">
            <name>append</name>
            <type>boolean</type>
            <description>Defaults to false. If true, the data are appended to the end of an existing file</description>
        </argument>
        <argument optional="true">
            <name>silent</name>
            <type>boolean</type>
            <description>Defaults to false. If true, the confirmation message is suppressed.</description>
        </argument>
    </arguments>
    <description>Writes client-side data to a file on the server.</description>
    <discussion>
        <p> This method is useful when debugging an application and you want to examine some client-side data. While you can typically use Alerts in client side code to examine data, or in some case use *[js:console.log()]* commands (not always possible when the app is running on a mobile device), this method allows you to write client side data to a file on the server.</p>
        <p>In cases where you do not have permission to write to server files (e.g. when running under IIS or on the Alpha Cloud), the companion [{dialog.object}.debugInfoToS3()] method can be used to write to a file on an S3 bucket.</p>
    </discussion>
    <example code="js"><![CDATA[var list = {dialog.object}.getControl('list1');
var data = JSON.stringify(list._data,'','\t');
var filename = 'c:\\debuginfo\\file1.txt';
{dialog.object}.debugInfoToFile(data,filename,true,false);]]></example>
    <links>
        <link link="ux component debuginfotos3 method">{dialog.object}.debugInfoToS3()</link>
    </links>
    <see>
        <ref link="ux component debuginfotos3 method">{dialog.object}.debugInfoToS3 Method</ref>
    </see>
    <terms>javascript functions</terms>
</page>