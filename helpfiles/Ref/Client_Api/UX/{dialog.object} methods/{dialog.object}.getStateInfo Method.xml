<page api="js">
   <shortlink>ux component getStateInfo Method</shortlink>
   <topic>{dialog.object}.getStateInfo Method</topic>
 
   <description>Get all of the state variable information for the UX component.</description>
  
   <syntax>{dialog.object}.getStateInfo();</syntax>
  <returns>
      <return>
          <name>stateData</name>
          <types>
              <type>string</type>
          </types>
          <description>Returns an &amp; delimited list of name-value pairs.</description>
      </return>
  </returns>
  <discussion>Gets the data from the UX Component's 'state' object in the form of a string of name value pairs, delimited with &amp; characters.</discussion>  
  <sections>
    <section>
      <tip>
          <p>If you want to read a value from the state object, you do NOT need to use this method. The value can be read directly from the state object. See example below.</p>
      </tip>
    </section>
    <section>
      <title>Example</title>
      <description>Get the state info as a string of name value pairs</description>
      <example><![CDATA[var stateData = {dialog.object}.getStateInfo();]]></example>
      
      
    </section>
    <section>
     
      <description>Read the 'myvar1' property from the state info object</description>
      <example><![CDATA[var x = {dialog.object}.stateInfo['myvar1'];]]></example>
      
      
    </section>
    <section>
   
      <description>You can also set a property in the state info object directly using the *[js:{dialog.object}.stateInfo]* object. For example:</description>
      <example><![CDATA[{dialog.object}.stateInfo['myvar1'] = 'alpha';]]></example>
      <important>
          <p>Property names in the state object are case sensitive and must match the case used to define them exactly.</p>
      </important>
      
      
    </section>
    
  </sections>
  
  
   <see>
      <ref link="Dialog Component">{dialog.object}</ref>
      <ref link="server grid ux and custom components storing state information">How to Preserve State Information</ref>
   </see>


<terms>ux component,forms,object,set,string,text</terms>

</page> 
