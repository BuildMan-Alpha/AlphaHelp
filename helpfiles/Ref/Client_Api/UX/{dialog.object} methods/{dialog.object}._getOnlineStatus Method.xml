<page api="js">
    <shortlink>ux component _getOnlineStatus Method</shortlink>
    <topic>{dialog.object}._getOnlineStatus Method</topic>
    <description>Returns true if the device has an internet connection. Returns false if there is no connection.</description>
    <syntax>{dialog.Object}._getOnlineStatus()</syntax>
    <sections>
        <section>
            <example code="js">
                <![CDATA[var flag = {dialog.Object}._getOnlineStatus();]]>
            </example>
        </section>
        <section>
            <note>The *[js:onConnectionChange]* client-side event fires when the connection state changes.</note>
        </section>
        <section>
            <description>
                <p>For testing how your component will behave when it is offline, you can simulate an offline condition and force the ._getOnlineStatus() method to return false even when you do have a connection by calling the *[js:{dialog.object}._setSimulatedOnlineStatus('off');]* method.</p>
            </description>
            <note>*[(Android only)]* If you are building a PhoneGap application, be sure to include the 'Network Information' plugin in the 'Required PhoneGap Core Plugins' section in the PhoneGap Build Project Settings or else this method may always return true, regardless of the actual network status.</note>
        </section>
    </sections>
    <see>
        <ref link="Dialog Component">{dialog.Object}</ref>
        <ref link="ux component serverIsAvailable Method">{dialog.object}.serverIsAvailable Method</ref>
        <ref link="ux component _setSimulatedOnlineStatus Method">{dialog.object}._setSimulatedOnlineStatus Method</ref>
        <ref link="ux component onconnectionchange client event">onConnectionChange Event</ref>
    </see>
    <terms>ux component,mobile app,testing,simulation,offline application,disconnected,javascript functions</terms>
</page> 