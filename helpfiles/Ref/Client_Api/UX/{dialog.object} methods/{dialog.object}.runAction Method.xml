<page api="js">
   <shortlink>ux component runAction Method</shortlink>
   <topic>{dialog.object}.runAction Method</topic>

   <description>Runs an action that was defined using the Action Script builder.</description>

   <syntax>{dialog.object}.runAction(actionName [, ele]);</syntax>
   <arguments>
        <argument>
            <name>actionName</name>
            <description>The action to run.</description>
        </argument>   
        <argument>
            <name>ele</name>
            <description>Optional. A pointer to a DOM element. This is only required if the action performs a task that is relative to other controls in the component, such as opening a window in a dropdown or positioned relative to another object.</description>
        </argument>   
   </arguments>
   <discussion>
        <p>Runs an action that was defined using the Action javascript builder. You can optionally pass in a pointer to the object that invokes the action.</p>
        <p>Passing in a pointer to the element that invokes the action is necessary when the action you are running opens a 'dropdown' window or a window positioned relative to an object.</p>
    </discussion>
    <sections>
        <section>
            <title>Running an Action</title>
            <description>To run an action, simply call *[js:{dialog.object}.runAction]* with the name of the action to execute.</description>
            <example><![CDATA[{dialog.object}.runAction('report1');]]></example>
        </section>
        <section>
            <title>Passing in a Pointer to an Element</title>
            <description>Some actions, such as opening a window in a dropdown or a window that is positioned relative to another control, require additional information provided by passing an element to the *[js:{dialog.object}.runAction]* method. You can pass the *[js:this]* pointer to the method to accomplish the task:</description>
            <example><![CDATA[{dialog.object}.runAction('openUX',this);]]></example>
        </section>
        <section>
            <description>You can also pass in a different element in your component. For example, suppose you wanted the popup window to appear relative to a List control when the action is invoked:</description>
            <example><![CDATA[//Get a pointer to the list control
var ele = {dialog.object}.getPointer('LIST1');

// Run the action
{dialog.object}.runAction('openUX', ele);]]></example>
        </section>
    </sections>  
  
   <see>
      <ref link="Dialog Component">{dialog.object}</ref>
   </see>

<terms>ux component,script,javascript functions</terms>


</page> 
