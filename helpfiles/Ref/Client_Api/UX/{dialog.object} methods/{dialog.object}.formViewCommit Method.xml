<page api="js">
    <shortlink>ux component formViewCommit Method</shortlink>
    <topic>{dialog.object}.formViewCommit Method</topic>
    <description>Commits the data in the FormView control back to the data source.</description>
    <prototypes>
        <prototype>{dialog.Object}.formViewCommit(UXformViewControlId)</prototype>
        <prototype build="4130">{dialog.Object}.formViewCommit(UXformViewControlId, flagOnlyCommitDirtyFields)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>UXformViewControlId</name>
            <type>string</type>
            <description>FormView control's ID.</description>
        </argument>
        <argument optional="true" build="4130">
            <name>flagOnlyCommitDirtyFields</name>
            <type>boolean</type>
            <description>Default = false. Flags whether all fields or only dirty fields should be committed. Only applies to a FormView control with a List control data source.</description>
        </argument>
    </arguments>
    <sections>
        <section>
            <example><![CDATA[var result = {dialog.object}.formViewValidate("form1");
if(result){
    {dialog.object}.formViewCommit("form1");
    {dialog.object}.formViewRefresh("form1");
}]]></example>
        </section>
        <section build="4130">
            <description>If a FormView is based on a List control data source, the commit action can be changed to only submit data that has been changed. To only commit dirty fields back to the List control from the FormView, set the optional *[js:flagOnlyCommitDirtyFields]* parameter to *[js:true]*:</description>
            <example><![CDATA[var flagOnlyCommitDirtyFields = true;
{dialog.object}.formViewCommit('{form.id}',flagOnlyCommitDirtyFields);]]></example>
        </section>
    </sections>
    <see>
        <ref link="Dialog Component">{dialog.object}</ref>
    </see>

    <terms>ux component,formview control, mobile forms</terms>
</page> 