<page api="js" build="4770">
    <shortlink>ux component populateexpandingmenucontrol method</shortlink>
    <topic>{dialog.object}.populateExpandingMenuControl Method</topic>
    <description>
        <p>Populates an Expanding Menu control.</p>
    </description>
    <prototypes>
        <prototype>{dialog.object}.populateExpandingMenuControl(id, data)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>id</name>
            <type>string</type>
            <description>Id for the Expanding Menu control.</description>
        </argument>
        <argument>
            <name>data</name>
            <type>JSON</type>
            <description>JSON data to repopulate the control.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:{dialog.object}.populateExpandingMenuControl()]* method can be used to repopulate an [Expanding Menu Control].</p>
    </discussion>
    <example code="js"><![CDATA[var obj = {dialog.object}.getControl('EXPANDINGMENU1');
var data = {
    items:[
        {
            html: 'Category 1', 
            value: 'category1',
            icon: 'svgIcon=#alpha-icon-addCircleBorder:icon,24',
            action: '',
            children: [
                {
                    html: 'Action 1', 
                    value: 'action1',
                    action: 'action:1',
                    icon: 'svgIcon=#alpha-icon-bandAidCrossed:icon,24'
                },
                {
                    html: 'Action 2', 
                    value: 'action2',
                    action: 'action:2',
                    icon: 'svgIcon=#alpha-icon-bellRing:icon,24'
                }
            ]
        },
        {
            html: 'Category 2',
            value: 'category2',
            action: '',
            icon: 'svgIcon=#alpha-icon-heartSolid:icon,24',
            children: [
                {
                    html: 'Action 4', 
                    value: 'action4',
                    action: '',
                    icon: 'svgIcon=#alpha-icon-map:icon,24',
                    children: [
                        {
                            html: 'Action 4a', 
                            value: 'action4a',
                            action: 'action:4a',
                            icon: 'svgIcon=#alpha-icon-trendingDown:icon,24'
                        },
                        {
                            html: 'Action 4b', 
                            value: 'action4b',
                            action: 'action:4b',
                            icon: 'svgIcon=#alpha-icon-trendingDown:icon,24'
                        }
                    ]
                },
                {
                    html: 'Action 5', 
                    value: 'action5',
                    action: 'action:5',
                    icon: 'svgIcon=#alpha-icon-trendingDown:icon,24'
                }
            ]
        },
        {
            html: 'Category 3', 
            value: 'category3',
            action: '',
            icon: 'svgIcon=#alpha-icon-shield:icon,24',
            children: [
                {
                    html: 'Action 7', 
                    value: 'action7',
                    action: 'action:7',
                    icon: 'svgIcon=#alpha-icon-shuffle:icon,24'
                }
            ]
        }	],
    actions: {
        action: function(arg){
            alert('Action' + arg);
        }
    }
}
{dialog.object}.populateExpandingMenuControl('EXPANDINGMENU1',data);]]></example>
    <links>
        <link link="ux data controls more controls expandingmenu control">Expanding Menu Control</link>
    </links>
    <see>
        <ref link="ux component refreshexpandingmenudata method">{dialog.object}.refreshExpandingMenuData Method</ref>
        <ref link="ux data controls more controls expandingmenu control">Expanding Menu Control</ref>
    </see>
</page>