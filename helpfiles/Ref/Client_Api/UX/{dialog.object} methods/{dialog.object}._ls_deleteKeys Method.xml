 <page api="js">
     <shortlink>ux component _ls_deleteKeys method</shortlink>
     <topic>{dialog.object}._ls_deleteKeys Method</topic>
     <syntax>{dialog.object}._ls_deleteKeys(keys);</syntax>
     <arguments>
         <argument>
             <name>keys</name>
             <type>array|object</type>
             <description>The list of keys to delete. Can be an array of key values or an object. If the *[js:keyObj]* parameter is an object, it must define a parameter called *[js:data]* that contains the keys. See example(s) below.</description>
         </argument>
     </arguments>
     <description>Deletes data for the specified keys from Local Storage.</description>
     <sections>
        <section>
            <example code="js"><![CDATA[//delete all keys in local storage for other UX components
var obj = {dialog.object}._ls_getData('o');
{dialog.object}._ls_deleteKeys(obj);]]></example>
        </section>
        <section>
            <description>This example demonstrates creating an array that contains the keys:</description>
            <example code="js"><![CDATA[var keys = [];
keys.push('key1');
keys.push('key2');
keys.push('key3');

{dialog.object}._ls_deleteKeys(keys);]]></example>
        </section>
        <section>
            <description>This example demonstrate creating a object that contains the keys:</description>
            <example code="js"><![CDATA[var obj = {};
obj.data = [];
obj.data.push('key1');
obj.data.push('key2');
obj.data.push('key3');

{dialog.object}._ls_deleteKeys(obj);]]></example>
         </section>
     </sections>
    <limitations>For Internal Use Only</limitations>
     <see>
        <ref link="buildingdisconnectedapplications">List Control Overview</ref>
         <ref link="ux component _ls_getData method">{dialog.object}._ls_getData()</ref>
     </see>
 </page>