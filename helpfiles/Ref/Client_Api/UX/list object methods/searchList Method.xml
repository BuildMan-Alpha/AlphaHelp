<page api="js">
    <shortlink>list object searchList method</shortlink>
    <topic>listObj.searchList Method</topic>
    <description>Submits the Search Part to search the List. You can specify if the search should be performed client-side, server-side or 'auto'.</description>
    <prototype>listObj.searchList([options]);</prototype>
    <arguments>
        <argument optional="true">
            <name>options</name>
            <type>JSON object</type>
            <description>An optional JSON format string that indicates where the search should be performed (client-side or server-side). In the case of server-side search, you can set additional optional properties (listed below).</description>
            <properties>
                <property optional="true">
                    <name>searchMode </name>
                    <type>C</type>
                    <description>Defaults to 'serverSide'. Can be set to 'clientSide', 'serverSide' or 'auto'. The 'auto' option performs a server-side search if the List is not 'dirty' (i.e. does not have any unsynchronized edits). Otherwise, it performs a client-side search.</description>
                </property>
                <property optional="true">
                    <name>maxRows</name>
                    <type>number</type>
                    <description>Default is value set in Search Part of List Builder. In the case of a server-side search, indicates the maximum number of rows that the search is allowed to return. This property overrides the property that is set in the List Builder on the Search Part pane.</description>
                </property>
                <property optional="true">
                    <name>maxPayload</name>
                    <type>number</type>
                    <description>Default is value set in Search Part of List Builder. In the case of a server-side search, indicates the maximum payload that the search is allowed to return. This property overrides the property that is set in the List Builder on the Search Part pane.</description>
                </property>
                <property optional="true" build="4592">
                    <name>xbasicAfterFilterCompute</name>
                    <type>string</type>
                    <description>Default is no function. Defines the name of an Xbasic function that will be called after the filter has been computed, but before the SQL has been executed. See "Server-side After Search Expression Computed Event" below for more information.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:searchList()]* method reads the search criteria from the Search Part for a List control and then performs either a client-side or server-side search. Additional options can be specified to defined the search behavior, including the search mode and the amount of data to return (rows, payload size).</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[var listObj = {dialog.object}.getControl("LIST1");

if (listObj) {
    listObj.searchList({searchMode : 'auto', maxRows: 30});
}]]></example>
            <note>The List control's *[js:beforeSearch]* client-side event fires before the search is performed. This event exposes the *[js:searchWhere]* property that tells you where the search will be performed.</note>
        </section>
        <section>
            <description>
                <p>An optional Xbasic function can also be specified. This Xbasic function will be called prior to submitting the search on the server. The Xbasic function is not used for client-side searches.</p>
            </description>
        </section>
        <section>
            <title>Server-side After Search Expression Computed Event</title>
            <description>
                <p>The *[js:xbasicAfterFilterCompute]* property can be used to override the computed search filter for the List control. The property can be used to specify an Xbasic function to call after the filter for the List has been computed but before any records are retrieved from the List's data source.</p>
                <p>The Xbasic function specified must take *[xb:e]* as a parameter. The *[xb:e]* object contains the following properties:</p>
            </description>
            <list bullet="true">
                <item>
                    <name>*[xb:e.tmpl]* - A pointer to the UX Component definition.</name>
                </item>
                <item>
                    <name>*[xb:e.searchDefinition]* - An object with properties defining the filter expression computed by Alpha Anywhere from the submitted data.</name>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>The *[xb:e.searchDefinition]* is a property array with the following properties:</p>
            </description>
            <list>
                <item>
                    <name-title>*[xb:e.searchDefinition]* Property</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>parameters</name>
                    <description>The values for the arguments used in the filter expression. Syntax is a CR-LF delimited string with syntax for each line as: *[xb:searchValue|||field_type|argument_name]*</description>
                </item>
                <item>
                    <name>filter</name>
                    <description>The SQL Where clause to be added to the base SQL query for the List.</description>
                </item>
                <item>
                    <name>order</name>
                    <description>The SQL order clause.</description>
                </item>
                <item>
                    <name>having</name>
                    <description>The SQL having clause.</description>
                </item>
                <item>
                    <name>distanceFromLocation</name>
                    <description>Used in geography searches.</description>
                </item>
            </list>
        </section>
        <section>
            <description>
                <p>The Xbasic function can modify any of the properties for the *[xb:e.searchDefinition]* object to customize the search filter. For example, the code below overwrites the search parameters and filter to only search for records with a Country of 'UK':</p>
            </description>
            <example code="xb"><![CDATA[function customizeListSearch as v (e as p)
    dim parameters as c = "%UK%|||C|search_country_country1"
    dim filter as c = "(Country LIKE :SEARCH_Country_Country1)"

    e.searchDefinition.parameters = parameters
    e.searchDefinition.filter = filter

end function]]></example>
        </section>
        <section>
            <description>
                <p>To call the Xbasic function as part of the List search process, the *[js:xbasicAfterFilterCompute]* option is used. The *[js:xbasicAfterFilterCompute]* option defines an Xbasic function that should be called to process the search filter before querying the Lists data source. For example:</p>
            </description>
            <example code="js"><![CDATA[var listObj = {dialog.object}.getControl('LIST1');

if (listObj) {
    listObj.searchList({xbasicAfterFilterCompute:"customizeListSearch"});
}]]></example>
        </section>
    </sections>
    <limitations>List Control with Search Part</limitations>
    <links>
        <link link="grid onsearchpartfiltercompute event">onSearchPartFilterCompute</link>
    </links>
    <see>
        <ref link="buildingdisconnectedapplications">List Control Overview</ref>
    </see>
</page>