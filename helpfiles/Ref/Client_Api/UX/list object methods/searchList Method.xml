<page api="js">
    <shortlink>list object searchList method</shortlink>
    <topic>listObj.searchList Method</topic>
    <syntax>listObj.searchList([options]);</syntax>
    <arguments>
        <argument optional="true">
            <name>options</name>
            <type>json object</type>
            <description>An optional JSON format string that indicates where the search should be performed (client-side or server-side). In the case of server-side search, you can set additional optional properties (listed below)</description>
            <properties>
                <property optional="true">
                    <name>searchMode </name>
                    <type>C</type>
                    <description>Can be set to 'clientSide', 'serverSide' or 'auto'. The 'auto' option performs a server-side search if the List is not 'dirty' (i.e. does not have any unsynchronized edits). Otherwise, it performs a client-side search.</description>
                </property>
                <property optional="true">
                    <name>maxRows</name>
                    <type>number</type>
                    <description>In the case of a server-side search, indicates the maximum number of rows that the search is allowed to return. This property overrides the property that is set in the List Builder on the Search Part pane.</description>
                </property>
                <property optional="true">
                    <name>maxPayload</name>
                    <type>number</type>
                    <description>In the case of a server-side search, indicates the maximum payload that the search is allowed to return. This property overrides the property that is set in the List Builder on the Search Part pane.</description>
                </property>
            </properties>
        </argument>
    </arguments>
    <description>Submits the Search Part to search the List. You can specify if the search should be performed client-side, server-side or 'auto'.</description>
    <note>The List control's *[js:beforeSearch]* client-side event fires before the search is performed. This event exposes the *[js:searchWhere]* property that tells you where the search will be performed.</note>
    <example code="js"><![CDATA[var listObj = {dialog.object}.getControl("LIST1");
listsObj.searchList({searchMode : 'auto', maxRows: 30});]]></example>
    <limitations>List Control with Search Part</limitations>
    <see>
        <ref link="buildingdisconnectedapplications">List Control Overview</ref>
    </see>
</page>