<page api="js">
    <shortlink>window object setposition method</shortlink>
    <topic>windowObject.setPosition Method</topic>
    <prototypes>
        <prototype>windowObj.setPosition(position);</prototype>
        <prototype>windowObj.setPosition(position, dockLocation);</prototype>
        <prototype>windowObj.setPosition(relativePosition, ele);</prototype>
        <prototype>windowObj.setPosition(yPosition, xPosition);</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>position</name>
            <description>Can be one of the following values:</description>
            <list>
                <item>
                    <name-title>Position</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>centered</name>
                    <description>Positions the window in the center of the viewport.</description>
                </item>
                <item>
                    <name>dock</name>
                    <description>Docks the window to a position specified by *[js:dockLocation]*. If position is "dock", you must define the *[js:dockLocation]*.</description>
                </item>
            </list>
        </argument>
        <argument>
            <name>dockLocation</name>
            <description>Defines the docked position. Only required if the first parameter, *[js:position]* is defined to be "dock". *[js:dockLocation]* can be one of the following values:</description>
            <list>
                <item>
                    <name-title>Dock Location</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>top</name>
                    <description>Window will be docked at the top of the screen.</description>
                </item>
                <item>
                    <name>bottom</name>
                    <description>Window will be docked at the bottom of the screen.</description>
                </item>
                <item>
                    <name>left</name>
                    <description>Window will be docked on the left of the screen.</description>
                </item>
                <item>
                    <name>right</name>
                    <description>Window will be docked on the right of the screen.</description>
                </item>
            </list>
        </argument>
        <argument>
            <name>relativePosition</name>
            <description>If specified, you must pass in a pointer to the 'parent' control, an element in the DOM, as the second parameter (*[js:ele]*) . *[js:relativePosition]* can be one of the following values:</description>
            <list>
                <item>
                    <name-title>Relative Position</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>dropdown</name>
                    <description>Window is positioned below the 'parent' control. The left edge of the window is aligned with the left edge of the 'parent' control.</description>
                </item>
                <item>
                    <name>dropdown-right</name>
                    <description>Same as 'dropdown' option except that the window's right edge is aligned with the right edge of the 'parent' control.</description>
                </item>
                <item>
                    <name>flyout</name>
                    <description>Window is positioned to the right of the 'parent' control. The top of the window is aligned with the top of the 'parent' control.</description>
                </item>
                <item>
                    <name>flyout-bottom</name>
                    <description>Window is positioned to the right of the 'parent' control. The bottom of the window is aligned with the bottom of the 'parent' control.</description>
                </item>
                <item>
                    <name>popup</name>
                    <description>Window is positioned over the 'parent' control. The top of the window is aligned with the top of the 'parent' control.</description>
                </item>
                <item>
                    <name>popup-bottom</name>
                    <description>Window is positioned over the 'parent' control. The bottom of the window is aligned with the bottom of the 'parent' control.</description>
                </item>
            </list>
        </argument>
        <argument>
            <name>ele</name>
            <description>Required if a *[js:relativePosition]* is defined. A pointer to the 'parent' element that the window is positioned relative to.</description>
        </argument>
        <argument>
            <name>yPosition</name>
            <description>Defines the absolute y position of the window relative to the top edge of the screen. Can be a numeric value defining the number of pixels or a string with a CSS units, eg: "100px", "2in", "10%".</description>
        </argument>
        <argument>
            <name>xPosition</name>
            <description>Required if *[js:yPosition]* has been defined. Defines the absolute x position of the window relative to the left edge of the screen. Can be a numeric value defining the number of pixels or a string with a CSS units, eg: "100px", "2in", "10%".</description>
        </argument>
    </arguments>
    <description>Defines where the window should be positioned on screen when shown.</description>
    <example code="js"><![CDATA[//get a pointer to the window object
var windowObj = {dialog.Object}.getWindow('MYWINDOW');
windowObj.show();

// position window centered on the screen
windowObj.setPosition('center');

// position the window absolutely at y = 24px and x = 32px
windowObj.setPosition(24, 32);

// position the window absolutely in inches
windowObj.setPosition('1in','2in');

// popup the window relative to another control
var ele = {dialog.object}.getPointer('MY_BUTTON1');
windowObj.setPosition('popup',ele);

// position the window docked on the right side of the screen
windowObj.setPosition('dock', 'right');]]></example>
    <terms></terms>
</page>