<page api="js" build="6945">
    <shortlink>ux component graphQLQuery method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="graphQLQuery Method">{dialog.object}.graphQLQuery Method</topic>
    <description>
        <p>Executes a GraphQL query.</p>
    </description>
    <prototypes>
        <prototype>{dialog.object}.graphQLQuery(url, queryDefinition, variables, headers, queryParameters, onSuccess, onFail)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>url</name>
            <type>string</type>
            <description>
                <p>The URL of the service (e.g. http://www.mygraphqlservice.com/northwind.a5svc)</p>
            </description>
        </argument>
        <argument>
            <name>queryDefinition</name>
            <type>string</type>
            <description>
                <p>The string that defines the query</p>
            </description>
        </argument>
        <argument>
            <name>variables</name>
            <type>object</type>
            <description>
                <p>An object that defines values for each of the query variables.</p>
                <p>
                    <example code="js"><![CDATA[var variables = {"customerId":"BOLID"};]]></example>
                </p>
            </description>
        </argument>
        <argument>
            <name>headers</name>
            <type>object array</type>
            <description>
                <p>An array of objects. Each object in the array has a *[js:name]* and *[js:value]* property. Used when the service requires authentication using an api key that must be passed in the header of the request.</p>
                <p>
                    <example code="js"><![CDATA[var headers = [
    {"name":"apikey","value":"XXXXXXXXXXXXXXXXXXXX"},
    {"name":"myHeader","value":"my header value"}
];]]></example>
                </p>
            </description>
        </argument>
        <argument>
            <name>queryParameters</name>
            <type>string</type>
            <description>
                <p>A string of *[js:name=value]* pairs. Used when the service requires authentication via an api key that must be passed as a query parameter.</p>
                <p>
                    <example code="js"><![CDATA[var queryParams = "apikey=XXXXXXXXXXXXX&myQueryParam=query%20param%20value";]]></example>
                </p>
            </description>
        </argument>
        <argument>
            <name>onSuccess</name>
            <type>function</type>
            <description>
                <p>The callback function to call once the data is returned.</p>
            </description>
        </argument>
        <argument>
            <name>onFail</name>
            <type>function</type>
            <description>
                <p>The callback function to call if there is an error.</p>
            </description>
        </argument>
    </arguments>
    <discussion>
        <p>The {dialog.object}.graphQLQuery() method executes a GraphQL query directly from the client's browser, avoiding a callback to the Alpha Anywhere application server.</p>
    </discussion>
    <example code="js"><![CDATA[var url = 'http://www.mygraphqlservice.com/northwind.a5svc';
var query = `
{
    GetManyCustomers {
        records {
        CustomerID
        ContactName
        CompanyName
        City
        Country
        }
    }
    }
`

var onSuccess = function() {};
var onFail = function() {};

{dialog.object}.graphQLQuery(url,query,"","","",onSuccess,onFail);
]]></example>
    <see>
        <ref link="graphql">Building a GraphQL Service to Expose Data in a SQL Database</ref>
    </see>
</page>