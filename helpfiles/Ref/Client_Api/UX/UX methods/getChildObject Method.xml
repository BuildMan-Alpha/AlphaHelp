<page api="js">
    <shortlink>ux component getChildObject Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="getChildObject Method">{dialog.object}.getChildObject Method</topic>
    <prototype>{dialog.object}.getChildObject(alias [, componentType]);</prototype>
    <description>Returns a pointer to the child component.</description>
    <arguments>
        <argument>
            <name>alias</name>
            <type>string</type>
            <description>The alias of the child component. You must explicitly set the alias of the component to use this function.</description>
        </argument>
        <argument optional="true">
            <name>componentType</name>
            <type>string</type>
            <description>
                <p>Default = 'ux'</p>
                <p>The type of the component. Can be one of the following options:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Component Type</name-title>
                            <description-title>Meaning</description-title>
                        </item>
                        <item>
                            <name>'ux'</name>
                            <description>The child component is a UX Component. This is the default value.</description>
                        </item>
                        <item>
                            <name>'grid'</name>
                            <description>The child component is a Grid component.</description>
                        </item>
                        <item>
                            <name>'custom'</name>
                            <description>The child component is a Custom component. See [About Custom Components] to learn more about Custom components.</description>
                        </item>
                    </list>
                </p>
            </description>
        </argument>
    </arguments>
    <returns>
        <return>
            <name>result</name>
            <types>
                <type>object</type>
                <type>boolean</type>
            </types>
            <description>
                <p>Returns a pointer to the JavaScript object for the child component if the requested component exists. Otherwise, returns *[js:false]*.</p>
            </description>
        </return>
    </returns>
    <discussion>Gets a pointer to a component that has been opened as a child of the current UX component (for example, a component opened in a window or DIV), or embedded into the current us (using the Embedded Object control.) Once you have a pointer to the child object, you can execute methods on the child component.</discussion>
    <important>
        <p>If the JavaScript object doesn't exist for the requested component, getChildObject() will return *[js:false]*. You should *[always]* check the returned value of the getChildObject() method before using the object. This can be done by wrapping your code in an if block as shown in the example.</p>
    </important>
    <example><![CDATA[//Get a pointer to the child UX component with alias of 'MYCHILD'.
var childObj = {dialog.object}.getChildObject('MYCHILD');

if (childObj) {
    // object exists
}]]></example>
    <links>
        <link link="server component Custom Components">About Custom Components</link>
    </links>
    <see>
        <ref link="server component Custom Components">About Custom Components</ref>
        <ref link="ux component methods">{dialog.object}</ref>
        <ref link="grid component methods">{grid.object}</ref>
        <ref link="ux%20component%20getparentobject%20method">{dialog.object}.getParentObject()</ref>
        <ref link="ux%20component%20gettopparentobject%20method">{dialog.object}.getTopParentObject()</ref>
    </see>
    <terms>javascript functions</terms>
</page>