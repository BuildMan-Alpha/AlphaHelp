<page api="js" build="6765">
   <shortlink>ux component getValueDisplay Method</shortlink>
   <topic parent="{dialog.object}" parentType="object" elementName="getValueDisplay Method">{dialog.object}.getValueDisplay Method</topic>
   <description>Get the value of a control in the UX Component.</description>
   <prototype>{dialog.Object}.getValueDisplay(name)</prototype>
   <arguments>
      <argument>
         <name>name</name>
         <type>string</type>
         <description>The control to get the display value from. See [{dialog.object}.getValue()] for more information on how to specify the name for a control in a List or Repeating Section.</description>
      </argument>
   </arguments>
   <returns>
       <return>
           <name>result</name>
           <types>
               <type>string</type>
           </types>
           <description>
               <p>Returns the display value for the specified control.</p>
           </description>
       </return>
   </returns>
   <discussion>
       <p>Controls such as dropdown boxes, checkboxes, and radio buttons can have separate stored and displayed values. If the *[js:{dialog.object}.getValue()]* function is used to get the value for a control that stores a separate value from the displayed value, the value returned is the stored value. In some situations, you may want to get the displayed value instead of the stored value. The *[js:{dialog.object}.getValueDisplay()]* function will return the displayed value for those controls that have separate stored and displayed values. For example:</p>
      <p>
         <example code="js"><![CDATA[// Get the displayed value in the 'states' Dropdown Box
var state = {dialog.object}.getValueDisplay('states');

// Show the value in a popup window:
var title = "Selected State";
var msg = '<div style="height:1in;padding: 30px;">Selected state is ' + state +'</div>';
var buttons = 'o'; // OK button
A5.msgBox.show(title,msg,buttons);]]></example>
      </p>
   </discussion>
   <links>
       <link link="ux component getValue Method">{dialog.object}.getValue()</link>
   </links>
   <see>
      <ref link="ux component getValue Method">{dialog.object}.getValue()</ref>
      <ref link="ux component methods">{dialog.object}</ref>
   </see>


   <terms>ux component,column,control,current row,field,list,list control,logical,number,row number,javascript functions</terms>

</page> 
