<page api="js">
    <shortlink>ux component serverIsAvailable Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="serverIsAvailable Method">{dialog.object}.serverIsAvailable Method</topic>
    <description>Tests if the Alpha Anywhere server is available. This is a more comprehensive test than simply testing if an Internet connection is available.</description>
    <prototype>{dialog.object}.serverIsAvailable( [timeOut [, successFunction [, errorFunction]]);</prototype>
    <arguments>
        <argument optional="true">
            <name>timeOut</name>
            <type>number</type>
            <description>If you don't specify a timeOut, the default value is 300 milliseconds.</description>
        </argument>
        <argument optional="true">
            <name>successFunction</name>
            <type>function</type>
            <description>The 'successFunction' parameter allows you to pass in an Javascript function to be called once it is determined that the Alpha Anywhere server is available.
            </description>
        </argument>
        <argument optional="true">
            <name>errorFunction</name>
            <type>function</type>
            <description>The 'errorFunction' parameter is called if the server is not available.
            </description>
        </argument>
    </arguments>
    <sections>
        <section>
            <note>Contrast this method with the UX component's ._getOnlineStatus() method. This method merely tests if there is an internet connection. It does not make an ajax callback to the Alpha Anywhere server. Is merely uses the HTML5 navigator.online property. The .serverIsAvailable() method, on the other hand, does a lightweight callback to the Alpha Anywhere server to test if the server is available.</note>
        </section>
        <section>
            <title>Discussion</title>
            <description>The function will set these variables in the global [A5 JavaScript object]:
            </description>
            <example code="js"><![CDATA[A5._serverAvailable - true/false
A5._serverCheckTime - the time the server availability was last checked.]]></example>
        </section>
        <section>
            <title>Example:</title>
            <description>Execute the 'refreshList' action is the server is available.</description>
            <example code="js"><![CDATA[function success() { 
    {dialog.object}.playAction('refreshList');
}

{dialog.object}.serverIsAvailable(300,success);]]></example>

        </section>
        <section>
            <title>Example: Passing in an Error Function</title>
            <example code="js"><![CDATA[var _ok = function() {
    alert('server responded');
};

var _err = function() {
    alert('server did not respond');
}; 

//wait up to 500 milliseconds before calling either the _ok or _err callback function
{dialog.object}.serverIsAvailable(500,_ok,_err); ]]></example>
        </section>
    </sections>
    <links>
        <link link="a5%20namespace">A5 JavaScript object</link>
    </links>
    <see>
        <ref link="ux component methods">{dialog.object}</ref>
        <ref link="ux component _setSimulatedOnlineStatus Method">{dialog.object}._setSimulatedOnlineStatus Method</ref>
        <ref link="ux component _getonlinestatus method">{dialog.object}._getOnlineStatus Method</ref>
        <ref link="ux component onconnectionchange client event">onConnectionChange Event</ref>
    </see>

    <terms>ux component,javascript functions</terms>


</page> 
