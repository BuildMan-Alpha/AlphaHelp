<page api="js" build="1617">
    <shortlink>ux component getPanelObject Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="getPanelObject Method">{dialog.object}.getPanelObject Method</topic>
    <description>If the UX component use Panels, gets a pointer to the Panel object. Once you have a pointer to the Panel Object you can call methods of the Panel Object (such as .getState() and .setState()).</description>
    <prototype>var panelObject = {dialog.object}.getPanelObject();</prototype>
    <returns>
        <return>
            <name>panelObject</name>
            <types>
                <type>A5.PanelLayout</type>
                <type>A5.PanelNavigator</type>
                <type>undefined</type>
            </types>
            <description>
                <p>Returns the panel object if the panel exists. Depending on how your application is built, the panel object will be either a [A5.PanelLayout] or [A5.PanelNavigator]. If the panel does not exist, *[js:getPanelObject()]* will return *[js:undefined]*.</p>
            </description>
        </return>
    </returns>
    <sections>
        <section>
            <important>
                <p>If the Panel object doesn't exist, getPanelObject() will return *[js:undefined]*. You should *[always]* check the returned value of the getPanelObject() method before using the object. This can be done by wrapping your code in an if block as shown in the example.</p>
            </important>
        </section>
        <section>
            <title>Example: Getting the Panel Object State</title>
            <example code="js"><![CDATA[//Get a pointer to the Panel Object
var pnObj = {dialog.object}.getPanelObject();

if (pnObj) {
    //Get the current state of the Panel Object
    var state = pnObj.getState();

    //See what's in the 'state' object
    alert($u.o.toJSON(pnObj.getState());
}]]></example>
        </section>
        <section>
            <title>Example: Setting the Panel Object State</title>
            <example code="js"><![CDATA[//Get a pointer to the Panel Object
var pnObj = {dialog.object}.getPanelObject();

if (pnObj) {
    //Restore the state of the Panel Object. (Assume that the state is in a variable called 'state')
    pnObj.setState(state);
}]]></example>
        </section>
        <section>
            <videos>
                <title>Storing and Restoring the 'state' of a UX Component with Multiple Panels</title>
                <description>
                    <p>UX Components can use complex layouts that involve multiple Panel Cards inside Panel Navigators and Panel Layouts. You might want to persist the state of the Panel (i.e. remember which Panel Card in a particular Panel Navigator is active and which Panels in a Panel Navigator have been docked) so that you can later restore this state. This video shows how this can be done.</p>
                </description>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/3cd731c1</link>
                </video>
                <resources>
                    <resource>
                        <link>https://www.ajaxvideotutorials.com/V12Videos/panelSetState.zip</link>
                    </resource>
                </resources>
                <date>2013-08-19</date>
            </videos>
        </section>
    </sections>
    <links>
        <link link="api client api a5 panellayout class">A5.PanelLayout</link>
        <link link="api client api a5 panelnavigator class">A5.PanelNavigator</link>
    </links>
    <see>
        <ref link="ux component methods">{dialog.object}</ref>
        <ref link="api client api a5 panellayout class">A5.PanelLayout class</ref>
        <ref link="api client api a5 panelnavigator class">A5.PanelNavigator class</ref>
    </see>
    <terms>ux component,javascript functions</terms>
</page>
