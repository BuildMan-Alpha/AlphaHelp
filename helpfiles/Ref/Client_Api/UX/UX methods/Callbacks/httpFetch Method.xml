<page api="js" build="5094">
    <shortlink>ux component httpfetch method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="httpFetch Method">{dialog.object}.httpFetch Method</topic>
    <description>Fetches data from a specified URL.</description>
    <prototypes>
        <prototype>{dialog.object}.httpFetch(url,onSuccess,onError[,headers]);</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>url</name>
            <type>string</type>
            <description>The URL that contains the data to fetch.</description>
        </argument>
        <argument>
            <name>onSuccess</name>
            <type>function</type>
            <description>Function to call when the http request succeeds.</description>
        </argument>
        <argument>
            <name>onError</name>
            <type>function</type>
            <description>Function to call if the http request fails.</description>
        </argument>
        <argument optional="true">
            <name>headers</name>
            <type>array of objects</type>
            <description>Allows you to set custom headers for the request. *[js:headers]* is an array of objects. Each object has a name and value property.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:.httpFetch()]* method can be used to fetch data from a remote URL.</p>
        <p>The onSuccess callback function is called when the data is available. This function gets called with the data that has been retrieved.</p>
        <p>Example:</p>
    </discussion>
    <sections>
        <section>
            <example code="js"><![CDATA[var url = 'http://some_remote_url';
var cb = function(data) { console.log(data); };
var fail = function() { alert('request failed'); };
{dialog.object}.httpFetch(url,cb,fail);]]></example>
        </section>
        <section>
            <description>You can optionally specify headers to include in the request. Headers are defined as an array of objects. For example:</description>
            <example code="js"><![CDATA[var headers = [];
headers.push( {
    name: 'Authorization',
    value: 'Bearer my_access_token_value_goes_here'
});]]></example>
        </section>
    </sections>
</page>