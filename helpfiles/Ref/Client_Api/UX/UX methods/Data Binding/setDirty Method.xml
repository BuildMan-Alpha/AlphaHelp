<page api="js">
    <shortlink>ux component setDirty Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="setDirty Method">{dialog.object}.setDirty Method</topic>
    <prototype>{dialog.object}.setDirty([flagSetDataDirty]);</prototype>
    <description>Sets the UX component to be dirty.</description>
    <arguments>
        <argument optional="true">
            <name>flagSetDataDirty</name>
            <type>boolean</type>
            <description>Default = false. Specifies whether or not data bound controls should be set to dirty. If the *[js:flagSetDataDirty]* parameter is set to *[js:true]*, then the UX component's _isDataDirty flag is also set to true, and the *[js:dialog.dataIsDirty]* system field used in Client-side watch expressions is also set to true.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:setDirty()]* method can be used to mark the UX Component as "dirty" or modified. Normally, the UX component becomes dirty automatically when the user edits the value of a control. In some situations, it may be necessary to programmatically mark the UX as dirty.</p>
        <p>The method takes an optional parameter, *[js:flagSetDataDirty]*. Modified controls in the UX Component are tracked using two separate variables: _isDirty and _isDataDirty. _isDirty will be true if any control on the UX Component has been modified. _isDataDirty will only be true if a data bound control has been modified. The *[js:flagSetDataDirty]* parameter can be used to set the _isDataDirty variable to true, indicating that data bound controls are dirty.</p>
        <p>In client-side expressions, you can reference these two variables using the *[js:dialog.isDirty]* and *[js:dialog.isDataDirty]* system fields.</p>
    </discussion>
    <important>You cannot use this method to set the UX as "clean". Use the [setClean()] or [resetForm()] methods instead.</important>
    <example code="js"><![CDATA[{dialog.object}.setDirty();

// set the ux component and data bound controls dirty:
{dialog.object}.setDirty(true);

// set only the ux component dirty - does not set data bound controls dirty
{dialog.object}.setDirty(false);]]></example>
    <terms>javascript functions,dirty ux</terms>
    <links>
        <link link="ux component setclean method">setClean()</link>
        <link link="ux component resetform method">resetForm()</link>
    </links>
    <see>
        <ref link="ux component setclean method">{dialog.object}.setClean()</ref>
        <ref link="ux%20components%20data%20binding">Data Binding</ref>
        <ref link="ux component formviewisdirty method">{dialog.object}.formViewIsDirty()</ref>
        <ref link="list object listisdirty method">&lt;listObject&gt;.listIsDirty()</ref>
        <ref link="list object detailviewisdirty method">&lt;listObject&gt;.detailViewIsDirty()</ref>
    </see>
</page>