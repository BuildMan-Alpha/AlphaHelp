<page api="js">
    <shortlink>ux component loadDataFromRepository Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="loadDataFromRepository Method">{dialog.object}.loadDataFromRepository Method</topic>
    <description>Loads data that was previously saved to the Repository.</description>
    <prototype>{dialog.object}.loadDataFromRepository(key [, flagDelete]);</prototype>
    <arguments>
        <argument>
            <name>key</name>
            <type>string</type>
            <description>The saved data in the application repository to be loaded.</description>
        </argument>
        <argument optional="true">
            <name>flagDelete</name>
            <type>string</type>
            <description>Default = *[js:false]*. A *[js:true]* or *[js:false]* value. Specifies whether or not the data should be deleted from the application repository after it is retrieved. If true, data will be deleted. If false, data will not be deleted.</description>
        </argument>
    </arguments>
    <discussion>
        <p>The component is populated with the data that was saved to the application repository.  (The [Repository Settings] are configured in Web Project Properties).</p>
        <p>The [afterLoadFromRepository] client-side event fires after the event has completed.</p>
        <p>If the optional *[js:flagDelete]* parameter is true, then the Repository entry is deleted after it has been read.</p>
        <p>
            <example code="js"><![CDATA[{dialog.object}.loadDataFromRepository('mykeyvalue');]]></example>
        </p>
    </discussion>
    <links>
        <link link="server%20ref%20web%20project%20settings#section1_Repository%20Settings">Repository Settings</link>
        <link link="afterloadfromrepository">afterLoadFromRepository</link>
    </links>
    <see>
        <ref link="ux%20component%20savedatainrepository%20method">{dialog.object}.saveDataInRepository()</ref>
        <ref link="web%20application%20repository">Web Application Repository</ref>
    </see>
    <terms>components,delete,events,repository,javascript functions</terms>
</page>
