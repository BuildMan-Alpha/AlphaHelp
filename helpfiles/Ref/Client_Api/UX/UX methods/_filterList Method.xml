<page api="js">
    <shortlink>ux component _filterList Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="_filterList Method">{dialog.object}._filterList Method</topic>
    <description>Performs a server-side query to filter and/or sort the data in a List that is based on a SQL, DBF, or custom data source.</description>
    <prototype>{dialog.object}._filterList(UXListName, filterExpn, orderExpn, filterParameters, havingExpn);</prototype>
    <arguments>
        <argument>
            <name>UXListName</name>
            <description>The name of the List control.</description>
        </argument>
        <argument>
            <name>filterExpn</name>
            <description>A filter expression to be applied to the SQL, DBF, or custom data source. You can use arguments in your expression. An argument is prefixed with a colon. For example, *[js:State = :whatstate]*</description>
        </argument>
        <argument>
            <name>orderExpn</name>
            <description>An order expression to be applied to the SQL, DBF, or custom data source.</description>
        </argument>
        <argument>
            <name>filterParameters</name>
            <description>A CR-LF delimited list of arguments used by the filter or having expression. Arguments are defined in the format *[js:value|||dataType|argumentName]*</description>
        </argument>
        <argument>
            <name>havingExpn</name>
            <description>A having expression for the SQL, DBF, or custom data source. You can use arguments in your expression. An argument is prefixed with a colon. For example, *[js:State = :whatstate]*</description>
        </argument>
    </arguments>
    <discussion>
        <p>If the *[js:filterExpn]* or *[js:havingExpn]* use arguments, the argument values must be specified in the *[js:filterParameters]* parameter.</p>
        <p>The syntax for filter parameters is a CR-LF delimited list of values using the following syntax:</p>
    </discussion>
    <sections>
        <section>
            <example code="js">
                <![CDATA[value|||dataType|argumentName]]>
            </example>
        </section>
        <section>
            <description>The example below demonstrates how to call *[js:{dialog.object}._filterList]* 
                using arguments in the filter expression. In this example, 
                a sort expression is defined to sort by lastname, descending and then within lastname by firstname.</description>
            <example code="js">
                <![CDATA[//use \n to create a CR-LF delimited list
var params = 'Boston|||C|whatcity\nSmith|||C|whatname';
{dialog.object}._filterList('MYLIST1','city = :whatcity AND name = :whatname','',params);]]>
            </example>
        </section>
        <section>
            <title>Sorting the List</title>
            <description>
                <p>In this example, the *[js:{dialog.objet}._filterList]* method is used to sort the list by 'city', descending:</p>
                <p>
                    <example code="js"><![CDATA[var sort = "city DESC";
{dialog.object}._filterList('MYLIST1','',sort);]]></example>
                </p>
            </description>
            <tip>
                <p>To sort by city ascending, the sort would be specified as *[js:"city ASC"]*.</p>
            </tip>
        </section>
    </sections>
    <terms>javascript functions</terms>
</page> 