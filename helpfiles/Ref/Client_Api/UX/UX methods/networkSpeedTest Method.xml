<page api="js" build="7544">
    <shortlink>ux object networkspeedtest method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="networkSpeedTest Method">{dialog.object}.networkSpeedTest Method</topic>
    <description>
        <p>Measures the network speed between the server and the device calling the method.</p>
    </description>
    <prototypes>
        <prototype>{dialog.object}.networkSpeedTest(packetSize, onComplete, onFail)</prototype>
    </prototypes>
    <arguments>
        <argument>
            <name>packetSize</name>
            <type>string</type>
            <description>
                <p>The size of the data packet in MB to send to the server. The packet size must include "MB". For example, *[js:'1MB']*.</p>
            </description>
        </argument>
        <argument>
            <name>onComplete</name>
            <type>function</type>
            <description>
                <p>The function to call when the client receives a response from the server. The *[js:onComplete]* function takes a single argument, *[js:elapse]*, which is the amount of time (in milliseconds) that has elapsed since the test was initiated.</p>
                <p>You will typically define your *[js:onComplete]* event to test the elapsed time. For example, if the elapsed time is below a certain threshold, you can proceed with the synchronization operation. If the elapsed time is above the threshold, you can give the user a message telling them to try again later when the connection is better.</p>
            </description>
        </argument>
        <argument>
            <name>onFail</name>
            <type>function</type>
            <description>
                <p>The function to call if the test fails.</p>
            </description>
        </argument>
    </arguments>
    <discussion>
        <p>The *[js:{dialog.object}.networkSpeedTest()]* method measures the speed of a network connection by sending a packet of data to the server and measuring how long it takes until a response from the server is received. The primary use case for this method is to determine if the quality of the network connection is sufficient to synchronize data from a mobile application.</p>
    </discussion>
    <example code="js"><![CDATA[var ok = function(elapse) {

    if (elapse < 300) {
        //do the synchronization operation
    } else {
        alert('Connection not good enough. Please try later.');
    }
}

var fail = function() {
    alert('No connection');
}

{dialog.object}.networkSpeedTest('1MB',ok,fail);]]></example>
</page>