<page api="js">
    <shortlink>ux component showWaitMessage Method</shortlink>
    <topic parent="{dialog.object}" parentType="object" elementName="showWaitMessage Method">{dialog.object}.showWaitMessage Method</topic>
    <description>Displays a wait message.</description>

    <prototype>{dialog.Object}.showWaitMessage(UXWaitMessageTarget [,optionsObject])</prototype>

    <arguments>
        <argument>
            <name>UXWaitMessageTarget</name>
            <description>The type of wait message to show. This can be set to:</description>
             <list>
                <item>
                    <name-title>Wait Message Target</name-title>
                    <description-title>Description</description-title>
                </item>
                <item>
                    <name>page</name>
                    <description>the entire screen is locked and the message is centered on the screen</description>
                </item>
                <item>
                    <name>container:*[js:containerId]*</name>
                    <description>the contents of a container specified by *[js:containerId]*</description>
                </item>
                <item>
                    <name>panel:*[js:panelId]*</name>
                    <description>the contents of a Panel specified by *[js:panelId]*</description>
                </item>
                <item>
                    <name>element:*[js:elementId]*</name>
                    <description>the contents of an element (typically a div) specified by *[js:elementId]*</description>
                </item>
                <item>
                    <name>max</name>
                    <description>The maximum value</description>
                </item>
            </list>
        </argument>
        <argument>
            <name>optionsObject</name>
            <description>An optional parameter that allows you to control the appearance of the wait window. See example below.</description>
        </argument>
    </arguments>

    <discussion>
        <p>Displays a 'wait...' message over the specified target. The specified target is also 'locked' so that the user cannot interact with controls (for example click a button) that are in specified target. This method is often used at the start of an Ajax callback. When the callback is complete, the .hideWaitMessage() method is called.</p>
        <p>You can have multiple wait messages displayed at the same time, each locking a different section of the screen.</p>
        <p>Two types of wait windows can be created. You can use an animated gif, or you can use CSS3 transformations in place of an animated gif.</p>
    </discussion>
    <example code="js"><![CDATA[//display a wait message over 'CONAINER_1' and also lock the contents of 'CONTAINER_1'
{dialog.object}.showWaitMessage('container:CONTAINER_1');

//add some custom text to the wait message
var wo = {};
wo.message = 'Saving...';
{dialog.object}.showWaitMessage('container:CONTAINER_1',wo);

//use a custom gif for the wait message
var wo = {};
wo.icon = 'images/mywaitgif.gif';
{dialog.object}.showWaitMessage('container:CONTAINER_1',wo);

//use css3 animations
var wo = {};
wo.useCSSAnimation = true;
wo.cssAnimationSettings = {};
wo.cssAnimationSettings.size = 16; //set the size of the animation object to 16x16 pixels
{dialog.object}.showWaitMessage('container:CONTAINER_1',wo);]]></example>

    <see>
        <ref link="display a 'wait...' message">Display a 'Wait...' message Action Javascript</ref>
        <ref link="ux component hideWaitMessage Method">{dialog.object}.hideWaitMessage()</ref>
    </see>

    <terms>ux component,message box,wait message, popup,javascript functions</terms>
</page> 