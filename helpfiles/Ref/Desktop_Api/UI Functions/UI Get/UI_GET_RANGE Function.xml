<page>
   <topic>UI_GET_RANGE Function</topic>
   <description>The UI_GET_RANGE() function displays the Select Filter dialog box to help the user select a filter or range for the current table or set. 
 </description>
 
   <syntax>Range_Expn as P = ui_get_range([L top_level_only [,L flag_external_tableset [,C external_tableset_name ]]])</syntax>
   <arguments>
   <argument>
         <name>Range_Expn</name>
         <description>A pointer to a dot variable that contains the current filter and order expressions.</description>
<list>
<item>
<name-title>Argument</name-title>
<description-title>Details</description-title>
</item>

<item>
<name>.error_message</name>
<description>
Type "C", 
 
Any error message generated by the dialog box.
 </description>
</item>
<item>
<name>.filter</name>
<description>
Type "C", 
 
The filter expression that the operator defined. See Query.Filter
 </description>
</item>
<item>
<name>.flag</name>
<description>
Type "L", 
 
The sort values that the operator defined. See Query.Options.
 </description>
</item>
<item>
<name>.lastbutton</name>
<description>
Type "C", 
 
The button that the operator pressed in the dialog box.
 </description>
</item>
<item>
<name>.order</name>
<description>
Type "C", 
 
The order expression that the operator defined. See Query.Order.
 </description>
</item>
<item>
<name>.xbasic.filter</name>
<description>
Type "C", 
 
Process this Xbasic statement with EVALUATE_TEMPLATE()to apply the filter expression defined by the operator.
 </description>
</item>
<item>
<name>.xbasic.order</name>
<description>
Type "C", 
 
Process this Xbasic statement with EVALUATE_TEMPLATE()to apply the order expression defined by the operator.
 </description>
</item>

</list>
     
     </argument>
     <argument>
         <name>top_level_only</name>
         <description>Optional. Default = .F.</description>
         <list>
         <item>
         <name>.T. = Top level table of set.</name>
         </item>
         <item>
         <name>.F. = </name>
         </item>
         </list>
         
         
         
     </argument>
     <argument>
         <name>flag_external_tableset</name>
         <description>Optional. Default = .F.</description>
          <list>
         <item>
         <name>.T. = The query is against an external table or set.</name>
         </item>
         <item>
         <name>.F. = The query is against a local table or set.</name>
         </item>
         </list>
         
         
     </argument>
     <argument>
         <name>external_tableset_name</name>
         <description>
 
Optional. The name of the external table or set.
 </description>
     </argument>
   </arguments>
  <sections>
       <section>
           <figure><link>images/UI_GET_RANGE.gif</link></figure>
       </section>
   </sections>
   
   
   
   
   <sections>
       <section><title>Example</title>
            
            <example><![CDATA[? ui_get_range(.f.)
= error_message = ""
filter = "between(recno() ,2,6)"
flag = .F.
lastbutton = "ok"
order = "recno() "
xbasic = query.filter = "between(recno() ,2,6)"
query.order = "recno() "]]></example>
       </section>
       <section>
            <description>If you need to define filter or order expressions for a table or set that is not currently open, use a variation of this script, which retrieves the filter and order information for the invoice set.</description>
            <example><![CDATA[code = <<%code%
dim s as P
dim filter as P
s = set.open("invoice.set")
filter = ui_get_range()
if filter.lastbutton = "OK" then
ui_msg_box("", filter.filter)
else
ui_msg_box("", "user cancelled")
end if
s.close()
%code%
evaluate_template_private(code)]]></example>
       </section>
       
       
   </sections>
   <limitations>Desktop applications only.</limitations>
   <see>
      <ref>((User Interaction _UI_ Functions|User Interaction (UI) Functions))</ref>
      <ref>Query Functions and Methods</ref>
   </see>
  </page>