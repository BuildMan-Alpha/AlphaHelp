<page>
   <topic>SYSTEM_EVENT_DATA_GET Function</topic>
   <description><![CDATA[
The SYSTEM_EVENT_DATA_GET() returns a pointer to system events that have been registered by the CAN_DATABASE_EXIT()and ON_DATABASE_EXIT()functions.
 ]]></description>

   
   <syntax>Data as P = SYSTEM_EVENT_DATA_GET()</syntax>
   <arguments>
   <argument>
   <name>Data</name>
   <description>A dot variable that receives the contents of the database_exit variable.</description>
   </argument>
   </arguments>
   <sections>
       <section>
       <title>Example</title>
            <description>The following script registers events.</description>
            <example><![CDATA[
code = 
Ui_msg_box("Notice", "The database is about to close - First warning")
%code%
on_database_exit(code)
Code2 = 
Ui_msg_box("Notice", "The database is now closing - Second warning")
%code%
on_database_exit(code2)
]]></example>
       </section>
       
       <section>
            <description>This code returns the registered events.</description>
            <example><![CDATA[
dim ptr as P
ptr = system_event_data_get()
? ptr.database_exit
= +1.
+2.
? ptr.database_exit.1
= code = Ui_msg_box("Notice", "The database is about to close - First warning")
level = "Application"
? ptr.database_exit.2
= code = Ui_msg_box("Notice", "The database is now closing - Second warning")
level = "Application"
]]></example>
       </section>
       
        <section>
            <description>This code drops the second database_exit event.</description>
            <example><![CDATA[
system_event_drop("database_exit", "2")
]]></example>
       </section>
       
   </sections>
   <see>
      <ref link="Desktop API">Database Functions</ref>
      <ref link="CAN_DATABASE_EXIT Function">CAN_DATABASE_EXIT()</ref>
      <ref link="ON_DATABASE_EXIT Function">ON_DATABASE_EXIT()</ref>
      <ref link="SYSTEM_EVENT_DROP Function">SYSTEM_EVENT_DROP()</ref>
   </see>
   <terms>database,events,function,pointer,script,system,variable</terms>
</page>