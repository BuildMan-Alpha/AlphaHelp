<page>
	<topic>Form Functions and Methods</topic>
	
<sections>
	<section>
		<title>Functions</title>
		<description>Alpha Anywhere provides the following Form functions.</description>
	<cases>
		<case>
			<title>A5.FORM_ENUM()</title>
			<description>Returns a CR-LF delimited list of all saved forms.</description>
		</case>
		<case>
			<title>A5.FORM_LOCATION()</title>
			<description>Returns the filename of the file contains the named form.
</description>
		</case>
		<case>
			<title>A5_LAYOUT_DESIGN()</title>
			<description>Opens the named layout in the appropriate editor.
</description>
		</case>
		<case>
			<title>A5_OPEN_DEFAULT_FORM()</title>
			<description>Opens the default form for a table or set.
</description>
		</case>
		<case>
			<title>A5RunXbasicAfterClosingWindows()</title>
			<description>Closes a form, runs Xbasic code, then restores the form.
</description>
		</case>
		<case>
			<title>ALLOW_EDITING()</title>
			<description><![CDATA[Returns the current setting of the Form > Allow Edits, or Browse > Allow Edits menu command.]]></description>
		</case>
		<case>
			<title>CLOSE_IF_EXISTS()</title>
			<description>Closes a form if it is open.
</description>
		</case>
		<case>
			<title>LAYOUT_DELETE()</title>
			<description>Deletes the named Form.
</description>
		</case>
		<case>
			<title>LAYOUT_RENAME()</title>
			<description>Renames or copies the named Form.</description>
		</case>
		<case>
			<title>PREVIEW_FORM()</title>
			<description>Displays a form as it would appear when printed.
</description>
		</case>
		<case>
			<title>PRINT_FORM()</title>
			<description>Creates the selected forms and then displays the Print dialog box.
</description>
		</case>
		
	</cases>
	
	</section>
	
</sections>
<sections>
	<section>
		<title>Methods</title>
		<description>Alpha Anywhere provides the following Form methods based on the default FORM object.</description>
	</section>
	<section>
		<description>Some Methods, shown in the second half of the methods list, require a prefix. Prefix these methods with either:</description>
		<cases>
			<case>
				<description>the name of the form</description>
			</case>
			<case>
				<description>topparent, when working within the form</description>
			</case>
			<case>
				<description>the pointer returned by the FORM.LOAD(), FORM.VIEW(), or FORM.VIEWQUERIED() methods.The following script examples, attached to a button on the Customer Information form, switch the form to browse view</description>
			</case>
			
		</cases>
	</section>
	<section>
		<description>Using an alias is desirable when working within the form.</description>
		<example><![CDATA[parentform.browse_view()
topparent.browse_view()]]></example>
	</section>
	<section>
		<description>Using the form name can cause problems, because it can change.</description>
		<example><![CDATA[customer_information.browse_view()
]]></example>
	</section>
	<section>
		<description>Using a pointer is necessary when working outside the form.</description>
		<example><![CDATA[dim frm as P
frm = form.view("Customer Information")
frm.browse_view()]]></example>
	</section>
	
</sections>	
	
<methods>
	<method>
		<syntax>.ARCHIVE</syntax>
		<description>Prints Layout_Name to file in the .PDF format.
</description>
	</method>
	<method>
		<syntax>.CREATE()</syntax>
		<description>Creates and displays a new form for a table or set.
</description>
	</method>
	<method>
		<syntax>.DELETE()</syntax>
		<description>Deletes Form_Name.
</description>
	</method>
	<method>
		<syntax>.DIALOG()</syntax>
		<description>Opens Form_Name as a dialog box.
</description>
	</method>
	<method>
		<syntax>.LOAD()</syntax>
		<description>Loads Form_Name into memory and returns the 

object pointer.</description>
	</method>
	<method>
		<syntax>.PREVIEW()</syntax>
		<description>Displays the form and the selected records in the Print Preview dialog.
</description>
	</method>
	<method>
		<syntax>.PRINT()</syntax>
		<description>Obsolete, see PRINT_FORM(). PRINT()creates the selected forms and then displays the Print dialog box.</description>
	</method>
	<method>
		<syntax>.SAVEAS()</syntax>
		<description>Prints Layout_Name to file in the specified format. If no format is specified, the .PDF format is used.
</description>
	</method>
	<method>
		<syntax>.SEND()</syntax>
		<description>Emails a layout as an attached file of type Format.
</description>
	</method>
	<method>
		<syntax>.VIEW()</syntax>
		<description>Opens Form_Name and returns the object pointer to the form window.
</description>
	</method>
	<method>
		<syntax>.VIEWQUERIED()</syntax>
		<description>Opens Form_Name and returns the object pointer to the form window.
</description>
	</method>
	<method>
		<syntax>.ZOOM_TO_RECORD()</syntax>
		<description>Opens a form and displays the current record in an embedded browse.
</description>
	</method>
	<method>
		<syntax>Methods Requiring Prefixes</syntax>
		<description></description>
	</method>
	<method>
		<syntax>.ACTIVATE()</syntax>
		<description>Sets focus to the object.
</description>
	</method>
	<method>
		<syntax>.ACTIVE()    </syntax>
		<description>Returns the name of the control (or column in the case of a Browse) with focus.
</description>
	</method>
	<method>
		<syntax>.ACTIVE_DRILLDOWN()</syntax>
		<description>Returns the address of the deepest control that has focus.
</description>
	</method>
	<method>
		<syntax>.ACTIVE_PREV()  </syntax>
		<description>Returns the name of the control which previously had focus.
</description>
	</method>
	<method>
		<syntax>.ACTIVEPREVDRILLDOWN()</syntax>
		<description>Returns the name of previously active object, drilling down into container objects.
</description>
	</method>
	<method>
		<syntax>.ALLOW_CHANGE()</syntax>
		<description>Sets the Allow Changes flag. When the flag is .T., data can be edited.
</description>
	</method>
	<method>
		<syntax>.ALLOWCHANGESTATUS</syntax>
		<description>Returns .T. (TRUE) if the form allows editing.
</description>
	</method>
	<method>
		<syntax>.BASEQUERYRUN</syntax>
		<description>Sets the base filter and order expressions for a form.
</description>
	</method>
	<method>
		<syntax>.BROWSE_VIEW()</syntax>
		<description>Toggles a form window into a browse window.
</description>
	</method>
	<method>
		<syntax>.BUTTON.PUSH()</syntax>
		<description>Activates a button and runs the buttons OnPush event.
</description>
	</method>
	<method>
		<syntax>.CANCEL()</syntax>
		<description>Cancels any changes made to the current record before the records is saved. Works for forms and browses.
</description>
	</method>
	<method>
		<syntax>.CHANGE_MODE()</syntax>
		<description>Puts a form into change mode, just as if the user had done so by beginning to type into any field.
</description>
	</method>
	<method>
		<syntax>.CHILD()</syntax>
		<description>Returns an object pointer to the Nth child of the object, or the child object called Object_Name.
</description>
	</method>
	<method>
		<syntax>.CHILD_ENUM()</syntax>
		<description>Returns a CR-LF separated list of all the child objects on the form, in tab order.
</description>
	</method>
	<method>
		<syntax>.CHILDREN()</syntax>
		<description>Returns the number of objects that a container object contains. Returns zero if the object is not a container.
</description>
	</method>
	<method>
		<syntax>.CLASS()</syntax>
		<description>Returns the class (i.e., type) of the object.</description>
	</method>
	<method>
		<syntax>.CLOSE()</syntax>
		<description>Closes the form or browse window.
</description>
	</method>
	<method>
		<syntax>.COMMIT()</syntax>
		<description>Saves the current records.
</description>
	</method>
	<method>
		<syntax>.COPY_PREV_RECORD()</syntax>
		<description>Copies values from the previous record into the current record.
</description>
	</method>
	<method>
		<syntax>.COPY_PREV_FIELD()</syntax>
		<description>Copies values from the corresponding field in the previous record into the current field.
</description>
	</method>
	<method>
		<syntax>.CURSOR_GET()</syntax>
		<description>Returns the position of the cursor on the form.
</description>
	</method>
	<method>
		<syntax>.CURSOR_SET()</syntax>
		<description>Sets the position of the cursor on the form.
</description>
	</method>
	<method>
		<syntax>.DATA_ENTRY_STYLE()</syntax>
		<description>Returns the mode of the form.
</description>
	</method>
	<method>
		<syntax>.DELETE_RECORD()</syntax>
		<description>Deletes the current record.
</description>
	</method>
	<method>
		<syntax>.DIAL_PHONE()</syntax>
		<description>Dials the phone number in the control that currently has focus.
</description>
	</method>
	<method>
		<syntax>.DICTIONARY_GET()</syntax>
		<description>Returns the name of the dictionary file that contains the form.
</description>
	</method>
	<method>
		<syntax>.DISABLE()</syntax>
		<description>Makes a form unable to receive focus. May also gray the object. Works with fields, buttons, check boxes, etc.
</description>
	</method>
	<method>
		<syntax>.DOWN()</syntax>
		<description>Moves the focus down as if the user had pressed the Down key. Works with forms.
</description>
	</method>
	<method>
		<syntax>.DUPLICATE_RECORD()</syntax>
		<description>Creates a new record that is a duplicate of the current record. Moves focus to the new record.
</description>
	</method>
	<method>
		<syntax>.ENABLE()</syntax>
		<description>Makes an object able to receive focus.
</description>
	</method>
	<method>
		<syntax>.EVAL()</syntax>
		<description>Interprets a string as Xbasic code.</description>
	</method>
	<method>
		<syntax>.FETCH_FIRST()</syntax>
		<description>Moves to the first record in the current query.
</description>
	</method>
	<method>
		<syntax>.FETCH_LAST()</syntax>
		<description>Moves to the last record in the current query.
</description>
	</method>
	<method>
		<syntax>.FETCH_NEXT()</syntax>
		<description>Moves to the next record in the current query.
</description>
	</method>
	<method>
		<syntax>.FETCH_PREV()</syntax>
		<description>Moves to the previous record in the current query.
</description>
	</method>
	<method>
		<syntax>.FILTER_GET()</syntax>
		<description>Returns the current filter expression for the form.
</description>
	</method>
	<method>
		<syntax>.FIND()</syntax>
		<description>Does a Find by Key for value. If value is not specified, the built-in Find dialog is displayed.
</description>
	</method>
	<method>
		<syntax>.FIND_AND_REPLACE()</syntax>
		<description>Displays the Find and Replace dialog box.
</description>
	</method>
	<method>
		<syntax>.FIND_BY_FORM()</syntax>
		<description>Puts the form into Find by Form mode.
</description>
	</method>
	<method>
		<syntax>.FIND_CLEAR()</syntax>
		<description>Clears entries from the Find by Form mode form.
</description>
	</method>
	<method>
		<syntax>.FIND_EXIT()</syntax>
		<description>Cancels the Find by Form mode.
</description>
	</method>
	<method>
		<syntax>.FIND_NEXT()</syntax>
		<description>Repeats the Find by Form, finding the next record.</description>
	</method>
	<method>
		<syntax>.FIND_PREV()</syntax>
		<description>Repeats the Find by Form, finding the previous record.
</description>
	</method>
	<method>
		<syntax>.FIND_RUN()</syntax>
		<description>Runs the Find by Form.
</description>
	</method>
	<method>
		<syntax>.FINDBY_DEFINEDKEY()</syntax>
		<description>A high level approach to displaying the Find by Key dialog box that allows you to customize its appearance and preset its filter.
</description>
	</method>
	<method>
		<syntax>.GETACTIVEOBJPARENT()</syntax>
		<description>Returns a pointer to the container of the object that has focus.
</description>
	</method>
	<method>
		<syntax>.HAS_METHOD()</syntax>
		<description>Returns .T. (TRUE) if the form supports the specified method.
</description>
	</method>
	<method>
		<syntax>.HIDE()</syntax>
		<description>Hides an object.
</description>
	</method>
	<method>
		<syntax>.ICON_GET</syntax>
		<description>Returns the name of the form's icon.
</description>
	</method>
	<method>
		<syntax>.INDEX_NAME()</syntax>
		<description>Returns the name of the current primary index or query.
</description>
	</method>
	<method>
		<syntax>.INDEX_POINTER()</syntax>
		<description>Returns a pointer to the current primary index or query.
</description>
	</method>
	<method>
		<syntax>.INDEX_SET()</syntax>
		<description>Selects an index or query list as the primary index.
</description>
	</method>
	<method>
		<syntax>.INDEX_SETEXPLICIT()</syntax>
		<description>Sets the primary index for the form.
</description>
	</method>
	<method>
		<syntax>.IndexSetDialog()</syntax>
		<description>Displays the Primary Index or Query dialog box.
</description>
	</method>
	<method>
		<syntax>.IS_ON_LAST_OBJECT()</syntax>
		<description>Returns .T. if the object is the last object on the form, as specified in the forms prompt order.
</description>
	</method>
	<method>
		<syntax>.ISVISIBLE()</syntax>
		<description>Returns .T. (TRUE) if the form is visible.
</description>
	</method>
	<method>
		<syntax>.KINDOF()</syntax>
		<description>Returns the kind of object represented by a form.</description>
	</method>
	<method>
		<syntax>.LAST_PRESSED()</syntax>
		<description>Returns the name of the last button pressed when a form is opened as a dialog.
</description>
	</method>
	<method>
		<syntax>.LEFT()</syntax>
		<description>
 
Moves the focus to the left as if the user had pressed the Left key.
 </description>
	</method>
	<method>
		<syntax>.LOCATE()</syntax>
		<description>Displays the Locate dialog box.
</description>
	</method>
	<method>
		<syntax>.LOCATE_NEXT()</syntax>
		<description>Finds the next record with a field value matching value. If field is not specified, all fields are searched. Otherwise, only the specified field is searched.
</description>
	</method>
	<method>
		<syntax>.LOCATE_PREV()</syntax>
		<description>Finds the previous record with a field value matching value. If field is not specified, all fields are searched. Otherwise, only the specified field is searched.
</description>
	</method>
	<method>
		<syntax>.MARK_RECORD()</syntax>
		<description>Marks the current record.
</description>
	</method>
	<method>
		<syntax>.MAXIMIZE()</syntax>
		<description>Maximizes the form window.
</description>
	</method>
	<method>
		<syntax>.MENUCHANGE()</syntax>
		<description>Displays the named menu.
</description>
	</method>
	<method>
		<syntax>.MENUITEMCHECK()</syntax>
		<description>Displays or removes a checkmark next to a menu entry.
</description>
	</method>
	<method>
		<syntax>.MENUITEMENABLE()</syntax>
		<description>Enables or disables (grays) a menu entry.
</description>
	</method>
	<method>
		<syntax>.MENUITEMRESET()</syntax>
		<description>Enables and removes any checkmarks from a menu entry.
</description>
	</method>
	<method>
		<syntax>.MINIMIZE()</syntax>
		<description>Minimizes the form or browse window.
</description>
	</method>
	<method>
		<syntax>.MODE_GET()</syntax>
		<description>Returns the current mode of the form. Possible modes are: VIEW, CHANGE, ENTER, QUERY and FIND.
</description>
	</method>
	<method>
		<syntax>.MULTI_SELECT()</syntax>
		<description>Displays the Multi-Select Records dialog box.
</description>
	</method>
	<method>
		<syntax>.NAME()</syntax>
		<description>Returns the object name.
</description>
	</method>
	<method>
		<syntax>.NAVIGATOR()</syntax>
		<description>Displays the Goto which field? dialog box.
</description>
	</method>
	<method>
		<syntax>.NEW_RECORD()</syntax>
		<description>Enters a new record into a form or a browse.
</description>
	</method>
	<method>
		<syntax>.NEXT()</syntax>
		<description>Moves the focus to the next control in the tab order as if the user had pressed the Tab key. Works with forms and browses.
</description>
	</method>
	<method>
		<syntax>.ORDER_GET()</syntax>
		<description>
 
Returns the current order expression for the form.
 </description>
	</method>
	<method>
		<syntax>.OUTPUT_FILE_OVERRIDE()</syntax>
		<description>Sets the name of the file to be printed. It returns the name, if any, of the file currently set to be printed.
</description>
	</method>
	<method>
		<syntax>.PREV()</syntax>
		<description>Moves the focus to the previous control in the tab order as if the user had pressed the Shift-Tab key.
</description>
	</method>
	<method>
		<syntax>.PRINTER_OVERRIDE()</syntax>
		<description>Sets the printer configuration, and optionally, saves the current configuration before overwriting it.
</description>
	</method>
	<method>
		<syntax>.QUERY_BY_EXPN()</syntax>
		<description>Displays the Query by Expression dialog.
</description>
	</method>
	<method>
		<syntax>.QUERY_BY_FORM()</syntax>
		<description>Switches a form to Query by Form mode.
</description>
	</method>
	<method>
		<syntax>.QUERY_BY_TABLE()</syntax>
		<description>Opens the Query by Table window.
</description>
	</method>
	<method>
		<syntax>.QUERY_CLEAR()</syntax>
		<description>Clears entries from the Query by Form mode form.
</description>
	</method>
	<method>
		<syntax>.QUERY_EXIT()</syntax>
		<description>Exits from Query by Form mode.
</description>
	</method>
	<method>
		<syntax>.QUERY_GENIE()</syntax>
		<description>Displays the Query Genie dialog box.
</description>
	</method>
	<method>
		<syntax>.QUERY_MODE()</syntax>
		<description>Switches a form to the Query by Form mode specified by mode.
</description>
	</method>
	<method>
		<syntax>.QUERY_RUN()</syntax>
		<description>Runs the query specified in the Query by Form window.
</description>
	</method>
	<method>
		<syntax>.QUERYRUN()</syntax>
		<description>Applies a query to the current form.
</description>
	</method>
	<method>
		<syntax>.QUICK_EXPORT()</syntax>
		<description>Exports the currently selected records to Excel.
</description>
	</method>
	<method>
		<syntax>.QUICK_SEARCH()</syntax>
		<description>Performs the same action as the Quick Filter command.
</description>
	</method>
	<method>
		<syntax>.QUICK_SEARCHEXCL()</syntax>
		<description>Opposite of the .QUICK_SEARCH() methods. Finds all records that do NOT match the value in the current control.
</description>
	</method>
	<method>
		<syntax>.QUICK_SORT()</syntax>
		<description>Performs the same action as the Quick Sort command. Works with forms and browses.
</description>
	</method>
	<method>
		<syntax>.QUICKFILTER()</syntax>
		<description>Returns a count of the matching records, as if you had clicked the Quick Filter icon.
</description>
	</method>
	<method>
		<syntax>.QUICKSORTEXPLICIT()</syntax>
		<description>Sorts the table or set on the indicated field and then displays it in the current form.
</description>
	</method>
	<method>
		<syntax>.QUICKSORTMULTIFLD()</syntax>
		<description>Displays the Custom Sort dialog box.
</description>
	</method>
	<method>
		<syntax>.QUICKSRCHEXPLICIT()</syntax>
		<description>Filters the records in a form based on the value of a field.
</description>
	</method>
	<method>
		<syntax>.QUICKSRCHMULTIFLD()</syntax>
		<description>Displays the multi-field Quick Filter dialog.</description>
	</method>
	<method>
		<syntax>.RECNO_GOTO()</syntax>
		<description>Displays the specified record number.
</description>
	</method>
	<method>
		<syntax>.RECORDS_GET()</syntax>
		<description>Returns the number of records displayed by the form.
</description>
	</method>
	<method>
		<syntax>.REFERENCE_EXPRESSION_GET()</syntax>
		<description>Returns the reference expression to reconstruct a reference to the object.
</description>
	</method>
	<method>
		<syntax>.REFRESH()</syntax>
		<description>Forces a control to re-fetch data from its data source, and then to repaint itself. Works with all controls.
</description>
	</method>
	<method>
		<syntax>.REFRESH_FIELDS()</syntax>
		<description>Refreshes all the fields on the form.
</description>
	</method>
	<method>
		<syntax>.REFRESH_LAYOUT()</syntax>
		<description>Reloads the form.
</description>
	</method>
	<method>
		<syntax>.RESTORE()</syntax>
		<description>Restores a minimized or maximized window to normal size. Works with form and browse windows.
</description>
	</method>
	<method>
		<syntax>.RESYNCH()</syntax>
		<description>Re-fetches all data for the form and repaints the form. Works with forms and browses.
</description>
	</method>
	<method>
		<syntax>.RIGHT()</syntax>
		<description>Moves the focus to the right as if the user had pressed the Right key.
</description>
	</method>
	<method>
		<syntax>.RIGHTCLICK()</syntax>
		<description>Displays the right-click for the selected object.</description>
	</method>
	<method>
		<syntax>.RUN_SAVED_QUERY()</syntax>
		<description>Runs the saved Query operation called Query_Name. This method is equivalent to the user selecting the Query, Run saved query menu option.
</description>
	</method>
	<method>
		<syntax>.SELECT_TEXT()</syntax>
		<description>Selects text in the current field from Start_Position for Length characters.
</description>
	</method>
	<method>
		<syntax>.SEND()</syntax>
		<description>Emails the form.
</description>
	</method>
	<method>
		<syntax>.SESSIONHANDLE()</syntax>
		<description>Returns the session handle associated with the object.
</description>
	</method>
	<method>
		<syntax>.SET_DIRTY()</syntax>
		<description>Indicates that the form layout has been changed.
</description>
	</method>
	<method>
		<syntax>.SHOW()</syntax>
		<description>Shows an object that may previously have been hidden using the .HIDE() method. Works with fields, buttons, check boxes, text, lines and most other objects on forms.
</description>
	</method>
	<method>
		<syntax>.SHOW_ALL()</syntax>
		<description>Turns off the current query and shows all records in the table (subject to any base filter that may have been specified in the form or browses Filter/Order properties).
</description>
	</method>
	<method>
		<syntax>.SHOW_MEMO()</syntax>
		<description>Opens the memo editor for a memo field.
</description>
	</method>
	<method>
		<syntax>.SIZE_GET()</syntax>
		<description>Returns the size of the window in inches (width x height).
</description>
	</method>
	<method>
		<syntax>.SPECIALQUERIES()</syntax>
		<description>Displays the Select Filter dialog box.</description>
	</method>
	<method>
		<syntax>.SPELL_CHECK()</syntax>
		<description>
 
Displays the Spellchecker dialog box.
 </description>
	</method>
	<method>
		<syntax>.SWAP()</syntax>
		<description>Replaces the current form with a different form.
</description>
	</method>
	<method>
		<syntax>.TAB_OBJECT.TAB_GET()</syntax>
		<description>Returns the tab number of the tab page that has focus.
</description>
	</method>
	<method>
		<syntax>.TAB_OBJECT.TAB_SET()</syntax>
		<description>
 
Activates the specified tab page on a tab control on a form.
 </description>
	</method>
	<method>
		<syntax>.TABLE_GET()</syntax>
		<description>Returns a pointer to the primary table that the form is based on.
</description>
	</method>
	<method>
		<syntax>.TOGGLE_FORMBROWSE()</syntax>
		<description>Switches the form to browse mode.
</description>
	</method>
	<method>
		<syntax>.TOOLBARCHANGE()</syntax>
		<description>Loads and displays the selected toolbar.
</description>
	</method>
	<method>
		<syntax>.ToolbarControlEnable()</syntax>
		<description>Enables or disables the specified item on the control bar.
</description>
	</method>
	<method>
		<syntax>.TYPE()</syntax>
		<description>Returns the type of data bound to an object.
</description>
	</method>
	<method>
		<syntax>.UNMARK_RECORD()</syntax>
		<description>Un-marks the current record.
</description>
	</method>
	<method>
		<syntax>.UP()</syntax>
		<description>Moves the focus up as if the user had pressed the Up key.
</description>
	</method>
	<method>
		<syntax>.VARIABLES()</syntax>
		<description>Returns a pointer to a dot variable that contains the values of the selected variables.
</description>
	</method>
	<method>
		<syntax>.WINDOW_POSITION()</syntax>
		<description>Sets the location of the form on the screen.
</description>
	</method>
	<method>
		<syntax>.ZORDER()</syntax>
		<description>Sets the stacking position of a form.
</description>
	</method>
	
</methods>		
	<see>
		<ref>Form Control Methods</ref>
</see>
</page>