<page>
	<topic>Objects that support Parsing</topic>
<description>Some of the SQL objects support parsing directly. By this, we mean that you can declare the variable and immediately have it parse a string to assign values. These objects include:</description>	
<sections>
	<section>
		
	
<cases>
	<case>
		<description>SQL::Query</description>
	</case>
	<case>
		<description>SQL::InsertStatement</description>
	</case>
	<case>
		<description>SQL::UpdateStatement</description>
	</case>
	<case>
		<description>SQL::DeleteStatement</description>
	</case>
	<case>
		<description>SQL::Query::Join</description>
	</case>
	<case>
		<description>SQL::Query::ValueExpression</description>
	</case>
	<case>
		<description>SQL::Query::LogicalExpression</description>
	</case>
	<case>
		<description>SQL::Query::SelectItem</description>
	</case>
	<case>
		<description>SQL::Query::ColumnOrder</description>
	</case>
	
	
</cases>	
</section>


<section>
	<title>Properties</title>
<description>Each of these objects supports the following properties.</description>	
<cases>
	<case>
		<title>ColumnReferences</title>
		<list>
			<item>
				<name>Type</name>
				<description>ReferenceList of SQL::Query::ColumnReference</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Only</description>
			</item>
			<item>
				<name>Description</name>
				<description>An array of all column references in the query (including nested occurrences). Behaves the same way as  .SelectTableReferences.
</description>
			</item>
			
			
		</list>
		
	</case>
	<case>
		<title>ErrorColumn
</title>
		<list>
			<item>
				<name>Type</name>
				<description>Numeric</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Only</description>
			</item>
			<item>
				<name>Description></name>
				<description>The column number of the first error reported by the parser.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>ErrorText
</title>
		<list>
			<item>
				<name>Type</name>
				<description>Character</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Only</description>
			</item>
			<item>
				<name>Description></name>
				<description>The text of the parser error reported.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>FunctionReferences
</title>
		<list>
			<item>
				<name>Type</name>
				<description>ReferenceList of SQL::Query::ValueExpression</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Only</description>
			</item>
			<item>
				<name>Description></name>
				<description>An array of all function calls parsed. Behaves the same way as  .SelectTableReferences.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>ObjectDefinitions
</title>
		<list>
			<item>
				<name>Type</name>
				<description>Character</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Only</description>
			</item>
			<item>
				<name>Description></name>
				<description>Dumps the descriptions of the parse tree mapping.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>ParseTree
</title>
		<list>
			<item>
				<name>Type</name>
				<description>-</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Write</description>
			</item>
			<item>
				<name>Description></name>
				<description>A string description of the parse tree created.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>
SelectTableReferences</title>
		<list>
			<item>
				<name>Type</name>
				<description>ReferenceList of SQL::Query::SelectTableReference</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Only</description>
			</item>
			<item>
				<name>Description></name>
				<description>An array of all table references in the query (including those nested inside of sub-selects and joins). This array is created when the property is requested, but can become out of date. Use the Resynch() function on any variable holding this list when any changes are made.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>SQLStatement</title>
		<list>
			<item>
				<name>Type</name>
				<description>Character</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Write</description>
			</item>
			<item>
				<name>Description></name>
				<description>A variable that can be assigned a syntax string without parsing it. If no value is passed to the Parse() method, this value is used. Note: This string is dynamically created from the parse tree, so it may not match the original string exactly.
</description>
			</item>
			
			
		</list>
		
	</case><case>
		<title>XML
</title>
		<list>
			<item>
				<name>Type</name>
				<description>Character</description>
			</item>
			<item>
				<name>Mode</name>
				<description>Read Write</description>
			</item>
			<item>
				<name>Description></name>
				<description>An XML description of the parse tree. This property can be assigned to.
</description>
			</item>
			
			
		</list>
		
	</case>
	
</cases>
</section>
<section>
	<title>Methods</title>
<description>Each of these objects supports the following methods.</description>	
<cases>
	<case>
		<title>::Execute()
</title>
		<description>Executes the current statement using the current or passed connection.
</description>
	</case>
	<case>
		<title>::Query::Format()
</title>
		<description>Formats a SQL statement, optionally placing each element on a separate line.
</description>
	</case>
	<case>
		<title>::GenerateNativeSyntax()
</title>
		<description>Generates a native SQL statement using the selected syntax associated with the current or passed connection.
</description>
	</case>
	<case>
		<title>::OpenConnection()
</title>
		<description>Generates a native SQL statement using the selected syntax and connects to a database.
</description>
	</case>
	<case>
		<title>::Parse()
</title>
		<description>Parses the SQL statement passed (or the value previously set into the .SQLStatement property). If the parse is successful, the elements of the SQL statement will be available immediately as properties of the object.
</description>
	</case>
	<case>
		<title>::ReleaseConnection()
</title>
		<description>Clears out the connection property.
</description>
	</case>
	<case>
		<title>::Reset()
</title>
		<description>Resets the query as if it had just been created.
</description>
	</case>
	<case>
		<title>::Validate()
</title>
		<description>Executes the current statement using the current or passed connection.
</description>
	</case>
	
</cases>	
	
</section>
<section>
	<description>For example:</description>
<example><![CDATA[dim query as SQL::Query

query.Parse("select customer from orders where id = 12")
]]></example>	
</section>


</sections>	
	<limitations>Desktop applications only.</limitations>
	<see>
		<ref>SQL Objects</ref>
	</see>
</page>