<page>
	<topic>Object Properties Table Lookups</topic>
<description>The value of using object properties to populate a list is that the developer can use a variety of other control types. The Object Properties tab of the Table Lookups form demonstrates five different ways to do table lookups.</description>	
<sections>
	
<section>
	
	<note>Each of the following examples has extra fields (for your information only) that display the stored values of the quote_vendor_no and quote_product_no fields.</note>
	
</section>	
<section>
	<title>List Box Configuration</title>
<description>The List Box tab of the Table Lookups form contains two list boxes. </description>	
<figure><link>images/UG_Object_Properties_tab.gif</link></figure>	
</section>
<section>
	<title>Vendor Choices for List Box</title>
<description>The Choices tab of the list box displays the vendor_name field and stores the vendor_no field from the Vendor table. The records are sorted alphabetically by vendor_name. </description>	
<figure><link>images/UG_Vendor_Choices.gif</link></figure>	
</section>	
<section>
	
	<steps>
		<step>
			<description>Select the list box and right click.</description>
		</step>
		<step>
			<description>Select Properties... .</description>
		</step>
		<step>
			<description>Display the Choices tab.
</description>
		</step>
		<step>
			<description>Select "Computed Automatically" in the Choices for control are list.
</description>
		</step>
		<step>
			<description>Select "Values from a table/set" in the Source list.
</description>
		</step>
		<step>
			<description>Select "vendor" in the From Table list.
</description>
		</step>
		<step>
			<description>In the Field/expression value to display control enter " vendor_name + "|" + vendor_no ". This expression returns two fields: vendor_name, which is displayed, and vendor_no, which is stored.
</description>
		</step>
		<step>
			<description>Select "vendor_name" in the Display order list. This sorts the records alphabetically on the vendor_name field.
</description>
		</step>
		<step>
			<description>Click OK to return to the Form Editor.
</description>
		</step>
		
	</steps>
	
	
</section>
<section>
	<title>Product Choices for List Box</title>
<description>The Choices tab of the List Box displays the product_name field and stores the product_no field from the Product table. The records are sorted alphabetically by product_name. </description>	
<figure><link>images/UG_Product_Choices.gif</link></figure>	
	
</section>
<section>
	<steps>
		<step>
			<description>Select the list box and right click.
</description>
		</step>
		<step>
			<description>Select Properties... .
</description>
		</step>
		<step>
			<description>Display the Choices tab.
</description>
		</step>
		<step>
			<description>In the Choices for control are list select "Computed Automatically".
</description>
		</step>
		<step>
			<description>In the Source list select "Values from a table/set".
</description>
		</step>
		<step>
			<description>In the From Table list select "product".
</description>
		</step>
		<step>
			<description>In the Field/expression value to display control enter " product_name + "|" + product_no ". This expression returns two fields: product_name, which is displayed, and product_no, which is stored.
</description>
		</step>
		<step>
			<description>In the Display order list select "product_name". This sorts the records alphabetically on the product_name field.
</description>
		</step>
		<step>
			<description>Select Enable Filter Expression and click Edit Filter Expression.
</description><cases>
	<case>
	<title>Product Filter for List Box</title>
<description>In addition, the product_name records are limited to those where product_vendor_no field equals quote_vendor_no_op1. A change in the quote_vendor_no_op1 field triggers a refresh of the Product list. 
</description>	
<figure><link>images/UG_Product_Choices_Filter.gif</link></figure>	
	<note>The table name in the Field Expression (in target table) must not be fully qualified. However, the table names in Field Expression (in current table) and Watch Expression fields must be fully qualified. The reason is that Alpha Anywhere evaluates the expression from the point of view of the Product table.</note>
		
	</case>
	
	
</cases>
		</step>
		<step>
			<description>Enter "Product_Vendor_No" in the Field Expression (in target table) list.
</description>
		</step>
		<step>
			<description>Select "=" in the Operator list.
</description>
		</step>
		<step>
			<description>Select "Quote_Vendor_No_OP1" in the Field Expression (in current table) list.
</description>
		</step>
		<step>
			<description>Select "Quote_Vendor_No_OP1" in the Watch Expression list.
</description>
		</step>
		<step>
			<description>Click OK to return to the Field Properties dialog.
</description>
		</step>
		<step>
			<description>Click OK to return to the Form Editor.
</description>
		</step>
		
	</steps>
	
</section>
<section>
	<title>Combo Box Configuration</title>
<description>The Combo Box tab of the Table Lookups form contains two combo boxes. </description>	
	<figure><link>images/UG_Object_Properties_tab_2.gif</link></figure>
</section>
<section>
	<title>Vendor Choices for Combo Box
</title>
<description>The Choices tab of the Vendor combo box displays the vendor_name field from the Vendor table. The records are sorted alphabetically by vendor_name. The implementation is the same as described in Vendor Choices for List Box.</description>	
	
</section>
<section>
	<title>Product Choices for Combo Box
</title>
<description>The Choices tab of the Product combo box displays the product_name field from the Product table. The records are sorted alphabetically by product_name. The implementation is the same as described in Product Choices for List Box.</description>	
	
</section>
<section>
	<title>Product Filter for Combo Box
</title>
<description>In addition, the product_name records are limited to those where product_vendor_no field equals quote_vendor_no_op2. A change in the quote_vendor_no_op2 field triggers a refresh of the Product list. The implementation is the same as described in Product_Filter_for_List_Box, with the exception of that the variable names change from Quote_Vendor_No_Op1 to Quote_Vendor_No_Op2.</description>	
	<note></note>
</section>
<section>
	<title>The table name in Field Expression (in target table) must not be fully qualified. However, the table names in Field Expression (in current table) and Watch Expression fields must be fully qualified. The reason is that Alpha Anywhere evaluates the expression from the point of view of the Product table.</title>
<description></description>	
	
</section>
<section>
	<title>Record List - List Box Configuration
</title>
<description>The Record List - List Box tab of the Table Lookups form contains two record list boxes. 
</description>	
<figure><link>images/UG_Object_Properties_tab_3.gif</link></figure>	
</section>
<section>
	<title>Vendor Choices for Record List - List Box</title>
<description>The Choices tab of the record list - list box displays the vendor_name field and stores the vendor_no from the Vendor table. The records are sorted alphabetically by vendor_name. 
</description>	
<figure><link>images/UG_Vendor_Choices_2.gif</link></figure>	

</section>
<section>
	<steps>
		<step>
			<description>Select the record list - list box and right click.
</description>
		</step>
		<step>
			<description>Select Properties... .
</description>
		</step>
		<step>
			<description>Display the Choices tab.
</description>
		</step>
		<step>
			<description>Select "vendor" in the From Table list.
</description>
		</step>
		<step>
			<description>Select "vendor_no" in the Return Value list. This is the field that the form will store. 
</description>
<figure><link>images/UG_Vendor_Choices_3.gif</link></figure>
		</step>
		<step>
			<description>Click Add New Column to Record List.
</description>
		</step>
		<step>
			<description>Select "vendor_name" in the Field list.
</description>
		</step>
		<step>
			<description>Change the column title in the Header control to "Name".
</description>
		</step>
		<step>
			<description>Click OK.
</description>
		</step>
		<step>
			<description>Click A dd New Column to Record List.
</description>
		</step>
		<step>
			<description>Select "vendor_no" in the Field list.
</description>
		</step>
		<step>
			<description>Change the column title in the Header control to "Number".
</description>
		</step>
		
		
	</steps>
	
	
</section>
<section>
	<title>Product Choices for Record List - List Box
</title>
	<description>The Choices tab of the record list - list box displays the product_name field and stores the product_no field from the Product table. The records are sorted alphabetically by product_name. 
</description>
<figure><link>images/UG_Product_Choices_2.gif</link></figure>	
	<steps>
		<step>
			<description>Select the record list - list box and right click.
</description>
		</step>
			<step>
			<description>Click Properties... .
</description>
		</step>
			<step>
			<description>Display the Choices tab.
</description>
		</step>
			<step>
			<description>Select "product" in the From Table control.
</description>
		</step>
		<step>
			<description>Select "product_no" in the Return value control. This is the field that the form will store.
</description>
		</step>
			<step>
			<description>Click Add New Column to Record List.
</description>
		</step>
			<step>
			<description>Select "product_name" in the Field list.
</description>
		</step>
			<step>
			<description>Change the column title in the Header field to "Name".
</description>
		</step>
		<step>
			<description>Click OK.
</description>
		</step>
			<step>
			<description>Click Add New Column to Record List.
</description>
		</step>
			<step>
			<description>Select "product_symbol" in the Field list.
</description>
		</step>
			<step>
			<description>Change the column title in the Header field to "Symbol".
</description>
		</step>
		
		
	</steps>
</section>
<section>
	<title>Product Filter for Record List - List Box
</title>
<description>In addition, the product_name records are limited to those where product_vendor_no field equals quote_vendor_no_op3. A change in the quote_vendor_no_op3 field triggers a refresh of the Product list. 
</description>	
<figure><link>images/UG_Product_Choices_Filter_2.gif</link></figure>	
	
</section>
<section>
	<steps>
		<step>
			<description>Select Enable Filter Expression and click Edit Filter Expression.
</description>
		</step>
			<step>
			<description>In the Field Expression (in target table) control enter "Product_Vendor_No".
</description>
		</step>
			<step>
			<description>Select "=" in the Operator list.
</description>
		</step>
			<step>
			<description>In the Field Expression (in current table) control enter "Product_Vendor_No_OP3".
</description>
		</step>
		<step>
			<description>Select "Quote_Vendor_No_OP3" in the Watch Expression control.
</description>
		</step>
			<step>
			<description>Select "product_name" in the Display order list.
</description>
		</step>
			<step>
			<description>Click OK to return to the Field Properties dialog.
</description>
		</step>
			<step>
			<description>Click OK to return to the Form Editor.
</description>
		</step>
		
	</steps>
	
	
</section>
<section>
	<title>Record List - Combo Box Configuration
</title>
<description>The Record List - List Box tab of the Table Lookups form contains two list boxes. 
</description>	
<figure><link>images/UG_Object_Properties_tab_4.gif</link></figure>	
	
</section>

<section>

<description>Vendor Choices for Record List - Combo Box
The Choices tab of the record list - combo box displays the vendor_name field and stores the vendor_no field from the Vendor table. The records are sorted alphabetically by vendor_name. The implementation is the same as described in Vendor Choices for Record List-List Box.
Product Choices for Record List - Combo Box
The Choices tab of the record list - combo box displays the product_name field and stores the product_no field from the Product table. The records are sorted alphabetically by product_name. The implementation is the same as described in Product Choices for Record_List-List Box.
Product Filter for Record List - Combo Box
In addition, the product_name records are limited to those where product_vendor_no field equals quote_vendor_no_op4. A change in the quote_vendor_no_op4 field triggers a refresh of the Product list. The implementation is the same as described in Product Filter for Record List-List Box, except that the variable quote_vendor_no_op3 changes to quote_vendor_no_op4.
Radio Button Configuration
The Radio Button tab of the Table Lookups form contains two radio buttons. There are no field rules or choices defined in object properties. The implementation is based on Xbasic code as follows. 
</description>	

	
</section>
<section>
	
	<cases>
		<case>
			<title>Tabbed2 OnTabChange</title>
			<description>This event refreshes the list of Vendors when the user arrives at the Event Driven tab. The code retrieves a list of Vendors, counts the number of records, and limits the list to a maximum of 7 items (because of the size of the area allocated to radio buttons).</description>
		</case>
		<case>
			<title>Table_Lookups OnFetch</title>
			<description>This event refreshes the list of Products when the user reads a new record. The script calls a function named Refresh_Products.</description>
		</case>
		<case>
			<title>Vendor OnChange</title>
			<description>This event refreshes the list of Products when the user selects a different vendor. The script calls a function named Refresh_Products.</description>
		</case>
		<case>
			<title>Refresh_Products()</title>
			<description>This function receives pointers to the Vendor and Product radio button objects. It uses this information to retrieve the appropriate list of Product_name fields. It limits the list to a maximum of 7 items.</description>
			<figure><link>images/UG_Object_Properties_tab_5.gif</link></figure>
		</case>
		
	</cases>
	
</section>
<section>
	<title>Tabbed2 OnTabChange Event</title>
<example><![CDATA[dim cFieldList as C
dim nCounter as N
dim nRecordCount as N
dim cWord as C
cFieldList = table.external_record_content_get("Vendor", \ "Vendor_Name + '|' + Vendor_No", "Vendor_Name", "")
nRecordCount = w_count(cFieldList, crlf())
nRecordCount = min(7, nRecordCount)
if (nRecordCount = 0) then
    end
end if
vendor.choice.list.redim(nRecordCount)
for nCounter = 1 to nRecordCount
    cWord = word(cFieldList, nCounter, crlf())
    vendor.choice.listnCounter.value = word(cWord, 2, "|")
    vendor.choice.listnCounter.text = word(cWord, 1, "|")
next nCounter]]></example>	
</section>
<section>
	<title>Vendor OnChange Event</title>
<example><![CDATA[dim vendor_ptr as P
dim product_ptr as P
dim nRecordCount as N
vendor_ptr = Vendor.this
product_ptr = Product.this
nRecordCount = refresh_products(vendor_ptr, product_ptr)
]]></example>	
</section>
<section>
	<title>Table Lookups OnFetch Event</title>
<example><![CDATA[dim vendor_ptr as P
dim product_ptr as P
dim nRecordCount as N
vendor_ptr = Vendor.this
product_ptr = Product.this
nRecordCount = refresh_products(vendor_ptr, product_ptr)]]></example>	
</section>

<section>
	<title>Refresh_Products() function</title>
<example><![CDATA[FUNCTION Refresh_Products as C (Vendor as P, Product as P)
dim cFieldList as C
dim nCounter as N
dim nRecordCount as N
dim cWord as C
dim cVendor as C
cVendor = Vendor.value
cFieldList = table.external_record_content_get("Product",\ "Product_Name + '|' + Product_No","Product_Name",\ "Product_Vendor_No = " + quote(cVendor))
nRecordCount = w_count(cFieldList,crlf())
if (nRecordCount = 0) then
    end
end if
nRecordCount = min(7, nRecordCount)
Product.choice.list.redim(nRecordCount)
for nCounter = 1 to nRecordCount
    cWord = word(cFieldList, nCounter, crlf())
    Product.choice.listnCounter.value = word(cWord, 2, "|")
    Product.choice.listnCounter.text = word(cWord, 1, "|")
next nCounter
END FUNCTION]]></example>	
</section>

</sections>	
	
	
</page>