<page>
   <topic>OBJECT.ARCHIVE Function</topic>
    <description><![CDATA[The <OBJECT>.ARCHIVE() method prints Layout_Name to file in the .PDF format.  ]]></description>
  
<prototypes>   <prototype>.Archive(c layoutname [,c filter [,c order ]])</prototype>
<prototype>Object_Type.ARCHIVE( layoutname as C [, filter as C [, order as C [, argument as SQL::Arguments ]]] )</prototype></prototypes>
 
 
 
   <arguments>
   <argument>
         <name>Object_Type</name>
         <description>This word can be any of the following:</description>
<list>
<item>
<name>"Browse"</name>
</item>

<item>
<name>"Form"</name>
</item>

<item>
<name>"Label"</name>
</item>

<item>
<name>"Letter"</name>
</item>

<item>
<name>"Report"</name>
</item>


</list>
     </argument>
     <argument>
         <name>layoutname</name>
         <description>The name of a form, browse, label, letter, or report layout.
</description>
     </argument>
     <argument>
         <name>filter</name>
         <description>Optional. Default = all records. An expression that selects records.
</description>
     </argument>
     <argument>
         <name>order</name>
         <description>Optional. Default = record order number. An expression that order the selected records.
</description>
     </argument>
     
     
 <argument>
         <name>argument</name>
         <description>Optional. Default = NULL_VALUE(). Arguments that retrieve value(s) from variable(s) or prompts for value(s) at runtime. Only applicable to SQL Reports. Refer to SQL::Arguments Object.
</description>
     </argument>
    
      <argument>
         <name>options</name>
         <description>Optional. Default = NULL_VALUE(). Sets filter (WHERE) and order (ORDER BY) expressions for a query against a passive-linked table. A pointer dot variable with 2 elements. Refer to Using the Options Argument.</description>
<list>
<item>
<name>.filter = Adds to the WHERE clause in the underlying SQL expression.</name>
</item>
<item>
<name>.order = Replaces the ORDER BY clause in the underlying SQL expression.</name>
</item>
</list>    
    
     </argument>     
     
     
   </arguments>
   <discussion><![CDATA[Filename is the name of the archive file created. The format of filename is " layoutname (mm-dd-yy hh-mm AM).pdf ".
The archive file is stored in a folder called "Archive" off the folder in which the current .adb file is stored. Use the Adobe Acrobat Reader to view these archived files.
   ]]></discussion>
  
   <sections>
       <section><title>Example</title>
            <description>This script creates an archived copy of the Invoice report.</description>
            <example><![CDATA[
:Report.archive("Invoice")
]]></example>
       </section>
        <section>
            <description>This script creates an archived copy of the Invoice report with an argument. You can add as many arguments to the arguments collection as you want.</description>
            <example><![CDATA[
:Report.archive("Invoice")
DIM myargs as SQL::arguments
 myargs.add("whatcity","London") 
 report.preview("report1", "", "", .f., .f., myargs)
]]></example>
       </section>
       
       
   </sections>
   <limitations>Desktop applications only.</limitations>
   <see>
      <ref link="Form Functions and Methods">Form Functions and  Methods</ref>
      <ref link="Browse Functions and Methods">Browse  Functions and Methods</ref>
   </see>
  <terms>object,arguments,collection,expressions,filter,function,pointer,query,record,script,sql,variable</terms>
</page>