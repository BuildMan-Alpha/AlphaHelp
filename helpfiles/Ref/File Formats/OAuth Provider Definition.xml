<page>
      <shortlink>api file formats oauth provider definition</shortlink>
   <topic>OAuth Provider Definition</topic>
   <description>The oAuth Provider Definition in a JSON configuration file with a .json extension that is stored in a oAuthProviders folder in the WebProject, the system
   oAuth Providers are stored in the oAuthProviders folder under the EXE path.
   </description>
   <sections>
   <section>
   <title>oAuth 2.0 definitions</title>
    <description>Google is a good example of an oAuth 2.0 endpoint.  The JSON profile information example below shows the settings.</description>
   <example>
{
	"profile": {
		"host": "accounts.google.com/o",
		"authorize_path": "/oauth2/v2/auth",
        "token_path" : "/oauth/access_token",
		"resource_host": "www.googleapis.com",
		"oauth_version": "2.0",
		"oauth2_bearer": "{AccessToken}",
		"oauth2_scope": "profile email",
		"TokenTimeoutCodepattern": "AddSecondsToNow",
		"SuccessVariable": "code",
		"TokenExpiresVariable": "expires_in",
		"ProfileIdVariable": "id",
		"getProfileInfo": "/oauth2/v1/userinfo",
		"accessFromRefreshTokenUrl": "https://www.googleapis.com/oauth2/v4/token",
		"TemplateDisplayName": "{name}",
		"ProcessCodePattern": "oAuth 2.0 - Generic",
		"UIWindowWidth": "500:100",
		"UIWindowHeight": "550:40"
	}
}</example>
   </section>
   
   <section>
          <title>OAuth 2.0 Properties Used To Define an OAuth Provider</title>
<list>
        <item>
                     <name-title>Name</name-title>
                     <description-title>Property and Description</description-title>
               </item>
        <item>
            <name>OAuth Version</name>
            <description>Property: oauth_version. Specifies oAuth version - 2.0</description>
      </item>
</list>
   </section>
   
   
   <section>
        <title>URLS</title>
 <description>Full or partial URL's used to get data from provider.</description>
   <list>
      <item>
                     <name-title>Name</name-title>
                     <description-title>Property and Description</description-title>
               </item>
      <item>
            <name>Host</name>
            <description>Property: host. URL host for oAuth 2.0 service</description>
      </item>
       <item>
            <name>Resource Host</name>
            <description>Property: resource_host. Host for resources .</description>
      </item>
      
      <item>
            <name>Authorize path</name>
            <description>Property: authorize_path.Endpoint to login to account</description>
      </item>
      <item>
            <name>Token Path</name>
            <description>Property: token_path. Endpoint to exchange code for access token.</description>
      </item>
     
     
      <item>
            <name>Get Profile Info</name>
            <description>Property: getProfileInfo. Endpoint to retreive Profile Information (if using the provider for external login).</description>
      </item>
      <item>
            <name>Access Token From Refresh</name>
            <description>Property: AccessFromRefreshTokenURL. Optional, The path request used to exchange a valid refresh token for an access token</description>
            
      </item>
      <item>
            <name>Get Profile Method</name>
            <description>Property: getProfileMethod. Optional, HTTP request method used with the 'Get profile info' URL = Either GET or POST</description>
      </item>
     <item>
           <name>Enable Proof</name>
           <description>Property: enable_proof. Optional, Send optional security method</description>
     </item>
   </list>
   </section>
   <section>
         <title>Options</title>
         <description>Optional properties to get desired data</description>
         <list>
                 <item>
                     <name-title>Name</name-title>
                     <description-title>Property and Description</description-title>
               </item>
                <item>
            <name>Base Scopes</name>
            <description>Property: oauth2_scope. Scopes required for login information (if using the provider for external login).</description>
      </item>
                <item>
            <name>Bearer Token</name>
            <description>Property: oauth2_bearer. Template for filling in Access token from result.</description>
      </item>
         </list>
         
         
         
   </section>
   <section>
         <title>Data and Data Processing</title>
         <description>Variables returned by provider that contain data and data process info.</description>
         <list>
                 <item>
                     <name-title>Name</name-title>
                     <description-title>Property and Description</description-title>
               </item>
               <item>
                     <name>Variable returned on success</name>
                     <description>Property: SuccessVariable. Name of variable returned from provider after validation </description>
               </item>
               
     
      
      
       <item>
                     <name>Variable returned on a fail or cancel</name>
                     <description>Property: ErrorVariable. Optional, Variable returned on failed or cancelled request</description>
               </item>
                <item>
            <name>Variable returned with user identifier</name>
            <description>Property: ProfileIdVariable. Field returned by the getProfileInfo endpoint that idenities the user for external login.</description>
      </item>
                <item>
                     <name>Variable that has URL to get user profile</name>
                     <description>Property: ProfileURLVariable. Optional, Variable that contains URL to get user profile identifier (replaces getProfileInfo)</description>
               </item>
                <item>
                     <name>Variable used for token expiration value</name>
                     <description>Property: TokenExpiresVariable. Optional, Variable that contains access token timeout data</description>
               </item>
                <item>
                     <name>Token timeout code pattern</name>
                     <description>Property: TokenTimeoutCodepattern. Used to calculate when token expires.</description>
               </item>
                <item>
                     <name>Variable used for token issued time</name>
                     <description>Property: TokenIssuedVariable. Optional, Some timeouts are calculated from an issued time</description>
               </item>
                <item>
                     <name>Token lifetime in seconds</name>
                     <description>Property: TokenTimeout. Optional, Seconds to expire after issued time	</description>
               </item>
                <item>
                     <name>Process code pattern</name>
                     <description>Property: ProcessCodePattern. Optional, OAuth version specific process pattern</description>
               </item>
                <item>
                     <name>Template for display name</name>
                     <description>Property: TemplateDisplayName. Optional, Template with placeholders to use to define a user display name</description>
               </item>
                <item>
                     <name>Template for email</name>
                     <description>Property: TemplateEmail. Optional, Template with placeholders to define the user email address</description>
               </item>
              
         </list>
         
         
   </section>
   <section>
         <title>UI Configuration</title>
         <description>Configure web and desktop windows for user input.</description>
         <list>
               <item>
                     <name-title>Name</name-title>
                     <description-title>Property and Description</description-title>
               </item>
                 <item>
                     <name>Web Pop up window height</name>
                     <description>Property: PopUIWindowHeight. Optional, Web ONLY. Height of popup window to show provider login	</description>
               </item>
                <item>
                     <name>Web Pop up window width</name>
                     <description>Property: PopUIWindowWidth. Optional, Web ONLY. Width of popup window to show provider login</description>
               </item>
                 <item>
                     <name>Desktop window height</name>
                     <description>Property: XDUIWindowHeight. Optional, Desktop ONLY. Height of xDialog form to show provider logn </description>
               </item>
                <item>
                     <name>Desktop window width</name>
                     <description>Property: XDUIWindowWidth. Optional, Desktop ONLY. Width of xDialog form to show provider login.</description>
               </item>
                 <item>
                     <name>Text for client id</name>
                     <description>Property: UIClientIdText. Optional, Desktop ONLY.  Label text to show on xDialog forms for ‘client id”</description>
               </item>
                <item>
                     <name>Text for client secret</name>
                     <description>Property: UIClientSecretText. Optional, Desktop ONLY. Label text to show on xDialog forms for ‘client secret”</description>
               </item>
         </list>
   </section>
   
   
   
   
   
   <section>
         <title>OAuth 1.0 Properties</title>
   <description>OAuth 1.0 Properties are slightly different because oAuth 1.0 has more endpoints, and requires a hash method and protol (http/https) to be specified. </description> 
   <list>
      <item><name-title>Property</name-title><description-title>Description</description-title></item>
      <item><name>oauth_version</name><description>oAuth Version - 1.0</description></item>
      <item><name>host</name><description>hostname for oAuth 1.0 service.</description></item>
      <item><name>use_ssl</name><description>Does the service use SSL (oAuth 1.0 allows for http since all requests against apis are signed)</description></item>
      <item><name>authorize_path</name><description>Get a request token - this is the first call, done to establish a secret for the request.</description></item>
      <item><name>authenticate_path</name><description>Login endpoint - prompts the user for access.</description></item>
      <item><name>access_token_path</name><description>Endpoint to exchange code returned from login for access token.</description></item>
      <item><name>oauth_signature_method</name><description>Method used to sign keys - i.e. HMAC-SHA1.</description></item>
   </list>
   </section>
   </sections>
</page>