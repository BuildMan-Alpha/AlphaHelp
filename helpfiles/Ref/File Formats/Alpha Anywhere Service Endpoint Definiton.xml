<page>
    <shortlink>a5svc file formats definition</shortlink>
    <topic>Alpha Anywhere Service Endpoint Definition</topic>
    <description>Files with the .a5svc extension is used to describe how an xbasic or node class or api is exposed as a REST service. </description>
    <sections>
        <section>
            <title>Top Level Defaults Pattern to use for API</title>
            <description>
            <p>The top level fields in the service definition file include the defaults for pattern of HTTP REST endpoints to use.</p>
            <p>Contains multiple APIs and an optional authentication.</p>
            </description>
            <list>
                <item>
                    <name-title>Name</name-title>
                    <description-title>Property and Description</description-title>
                </item>
                <item>
                    <name>use-query</name>
                    <description>Default behavior for method endpoints - use query parameters to store arguments.</description>
                </item>
                <item>
                    <name>flatten-arguments</name>
                    <description>Omit the 'arguments.' prefix from arguments passed on command line or in posted data.</description>
                </item>
                <item>
                    <name>path</name>
                    <description>Default path template.</description>
		            <list>
		                <item>
		                    <name-title>Template</name-title>
		                    <description-title>Description</description-title>
		                </item>
		                <item>
		                    <name>{service}</name>
		                    <description>Placeholder for 'service' name.</description>
		                </item>
		                <item>
		                    <name>{method}</name>
		                    <description>Placeholder for 'method' name.</description>
		                </item>
		                <item>
		                    <name>{properties.*}</name>
		                    <description>Placeholder for property '*' is the name of the class instance property to set .</description>
		                </item>
		                <item>
		                    <name>{arguments.*}</name>
		                    <description>Placeholder for argument '*' is the name of the method argument to set .</description>
		                </item>
	                </list>                    
                </item>
                <item>
                    <name>api</name>
                    <description>Array of all the xbasic classes and/or node apis that endpoint exposes.</description>
                </item>
                <item>
                    <name>auth</name>
                    <description>Xbasic class or node api that implements "Authorize" method.</description>
                </item>
                <item>
                    <name>debugger-header</name>
                    <description>If set, enable debugging of the endpoint using the agent.</description>
                </item>
            </list>
        </section>
        <section>
            <title>API definition</title>
            <description>
            <p>The Api definition level defines the xbasic classes and node apis to expose as endpoints.</p>
            <p>API level definitin can include default patterns to use to expose methods.</p>
            </description>
            <list>
                <item>
                    <name-title>Name</name-title>
                    <description-title>Property and Description</description-title>
                </item>
                <item>
                    <name>implementation</name>
                    <description>Implementation of Service, "xbasic" and "node".</description>
                </item>
                <item>
                    <name>service</name>
                    <description>Name of node service api or xbasic class to expose as an api.</description>
                </item>
                <item>
                    <name>use-query</name>
                    <description>Default behavior for method endpoints on this API - use query parameters to store arguments. Implies 'GET' method.</description>
                </item>
                <item>
                    <name>flatten-arguments</name>
                    <description>Omit the 'arguments.' prefix from arguments passed on command line or in posted data.</description>
                </item>
                <item>
                    <name>allow</name>
                    <description>If API defines method overrides, fallback to the default pattern if method override is not defined (default to true).</description>
                </item>
                <item>
                    <name>path</name>
                    <description>Default path template.</description>
		            <list>
		                <item>
		                    <name-title>Template</name-title>
		                    <description-title>Description</description-title>
		                </item>
		                <item>
		                    <name>{method}</name>
		                    <description>Placeholder for 'method' name.</description>
		                </item>
		                <item>
		                    <name>{properties.*}</name>
		                    <description>Placeholder for property '*' is the name of the class instance property to set .</description>
		                </item>
		                <item>
		                    <name>{arguments.*}</name>
		                    <description>Placeholder for argument '*' is the name of the method argument to set .</description>
		                </item>
	                </list>                    
                </item>
                <item>
                    <name>methods</name>
                    <description>Method overrides to the default pattern.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Method override definition</title>
            <description>
            <p>Method overrides allow definition of pattern to use for individual methods on a xbasic class or node api.</p>
            </description>
            <list>
                <item>
                    <name-title>Name</name-title>
                    <description-title>Property and Description</description-title>
                </item>
                <item>
                    <name>name</name>
                    <description>Name of method to override.</description>
                </item>
                <item>
                    <name>path</name>
                    <description>.</description>
		            <list>
		                <item>
		                    <name-title>Template</name-title>
		                    <description-title>Description</description-title>
		                </item>
		                <item>
		                    <name>{properties.*}</name>
		                    <description>Placeholder for property '*' is the name of the class instance property to set .</description>
		                </item>
		                <item>
		                    <name>{arguments.*}</name>
		                    <description>Placeholder for argument '*' is the name of the method argument to set .</description>
		                </item>
	                </list>                    
                </item>
                <item>
                    <name>method</name>
                    <description>HTTP method to use for this endpoint (i.e. GET/POST/PUT/DELETE/PATCH).</description>
                </item>
                <item>
                    <name>use-query</name>
                    <description>Behavior for this endpoints - use query parameters to store arguments.</description>
                </item>
                <item>
                    <name>flatten-arguments</name>
                    <description>Omit the 'arguments.' prefix from arguments passed on command line or in posted data.</description>
                </item>
                <item>
                    <name>argument-mapping</name>
                    <description>Override argument names for this method</description>
                </item>
                <item>
                    <name>header-arguments</name>
                    <description>Define which input parameters are passed in HTTP headers.</description>
                </item>                
                <item>
                    <name>binary</name>
                    <description>Binary Types</description>
                </item>
            </list>
        </section>
        <section>
            <title>Binary Types</title>
            <list>
                <item>
                    <name-title>Name</name-title>
                    <description-title>Property and Description</description-title>
                </item>
                <item>
                    <name>multipart</name>
                    <description>Binary content passed as multipart form elements.</description>
                </item>
                <item>
                    <name>base64</name>
                    <description>Binary content inline as base64 encoded text.</description>
                </item>
                <item>
                    <name>bson</name>
                    <description>Binary content inline bson format (JSON representation of BSON binary record).</description>
                </item>
                <item>
                    <name>array</name>
                    <description>Binary content represented as inline byte arrays.</description>
                </item>
                <item>
                    <name>javascript</name>
                    <description>Binary content represented as jaavscript.</description>
                </item>
            </list>
        </section>
        <section>
           <title>Example MongoDb Collection exposed as a REST API</title>
           <description>
              <p>A class that defines methods to get and add, update and delete records from a mongo database, using the extension::MongoDB class.</p>
           </description>
           <example><![CDATA[
define class restapi::customer
	function GetCustomers as p()
		dim Mongo as extension::MongoDB = extension::MongoDB::Create("mongodb://localhost:27017","alphasports","Customer")
		GetCustomers = json_parse(mongo.GetRecords(""))
	end function
	
	function GetCustomer as p(id as c)
		dim Mongo as extension::MongoDB = extension::MongoDB::Create("mongodb://localhost:27017","alphasports","Customer")
		dim json as c = mongo.GetRecords("{ \"CUSTOMER_ID\" : \""+id+"\" }")
		if json <> "" then
			dim jso as extension::JSON
			jso.setJson(json)
			if jso.getLength() > 0 then
				dim jsi as extension::JSON = jso.getIndexed(0)
				GetCustomer = json_parse(jsi.getJson())
			end if
		end if
	end function
	
	function AddCustomer as l(obj as p)
		if obj.data("CUSTOMER_ID") <> "" then
			dim json as c = json_generate(obj)
			dim Mongo as extension::MongoDB = extension::MongoDB::Create("mongodb://localhost:27017","alphasports","Customer")
			Mongo.AddRecord(json)
			AddCustomer = .t.
		end if	
	end function
	
	function DeleteCustomer as l(id as c)
		dim obj as p = GetCustomer(id)
		dim _id as c = obj.data("_id")
		if _id <> "" then
			dim Mongo as extension::MongoDB = extension::MongoDB::Create("mongodb://localhost:27017","alphasports","Customer")
			mongo.DeleteRecord(_id)
			DeleteCustomer = .t.
		end if	
	end function
	
	function UpdateCustomer as l(newObj as p)
		dim id as c = newObj.data("CUSTOMER_ID")
		if id <> "" then
			dim obj as p = GetCustomer(id)
			dim _id as c = obj.data("_id")
			if _id <> "" then
				property_recurse_assign(obj,newObj)				
				dim json as c = json_generate(obj)
				dim Mongo as extension::MongoDB = extension::MongoDB::Create("mongodb://localhost:27017","alphasports","Customer")
				Mongo.UpdateRecord(_id,json)
				UpdateCustomer = .t.
			end if	
		end if	
	end function
end class
]]></example>
        </section>        
        <section>
           <title>Definition file for class</title>
           <description>
              <p>Example Definition for mapping the REST api to a service endpoint.</p>
           </description>
           <example><![CDATA[
{
    "path": "/{method}",
    "method": "get",
    "api": [
        {
            "implementation": "xbasic",
            "service": "restapi::customer",
            "methods": [
                {
                    "name": "AddCustomer",
                    "path": "/AddCustomer",
                    "method": "post",
                    "flatten-arguments" : true
                },
                {
                    "name": "DeleteCustomer",
                    "path": "/DeleteCustomer/{arguments.id}",
                    "method": "delete"
                },
                {
                    "name": "GetCustomer",
                    "path": "/GetCustomer/{arguments.id}",
                    "method": "get"
                },
                {
                    "name": "GetCustomers",
                    "path": "/GetCustomers",
                    "method": "get"
                },
                {
                    "name": "UpdateCustomer",
                    "path": "/UpdateCustomer",
                    "method": "put",
                    "flatten-arguments" : true
                }
            ]
        }
    ]
}
]]></example>
        </section>        
        <section>
           <title>Example CURL calls to Endpoint</title>
          <description>Get All Customer Records.</description>
           <example><![CDATA[
c:\>curl http://127.0.0.1:1580/LivePreview/customer.a5svc/GetCustomers
[
  	{
  		"_id": "55b2567b5590795052a1d171",
  		"CUSTOMER_ID": "1000",
  		"FIRSTNAME": "Cecelia",
  		"LASTNAME": "DeLuca",
  		"COMPANY": "Cartwright Industries",
  		"PHONE": null,
  		"FAX": null,
        ...
]]></example>
        </section>        
        <section>
          <description>Add a new Customer record</description>
           <example><![CDATA[       
c:\>curl --data "{ \"obj\" : { \"CUSTOMER_ID\" : \"99\" , \"FIRSTNAME\" : \"John\" } }" http://127.0.0.1:1580/LivePreview/customer.a5svc/AddCustomer
true
]]></example>
        </section>
        <section>
          <description>Get the record that was added, given the id used in CUSTOMER_ID.</description>
           <example><![CDATA[       
c:\>curl http://127.0.0.1:1580/LivePreview/customer.a5svc/GetCustomer/99
{
        "_id": "59a31d36bc16f60290ba7f17",
        "CUSTOMER_ID": "99",
        "FIRSTNAME": "John"
  }
]]></example>
        </section>
        <section>
          <description>Delete the Customer Record that was created.</description>
           <example><![CDATA[       
c:\>curl -X DELETE http://127.0.0.1:1580/LivePreview/customer.a5svc/DeleteCustomer/99
true
]]></example>
        </section>
        
    </sections>
</page>    



