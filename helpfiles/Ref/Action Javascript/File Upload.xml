<page>
    <topic>File Upload</topic>
    <description>Upload a file to the server and store a reference to the file in a Grid field, or embed the file in a Drid field.</description>
    <sections>
        <section>
            <description>Used with the Grid and UX components</description>
        </section>
        <section>
            <title>Xbasic Event Handlers - Control Values</title>
            <description>In a UX component, when the server-side Xbasic events defined in the Action Javascript builder fire, the control values for all of the controls on the UX are available to the Xbasic code. For example, assume that the UX had a control called 'FIELD1'. In the Xbasic event handlers, you can reference this value as follows</description>
            <example><![CDATA[request.variables.v.r1.field1]]></example>
        </section>
        <section>
            <title>File Upload in a UX Component</title>
            <description>
                <p>In order to add an event handler that performs a file upload action, you must add a special [File Upload/Download] control to the UX component.</p>
                <p>The [File Upload/Download] control is in the Other Controls section of the Toolbox.</p>
            </description>
            <figure>
                <link>images/fileuploaddownload.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Once you have added the [File Upload/Download] control, you can then use Action Javascript to define a File Upload action.</p>
                <p>The [File Upload/Download] control can be data bound (just like any other control). </p>
                <p>However, it is not required that the [File Upload/Download] control be data bound. If the control is not data bound, then then it is your responsibility to decide what to do with the uploaded binary data when the UX Component is submitted.</p>
                <p>If the [File Upload/Download] control is data bound, it can be bound to either a character field or a binary field. When the UX Component is submitted, the uploaded data will be saved into the corresponding bound field (assuming you have added a Save Record Server-side event handler to the AfterValidate event).</p>
                <p>If the [File Upload/Download] control is bound to a binary field, the binary contents of the uploaded file will be saved in the bound field.</p>
                <p>If the [File Upload/Download] control is bound to a character field, the filename of the uploaded file will be stored in the character field, and the uploaded file itself will be stored in the folder that you specified when you defined the File Upload Action. (Actually, the transformed filename, as specified by the 'Stored filename transformation expression' will be stored in the bound field).</p>
                <p>In the case where the [File Upload/Download] control is not data bound, your AfterValidate event handler can retrieve the binary data that was uploaded as follows (assuming that the Id of the [File Upload/Download] control is 'FILEUPLOAD_1'):</p>
            </description>
            <example><![CDATA[dim blobKey as c
'Every [File Upload/Download] control has an associated control with
'a '_A5FILEUPLOAD' name.
'After the file has been uploaded, it is stored in temporary session storage
'The 'key' for the data in session storage is stored in this hidden field.

blobKey = e.dataSubmitted.FILEUPLOAD_1__A5FILEUPLOAD
blobKey = word(blobKey,1,":")

dim blobUploaded as b
Session.GetDataFromFile(blobUploaded,blobKey)
Session.DeleteSessionFile(blobKey)

'You now have the uploaded file data in a variable called 'blobUploaded'
'Your event handler can process this data.]]></example>
        </section>
    </sections>
    <see>
        <ref href="File Upload User Defined.xml">File Upload User Defined</ref>
        <ref href="File Upload - Amazon S3 Storage or Alpha Anywhere Server.xml">File Upload - Amazon S3 Storage or Alpha Anywhere Server</ref>
   
       <ref>Action Javascript for the UX</ref>
  
  
  
    </see>
</page>