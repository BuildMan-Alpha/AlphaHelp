<page>
    <shortlink>PhoneGap - File Download</shortlink>
   <topic>PhoneGap - File Download</topic>
   <description>Download one or more files and store the files in the filesystem on the mobile device.
       Uses the PhoneGap FileTransfer feature. (Only applies to UX components running in a PhoneGap shell.)
   </description>
   
   <sections>
           <section>
            <description>Used with the UX component.</description>
       </section>
  <section>
            <title>PhoneGap File Download Properties</title>
            <list>
                <item>
                    <name>Files to download Javascript Function</name>
                    <description>Specify the name of a Javascript function to call. This function must return an array containing the names of the files that you want to download. You can specify fully qualified files (e.g. http://www.imageserver.com/images/image1.jpg) or relative files (e.g. images/image1.jpg). Relative files are fetched from the Alpha Anywhere server.</description>
                </item>
                <item>
                    <name>Target folder</name>
                    <description>Specify the name of the folder on the Mobile device where the files should be stored.</description>
                </item>
                <item>
                    <name>Force download if file found on device</name>
                    <description>If the file already exists in the target folder it will not be downloaded again. You can check this property if you want to force the download to occur. The existing file will be overwritten.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Download Properties</title>
            <list>
                <item>
                    <name>Display progress during file download</name>
                    <description>Specify if progress should be shown while file(s) are being downloaded.</description>
                </item>
                <item>
                    <name>Progress bar color</name>
                    <description>Specify the progress bar color.</description>
                </item>
                <item>
                    <name>Progress bar width</name>
                    <description>Specify the progress bar width. Use CSS units.</description>
                </item>
                <item>
                    <name>Placeholder for progress indicator</name>
                    <description>Specify the name of a Placeholder control where the progress indicator should be shown. TIP: You can enter 'Element:name_of_element' to target a specific element on the page rather than a Placeholder. For example: Element:div1</description>
                </item>
            </list>
        </section>
        <section>
            <title>Javascript Properties</title>
            <list>
                <item>
                    <name>On Progress</name>
                    <description>Fires when another 'chunk' of the file being downloaded has been sent. This event allows you to write custom progress displays. Your code can reference these variables: array - an array with entries for each file being downloaded, arrayIndex - index into the array for the current progress event - totalBytes - size of the file to download, bytesLoaded - number of bytes currently loaded. NOTE: The totalBytes and bytesLoaded property in the array will be undefined for files that have not yet started downloading.</description>
                </item>
                <item>
                    <name>On Download Complete (all files)</name>
                    <description>Fires after all of the files to be downloaded have been processed. Not all files were necessarily downloaded successfully. Your Javascript code can reference 'array' - an array with information about each file. The array has these properties: 'filename' - short filename of the file in the device's filesystem, 'handled' - true/false - indicates if the file was processed, 'downloaded' - true/false - will be true if the file was downloaded. will be false if the file already existed in the device's filesystem, 'sourceType' - indicates if the source file was on the Alpha Anywhere server, or AmazonS3, 'found' - true/false indicates if the file already existed in the device's filesytem (and therefore did not need to be downloaded), 'localFilename' - the fully qualified filename on the device, 'totalBytes' - size of the file, 'success' - true/false - true if the file was either downloaded or already existed in the filesystem.</description>
                </item>
                <item>
                    <name>On Download Complete (individual file) -- turned off because it does not fire</name>
                    <description>Fires after each file in the array of files to be downloaded has been processed.</description>
                </item>
                <item>
                    <name>On Error</name>
                    <description>Fires if there is any type of error while uploding a file. Your Javascript can reference 'array' -- the array of files being uplaoded and 'arrayIndex' - the index into this array.</description>
                </item>
                <item>
                    <name>On device offline</name>
                    <description>Fires if the device is offline when the attempt to make an Ajax callback to sign S3 policy is made.</description>
                </item>
            </list>
        </section>
    
   </sections>
   
   
    <see>
       <ref>Action Javascript for the UX</ref>
   </see>
   
</page>