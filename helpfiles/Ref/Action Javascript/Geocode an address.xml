<page>
    <shortlink>Geocode an address</shortlink>
   <topic>Geocode an address</topic>
   <description>Makes an Ajax callback to a web service to geocode an address. Fill in the latitude and longitude fields in the current record with the information.</description>
   
   <sections>
       <section>
           
           <figure><link>images/ga.png</link></figure>
           
       </section>
          <section>
            <description>Used with the Grid and UX components.</description>
       </section>
       
       
       <section>
         
           
           <title>Javascript 'onPush' attribute:</title>
           <example><![CDATA[var rowNum = {grid.object}._selectedRow;
{grid.Object}.ajaxCallback('G',rowNum,'__A5SystemGeocodeAddress','','__address=&__city=&__state=&__zip=&__country=&__latitudeField=&__longitudeField=&__part=G&_rowNumber=rowNum&_geocodeMethod=Google');]]></example>
          
       </section>
     <section>
         <title>Geocode Settings</title>
         <list>
             <item>
                 <name>Geocode method</name>
                 <description>Specify the method to use to geocode the address. [Google] sets a limit on how many addresses can be encoded, but 
                     may provide better results than [Nominatim].
                 </description>
             </item>
             <item>
                 <name>Address</name>
                 <description>Specify the field that has the address.</description>
             </item>
             <item>
                 <name>City</name>
                 <description>Specify the field that has the city.</description>
             </item>
             <item>
                 <name>State/Province</name>
                 <description>Specify the field that has the state/province.</description>
             </item>
             <item>
                 <name>Zip/Postal Code</name>
                 <description>(Optional) Specify the field that has the zip/postal code.</description>
             </item>
             <item>
                 <name>Country</name>
                 <description>(Optional) Specify the field that has the country.</description>
             </item>
             <item>
                 <name>Latitude field</name>
                 <description>Specify the name of the latitude field. This field will be filled in with the value 
                     that is looked up.
                 </description>
             </item>
             <item>
                 <name>Longitude field</name>
                 <description>Specify the name of the longitude field. This field will be filled in with the value 
                     that is looked up.
                 </description>
             </item>
           
         </list>
         
         
     </section>
     
     <section>
         <title>Return the Latitude and Longitude of an Entered Address</title>
         <steps>
             <step>
                 <description>In the UX Builder on the UX Controls page open the 'Data Controls' menu. Click on the 
                     [TextBox] option to add a textbox control to the component. Give this textbox the name and label of 
                     'Address'
                 </description>
                 <figure><link>images/ga2.png</link></figure>
             </step>
              <step>
                 <description>Click on the [TextBox] option again to add a second textbox control. Name and label the control 'City'</description>
                 <figure><link>images/ga3.png</link></figure>
             </step>
              <step>
                 <description>Add a third [TextBox] control to the component. Name and label this control 'State'.</description>
                 <figure><link>images/ga4.png</link></figure>
             </step>
              <step>
                 <description>Add a fourth [TextBox] control with the name and label of 'Latitude'</description>
                 <figure><link>images/ga5.png</link></figure>
             </step>
              <step>
                 <description>Add a final [TextBox] control to the component with the name and label of 'Longitude'</description>
                 <figure><link>images/ga6.png</link></figure>
             </step>
              <step>
                 <description>Highlight the 'State' textbox control in the controls tree. Open the 'Other Controls' 
                     menu and click on the [Button] option to add a button under the 'State' textbox.
                 </description>
                 <figure><link>images/ga7.png</link></figure>
             </step>
              <step>
                 <description>Highlight the button. In the properties list on the right under 'Button Properties' 
                     set the 'Button text' to read 'Find Coordinates'
                 </description>
                 <figure><link>images/ga8.png</link></figure>
             </step>
              <step>
                 <description>Scroll down the properties list to the 'Javascript - (Touch, Mouse, Pointer Events)' section. 
                     Click the [...] button next to the 'click' property.
                 </description>
                 <figure><link>images/ga9.png</link></figure>
             </step>
              <step>
                 <description>Check the 'Action Javascript' radio button and click the 'Add New Action' button.</description>
                 <figure><link>images/ga10.png</link></figure>
             </step>
              <step>
                 <description>Type 'geo' into the Filter list, highlight the 'Geocode an address' action in the actions list, and click OK.</description>
                 <figure><link>images/ga11.png</link></figure>
             </step>
              <step>
                 <description>In the Geocode an Address properties set the 'Geocode method' to be 'Nominatim'.</description>
                 <figure><link>images/ga12.png</link></figure>
             </step>
              <step>
                 <description>Click the dropdown next to the 'Address' property and select the 'Address' textbox.</description>
                 <figure><link>images/ga13.png</link></figure>
             </step>
              <step>
                 <description>Click the dropdown next to the 'City' property and select the 'City' textbox.</description>
                 <figure><link>images/ga14.png</link></figure>
             </step>
              <step>
                 <description>Click the dropdown next to the 'State/Province' property and select the 'State' textbox.</description>
                 <figure><link>images/ga15.png</link></figure>
             </step>
              <step>
                 <description>Click the dropdown next to the 'Latitude' property and select the 'Latitude' textbox.</description>
                 <figure><link>images/ga16.png</link></figure>
             </step>
              <step>
                 <description>Click the dropdown next to the 'Longitude' property and select the 'Longitude' textbox. Click OK and Save</description>
                 <figure><link>images/ga17.png</link></figure>
             </step>
                <step>
                 <description>Run the component in Live Preview. Fill in the Address, City, and State fields and click the 'Find Coordinates' button.</description>
                 <figure><link>images/ga18.png</link></figure>
             </step>
                <step>
                 <description>The latitude and longitude should appear in their respective textbox controls.</description>
                 <figure><link>images/ga19.png</link></figure>
             </step>
         </steps>
         
         
         
         
         
         
         
         
     </section>
     
     <section>
         <title>Obtain a Latitude and Longitude from an Address in a List</title>
         <steps>
             <step>
                 <description>In the UX Builder on the UX Controls page open the 'Data Controls' menu. Click on the 
                     [List] option to add a list control to the component.
                 </description>
                 <figure><link>images/gal.png</link></figure>
             </step>
             <step>
                 <description>Highlight the list control. In the properties list on the right, scroll down to the 
                     'List Properties' section and click the [...] button next to the 'List properties' property to open the 
                     List Builder.
                 </description>
                 <figure><link>images/gal2.png</link></figure>
             </step>
             <step>
                 <description>On the List Builder's Data Source pane select 'Static' from the 'Data Source Type' menu.</description>
                 <figure><link>images/gal3.png</link></figure>
             </step>
             <step>
                 <description>Click the [...] button next to the 'Static data' property in the Static Data section.</description>
                 <figure><link>images/gal4.png</link></figure>
             </step>
             <step>
                 <description>In the Static Choices dialog click on the 'Sample data' button in the lower left corner. From the sample data 
                     choices select the 'Name and addresses (big data set)' option and click OK and OK.
                 </description>
                 <figure><link>images/gal5.png</link></figure>
             </step>
             <step>
                 <description>In the 'Return Value' section set the 'Return value type' property to be 'Field'</description>
                 <figure><link>images/gal6.png</link></figure>
             </step>
             <step>
                 <description>Click the [...] button next to the 'Return field' property and select 'Address' as the 
                     return field.
                 </description>
                 <figure><link>images/gal7.png</link></figure>
             </step>
             <step>
                 <description>Open the 'List Layout' pane and use the blue > arrow to move the 'ContactName', Address', 'City', and 'Country' fields 
                     from the 'Available Fields' list to the 'Columns in List' section. Click OK to close the List Builder.</description>
                 <figure><link>images/gal8.png</link></figure>
             </step>
             <step>
                 <description>In the 'Other Controls' menu select the [Button] option to add a button control under the list control.</description>
                 <figure><link>images/gal9.png</link></figure>
             </step>
             <step>
                 <description>Open the 'Data Controls' menu click on the [TextBox] option to add a textbox control underneath the button in the controls tree. 
                     Name and label the textbox 'Latitude'.
                 </description>
                 <figure><link>images/gal10.png</link></figure>
             </step>
             <step>
                 <description>Click on [TextBox] again to add a second textbox to the component. Name and label this textbox 'Longitude'.</description>
                 <figure><link>images/gal11.png</link></figure>
             </step>
             <step>
                 <description>Highlight the button control in the controls tree. In the properties list in the 'Button Properties' 
                     section set the 'Button text' property to be 'Find Coordinates'.
                 </description>
                 <figure><link>images/gal13.png</link></figure>
             </step>
             <step>
                 <description>Scroll down the properties list to the 'Javascript - (Touch, Mouse, Pointer Events)' section. Click the 
                     [...] button next to the 'click' property.
                 </description>
                 <figure><link>images/gal12.png</link></figure>
             </step>
             <step>
                 <description>In the Edit Click Event dialog select 'Action Javascript' from the radio button options. Click the 
                     'Add New Action' button.
                 </description>
                 <figure><link>images/gal14.png</link></figure>
             </step>
             <step>
                 <description>Type 'geo' into the Filter list, highlight the 'Geocode and address' action in the actions list, and click OK.</description>
                 <figure><link>images/gal15.png</link></figure>
             </step>
             <step>
                 <description>In the Geocode an Address properties list set the 'Geocode method' property to be 'Nominatim'.</description>
                 <figure><link>images/gal16.png</link></figure>
             </step>
             <step>
                 <description>Click the dropdown next to the 'Address' property and select the list you defined, 'list1'.</description>
                 <figure><link>images/gal17.png</link></figure>
             </step>
             <step>
                 <description>Click the dropdown next to the 'Latitude field' property and select the 'latitude' textbox from the list of choices.</description>
                 <figure><link>images/gal18.png</link></figure>
             </step>
             <step>
                 <description>Set the 'Longitude field' property to be 'longitude'. Click 'OK' and 'Save' to exit.</description>
                 <figure><link>images/gal19.png</link></figure>
             </step>
             <step>
                 <description>Run the component in Live Preview. Click on a row in the list and then click the 'Find Coordinates' 
                     button. The latitude and longitude values for the address should appear in the Latitude and Longitude textboxes.
                 </description>
                 <figure><link>images/gal20.png</link></figure>
             </step>
             
         </steps>
         
     </section>
     

   </sections>
   <links>
       
       <link href="/images/tools/ellipsesButton.png">...</link>
       <link href="https://developer.mapquest.com/documentation/open/nominatim-search/search/">Nominatim</link>
       <link href="https://developers.google.com/maps/documentation/geocoding/intro">Google</link>
   </links>
   
    <see>
     
       <ref link="action javascript for the ux">Action Javascript for the UX</ref>
      <ref link="action javascript in the grid">Action Javascript in the Grid</ref>
   </see>
   
</page>