<page>
    <topic>Ajax Callback</topic>
    <description>Define a user-defined ajax callback. The callback can be handled by an Xbasic function that is defined in the component, by a separate .a5w page, or by another page (.e.g., .php, .asp, etc.)</description>
    <sections>
        <section>
            <description>Used with the Grid and UX components</description>
        </section>
        <section>
            <title>Using Action Javascript to Write an Ajax Callback Function</title>
            <description>The Ajax Callback Action Javascript can be used to generate the xbasic callback function that is called. The xbasic callback function can be saved in the component in the *[ui:Xbasic Functions]* section of the component builder. The action can be accessed anywhere the Action Javascript editor is available, including Javascript events for controls and [Javascript Actions].</description>
            <steps>
                <step>
                    <description>In the event editor with *[ui:Action Javascript]* mode selected, click the *[ui:Add]* button to add a new action.</description>
                    <figure>
                        <link>images/ajaxCallback1.png</link>
                    </figure>
                </step>
                <step>
                    <description>Select the *[ui:Ajax Callback]* action and click *[ui:OK]*.</description>
                    <figure>
                        <link>images/ajaxCallback2.png</link>
                    </figure>
                </step>
                <step>
                    <description>Define the name for the callback function that will be called. In the image below, a new function will be created that performs the callback called *[xb:MyCallback]*</description>
                    <figure>
                        <link>images/ajaxCallback3.png</link>
                    </figure>
                </step>
                <step>
                    <description>Define any additional (optional) data to submit to the callback function. Parameters sent to the callback function can be accessed through the *[xb:e]* object in the xbasic function.</description>
                    <figure>
                        <link>images/ajaxCallback4.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the *[ui:Create function prototype]* link to generate the function prototype for the Ajax callback.</description>
                    <figure>
                        <link>images/ajaxCallback5.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the *[ui:Copy to clipboard]* button to copy the function signature to the clipboard. When the code has been copied to the clipboard, click the *[ui:Close]* button to close the dialog.</description>
                    <figure>
                        <link>images/ajaxCallback6.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the *[ui:Open Xbasic Function Declarations]* link to open the Xbasic Function Declarations dialog. This is a shortcut to the Xbasic Functions section.</description>
                    <figure>
                        <link>images/ajaxCallback7.png</link>
                    </figure>
                </step>
                <step>
                    <description>Paste the code from the clipboard into the window and click *[ui:OK]*.</description>
                    <figure>
                        <link>images/ajaxCallback8.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click *[ui:OK]* to save the Ajax Callback action.</description>
                </step>
                <step>
                    <description>Optionally, add a comment that describes the action when prompted. Then, click the *[ui:OK]* button.</description>
                    <figure>
                        <link>images/ajaxCallback9.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the *[ui:Save]* button to save the changes made to the event or Javascript Action.</description>
                    <figure>
                        <link>images/ajaxCallback10.png</link>
                    </figure>
                </step>
                <step>
                    <description>Navigate back to the component builder. Expand the *[ui:Code]* section in the far left column and click on *[ui:Xbasic functions]*. This is where you can make changes to the xbasic callback function you created using the Ajax Callback Action Javascript builder.</description>
                    <figure>
                        <link>images/ajaxCallback11.png</link>
                    </figure>
                </step>
            </steps>
        </section>
        <section>
            <title>Making Callbacks from Javascript</title>
            <description>It's best to use Action Javascript if it's available to add functionality to an application. If you would rather make a callback using Javascript, however, the *[js:.ajaxCallback()]* method for the Grid or UX Component is available. To learn more, visit the [Grid Component] or [UX Component] Client API documentation for the *[js:.ajaxCallback()]* method.</description>
        </section>
    </sections>
    <links>
        <link href="/documentation/index?search=javascript%20actions">Javascript Actions</link>
        <link href="/documentation/index?search=%7Bgrid.object%7D.ajaxcallback%20method">Grid Component</link>
        <link href="/documentation/index?search=%7Bdialog.object%7D.ajaxcallback%20method">UX Component</link>
    </links>
    <see>
        <ref href="/documentation/index?search=%7Bgrid.object%7D.ajaxcallback%20method">{grid.Object}.ajaxCallback Method</ref>
        <ref href="/documentation/index?search=%7Bdialog.object%7D.ajaxcallback%20method">{dialog.Object}.ajaxCallback Method</ref>
  
       <ref>Action Javascript for the UX</ref>
<ref>Action Javascript in the Grid</ref>
  
  
    </see>
</page>