<page>
   <topic>PhoneGap - SQLite Actions</topic>
   <description>Performs actions with the SQLite database on the device. 
       Also allows you to download a SQLite database from the server to the mobile device and
       create a SQLite database on the server and download it to the device.
   </description>
   
   <sections>
     
           <section>
            <description>Used with the UX component.</description>
       </section>
       
 <section>
            <title>SQLite Action Properties</title>
            <list>
                <item>
                    <name>Action name</name>
                    <description>Specify the SQLite Action that you want to execute.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Download SQLite Database from Server Properties</title>
            <list>
                <item>
                    <name>Make Ajax callback to get SQLite database URL</name>
                    <description>Specify if you want to make an Ajax callback to the server to compute the URL of the SQLite database to be downloaded to the device.</description>
                </item>
                <item>
                    <name>Xbasic function name</name>
                    <description>Specify the name of the Xbasic function. Click the smart field to see help for the function. The Xbasic function must set specific properties in the 'e' object that is passed to it.</description>
                </item>
                <item>
                    <name>Ajax failed Javascript</name>
                    <description>(Optional) Specify the Javascript to execute if the Ajax callback fails (i.e. if the server does not send a response).</description>
                </item>
                <item>
                    <name>Offline Javascript</name>
                    <description>(Optional) Specify the Javascript to execute if the device is offline. Since the device is offline, the Ajax callback is not made. Therefore the code in the 'Ajax failed Javascript' property will not get executed.</description>
                </item>
                <item>
                    <name>SQLite database URL (Javascript)</name>
                    <description>Specify Javascript code to run to get the URL of the SQLite database file. If you do not specify a protocol (e.g. 'http' or 'https') the SQLite database is assumed to be in the Webroot (e.g. 'sqlite\db1.db').</description>
                </item>
                <item>
                    <name>Local database name</name>
                    <description>Specify the name of the database on the mobile device. This can be different than the name of the database file you are downloading.</description>
                </item>
                <item>
                    <name>onComplete Javascript</name>
                    <description>Specify the Javascript to run once the database has been downloaded.</description>
                </item>
                <item>
                    <name>onError Javascript</name>
                    <description>Specify the Javascript to run if there is an error downloading the database.</description>
                </item>
                <item>
                    <name>Display progress during download</name>
                    <description>Specify if progress should be shown while the SQLite database is being downloaded.</description>
                </item>
                <item>
                    <name>Progress bar color</name>
                    <description>Specify the progress bar color.</description>
                </item>
                <item>
                    <name>Progress bar width</name>
                    <description>Specify the progress bar width. Use CSS units.</description>
                </item>
                <item>
                    <name>Placeholder for progress indicator</name>
                    <description>Specify the name of a Placeholder control where the progress indicator should be shown. TIP: You can enter 'Element:name_of_element' to target a specific element on the page rather than a Placeholder. For example: Element:div1</description>
                </item>
            </list>
        </section>
        <section>
            <title>Create SQLite Database on Server then Download to Device Properties</title>
            <list>
                <item>
                    <name>SQLite Database name</name>
                    <description>Specify the name of the SQLite database</description>
                </item>
                <item>
                    <name>SQLite Database definition</name>
                    <description>SQLite Database definition property.</description>
                </item>
                <item>
                    <name>onComplete Javascript</name>
                    <description>Specify the Javascript to run once the database has been downloaded.</description>
                </item>
                <item>
                    <name>onError Javascript</name>
                    <description>Specify the Javascript to run if there is an error downloading the database.</description>
                </item>
                <item>
                    <name>Display progress during download</name>
                    <description>Specify if progress should be shown while the SQLite database is being downloaded.</description>
                </item>
                <item>
                    <name>Progress bar color</name>
                    <description>Specify the progress bar color.</description>
                </item>
                <item>
                    <name>Progress bar width</name>
                    <description>Specify the progress bar width. Use CSS units.</description>
                </item>
                <item>
                    <name>Placeholder for progress indicator</name>
                    <description>Specify the name of a Placeholder control where the progress indicator should be shown. TIP: You can enter 'Element:name_of_element' to target a specific element on the page rather than a Placeholder. For example: Element:div1</description>
                </item>
                <item>
                    <name>Offline Javascript</name>
                    <description>(Optional) Specify the Javascript to execute if the device is offline. Since the device is offline, the Ajax callback is not made. Therefore the code in the 'Ajax failed Javascript' property will not get executed.</description>
                </item>
                <item>
                    <name>Ajax failed Javascript</name>
                    <description>(Optional) Specify the Javascript to execute if the Ajax callback fails (i.e. if the server does not send a response).</description>
                </item>
                <item>
                    <name>onComplete Database Create</name>
                    <description>Specify the Javascript to execute once the new SQLite database on the server has been created, but BEFORE the mobile device starts to download the SQLite database file. This event is typically used to turn off the wait dialog that might have been turned on at the start of the callback. Once the database has been created and the download starts, the user can see the progress bar for an indication that work is still being done.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Execute SQL statement(s) Properties</title>
            <list>
                <item>
                    <name>SQLite database name</name>
                    <description>Specify the name of the SQLite database that you wnat to execute SQL statements against.</description>
                </item>
                <item>
                    <name>Database location</name>
                    <description>'Root' - choose this option if the SQLite database was included as part of the PhoneGap project. 'Downloaded' - choose this option if the SQLite database was downloaded from a server. Choices include *[ui:Root]*, *[ui:Downloaded]*.</description>
                </item>
                <item>
                    <name>Single SQL statement or multiple SQL statements</name>
                    <description>Specify if you want to execute a single SQL statement or multiple SQL statements. If you select 'Multiple', the statements are run in a transaction - if any of the statements fail, the transaction is rolled back. Choices include *[ui:Single]*, *[ui:Multiple]*.</description>
                </item>
                <item>
                    <name>SQL statement to execute</name>
                    <description>Specify the SQL statement to execute. Your Javascript must return the SQL statement.</description>
                </item>
                <item>
                    <name>Arguments</name>
                    <description>Specify the SQL statement to execute. Your Javascript must return the SQL statement.</description>
                </item>
                <item>
                    <name>onSuccess</name>
                    <description>Specify the SQL statement to execute. Your Javascript must return the SQL statement.</description>
                </item>
                <item>
                    <name>onError</name>
                    <description>Specify the SQL statement to execute. Your Javascript must return the SQL statement.</description>
                </item>
                <item>
                    <name>SQL definition Javascript</name>
                    <description>Specify the SQL statements to execute. The statements will be run in a transaction.</description>
                </item>
                <item>
                    <name>Transaction success</name>
                    <description>Specify the SQL statements to execute. The statements will be run in a transaction.</description>
                </item>
                <item>
                    <name>Transaction error</name>
                    <description>Specify the SQL statements to execute. The statements will be run in a transaction.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Get Tables in a Database Properties</title>
            <list>
                <item>
                    <name>Database name</name>
                    <description>Specify the SQLite database that you want to query.</description>
                </item>
                <item>
                    <name>Database location</name>
                    <description>'Root' - choose this option if the SQLite database was included as part of the PhoneGap project. 'Downloaded' - choose this option if the SQLite database was downloaded from a server. Choices include *[ui:Root]*, *[ui:Downloaded]*.</description>
                </item>
                <item>
                    <name>onSuccess</name>
                    <description>Code to execute when the list of tables in the database has been obtained.</description>
                </item>
                <item>
                    <name>onError</name>
                    <description>Code to execute if there is an error when getting list of tables.</description>
                </item>
            </list>
        </section>
       
   </sections>
   
   
    <see>
       <ref>Action Javascript for the UX</ref>
   </see>
   
</page>