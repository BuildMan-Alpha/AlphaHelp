<page>
    <shortlink>Image Capture - Camera/Photo Library</shortlink>
   <topic>Image Capture - Camera/Photo Library</topic>
   <description>Capture an image using the camera, or from the photo library. On devices that
       don't support a camera, select an image from the filesystem. Action calls a function with the 
       Image URI when the image has been obtained.
   </description>
   
   <sections>
       <section>
           <figure><title>The "Image Capture - Camera/Photo Library" action genie.</title><link>images/icc.png</link></figure>
           
       </section>
        <section>
            <description>The Image Capture - Camera/Photo Library action is used with the UX component. 
                This genie that appears when this action is selected allows you to set how you want to capture 
                an image. On a device that has a camera, the image is captured using a camera. For devices 
                that do not support a camera, you can choose an image from the filesystem. Camera access is 
                either done using PhoneGap or HTML5. Once the image has been captured a Javascript event is fired.
            </description>
       </section>
        <section>
   <description>The 'Image Capture - Camera/Photo Library' action allows you to specify some Javascript code to execute once the image has been acquired. Your Javascript code can reference:
</description>
<cases>
    <case>
        <description>e.data - the base64 encoded image data </description>
    </case>
     <case>
        <description>e.fileSystemURL - (PhoneGap only) the native file system URL for the image.
</description>
    </case>
    
</cases>
       </section> 
     <section>
       <note>Contrast this action with the 'Image Capture for List-Detail View - Camera/Photo Library' which also allows you to capture an image using the camera. This action however, is specifically for an Image control in a List View with a Detail View. The  'Image Capture - Camera/Photo Library' action simply returns the image data (base 64 encoded) and the native file URL (in the case where PhoneGap is being used). It is up to the developer to decide what to do with the base64 encoded data or file URL.</note>
     
     </section>   
       
       
       <section>
           <title>Image Capture Properties</title>
           <list>
               <item>
                   <name>Javascript to execute when image has been captured</name>
                   <description>Specify the Javascript to call once the image has been captured. Your Javascript can reference e.data. 
                       In the case 
                   </description>
            </item>
            
            
            <item>
                   <name>Image capture method</name>
                   <description>Specify the method for obtaining the image. If the component is running in a 
                       PhoneGap shell, then you can use PhoneGap to access the camera (if you are not 
                       in a PhoneGap shell, the user will get an error if they try to capture an image). If you 
                       select 'PhoneGapPreferred' then the PhoneGap method will be used if the component 
                       is running in a PhoneGap shell, otherwise the HTML5 method will be used.
                   </description>
              </item>
              <item>
                  <name>Move file to permanent storage after capture</name>
                  <description>This property appears if the Image capture method is set to PhoneGap or 
                      PhoneGapPreferred. When an image file is captured using the PhoneGap the captured 
                      file is placed in a temporary storage location that could be cleared when the app 
                      is termitated. Therefore, it is advisable to move the file to a permanent location.
                  </description>
                  
              </item>
                <item>
                  <name>File system part2</name>
                  <description>This property appears if the Image capture method is set to PhoneGap or 
                      PhoneGapPreferred and is used with iOS. The 'public' option is the application's 
                      'Documents directory', accessible in iTunes file sharing and backed up to the iCloud. 
                      The 'private' option relates to the application's private persisted data, which is 
                      deleted when the application is uninstalled. The 'saved' option is similar to 
                      'private', but is backed up to iTunes.</description>
                  
              </item>
                <item>
                  <name>Folder2</name>
                  <description>Specify the folder in the file system where the file should be stored.</description>
                  
              </item>
              
           </list>
          
            
       </section>
       <section>
           <title>HTML5 Options</title>
           <list>
               <item>
                   <name>Resize image</name>
                   <description>Specify the policy for resizing the image. The 'Always' option will cause the 
                       image to always be resized, regardless of its raw size. The 'Only If Image Exceeds Max Size' 
                       setting will cause the image to be resized only if the raw image size is greater than the maximum 
                       image size.</description>
               </item>
                  <item>
                   <name>Image compression</name>
                   <description>Specify the image compression factor to use when capturing an image using HTML5. 
                       When set to '1' there will be no compression. For maximum compression use '0'.
                   </description>
               </item>
                  <item>
                   <name>Max image height</name>
                   <description>Specify the maximum image height (in pixels).</description>
               </item>
                  <item>
                   <name>Max image width</name>
                   <description>Specify the maximum image width (in pixels).</description>
               </item>
               
               
           </list>
           
           
       </section>
       <section>
           <figure><title>PhoneGap property settings for the Image Capture-Camera-Photo Library</title><link>images/iccpg.png</link></figure>
           
           
       </section>
       <section>
           <title>PhoneGap Options</title>
           <list>
               <item>
                   <name>Maximum image size (bytes)</name>
                   <description>Specify the maximum image size (in bytes) that can be captured. Set to -1 for no limit (NOT RECOMMENDED)</description>
  
               </item>
                  <item>
                   <name>Picture source</name>
                   <description>Specify if the image should be captured by using the camera to take a picture, or if the user should select 
                       the image from the Photo Library on the device.
                   </description>
  
               </item>
                  <item>
                   <name>Save picture to photo album</name>
                   <description>When enabled, the image is saved to the device's photo library.</description>
  
               </item>
                  <item>
                   <name>Image quality</name>
                   <description>Specify the image quality when using PhoneGap.</description>
  
               </item>
                  <item>
                   <name>Allow picture editing after capture</name>
                   <description>Can the user edit the picture after capturing it?</description>
  
               </item>
               <item>
                   <name>Max image height</name>
                   <description>Specify the maximum image height (in pixels).</description>
               </item>
                  <item>
                   <name>Max image width</name>
                   <description>Specify the maximum image width (in pixels).</description>
               </item>
               
           </list>
           
           
       </section>
        <section>
           <title>PhoneGap Message Customization</title>
           
          <list>
              <item>
              
         
                   <name>Image selection canceled message</name>
                   <description>By default this reads 'Image Selection Canceled'</description>
               </item>
                <item>
                   <name>Image selection message close button</name>
                   <description>The default text reads 'Done'.</description>
              </item>
                <item>
                   <name>Camera canceled message</name>
                   <description>The default message is 'Camera Action Canceled'</description>
               </item>
                <item>
                   <name>Camera canceled message close button</name>
                   <description>The default text reads 'Done'.</description>
            </item>
               
               
            </list>
           
           
       </section>
        <section>
           <title>Client-side events</title>
           <list>
               <item>
                   <name>Before image capture</name>
                   <description>Specify the Javascript to run before the image is captured. If your code contains 
                       'return false;' then the image capture is cancelled.
                   </description>
  
               </item>
               
               
           </list>
           
           
       </section>
       
       <section>
           <figure><title>Capturing an Image</title><link>images/icc2.png</link></figure>
           
           
       </section>
       
       
       
       <section>
           <title>Use an 'Image Capture-Camera-Photo Library' Action to Add an Image to a Component</title>
          <steps>
              <step>
                  <description>In the UX Builder on the Controls page open the 'Other Controls' menu. 
                      Click on the [Static Text] option to add a Static Text control to the component.
                  </description>
                  <figure><link>images/icc3.png</link></figure>
              </step>
              <step>
                  <description>[Highlight the Static Text control. In the properties list on the right set the 
                      'Static text' property to be the following:</description>
                  <example><![CDATA[<img id="image1" />]]></example>
                  <figure><link>images/icc4.png</link></figure>
              </step>
              <step>
                  <description>In the Other Controls menu click on the [Button] option to add a button to the component.</description>
                  <figure><link>images/icc5.png</link></figure>
              </step>
              <step>
                  <description>The controls tree should look like this:</description>
                  <figure><link>images/iccshow.png</link></figure>
              </step>
              <step>
                  <description>Highlight the button. Scroll down the button's properties list on the right. In the 
                      'Javascript - (Touch, Mouse, Pointer Events)' section click the [...] button next to the 'click' 
                      property.
                  </description>
                  <figure><link>images/icc6.png</link></figure>
              </step>
              <step>
                  <description>In the 'Edit Click Event' dialog leave the radio button set to 'Action Javascript' and 
                      click the 'Add New Action' button.
                  </description>
                  <figure><link>images/icc7.png</link></figure>
              </step>
              <step>
                  <description>In the 'Action Javascript - Select an Action' dialog, go to the Filter list and enter 'image'. 
                      Select the 'Image Capture - Camera/Photo Library' action and click OK.
                  </description>
                  <figure><link>images/icc8.png</link></figure>
              </step>
              <step>
                  <description>In the 'Image Capture Properties' dialog click the [...] button next to the 
                      'Javascript to execute when image has been captured' property.
                  </description>
                  <figure><link>images/icc9.png</link></figure>
              </step>
              <step>
                  <description>Add the following line of code to the onImageCapture event.</description>
                  <example><![CDATA[$('image1').src = e.data;]]></example>
                  <figure><link>images/icc10.png</link></figure>
              </step>
              <step>
                  <description>Click OK, OK, and Save. Run the Component in Live Preview.</description>
                  <figure><link>images/icc11.png</link></figure>
              </step>
              <step>
                  <description>Click the Button you defined. The Image Capture-Camera-Photo Library action will prompt you to 
                      open an image on your computer. Open an image.
                  </description>
                  <figure><link>images/icc2.png</link></figure>
              </step>
              <step>
                  <description>The image should automatically be displayed in the Static Text control.</description>
                  <figure><link>images/icc12.png</link></figure>
              </step>
          </steps>
       </section>
       
       
       
   </sections>
   
   
    <see>
       <ref>Action Javascript for the UX</ref>
   </see>
   
</page>