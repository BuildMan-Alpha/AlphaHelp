<page>
    <shortlink>PhoneGap - File System Actions</shortlink>
   <topic>PhoneGap - File System Actions</topic>
   <description>Performs actions with the mobile device file system such as creating, reading, deleting file, creating directories, etc.(Only applies to UX components running in a PhoneGap shell.)
   </description>
   
   <sections>
           <section>
            <description>Used with the UX component.</description>
       </section>
  <section>
            <title>File System Action Properties</title>
            <list>
                <item>
                    <name>Action name</name>
                    <description>Specify the File System Action that you want to perform.</description>
                </item>
                <item>
                    <name>Directory name</name>
                    <description>Specify the name of the directory. You can specify a Javascript function to call that will return the name of the directory by entering: Javascript:your_function_name. For example: Javascript:getDir  (i.e. 'Javascript' followed by a colon, followed by the name of the function) TIP: Client-side data cache items are stored in a directory called: __AADataCache</description>
                </item>
                <item>
                    <name>File name</name>
                    <description>Specify the name of the file. You can specify a Javascript function to call that will return the name of the file by entering: Javascript:your_function_name. For example: Javascript:getDir  (i.e. 'Javascript' followed by a colon, followed by the name of the function)</description>
                </item>
                <item>
                    <name>Text to write to file</name>
                    <description>Specify the text to write to the file. You can specify a Javascript function to call that will return the text by entering: Javascript:your_function_name. For example: Javascript:getFileName  (i.e. 'Javascript' followed by a colon, followed by the name of the function)</description>
                </item>
                <item>
                    <name>Append to existing file</name>
                    <description>If the file already exists should the text be appended to the file? If true, text will appended, If false, existing file will be removed first. You can specify a Javascript function to return true/false by entering: Javascript:your_function_name. For example: Javascript:getAppendRule  (i.e. 'Javascript' followed by a colon, followed by the name of the function)</description>
                </item>
                <item>
                    <name>Starting byte location</name>
                    <description>(Optional) Specify the byte position (0 based) at which you want to start reading in the file. If you leave this value (or the 'Ending byte location') blank or the entire file will be read. You can specify a Javascript function to call that will return this value by entering: Javascript:your_function_name.</description>
                </item>
                <item>
                    <name>Ending byte location</name>
                    <description>(Optional) Specify the byte position (0 based) at which you want to end reading in the file. If you leave this value (or the 'Starting byte location') blank or the entire file will be read. You can specify a Javascript function to call that will return this value by entering: Javascript:your_function_name.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Javascript Callback Functions Properties</title>
            <list>
                <item>
                    <name>OnSuccess</name>
                    <description>Specify the Javascript to execute once the action has completed successfully.</description>
                </item>
                <item>
                    <name>OnSuccess</name>
                    <description>Specify the Javascript to execute once the action has completed successfully. Your code can reference the 'data' variable which is the contents of the file.</description>
                </item>
                <item>
                    <name>OnSuccess</name>
                    <description>Specify the Javascript to execute once the action has completed successfully. Your code can reference the 'uri' variable which is the URI of the file system.</description>
                </item>
                <item>
                    <name>OnFailure</name>
                    <description>Specify the Javascript to execute if the action fails.</description>
                </item>
            </list>
        </section>
       
       
   </sections>
   
   
    <see>
   <ref link="action javascript for the ux">Action Javascript for the UX</ref>

   </see>
   
</page>