<page>
   <topic>Get Primary Key values for Records in Query</topic>
   <description>Execute a query and then retrieve the primary key values for the parent table of a Data Bound UX component.
       (IMPORTANT: This action is intended for an event on a UX component).
   </description>
   
   <sections>
     
           <section>
            <description>Used with the UX component.</description>
       </section>
       
 <section>
            <title>Table Filter/Order Properties</title>
            <list>
                <item>
                    <name>Maximum number of keys to load</name>
                    <description>Specify the maximum number of keys to load. If you try to load to many keys, you will slow down the performance of your application.</description>
                </item>
                <item>
                    <name>Method for specifying filter/order</name>
                    <description>Method for specifying filter/order property. Choices include *[ui:SpecifyNow]*, *[ui:ComputeFromSubmittedValues]*.</description>
                </item>
                <item>
                    <name>Filter</name>
                    <description>Specify the filter expression.</description>
                </item>
                <item>
                    <name>Filter arguments</name>
                    <description>If you specify a filter using arguments, (e.g. customerId = :whatId) specify the explicit values for each argument.</description>
                </item>
                <item>
                    <name>Order</name>
                    <description>Specify the order expression.</description>
                </item>
                <item>
                    <name>Define search fields</name>
                    <description>Specify the controls on the Dialog that will be used to compute the Filter to apply to the table. Key values for all of the records in the filtered table will be retrieved.</description>
                </item>
                <item>
                    <name>Combine criteria using</name>
                    <description>If the user enters more than one search criterion, combine using AND or OR Choices include *[ui:AND]*, *[ui:OR]*.</description>
                </item>
                <item>
                    <name>Keyword search</name>
                    <description>Specify if the search is a 'keyword' style search. For a 'keyword' search, there is a single control where the user types a value to search for, and the search is performed in multiple fields. For example, the user might enter a search value of 'smi', and the search would be performed in the Firstname, Lastname, Address, City, and State fields.</description>
                </item>
                <item>
                    <name>Search input field</name>
                    <description><![CDATA[Specify the name of the control into which the user will entry the search value. If you want to call a Javascript function to return the search value, specify: Javascript_<functionName> where 'functionName' is the name of the Javascript functin you want to call. For example: javascript_myfunc]]></description>
                </item>
                <item>
                    <name>Keyword search fields</name>
                    <description>Specify the fields in the List that should be searched.</description>
                </item>
                <item>
                    <name>Define sort fields</name>
                    <description>Specify the controls on the Dialog that will be used to compute the Order to apply to the table. Key values will be retrieved in the specified order.</description>
                </item>
                <item>
                    <name>Base filter</name>
                    <description>(Optional) You can specify a 'base filter' that is applied in addition to the filter that the user defined. This is useful if you want the user to only be able to search within a certain set of records.</description>
                </item>
            </list>
        </section>
        <section>
            <title>No Records in Query Options Properties</title>
            <list>
                <item>
                    <name>No records found action</name>
                    <description>If the user enters search criteria that find no record what action should be taken? You can either show all records, show an empty record for the user to add a new record, or do nothing. Choices include *[ui:ShowAllRecords]*, *[ui:ShowNewRecord]*, *[ui:DoNothing]*.</description>
                </item>
                <item>
                    <name>Message to display (ShowAll Option)</name>
                    <description><![CDATA[Specify the message to show if no records were found. If you want to suppress the message, enter <None>. You can use language tags (<a5:r>..</a5:r>) in the message.]]></description>
                </item>
                <item>
                    <name>Message to display (NewRecord Option)</name>
                    <description><![CDATA[Specify the message to show if no records were found. If you want to suppress the message, enter <None>. You can use language tags (<a5:r>..</a5:r>) in the message.]]></description>
                </item>
            </list>
        </section>
        <section>
            <title>Key Description Fields Properties</title>
            <list>
                <item>
                    <name>Include additional fields to describe the Primary Key</name>
                    <description>Should additional fields be retrieved for each key value to describe the key. For example, you might want to retrieve the 'AccountName' field for each 'AccountId'. This would only be necessary if you were displaying the key list in a List View control, for example.</description>
                </item>
                <item>
                    <name>Define additional fields</name>
                    <description>Define additional fields property.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Client-side Events Properties</title>
            <list>
                <item>
                    <name>Before search</name>
                    <description>Specify the name of the Javascript function to call before the search is submitted to the server. If the function returns false, the search is not performed.</description>
                </item>
                <item>
                    <name>After search</name>
                    <description>Specify the name of the Javascript function to call after the search has completed. The function takes 'e' as an argument. e.recordsInQuery contains the number of records in the query.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Slider Control Properties</title>
            <list>
                <item>
                    <name>Has slider control to select active record</name>
                    <description>Specify if the UX Component should show a slider control to select the current record.</description>
                </item>
                <item>
                    <name>Slider Placeholder ID</name>
                    <description>Specify the ID of the Placeholder Control in which the slider should be shown.</description>
                </item>
                <item>
                    <name>Show slider message</name>
                    <description>Specify if a message should be shown when the user is dragging on the slider.</description>
                </item>
                <item>
                    <name>Slider message</name>
                    <description>Specify the message that should be shown when the user is dragging on the slider. The message can use HTML markup. You can use these placeholders in the template: {PrimaryKeyDescription}, {recordNumber} and {recordcount}</description>
                </item>
                <item>
                    <name>Slider width</name>
                    <description>Specify the slider width. Use CSS syntax. E.g. 300px, 4in, etc. TIP: You may also need to set the width of the placeholder control. For example, if you set the width to 100%, you will also need to set the width of the slider placeholder to 100%.</description>
                </item>
                <item>
                    <name>Slider message prefix</name>
                    <description>Specify the prefix to show in front of the slider message. The text can include HTML markup.</description>
                </item>
                <item>
                    <name>New record message</name>
                    <description>Specify the message to show when the user navigates to a new record. The message can use HTML markup.</description>
                </item>
                <item>
                    <name>No records message</name>
                    <description>Specify the message to show when there are no records in the query. The message can use HTML markup.</description>
                </item>
                <item>
                    <name>Hide slider message when focus lost</name>
                    <description>Should the slider message fade from view when the mouse is no longer over the slider.</description>
                </item>
                <item>
                    <name>Slider message position</name>
                    <description>Specify where the slider message should be positioned relative to the slider. Choices include *[ui:Above]*, *[ui:Below]*.</description>
                </item>
                <item>
                    <name>(Optional) Client-side onSlide event handler</name>
                    <description>(Optional) You can specify the name of a Javascript function to call when the user moves the slider. Your function will take 3 parameters: 'CurrentKeyDescription' - the description of the current key value, 'Value' - the slider index, and 'Count' - the maximum index of the slider.</description>
                </item>
                <item>
                    <name>(Optional) Client-side onChange event handler</name>
                    <description>(Optional) You can specify the name of a Javascript function to call when the user moves the slider to a new position. Your function will take 3 parameters: 'CurrentKeyDescription' - the description of the current key value, 'Value' - the slider index, and 'Count' - the maximum index of the slider.</description>
                </item>
            </list>
        </section>
        <section>
            <title>List View Properties</title>
            <list>
                <item>
                    <name>Has list view of records to select active record</name>
                    <description>Specify if the UX Component should show a list view control showing all of the primary keys in the current query. The user can click in the list view control to select the active record.</description>
                </item>
                <item>
                    <name>List View Placeholder ID</name>
                    <description>Specify the ID of the Placeholder Control in which the List View should be shown.</description>
                </item>
                <item>
                    <name>Height</name>
                    <description>Specify the height of the List View control. Use CSS syntax. E.g. 4in, 200px, etc.</description>
                </item>
                <item>
                    <name>Width</name>
                    <description>Specify the width of the List View control in inches.</description>
                </item>
                <item>
                    <name>Loading data message</name>
                    <description><![CDATA[Specify the message to show in the List View control while data is being loaded. You can use language tags in the string (e.g. <a5:r>text</a5:r>)]]></description>
                </item>
                <item>
                    <name>Has free-form template</name>
                    <description>Specify if the data in the List View control is laid out using a free-form template.</description>
                </item>
                <item>
                    <name>Free-form template</name>
                    <description>Define the free-form template.</description>
                </item>
                <item>
                    <name>Column heading</name>
                    <description>Define the column heading for List-View. This property is only used when free-form template is turned on.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Custom List View Record Navigators Properties</title>
            <list>
                <item>
                    <name>Has custom List View record navigators</name>
                    <description>Specify if the UX component has any custom List View controls that should be used to navigate the record that has focus.</description>
                </item>
                <item>
                    <name>List View ids</name>
                    <description>Specify the ids of the custom List View controls that should be used as record navigators.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Javascript Properties</title>
            <list>
                <item>
                    <name>onSelect</name>
                    <description>Specify Javascript to execute when the user clicks on an item in the List View control.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Panel Options Properties</title>
            <list>
                <item>
                    <name>Fill panel container</name>
                    <description>(Applies only when List View is in a Panel Card.) Should the List expand to consume all of the space in the Panel Card?</description>
                </item>
                <item>
                    <name>Target panel onSelect</name>
                    <description><![CDATA[(Applies only when List View is in a Panel Card that is inside a Panel Navigator.) When the user clicks on an item in the List View specify the name of the Panel Card that should get focus. You can also specify <None> or <NextPanel>.]]></description>
                </item>
            </list>
        </section>
        <section>
            <title>Debugging Properties</title>
            <list>
                <item>
                    <name>Show computed query</name>
                    <description>Show the query computed from the submitted data.</description>
                </item>
                <item>
                    <name>Element id</name>
                    <description>Specify the ID of the element on the Dialog where the computed query should be shown.</description>
                </item>
            </list>
        </section>
       
       
   </sections>
   
    <see>
       <ref>Action Javascript for the UX</ref>
   </see>
   
   
</page>