<page>
    <shortlink>Google Map Method UX Component</shortlink>
   <topic>Google Map Method (UX Component)</topic>
   <description>Call a method to perform some action on a Google Map. Actions that you can perform include:
       Clearing markers, opening or closing an info box, adding a marker to the map, centering the map on an address, setting the map zoom factor.
   </description>
   
   <sections>
     
           <section>
            <description>Used with the UX component.</description>
       </section>
       <section>
           <title>Resize Map</title>
           <description>An option in the 'Google Map Methods (UX Component)' action allows you to resize the map. 
               You can set the map height and width to an explicit size, or you can read the size from controls on the component, 
               or you can call a Javascript function that returns the height and width.</description>
           <note>In many cases where a Map is used in a UX that has Panels, you will set the 'Fill container' 
               property on the Map and so the map will resize automatically. You will not need this new action.</note>
       </section>
       <section>
           <title>Map Actions</title>
         <description>This action allows you to perform these map actions:</description>
           <cases>
               <case>
                   <description>Add a marker to the map - [watch video watch video2]</description>
               </case>
                 <case>
                   <description>Add multiple markers to the map -  [watch video]</description>
               </case>
                 <case>
                   <description>Show marker detail (i.e. open the Info Box)</description>
               </case>
                 <case>
                   <description>Show/hide marker</description>
               </case>
                 <case>
                   <description>Remove marker(s)</description>
               </case>
                 <case>
                   <description>Center map</description>
               </case>
                 <case>
                   <description>Set zoom level</description>
               </case>
                 <case>
                   <description>Refresh map</description>
               </case>
                <case>
                   <description>Emphasize/De-emphasize markers</description>
               </case>
               
               
           </cases>
           
       </section>
       
      <section>
            <title>Map Action Properties</title>
            <list>
                <item>
                    <name>Map id</name>
                    <description>Specify the map you want to operate on.</description>
                </item>
                <item>
                    <name>Action name</name>
                    <description>Specify the action that you want to perform. Choices include.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Add Multiple Markers Properties</title>
            <list>
                <item>
                    <name>Data series name</name>
                    <description>Specify the name of the Data Series that contains the data for the markers. To define Data Series, go to the Properties Pane.</description>
                </item>
                <item>
                    <name>Markers to clear before new markers are added</name>
                    <description>Specify the Group Names of any marker groups you want to clear from the map before adding new markers.</description>
                </item>
                <item>
                    <name>Latitude value</name>
                    <description>Specify the name of the sub-series that has the latitude value</description>
                </item>
                <item>
                    <name>Longitude value</name>
                    <description>Specify the name of the sub-series that has the longitude value</description>
                </item>
                <item>
                    <name>Marker name prefix</name>
                    <description>Each marker is given a unique name based on the marker name prefix and the row number in the Data Series.</description>
                </item>
                <item>
                    <name>Group name</name>
                    <description>Specify the group name that each marker belongs to. If you want to include data from the Data Series in the name, use a template. Click the smart field button to define the template.</description>
                </item>
                <item>
                    <name>Marker icon</name>
                    <description>If you leave this blank a default icon will be used for all markers. You can customize the icon used for each marker on the map. For example, you can dynamically set the icon based on an expression, an Xbasic function, or an 'icon sequence'.</description>
                </item>
                <item>
                    <name>Marker title</name>
                    <description>Specify the marker title. If you want to include data from the Data Series in the title, use a template. Click the smart field button to define the template.</description>
                </item>
                <item>
                    <name>Has marker detail</name>
                    <description><![CDATA[Specify if each marker has a detail view. Specify '<true>', '<false>' or the name of a Data Series column that has a logical value.]]></description>
                </item>
                <item>
                    <name>Marker detail</name>
                    <description>Specify the marker title. If you want to include data from the Data Series in the title, use a template. Click the smart field button to define the template.</description>
                </item>
                <item>
                    <name>Marker is draggable</name>
                    <description><![CDATA[Specify if each marker is draggable. Specify '<true>', '<false>' or the name of a Data Series column that has a logical value.]]></description>
                </item>
                <item>
                    <name>Animate marker</name>
                    <description><![CDATA[Specify if each marker should be animated when placed on the map. Specify '<false>', '<drop>' or '<bounce>', or the name of a Data Series column that has 'drop', 'bounce' or 'false' as a value.]]></description>
                </item>
                <item>
                    <name>Bounce duration</name>
                    <description>If the maker animation is set to 'drop' specify the length of the animation in milliseconds. You can select a Data Series column that has a duration value.</description>
                </item>
                <item>
                    <name>Overlay circle</name>
                    <description><![CDATA[Specify if a circle should be drawn around each marker. Select <true>, <false> or the name of a Data Series column that returns a logical value.]]></description>
                </item>
                <item>
                    <name>Overlay size</name>
                    <description>Specify the overlay size either by specifying a radius or area. Enter a number with the following suffix: "m", "km", "mi", or "ft" for radius, and "sq m", "sq km", "sq mi", "sq ft" for area. Alternatively, select a Data Series column that contains the overlay size.</description>
                </item>
                <item>
                    <name>Overlay color</name>
                    <description>Specify the overlay color. Alternatively, select a Data Series column that contains the overlay color.</description>
                </item>
                <item>
                    <name>Overlay fill opacity</name>
                    <description>Specify the overlay fill opacity (a value between 0 and 1 - solid color). Alternatively, select a Data Series column that contains the overlay fill opacity.</description>
                </item>
                <item>
                    <name>Stroke color</name>
                    <description>Specify the stroke color (color of the line surrounding the circle). Alternatively, select a Data Series column that contains the stroke color.</description>
                </item>
                <item>
                    <name>Stroke opacity</name>
                    <description>Specify the stroke opacity (a value between 0 and 1 - solid color). Alternatively, select a Data Series column that contains the stroke opacity.</description>
                </item>
                <item>
                    <name>Stroke width</name>
                    <description>Specify the stroke width (in points). Alternatively, select a Data Series column that contains the stroke width.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Javascript Properties</title>
            <list>
                <item>
                    <name>onClick</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onDblClick</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onDrag</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onDragEnd</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onDragStart</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onMouseDown</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onMouseOut</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onMouseOver</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onMouseUp</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onRightClick</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in data (no quotes) which is the Google Maps 'data' object for the marker. 
Example: myFunction(data,'{ds.data("Name")}')
Tip: You can get the lat/lng of the event location from the 'data' object. For example: var lat = data.latLng.lat(), var lng = data.latLnd.lng()</description>
                </item>
                <item>
                    <name>onAddComplete</name>
                    <description>Specify the Javascript to execute for this event. You will typically specify the name of a Javascript function. You can pass in any data you want to the function from the Data Series. You can also pass in markerSettings and markerObject (no quotes, case sensitive) which are the settings for the marker and the Google Maps marker Object. 
Example: myFunction(markerSettings,markerObject,'{ds.data("Name")}')</description>
                </item>
            </list>
        </section>
        <section>
            <title>Remove Marker(s) Properties</title>
            <list>
                <item>
                    <name>Remove by what</name>
                    <description>Remove a specific marker or a group of markers. Choices include *[ui:Marker]*, *[ui:Group]*.</description>
                </item>
                <item>
                    <name>Marker name</name>
                    <description>Specify the marker name.</description>
                </item>
                <item>
                    <name>Marker group</name>
                    <description>Specify the marker group.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Emphasize/De-emphasize Markers Properties</title>
            <list>
                <item>
                    <name>Emphasize or de-emphasize</name>
                    <description>Specify if you want to emphasize or de-emphasize a markers. Choices include *[ui:Emphasize]*, *[ui:De-Emphasize]*.</description>
                </item>
                <item>
                    <name>Specify markers by</name>
                    <description>How do you want to specify the markers to emphasize/de-emphasize? You can either specify by marker name or marker group. Choices include *[ui:By Name]*, *[ui:By Group]*.</description>
                </item>
                <item>
                    <name>Emphasize duration</name>
                    <description>Enter the duration in milliseconds</description>
                </item>
                <item>
                    <name>Marker names</name>
                    <description>Enter a comma delimited list of marker names.</description>
                </item>
                <item>
                    <name>Marker groups</name>
                    <description>Enter a comma delimited list of marker group names.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Zoom Map Properties</title>
            <list>
                <item>
                    <name>Zoom level</name>
                    <description>Set the zoom level (0 - whole earth - 20 - a few yards)</description>
                </item>
            </list>
        </section>
        <section>
            <title>Center Map Properties</title>
            <list>
                <item>
                    <name>Marker name</name>
                    <description>Specify the name of the marker. To call a javascript function to return the map name, specify javascript:functionname</description>
                </item>
                <item>
                    <name>Pan map</name>
                    <description>Indicate if the map should be panned into view.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Location or Address Properties</title>
            <list>
                <item>
                    <name>Get location or address from</name>
                    <description>Specify where the address of the marker should be obtained from. 'Explicit' - an address or lat/lng you enter now, 'Control(s) on component' - read a lat/lng value, or an address from one or more controls on the component, 'Javascript Function' - the name of a Javascript function that will return the location (either an address, or a lat,lng value), 'List Control' - columns in a List Control that contain either lat/lng values or an address, 'Device Location' - read the location from the device (the user will be prompted for permission). Choices include *[ui:Explicit]*, *[ui:Control(s) on Component]*, *[ui:List Control]*, *[ui:Javascript Function]*, *[ui:Device Location]*.</description>
                </item>
                <item>
                    <name>High accuracy</name>
                    <description>If true, the device will use its most accurate method to get location information. If false, the device will use its fastest or lower power consumption method depending on the device.</description>
                </item>
                <item>
                    <name>Timeout</name>
                    <description>The amount of time in milliseconds to wait on the device to acquire location information excluding the amount of time it takes the user to grant the web page access to geolocation data.</description>
                </item>
                <item>
                    <name>Max age</name>
                    <description>The amount of time in milliseconds to accept a previously acquired location. 0 means that a new location must be acquired from the device.</description>
                </item>
                <item>
                    <name>Location or Address</name>
                    <description>Specify the marker location. You can either enter an address, or a lat/lng value (as a comma delimited value e.g. 34,-118) .</description>
                </item>
                <item>
                    <name>Control for latitude</name>
                    <description>Specify the name of the control to read for the latitude value.</description>
                </item>
                <item>
                    <name>Control for longitude</name>
                    <description>Specify the name of the control to read for the longitude value.</description>
                </item>
                <item>
                    <name>Control(s) to read</name>
                    <description>Specify the name of the control(s) to read. The control(s) can either contain an address or a lat/lng value (as a comma delimited value e.g. 34,-118).</description>
                </item>
                <item>
                    <name>Javascript function</name>
                    <description>Specify the name of the Javascript function to call. The function can either return an address, or a lat/lng value (as lat,lng).</description>
                </item>
                <item>
                    <name>List control</name>
                    <description>Specify the name of the List control</description>
                </item>
                <item>
                    <name>List control column(s) to read</name>
                    <description>Specify the List column(s) to read. The list column(s) can either contain lat/lng values or an address.</description>
                </item>
                <item>
                    <name>Latitude column</name>
                    <description>Specify the name of the column in the List that has the latitude value.</description>
                </item>
                <item>
                    <name>Longitude column</name>
                    <description>Specify the name of the column in the List that has the longitude value.</description>
                </item>
                <item>
                    <name>Data type</name>
                    <description>Specify if the value for the marker position is an address, or a latitude/longitude value. Choices include *[ui:Address]*, *[ui:Latitude/Longitude]*.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Show/hide Marker Properties</title>
            <list>
                <item>
                    <name>Marker name</name>
                    <description>Specify the name of the marker. To call a javascript function to return the map name, specify javascript:functionname</description>
                </item>
                <item>
                    <name>Marker state</name>
                    <description>Specify if the marker should be shown or hidden Choices include *[ui:Show]*, *[ui:Hide]*.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Show Detail Properties</title>
            <list>
                <item>
                    <name>Marker name</name>
                    <description>Specify the name of the marker. To call a javascript function to return the map name, specify javascript:functionname</description>
                </item>
            </list>
        </section>
        <section>
            <title>Add Marker Properties</title>
            <list>
                <item>
                    <name>Marker settings</name>
                    <description>Marker settings property.</description>
                </item>
                <item>
                    <name>Marker name</name>
                    <description>When you add a marker to a map you must specify a unique name for the marker. To call a javascript function to return the map name, specify javascript:functionname</description>
                </item>
                <item>
                    <name>Bring marker into view</name>
                    <description>Specify if the map should be scrolled to bring the marker into view after it has been added to the map.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Resize Map Properties</title>
            <list>
                <item>
                    <name>Map height</name>
                    <description>Specify the map height. Use CSS syntax. You can specify the name of a control from which the height should be read. If you want to specify an explicit value, then prefix the value with 'value:' (e.g. value:300px). You can also specify the name of a Javascript function that will return the height by prefixing the value with 'javascript:' (e.g. javascript:getHeight).</description>
                </item>
                <item>
                    <name>Map width</name>
                    <description>Specify the map width. Use CSS syntax. You can specify the name of a control from which the width should be read. If you want to specify an explicit value, then prefix the value with 'value:' (e.g. value:300px). You can also specify the name of a Javascript function that will return the width by prefixing the value with 'javascript:' (e.g. javascript:getwidth).</description>
                </item>
            </list>
        </section>
       
   </sections>
   
   <links>
       <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_map_addMarkerToMap.swf">watch video1</link>
       <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_map_addMarkerToMap2.swf">watch video2</link>
       <link href="http://www.ajaxvideotutorials.com/V12Videos/ux_map_addMultipleMarkersToMap.swf">watch video</link>
   </links>
    <see>
       <ref>Action Javascript for the UX</ref>
   </see>
   
</page>