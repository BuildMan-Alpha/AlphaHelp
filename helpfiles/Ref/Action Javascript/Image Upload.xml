<page>
    <topic>Image Upload</topic>
    <description>Upload an image file to the server.</description>
    <sections>
        <section>
            <description>Used with the Grid and UX components</description>
        </section>
        <section>
            <description>First it is necessary to add an image to the component.</description>
        </section>
        <section>
            <title>Thumbnails</title>
            <description>The Action Javascript builder has an option in the Thumbnail Definition Builder that allows you to specify if the thumbnail file that is created should overwrite an existing file, or be renamed, so as not to conflict with existing files.</description>
        </section>
        <section>
            <description>When you define how thumbnails are to be created, you can specify if the thumbnail is to be stored as a file on disk, or as binary data in a record. In the case where you specify a file on disk, the builder allows you to specify a 'suffix' that is automatically added to the filename. For example if the suffix is 'thumb1', then the file on disk might called 'image_thumb1.jpg'. However, there may be situations where you don't want the suffix. If you set the suffix to a blank value, the file on disk has no suffix at all (e.g. 'image.jpg').</description>
            <note>Prior to Alpha Five Version 12, setting the suffix to a blank value would result in the file on disk being created as 'image_.jpg'.</note>
        </section>
        <section>
            <description>Of course, if you set the suffix to a blank value, the upload folder for the thumbnails needs to be different than the upload folder for the main image you are uploading, or else when the thumbnail is created, it will overwrite the main image.</description>
        </section>
        <section>
            <title>File Rename</title>
            <description>When you upload images or files and store the uploaded images or files in a filename on a server, there is an option to rename the file if there is an existing file with the same name on the server. Here is how the algorithm that computes the filename in the case of a conflict works. If a filed called "c:\myimages\image1.jpg" exists and you want to create a new file called 'image1.jpg', the new file will be called "c:\myimages\myimage1_1.jpg".</description>
        </section>
        <section>
            <title>Image Upload in a UX Component</title>
            <description>
                <p>You can upload to an Image control on the component that is, or is not, data bound.</p>
                <p>If you upload to a 'data bound' image, then when you submit the UX component, the image field in the table is updated. Watch the video below to learn more.</p>
            </description>
            <videos>
                <video>
                    <name>Watch Video</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/UX_ImageUpload.swf</link>
                </video>
            </videos>
        </section>
        <section>
            <description>
                <p>If you upload to a 'non-data-bound' image control, then when you submit the UX component, your event handler can choose what to do with the uploaded image. Watch the videos below to learn more.</p>
            </description>
            <videos>
                <video>
                    <name>Watch Video - Part 1</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/UXComponent_UploadingImagesToNonDataBoundControls.swf</link>
                </video>
                <video>
                    <name>Watch Video - Part 2</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/UXComponent_UploadingImagesToNonDataBoundControls_part2.swf</link>
                </video>
            </videos>
        </section>
        <section>
            <description>
                <p>In the case where you upload an image to a non-data bound image control, the afterDialogValidate event needs to load the image from its saved location and store the image in its final destination on the server - either on disk or in a database.</p>
                <p>The code example below demonstrates how to get the uploaded image. This example assumes the image was uploaded for an Image control called 'MYIMAGE':</p>
            </description>
            <example><![CDATA[dim blobKey as c
'Every image control has an associated control with a '_hiddena5fn' name.
'After the image has been uploaded, it is stored in temporary session storage
'The 'key' for the data in session storage is stored in this hidden field.

blobKey = e.dataSubmitted.myimage_hiddena5fn
blobKey = word(blobKey,1,":")

dim blobUploaded as b
Session.GetDataFromFile(blobUploaded,blobKey)
Session.DeleteSessionFile(blobKey)

'You now have the uploaded image data in a variable called 'blobUploaded'
'Your event handler can process this data.]]></example>
        </section>
        <section>
            <description>
                <p>You can also upload images to image controls in Repeating Sections. Watch the video below to learn more.</p>
            </description>
            <videos>
                <video>
                    <name>Watch Video</name>
                    <link>http://www.ajaxvideotutorials.com/V12Videos/UXComponent_DataBoundImagesInRepeatingSection.swf</link>
                </video>
            </videos>
        </section>
    </sections>
</page>