<page>
    <shortlink>Open a Grid component</shortlink>
   <topic>Open a Grid component</topic>
   <description>Opens a grid component in a pop-up window, or in a DIV on the current page. 
       This requires first defining a grid component.</description>
   
   <sections>

    <section>
            <description>Used with the Grid and UX component</description>
       </section>
       
       <section>
           
           
           <title>Javascript</title>
           <example><![CDATA[{grid.componentName}_X_ACTIONBUTTON_1(this);]]></example>
       </section>
       <section>
			<title>Ajax Windows </title>
			<description>Pop-up Ajax windows can handle animation affects. 
However, Ajax windows that contain IFrames, which in turn contain display PDF files, cannot be animated. As a result, the Animation property has not been made available for Ajax windows that host .a5w pages, since .a5w pages are hosted in an IFrame. 

There are several animation methods that have been exposed. The 'slide' and 'fade' methods are based on methods in the jQuery core library. All of the other methods are based on method in the jQueryUI library. By default, both of these libraries are loaded. The Web Project Properties dialog contains settings which control if these libraries are loaded, and from where they should be loaded. 

You can control the animation effect for the window display and the window close. You can also control the animation speed. If you use the smart field to choose an animation, the animation builder will pop up.   
</description>
			<figure><link>images/animation_builder.png</link></figure>
		</section>
		<section>
			<description>Certain animation styles will mess up the positioning of windows. If you find this to be the case, you should stick with the 'Fade' style for the 'show' animation. 
</description>
			<videos>
				<video>
					<name>Watch Video 
</name>
					<link>https://www.viddler.com/v/852c9e2b</link>
				</video>
				
				
			</videos>
		</section>

		
		<section>
			<title>Background Style Property
</title>
			<description>You can set a background style property for pop-up Ajax windows. This will allow you, for example, to set a background color, or background image for the window. 
</description>
		
		</section>
		

		
		<section>
			<title>Centering Content</title>
			<description>Ajax Windows that display Grids, Dialogs, or Custom Components can automatically center the content in the window. You can specify if you want vertical, horizontal or both vertical and horizontal centering. 
The image below shows a pop-up Ajax window where a background color has been set, and the window contents has been centered on both the vertical and horizontal dimension. 
</description>
<videos>
	<video>
		<name>video on Ajax Windows</name>
		<link>https://www.viddler.com/v/d93cadcb</link>
	</video>
	
</videos>
		</section>
		<section>
			<steps>
				<step>
					<description>Create a Window linked to a button
</description>
				</step>
				<step>
					<description>add a button to fields list
</description>
				</step>
				<step>
					<description>make an onClick Event for it
</description>
				</step>
				<step>
					<description>Add Action - Ajax Pop-up window
</description>
				</step>
				<step>
					<description>Centering a Window - one of the options in the Ajax pop-up definition
</description>
				</step>
				
				
			</steps>
			
		</section>
		  <section>
            <title>Target Grid Definition Properties</title>
            <list>
                <item>
                    <name>Grid name</name>
                    <description>Grid name property.</description>
                </item>
                <item>
                    <name>Grid alias</name>
                    <description>Grid alias property.</description>
                </item>
                <item>
                    <name>Base Filter</name>
                    <description>Specify the base filter. The Base filter cannot be removed by the user. The Grid is filtered on both the Base filter and the User filter.</description>
                </item>
                <item>
                    <name>User Filter</name>
                    <description>Specify the user filter. The User filter can be removed if the user executes a  'Show All' command. The Grid is filtered on both the Base filter and the User filter.</description>
                </item>
                <item>
                    <name>Link</name>
                    <description>Link property.</description>
                </item>
                <item>
                    <name>Order</name>
                    <description>Order property.</description>
                </item>
                <item>
                    <name>Argument bindings</name>
                    <description>Specify where the arguments get their values from.</description>
                </item>
                <item>
                    <name>Override settings</name>
                    <description>Specify if you want to override in properties in the target component. In V11 and above, you can also set session variables when the target component is opened.</description>
                </item>
                <item>
                    <name>Use master style</name>
                    <description>Use master style property.</description>
                </item>
                <item>
                    <name>Use cached grid</name>
                    <description>(Applies only when target Grid is opened in a window) When the target Grid is opened a second and subsequent time, a cached version is used to speed up the display. In some situations you might not want to use the cached version.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Advanced Properties</title>
            <list>
                <item>
                    <name>Debug mode</name>
                    <description>Save debugging information for submission to Alpha Software.</description>
                </item>
                <item>
                    <name>Timer</name>
                    <description>Show timing information for the Grid execution.</description>
                </item>
                <item>
                    <name>Show query syntax</name>
                    <description>Show syntax for queries.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Target Window, DIV, Tabbed UI Pane or Panel Properties</title>
            <list>
                <item>
                    <name>Target</name>
                    <description>Specify if the page should be opened in a pop-up window, a DIV on the page, a Panel or (if the component is running in a Tabbed UI) in a new Tabbed UI pane. (If you choose the 'Tabbed UI Pane' option, and the component is not running inside a Tabbed UI, it will be opened in a modeless pop-up window). Choices include.</description>
                </item>
                <item>
                    <name>Parent Panel Navigator</name>
                    <description>Specify the Id of the parent Panel Navigator. The dynamic Panel will be added to this Panel Navigator.</description>
                </item>
                <item>
                    <name>Dynamic Panel Title</name>
                    <description>Specify the title for the Dynamic Panel.</description>
                </item>
                <item>
                    <name>User can close dynamic panel</name>
                    <description>(Only applies if the target Panel Navigator has been configured to use a Tab Band) Specify if the label for the dynamically added Panel has a 'close' icon that allows the user to close the dynamically added Panel.</description>
                </item>
                <item>
                    <name>Working message placement</name>
                    <description>Specify the panel where the wait message should be shown. You should chose a Panel that is currently visible, not a Panel that will be animated into view when the component is rendered.</description>
                </item>
                <item>
                    <name>Working message uses CSS3 animation?</name>
                    <description>Specify if the working message should be displayed using a CSS3 animation?</description>
                </item>
                <item>
                    <name>Working message animation size</name>
                    <description>Specify the size of the animation in pixels.</description>
                </item>
                <item>
                    <name>Target Panel</name>
                    <description>Specify the Panel Id.</description>
                </item>
                <item>
                    <name>Target DIV ID</name>
                    <description>Specify the ID of the target DIV. This DIV can be in the Grid component (for example, in a free-form edit region), or on the .a5w page that contains the Grid component. TIP: If you want to specify a DIV that is inside a freeform edit region in a Grid cell, use the '{grid.rowID}' placeholder in the DIV id. For example: 'div1_Row{grid.rowID}'. This will ensure that each row has a uniquely named DIV in which the target page can be displayed.</description>
                </item>
                <item>
                    <name>Target DIV style</name>
                    <description>Specify the in-line style for the target DIV.</description>
                </item>
                <item>
                    <name>Can hide target DIV?</name>
                    <description>Specify the DIV can be hidden (to remove from view the target page after it has been opened in the DIV).</description>
                </item>
                <item>
                    <name>DIV hide hyperlink</name>
                    <description>Specify text for the hyperlink that hides the DIV where the target Grid is shown.</description>
                </item>
                <item>
                    <name>Window type</name>
                    <description>Specify the window type. Popup windows will show in a moveable window on the page. Dropdown windows have no title bar and cannot be moved. By default, Dropdown windows open directly below the control that you click to open the window. Note: An Ajax window will NOT be blocked by a browser's internal protection against popup windows.</description>
                </item>
                <item>
                    <name>Lock overlay CSS class name</name>
                    <description><![CDATA[Specify the CSS class name to use for the overlay that is displayed behind the window. The overlay prevents the user from clicking on controls that are outside the window. Leave blank, or specify <Default> to use the default style. Specify <Invisible> to create an invisible overlay (has no color, but user is still prevented from clicking on controls off the window). By specifying a class that has a 'background' attribute, you can control the color of the overlay. For example: background: rgba(0,0,0,0) to create a transparent overlay.]]></description>
                </item>
                <item>
                    <name>Sub-theme</name>
                    <description>(Optional) Specify a sub-theme for the window. The sub-theme can select a different pre-defined window 'look'. If you leave this property blank the 'base' sub-theme is automatically selected.</description>
                </item>
                <item>
                    <name>Window name</name>
                    <description><![CDATA[Set to <Default> to give the window a default name. If you give the window an explicit name (which must be unique), then you can easily get a pointer to the window to execute methods of the window object. Click the smart field for tips on how to name your window and for information on how to get a pointer to the window object.]]></description>
                </item>
                <item>
                    <name>Dock window</name>
                    <description>Docked windows 'stick' to an edge of the screen and remain in place even when the page is scrolled.</description>
                </item>
                <item>
                    <name>Dock location</name>
                    <description>Specify which edge of the screen the window is docked to. Choices include *[ui:Left]*, *[ui:Right]*, *[ui:Top]*, *[ui:Bottom]*.</description>
                </item>
                <item>
                    <name>Allow auto-close of dirty Grid</name>
                    <description>Specify if the window should close automatically when the user clicks off the window when the Grid is dirty. When a window is set to use the 'Dropdown' style, clicking anywhere on the page outside the window will normally cause the Window to close. However, if the Grid that is shown in the Window is dirty, the window does not close, unless this property is checked.</description>
                </item>
                <item>
                    <name>Window position</name>
                    <description>Specify where the window will be shown.</description>
                </item>
                <item>
                    <name>Dropdown Window position</name>
                    <description>Specify where the window will be shown.</description>
                </item>
                <item>
                    <name>Re-use existing window</name>
                    <description>Specify if multiple modeless windows can be opened, or only a single modeless window.</description>
                </item>
                <item>
                    <name>Window title</name>
                    <description>Specify the window title. The window title can contain data from fields in the current record. Enclose field values in curly parens. e.g. Customer - {lastname}. To reference values from a column in a List control use this syntax: {LIST::ListName::ColumnName} (e.g. {LIST::MYLIST1::LASTNAME} )</description>
                </item>
                <item>
                    <name>Window title show</name>
                    <description>Specify if the window title should be shown or hidden.</description>
                </item>
                <item>
                    <name>Window title position</name>
                    <description>Specify if the window title should appear at the top or bottom of the window. Choices include *[ui:Top]*, *[ui:Bottom]*.</description>
                </item>
                <item>
                    <name>Window title direction</name>
                    <description>Specify if the direction is 'ltr' (left-to-right) (title on left, close button on right) or 'rtl' (right-to-left) (close button on left and title on right). Choices include *[ui:ltr]*, *[ui:rtl]*.</description>
                </item>
                <item>
                    <name>Window title has close button</name>
                    <description>Specify if the window title has a Close button.</description>
                </item>
                <item>
                    <name>Disable window move</name>
                    <description>Specify if the window cannot be moved by the user.</description>
                </item>
                <item>
                    <name>Pane title</name>
                    <description>Specify the tab pane title. The pane title can contain data from fields in the current record. Enclose field values in curly parens. e.g. Customer - {lastname}. To reference values from a column in a List control use this syntax: {LIST::ListName::ColumnName} (e.g. {LIST::MYLIST1::LASTNAME} )</description>
                </item>
                <item>
                    <name>Auto refresh on focus</name>
                    <description>Specify if the content in the tab pane should be refreshed automatically every time the pane gets focus.</description>
                </item>
                <item>
                    <name>Window height</name>
                    <description>Specify the window height. Use CSS syntax. For example: 3in, 10cm, 200px. If you do not set the height, the window will resize automatically to accommodate the window contents.</description>
                </item>
                <item>
                    <name>Window width</name>
                    <description>Specify the window height. Use CSS syntax. For example: 3in, 10cm, 200px. If you do not set the width, the window will resize automatically to accommodate the window contents.</description>
                </item>
                <item>
                    <name>Window is resizable</name>
                    <description>Specify if the window is resizable.</description>
                </item>
                <item>
                    <name>Working message</name>
                    <description>Specify the text of the message to show in the window while the window waits for its contents to be generated.</description>
                </item>
                <item>
                    <name>Working message icon</name>
                    <description>Specify the image to show in the window while the window waits for its contents to be generated.</description>
                </item>
                <item>
                    <name>Refresh Grid on window close</name>
                    <description>When the window is closed, specify if the Grid should be refreshed. You can refresh the current row, or all rows in the Grid. Choices include.</description>
                </item>
                <item>
                    <name>Refresh Parent Tab Pane on Tab Pane close</name>
                    <description>When the Tab Pane is closed, specify if the parent Grid should be refreshed.</description>
                </item>
                <item>
                    <name>Window background style</name>
                    <description>Specify the inline-style for the window background</description>
                </item>
                <item>
                    <name>Center window contents - vertically</name>
                    <description>Specify if the window contents should be vertically centered</description>
                </item>
                <item>
                    <name>Center window contents - horizontally</name>
                    <description>Specify if the window contents should be horizontally centered</description>
                </item>
                <item>
                    <name>Warn before closing if Grid in window is dirty</name>
                    <description>If the Grid shown in the window is dirty, should a warning be displayed when the user tries to close the window?</description>
                </item>
                <item>
                    <name>Has pointer icon</name>
                    <description>Specify if the window has a pointer icon that points to the element that was clicked to show the window.</description>
                </item>
                <item>
                    <name>Pointer position</name>
                    <description>Specify the window edge that has the pointer icon. If you select 'Auto' the most appropriate edge is automatically selected. Choices include *[ui:Auto]*, *[ui:Top]*, *[ui:Bottom]*, *[ui:Left]*, *[ui:Right]*.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Window Buttons Properties</title>
            <list>
                <item>
                    <name>Has custom toolbar buttons</name>
                    <description>Specify if the window has custom buttons in the window toolbar (at the bottom of the window).</description>
                </item>
                <item>
                    <name>Define buttons</name>
                    <description>Define the buttons that appear in the window toolbar (at the bottom of the window).</description>
                </item>
                <item>
                    <name>Buttons in-line style</name>
                    <description>In-line style for the buttons. TIP: To display the buttons left justified, enter an in-line style of: text-align:left;</description>
                </item>
            </list>
        </section>
        <section>
            <title>Optional Window Parts Properties</title>
            <list>
                <item>
                    <name>Show top bar</name>
                    <description>Specify if a top bar should be shown. (Shows above the window body, but inside the body container).</description>
                </item>
                <item>
                    <name>Top bar HTML</name>
                    <description>Specify the HTML to show in the top bar.</description>
                </item>
                <item>
                    <name>Top bar style</name>
                    <description>Specify the in-line style for the top bar.</description>
                </item>
                <item>
                    <name>Show bottom bar</name>
                    <description>Specify if a top bar should be shown. (Shows below the body, inside the body container).</description>
                </item>
                <item>
                    <name>Bottom bar HTML</name>
                    <description>Specify the HTML to show in the top bar.</description>
                </item>
                <item>
                    <name>Bottom bar style</name>
                    <description>Specify the in-line style for the top bar.</description>
                </item>
                <item>
                    <name>Show header</name>
                    <description>Specify if a header should be shown. (Shows above the window body, but inside the body container).</description>
                </item>
                <item>
                    <name>Header HTML</name>
                    <description>Specify the HTML to show in the header.</description>
                </item>
                <item>
                    <name>Header style</name>
                    <description>Specify the in-line style for the top bar.</description>
                </item>
                <item>
                    <name>Show footer</name>
                    <description>Specify if a footer should be shown. (Displays below the body, the bottom bar and below any user-defined buttons).</description>
                </item>
                <item>
                    <name>Footer HTML</name>
                    <description>Specify the HTML to show in the footer.</description>
                </item>
                <item>
                    <name>Footer style</name>
                    <description>Specify the in-line style for the footer.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Window Animation Properties</title>
            <list>
                <item>
                    <name>Animation</name>
                    <description>Specify if the window should be animated when it is shown or hidden. Note: If the window contains an IFrame, which in turn contains a PDF viewer, animation may not work well and should not be used.</description>
                </item>
                <item>
                    <name>Show animation style</name>
                    <description>Select the animation method to use when the window is shown. Fade and Slide use methods in jQuery core. Other options require jQueryUI.</description>
                </item>
                <item>
                    <name>Show animation speed</name>
                    <description>Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds), or you can enter an explicit value in milliseconds.</description>
                </item>
                <item>
                    <name>Hide animation style</name>
                    <description>Select the animation method to use when the window is closed. Fade and Slide use methods in jQuery core. Other options require jQueryUI.</description>
                </item>
                <item>
                    <name>Hide animation speed</name>
                    <description>Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds), or you can enter an explicit value in milliseconds.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Client-side Events Properties</title>
            <list>
                <item>
                    <name>Before execute event</name>
                    <description>Specify the name of a Javascript function to call before the callback is made to open the target Grid. This Javascript function will take 'go' as an input parameter. 'go' contains all of the settings for the target Grid to be opened. The purpose of this function is to allow you to override any of the  properties of the passed-in 'go' object.</description>
                </item>
                <item>
                    <name>onInitialize</name>
                    <description>Specify the Javascript code to execute the first time the window is shown.</description>
                </item>
                <item>
                    <name>onBeforeShow</name>
                    <description>Specify the Javascript code to execute before the window is shown.</description>
                </item>
                <item>
                    <name>onShow</name>
                    <description>Specify the Javascript code to execute when the window is shown.</description>
                </item>
                <item>
                    <name>onBeforeHide</name>
                    <description>Specify the Javascript code to execute before the window is hidden.</description>
                </item>
                <item>
                    <name>onHide</name>
                    <description>Specify the Javascript code to execute when the window is hidden.</description>
                </item>
                <item>
                    <name>onFocus</name>
                    <description>Specify the Javascript code to execute when the window gets focus.</description>
                </item>
                <item>
                    <name>onMove</name>
                    <description>Specify the Javascript code to execute when the window is moved.</description>
                </item>
                <item>
                    <name>onResize</name>
                    <description>Specify the Javascript code to execute when the window is resized.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Tab Pane Javascript Properties</title>
            <list>
                <item>
                    <name>onBeforeChange</name>
                    <description>Fires before the tab pane changes. If event handler returns true, user can change tab. If event handler returns false, user cannot change tab.</description>
                </item>
                <item>
                    <name>onChange</name>
                    <description>Fires when the tab pane is changed.</description>
                </item>
                <item>
                    <name>onRightClick</name>
                    <description>Fires when user right-clicks on a tab pane.</description>
                </item>
                <item>
                    <name>onInitial</name>
                    <description>Fires when the tab pane is created.</description>
                </item>
                <item>
                    <name>onBeforeRemove</name>
                    <description>Fires before a tab pane is closed. If event handler returns true, user can close tab. If event handler returns false, user cannot close tab.</description>
                </item>
                <item>
                    <name>onRemove</name>
                    <description>Fires when the tab pane is closed.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Ajax Failed/Offline Javascript Properties</title>
            <list>
                <item>
                    <name>Timeout setting</name>
                    <description><![CDATA[(Optional) Specify the time to wait (in milliseconds) for a response from the callback. If a response is not received within the specified time, the Ajax failed message is displayed.  The <Default> value is defined by the {dialog.object}.ajaxCallbackTimeout property (which you can change in your Javascript code). The default value for this property is 0 - which means no timeout - wait indefinitely for the server to respond.]]></description>
                </item>
                <item>
                    <name>Ajax failed message</name>
                    <description>This message is displayed in the case of a failed Ajax callback (i.e. the server does not respond). You can specify a Javascript function to call if the Ajax callback fails using the following syntax: *[xb:javascript:name_of_your_javascript_function]*</description>
                </item>
                <item>
                    <name>Offline Javascript</name>
                    <description>(Optional) Specify the Javascript to execute if the device is offline. Since the device is offline, the Ajax callback is not made. Therefore the code in the 'Ajax failed Javascript' property will not get executed.</description>
                </item>
            </list>
        </section>
        <section>
            <description>See Also: JQuery Support</description>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Advanced Options for Popup Windows</title>
                <description>This video demonstrates some of the options available for configuring popup windows.</description>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/6e7ae9c0</link>
                </video>
            </videos>
        </section>
   </sections>
   
    <see>
   <ref link="action javascript for the ux">Action Javascript for the UX</ref>
       <ref link="action javascript in the grid">Action Javascript in the Grid</ref>
   </see>
   
   
</page>