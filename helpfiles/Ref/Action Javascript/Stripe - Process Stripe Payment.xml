<page>
    <shortlink>Stripe - Process Stripe Payment</shortlink>
   <topic>Stripe - Process Stripe Payment</topic>
   <description>Process payment using Stripe.</description>
   
   <sections>
     
           <section>
            <description>Used with the UX component.</description>
       </section>
       
       <section>
         
           <title>Stripe Checkout Properties</title>
           <list>
               <item>
                   <name>Method for specifying Stripe API keys</name>
                   <description>Should the Stripe API keys be read from the project properties or do you want to specify explicit 
                       values for the secret publishable keys. The secret key is only stored server side and is never exposed to the client.
                   </description>
               </item>
               <item>
                   <name>Test secret key</name>
                   <description>This action is for test app use only, use it to specify your test secret key.</description>
               </item>
               <item>
                   <name>Test publishable key</name>
                   <description>For test app use only, specify you test publishable key.</description>
               </item>
               <item>
                   <name>Live secret key</name>
                   <description>For live app use only, specify your live secret key.</description>
               </item>
               <item>
                   <name>Live publishable key</name>
                   <description>For live app use only, specify your live publishable key.</description>
               </item>
               <item>
                   <name>Stripe app type</name>
                   <description>Set to test for app testing. Use the Stripe supplied credit card numbers for testing. 
                       No money is transferred. Set to live when ready to start charging credit cards with your app.
                   </description>
               </item>
               <item>
                   <name>Account name</name>
                   <description>Enter the account name as it should appear within the Stripe Checkout popup.</description>
               </item>
               <item>
                   <name>Icon image</name>
                   <description>Specify the image for use as the app icon within the Stripe Checkout popup. The image 
                       must be 128px by 128px.
                   </description>
               </item>
               <item>
                   <name>Currency type</name>
                   <description>Enter the country currency code.</description>
               </item>
               <item>
                   <name>Charge Description</name>
                   <description>This Javascript must return a character string for use as the charge description. 
                       You may want to read from an existing control, call another Javascript function or simply return 
                       the description as a character string, example: return '2 Widgets';
                   </description>
               </item>
               <item>
                   <name>Charge amount (in cents)</name>
                   <description>The Javascript you define can simply return a charge amount or read the amount from any control. 
                       You can also call another Javascript function that returns the amount. Example: return getChargeAmount()
                   </description>
               </item>
             
               
               
           </list>
          
       </section>
       <section>
           <title>Events</title>
           <list>
               <item>
                   <name>On Stripe Checkout Complete</name>
                   <description>Fires after the Stripe Checkout charge has been authorized or denied. The results 
                       can be passed to a variable by calling the {dialog.object}.getStripeResults() method. This 
                       example Javascript code will display the JSON returned: var e = {dialog.object}.getStripeResults(); 
                       var_results = JSON.stringify(e.null.'\t'); alert('Stripe returned:' + _results);
                   </description>
               </item>
               
           </list>
           
       </section>
       
       <section>
         <description>
Stripe Checkout, and the Stripe API, allow you to process credit card payments from within your desktop web or mobile app. 
You will need to obtain your unique test and live authentication/api keys from Stripe prior to working with Stripe Checkout within your app. See the [Stripe Website] to setup your account.
</description>
         <figure><link>images/stripe_website.png</link></figure>
         
     </section>
     <section>
         <description>A typical use case is to assign the action to a button click event, once the total of all items to be purchased has been computed. 
</description>
     </section>
     <section>
         <videos>
             <video>
                 <description>Watch Video</description>
                 <link>https://www.youtube.com/embed/aRie5a4XzQQ?feature=player_detailpage</link>
             </video>
                <video>
                 <description>Download Component</description>
                 <link>http://www.ajaxvideotutorials.com/V12Videos/RocketMotors.a5wcmp</link>
             </video>
             
         </videos>
         
     </section>
  <section>
      <title>Specifying your Stripe API Keys:</title>
      <description>Stripe will issue you a total of four authentication/api keys. One set is for testing and one set is for a live app. The keys can be entered in explicitly within the Action Javascript builder or you may specify the keys within your project properties (click the Project Properties button when the Web Control Panel has focus). </description>
      <figure><link>images/stripe_ajs1.png</link></figure>
  </section>   
     
    <section>
       <title>Entering the Stripe Checkout keys in the Project Properties
</title> 
       <description>Entering the Stripe Checkout Keys in the Project Properties allows you to easily use Stripe Checkout within multiple components. Be careful to enter the test keys (typically prefixed with sk_test and pk_test) and the live keys (typically prefixed with sk_live and pk_live) in the appropriate fields. 

The secret key is used server side when the server is communicating to the Stripe API with the token supplied by Stripe Checkout. The secret key is never revealed client side. 
</description> 
        <figure><link>images/stripe_ajs1a.png</link></figure>
    </section>
     
     <section>
       <title>Stripe App Type:</title> 
       <description>The app type can be Test or Live. Use Test for all of your testing and when you are ready to go live you must switch this property to Live and republish the app. If you are building a PhoneGap app, make sure to rebuild the PhoneGap app and upload to PhoneGap Build. </description> 
       
    </section>    
       <section>
       <title>Icon Image: </title> 
       <description>The icon image is displayed at the top of the Stripe Checkout component. The recommended minimum size is 128 x 128 px. Supported image types include .gif, .jpeg and .png. </description> 
        <figure><link>images/stripe_ajs3.png</link></figure>
    </section>  
     <section>
         <title>Currency type: </title>
         <description>This specifies the currency of the amount being charged. The code entered here is the 3 letter ISO country code. Stripe offers support for a worldwide range of currencies. You can accept payments in your supported currencies from almost any credit card and debit card no matter where the customer lives. Customers in other countries may be charged additional fees by their bank. </description>
     </section>
       <section>
         <title>Charge description:</title>
         <description>A general description of the product or service being purchased. The JavaScript you enter here can simply return a string (like the example below), return the value contained within a control or return the result of a JavaScript function, defined within the UX component's JavaScript Functions property. </description>
         <figure><link>images/stripe_ajs4.png</link></figure>
     </section>
     <section>
         <title>Charge amount: </title>
         <description>The amount (in cents) that is being charged. The JavaScript you enter here may simply return a number (example: return 1235; for a $12.35 charge), may read the value of a control (make sure you convert to cents!) or may return the result of a JavaScript function, defined within the UX component's JavaScript Functions property. </description>
         <figure><link>images/stripe_ajs5.png</link></figure>
     </section>
     <section>
         <title>OnStripeCheckoutComplete: </title>
         <description>This event fires after Stripe has attempted to process the payment with the token supplied by Stripe Checkout. The JavaScript you enter here can examine the results returned from Stripe by calling the {dialog.object}.getStripeResults() method (see the sample code below). The {dialog.object}.getStripeResults method returns either a Stripe charge object with a wide range of properties or an error. </description>
         
     </section>
     <section>
         <description>See [Stripe Charges Doc] for more information. </description>
         <figure><link>images/stripe_ajs6.png</link></figure>
     </section>
       <section>
         <title>HTTPS For Your Site</title>
         <description>All submissions of payment info using Stripe Checkout are made via a secure HTTPS connection. However, in order to protect yourself from certain forms of man-in-the-middle attacks, it is suggested that you serve the page containing the payment form with HTTPS as well. </description>
        
     </section>
     
     
 </sections>   
 <links>
     <link href="https://stripe.com">Stripe Website</link>
     
 </links>
   
   <see>
       <ref>Action Javascript for the UX</ref>
   </see>
</page>