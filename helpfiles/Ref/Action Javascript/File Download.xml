<page>
    <shortlink>File Download</shortlink>
   <topic>File Download</topic>
   <description>Download a file from the server to the user's machine.</description>
   <sections>
       <section>
            <description>Used with the Grid and UX components</description>
       </section>
        <section>
            <title>File Download in a UX Component</title>
            <description>
                <p>In order to add an event handler that performs a file download action for an embedded object (i.e. a file that is stored in a binary field in a table), you must add a special [[File Upload/Download] control] to the UX component.</p>
                <p>The [File Upload/Download] control is in the Other Controls section of the Toolbox.</p>
            </description>
            <figure>
                <link>images/fileuploaddownload.jpg</link>
            </figure>
        </section>
        <section>
            <description>
                <p>Once you have added the [File Upload/Download] control, you can then use Action Javascript to define a File Download action.</p>
            </description>
        </section>
        
         <section>
            <title>File Download Properties</title>
            <list>
                <item>
                    <name>Type</name>
                    <description>
                        <p>The file download action type. The Type defines where the download location of the file can be found. Locations include:</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Type</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>Absolute filename</name>
                                    <description>The file to download is specified using an absolute file location. The location can be a file on the Application Server or a URL to the file.</description>
                                </item>
                                <item>
                                    <name>UX Component control contains filename</name>
                                    <description>The location and name of the file to download is specified in a control on the component. The filename can be a filename relative to the component's location, the absolute path on the server to the file, or a URL.</description>
                                </item>
                                <item>
                                    <name>UX Component control contains a link or embedded image</name>
                                    <description>The file to download is stored either directly in a field in a table (embedded) or as the location and name of the  file (URL) to download.</description>
                                </item>
                                <item>
                                    <name>[File Upload/download] control on UX Component contains an embedded file</name>
                                    <description>The location and name of the file to download is stored in a database table field bound to a File Upload/Download control.</description>
                                </item>
                                <item>
                                    <name>Javascript</name>
                                    <description>The location and name of the file to download is calculated using a JavaScript function.</description>
                                </item>
                                <item>
                                    <name>Ajax Callback</name>
                                    <description>The location and name of the file to download is calculated via an Ajax Callback to an Xbasic function.</description>
                                </item>
                                <item>
                                    <name>Amazon S3 Storage</name>
                                    <description>The file to download is located in Amazon S3 storage.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </item>
                <item>
                    <name>Filename</name>
                    <description>The file to download. The name you specify here is the fully qualified name of a file on your server, not a file on your development machine. You can also specify a URL.</description>
                </item>
                <item>
                    <name>Fieldname (referenced file)</name>
                    <description>The name of the control that contains a reference to a file (i.e. a filename, or a URL). The reference can be a relative or absolute filename, or a URL.</description>
                </item>
                <item>
                    <name>Image field</name>
                    <description>The name of the control that contains the image you want to download. The field can contain an embedded image or a reference to an image filename. If it is a reference, it can be an absolute or relative filename.</description>
                </item>
                <item>
                    <name>Object field</name>
                    <description>The name of the field in the table the Grid is based on that contains the embedded object. An 'embedded' object is some binary object (e.g. a .pdf file) that is embedded into a field in table that the grid is based on.</description>
                </item>
                <item>
                    <name>Export filename</name>
                    <description>The name of temporary file that the embedded object will be exported to before it is downloaded. Be sure that the filename specifies the appropriate extension. For example if the embedded object is .pdf data, specify a .pdf filename. If the embedded object type varies from row to row (e.g. row 1 contains a .pdf file, row 2 contains a .xls file), then you can leave the extension out and the appropriate extension will be set at runtime (based on the value in the 'Object type Field' or 'Object type' property)</description>
                </item>
                <item>
                    <name>Object type mode</name>
                    <description>Whether the type of the embedded object is the same for each row in the table, or if it can vary from row to row. Choices include *[ui:Dynamic]*, *[ui:Fixed]*.</description>
                </item>
                <item>
                    <name>Object type</name>
                    <description>The file type of the embedded object (e.g. .pdf, .xls, .jpg, .doc, .docx, etc.)</description>
                </item>
                <item>
                    <name>Object type field</name>
                    <description>If the embedded object type varies from row to row (e.g. row 1 contains a .pdf file, row 2 contains a .xlsx file, row 3 contains a .docx file, etc.), you can specify the name of a field in the table that stores the object type for the current row. The data stored in the field must be the file type extension. e.g. .pdf, .xlsx, .zip, etc.</description>
                </item>
                <item>
                    <name>Folder name</name>
                    <description>If the filename that is stored in the control is a relative filename, specify the folder where the physical file is stored. You can specify an absolute, or relative folder name. If you specify a relative folder name, it is relative to the application root (request.ApplicationRoot).</description>
                </item>
                <item>
                    <name>Javascript</name>
                    <description>The name of the Javascript function to call. This function should return the name of the file you want to download. The function should be defined in the 'Javascript Declarations' property. For example: myjsfunction()</description>
                </item>
                <item>
                    <name>Xbasic function</name>
                    <description>The name of the Xbasic function to call. Click the hyperlink below for a sample Xbasic function. The sample will show what properties the Xbasic function is expected to set.</description>
                </item>
                <item>
                    <name>Client-side filename</name>
                    <description>
                        <p>This property is ignored when *[ui:Download mode]* is set to 'Direct'.</p>
                        <p>The default filename to use when saving the file on the user's computer. The user can override the suggested name when prompted to save the file. If you set the name to &lt;Default&gt;, then the filename of the file on the server will be used. For an embedded object, a system generated filename will be used. If you specify a client-side filename with no extension, the extension of the file being downloaded will be used.</p>
                        <p>You can call a Javascript function to dynamically generate the name of the client-side filename. To specify a Javascript function enter: function:nameOfYourJavascriptFunction. For example:</p>
                        <p>
                            <example><![CDATA[function:getFilename]]></example>
                        </p>
                        <p>where 'getFilename' is the name of your Javascript function.</p>
                        <p>The value returned by your Javascript function must be url encoded. For example:</p>
                        <p>
                            <example code="js"><![CDATA[var getFilename() {
    var filename = "myFile.pdf";
    filename = encodeURI(filename);
    return filename;
}]]></example>
                        </p>
                    </description>
                </item>
                <item>
                    <name>File not found action</name>
                    <description>The action to take if the file to download cannot be found.</description>
                </item>
                <item>
                    <name>File not found message</name>
                    <description>The message to show if the file was not found on the server. You can include the {filename} or {shortFilename} placeholder in the message. {filename} - full filename including drive and path, {shortfilename} - name only. You can use Text Dictionary Tags (&lt;a5:t&gt; tags; &lt;a5:r&gt; tags are not supported) to localize the message.</description>
                </item>
                <item>
                    <name>Display permission denied message</name>
                    <description>Whether or not a message should be shown if the user does not have permissions to download the file.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Amazon S3 Properties Properties</title>
            <list>
                <item>
                    <name>How to specify Amazon credentials</name>
                    <description>Whether Amazon credentials should be specified now or as part of the name of the object to download.</description>
                </item>
                <item>
                    <name>Method for specifying Amazon credentials</name>
                    <description>Method for specifying Amazon credentials property. Choices include *[ui:ConnectionString]*, *[ui:Explicit]*.</description>
                </item>
                <item>
                    <name>Connection string</name>
                    <description>A Storage connection string. The storage connection string *[MUST NOT BE ENCRYPTED]*.</description>
                </item>
                <item>
                    <name>Secret</name>
                    <description>Your Amazon S3 secret.</description>
                </item>
                <item>
                    <name>Access key</name>
                    <description>Your Amazon S3 Access key.</description>
                </item>
                <item>
                    <name>Bucket</name>
                    <description>The name of the Amazon S3 Bucket containing the file.</description>
                </item>
                <item>
                    <name>Method for specifying Amazon object name to download</name>
                    <description>The method to determine what object to download from Amazon S3. Choices include *[ui:Explicit]*, *[ui:Field name]*, *[ui:Javascript]*.</description>
                </item>
                <item>
                    <name>Explicit object name</name>
                    <description>The name of the object. This property is only shown when *[ui:Method for specifying Amazon object name to download]* is set to 'Explicit'.</description>
                </item>
                <item>
                    <name>Javascript function to return object name</name>
                    <description>The JavaScript function to call to get the object name. The function must return the name of the object to download. This property is only shown when *[ui:Method for specifying Amazon object name to download]* is set to 'Javascript'.</description>
                </item>
                <item>
                    <name>Field name</name>
                    <description>The control that contains the object to download. This property is only shown when *[ui:Method for specifying Amazon object name to download]* is set to 'Field name'.</description>
                </item>
                <item>
                    <name>Download mode</name>
                    <description>
                        <p>Defines if the file should be downloaded to the Application Server first before being sent to the client or downloaded directly from Amazon S3 to the user's device.</p>
                        <p>
                            <list>
                                <item>
                                    <name-title>Download mode</name-title>
                                    <description-title>Description</description-title>
                                </item>
                                <item>
                                    <name>Indirect</name>
                                    <description>The file is downloaded from S3 to the Alpha Anywhere server and then sent to the client - download behaves just like any other download option. User will be prompted to save the file.</description>
                                </item>
                                <item>
                                    <name>Direct</name>
                                    <description>The file is downloaded directly from Amazon S3 to the client. If the browser has built-in support to display the file (such as for images or PDFs), the user will not be prompted to save the file.</description>
                                </item>
                            </list>
                        </p>
                    </description>
                </item>
                <item>
                    <name>ID of image element where images should be shown</name>
                    <description>The id of the &lt;img&gt; element where the image should be displayed. The user will not be prompted to save the image. Instead, the image will be displayed on the client. </description>
                </item>
                <item>
                    <name>ID of IFrame where PDFs should be shown</name>
                    <description>The id of the &lt;iframe&gt; element where the PDF should be displayed. The user will not be prompted to save the PDF. Instead, the file will be displayed on the client.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Javascript events Properties</title>
            <list>
                <item>
                    <name>canFileDownload</name>
                    <description>The name of the Javascript function to call before the file download begins. The function must return true or false. If the function returns false then the download is aborted. You can use this function to put up a wait message and to lock the user interface.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title>Tutorial - Uploading Files and Images to a Data Bound UX Component</title>
                <description>
                    <p> When you upload a file or an image to a data bound UX component, the assumption is that you want to store the uploaded image or file in the record to which the UX component is bound. You can either store the binary data that was uploaded in a field in the record, or you can save the binary data that was uploaded into a file on the server and then store the filename of the file in a character field in the record.</p>
                    <p> In this video we show how image upload and file upload to a data bound UX component can be done. Images and files are uploaded to both binary and character fields in the record.</p>
                </description>
                <date>2014-10-02</date>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/364cbfd5</link>
                </video>
                <resources>
                    <resource>
                        <link>https://www.ajaxvideotutorials.com/V12Videos/ux_image_file_upload.zip</link>
                    </resource>
                </resources>
            </videos>
        </section>
        <section>
            <note>
                <p>The zip file also contains the MySQL SQL script to create the table that the UX component is based on.</p>
            </note>
        </section>
   </sections>
    <links>
        <link link="ux controls other controls file upload download">[File Upload/Download] control</link>
    </links>
    <see>
        <ref link="ux controls other controls file upload download">File Upload/Download Control</ref>
        <ref link="action javascript for the ux">Action Javascript for the UX</ref>
        <ref link="action javascript in the grid">Action Javascript in the Grid</ref>
   </see>
   
</page>