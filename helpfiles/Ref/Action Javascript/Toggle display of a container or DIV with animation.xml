<page>
    <shortlink>Toggle display of a container or DIV with animation</shortlink>
    <topic>Toggle display of a container or DIV with animation</topic>
    <description>Adds toggle animation to a DIV or container. When the action is run the dive or container will be shown or hidden using a specified animation such as 'slide' or 'puff'. Different animations can be specified for the show and hide events. Different animation times can also be set in this actions properties list.</description>
    <sections>
        <section>
            <figure>
                <link>images/tdex.png</link>
            </figure>
        </section>
        <section>
            <description>Used with the Grid and UX components. This action is described in [this video].</description>
        </section>
        <section>
            <title>Toggle Visibility</title>
            <list>
                <item>
                    <name>Mode</name>
                    <description>Specify if the visibility of the element should be toggled, or explicitly set to shown or hidden.</description>
                </item>
                <item>
                    <name>Object type</name>
                    <description>Specify if the object you want to toggle the visibility or is a Container control, or arbitrary DIV.</description>
                </item>
                <item>
                    <name>DIV ID</name>
                    <description>Specify the ID of the DIV.</description>
                </item>
                <item>
                    <name>Show animation style</name>
                    <description>
                        Select the animation method to use when the window is shown. Fade and Slide use
                        methods in jQuery core. Other options require jQueryUI.
                    </description>
                </item>
                <item>
                    <name>Show animation speed</name>
                    <description>
                        Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds),
                        or you can enter an explicit value in milliseconds.
                    </description>
                </item>
                <item>
                    <name>onShowComplete Javascript</name>
                    <description>(Optional) Specify the Javascript to execute when the animation that shows the element has completed.</description>
                </item>
                <item>
                    <name>Hide animation style</name>
                    <description>
                        Select the animation method to use when the window is closed. Fade and Slide use methods in
                        jQuery core. Other options require jQueryUI.
                    </description>
                </item>
                <item>
                    <name>Hide animation speed</name>
                    <description>
                        Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200
                        milliseconds), or you can enter an explicit value in milliseconds.
                    </description>
                </item>
                <item>
                    <name>onHideComplete Javascript</name>
                    <description>(Optional) Specify the Javascript to execute when the animation that hides the element has completed.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Create an Animated DIV</title>
            <steps>
                <step>
                    <description>
                        In the UX Builder on the UX Controls page open the 'Other Controls' menu.
                        Click on the [Static Text] option to add a Static Text control to the component.
                    </description>
                    <figure>
                        <link>images/td2.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        In the properties list on the right of the controls page click the [...]
                        button next to the 'Static text' property in the 'Button Properties' section.
                    </description>
                    <figure>
                        <link>images/td3.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        <![CDATA[Define the following <div> and click OK. Make sure the div has an id.]]>
                    </description>
                    <example>
                        <![CDATA[<div id=div1>
This is the Static Text that will be animated when the toggle display 
action fires.</div>
<br>]]>
                    </example>
                    <figure>
                        <link>images/td4.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        In the 'Other Controls' menu click on the [Button] option to add a button control
                        to the component.
                    </description>
                    <figure>
                        <link>images/td5.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the properties list change the 'Button text' property to read 'Toggle'.</description>
                    <figure>
                        <link>images/td6.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        Scroll down to the 'Javascript - (Touch, Mouse, Pointer Events)' section and click
                        the [...] button next to the 'click' property.
                    </description>
                    <figure>
                        <link>images/td7.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the 'Edit Click Event' dialog check the 'Action Javascript' radio button and then click the 'Add New Action' button.</description>
                    <figure>
                        <link>images/td8.png</link>
                    </figure>
                </step>
                <step>
                    <description>
                        Type 'toggle' into the Filter list and select the 'Toggle display of a container or DIV with animation' action
                        from the actions list. Click OK.
                    </description>
                    <figure>
                        <link>images/td9.png</link>
                    </figure>
                </step>
                <step>
                    <description>In the Toggle Display properties list set the 'Mode' property to 'Toggle Visibility'.</description>
                    <figure>
                        <link>images/td10.png</link>
                    </figure>
                </step>
                <step>
                    <description>Set the 'Object type' property to be 'DIV'</description>
                    <figure>
                        <link>images/td11.png</link>
                    </figure>
                </step>
                <step>
                    <description>Next to the 'DIV ID' property type 'div1'. This is the id of the div that was defined in the Static Text control.</description>
                    <figure>
                        <link>images/td12.png</link>
                    </figure>
                </step>
                <step>
                    <description>For the 'Show animation style' property select 'Slide'</description>
                    <figure>
                        <link>images/td13.png</link>
                    </figure>
                </step>
                <step>
                    <description>For the 'Hide animation style' property select 'Fade'. Click OK and Save to exit.</description>
                    <figure>
                        <link>images/td14.png</link>
                    </figure>
                </step>
                <step>
                    <description>Run the component in Live Preview. Click the Toggle button. The Static Text control should disappear using the 'Fade' animation</description>
                    <figure>
                        <link>images/td15.png</link>
                    </figure>
                </step>
                <step>
                    <description>Click the Toggle button again and the Static Text should reappear on the screen using the 'Slide' animation.</description>
                    <figure>
                        <link>images/td16.png</link>
                    </figure>
                </step>
                <step>
                    <description>The Static Text...</description>
                    <figure>
                        <link>images/td17.png</link>
                    </figure>
                </step>
            </steps>
        </section>
        <section>
            <title>Videos</title>
            <videos>
                <title nested="2">Using Action Javascript to toggle the show/hide state of any arbitrary DIV or 'container' using animation</title>
                <description>Animation is built into many of the objects, but there may be times when you want to animate some arbitrary DIV or container. This is easy to accomplish using Action Javascript. You can define complex animations without having to write any code.</description>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/1693bdb8</link>
                </video>
            </videos>
        </section>
        <section>
            <title nested="2">Open a Grid Component - Invoking Server-side Events Handlers</title>
            <description>
                <p>When you have a client-side event handler (such as a button's onClick event) that opens a Grid (in a popup Ajax window, a div, a tabbed UI pane, etc.), you might want to execute some Xbasic on the server before the Grid is executed on the server.</p>
                <p>The first time a Grid is opened in a pop-up window, the {grid.object}.openChildGrid() method is called. If the pop-up window is then closed, and the event is executed a second time, the {grid.object}.synchronizeGrid() method is called. These two events now set variables (__openChildGrid and __synchronizeGrid) that you can test for in the onGridExecute server-side event. If the variables are found, then you know that the user has just invoked an event that will open a Grid.</p>
                <p>Here is some sample code that you can add to the onGridExecute server-side event:</p>
            </description>
            <example><![CDATA[dim flagExecuteSpecialEvent as l = .f.
if eval_valid("request.variables.__openChildGrid") then
    if request.variables.__openChildGrid = "true" then
        flagExecuteSpecialEvent = .t.
    end if
end if
 
if eval_valid("request.variables.__synchronizeGrid") then
    if request.variables.__synchronizeGrid= "true" then
        flagExecuteSpecialEvent = .t.
    end if
end if
 
if flagExecuteSpecialEvent = .t. then
    mySpecialEvent(e)
end if]]></example>
            <videos>
                <video>
                    <name>Watch Video</name>
                    <link>https://www.viddler.com/v/acde45a5</link>
                </video>
            </videos>
        </section>
    </sections>
    <links>
        <link href="images/open.png">...</link>
        <link href="https://www.viddler.com/v/1693bdb8">this video</link>
    </links>
    <see>
        <ref link="action javascript for the ux">Action Javascript for the UX</ref>
    </see>
</page>