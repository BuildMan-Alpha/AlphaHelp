<page>
    <shortlink>Send email</shortlink>
   <topic>Send email</topic>
   <description>This javascript action sends an email.</description>
   <groups>
        <group>
           <sections>
                <section>
                    <description>Used with the Grid and UX components.</description>
                </section>
                <section>
                    <title>Javascript placed in 'OnPush' attribute</title>
                    <example><![CDATA[{grid.componentName}_X_ACTIONBUTTON_1_57A8E12C57644E64BBFC061AD026A0E4(this);]]></example>
                </section>
            </sections>
        </group>
        <group>
            <title>Properties for Configuring Send email</title>
            <sections>
                <section>
                    <title>E-mail Settings Properties</title>
                    <list>
                        <item>
                            <name>Send method</name>
                            <description>Specify if the e-mail should be sent using the built-in e-mail methods, or using a 3rd party e-mail service. At this time only the 'Mandrill' e-mail service is supported. Choices include *[ui:Internal]*, *[ui:Mandrill]*, *[ui:SparkPost]*.</description>
                        </item>
                        <item>
                            <name>Mandrill key</name>
                            <description><![CDATA[Specify your Mandrill key. (You need to get this key from Mandrill). You can enter <Project>, or leave this blank to use the setting for the Mandrill key stored in Web Project Properties.]]></description>
                        </item>
                        <item>
                            <name>SparkPost key</name>
                            <description><![CDATA[Specify your SparkPost key. (You need to get this key from SparkPost). You can enter <Project>, or leave this blank to use the setting for the SparkPost key stored in Web Project Properties.]]></description>
                        </item>
                        <item>
                            <name>Use default e-mail settings</name>
                            <description>If you check this box, then the action will use the e-mail settings stored in the Web Project Properties</description>
                        </item>
                        <item>
                            <name>SMTP server</name>
                            <description>SMTP server property.</description>
                        </item>
                        <item>
                            <name>User name</name>
                            <description>User name property.</description>
                        </item>
                        <item>
                            <name>Password</name>
                            <description>Password property.</description>
                        </item>
                        <item>
                            <name>Port</name>
                            <description>TIP: With SSL, or TLS enabled, if you are using Gmail the port for the internal email methods is 465. For the .NET methods, use port 587.</description>
                        </item>
                        <item>
                            <name>SSL option</name>
                            <description>If you select the .Net Library, SSL and TLS operate identically.</description>
                        </item>
                        <item>
                            <name>.Net Library</name>
                            <description>Specify if the e-mail should be sent using Alpha Five's internal 'sockets' object, or using methods in the Microsoft .Net Framework? If most case either option should be fine.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>Message Properties</title>
                    <list>
                        <item>
                            <name>From</name>
                            <description>Specify e-mail address of the sender. You can use a component placeholder for the name. e.g. {sent_from}</description>
                        </item>
                        <item>
                            <name>From alias</name>
                            <description>Specify a friendly name for the from name. You can use a component placeholder for the name. e.g. {sent_from}</description>
                        </item>
                        <item>
                            <name>Subject</name>
                            <description>Specify the message subject. You can use component placeholders in the text. e.g. {subject}.</description>
                        </item>
                        <item>
                            <name>Send to</name>
                            <description>A comma or cr-lf delimited list of e-mail addresses. You can use a component placeholder for the e-mail address. e.g. {send_to}</description>
                        </item>
                        <item>
                            <name>CC</name>
                            <description>A comma or cr-lf delimited list of e-mail addresses. You can use a component placeholder for the e-mail address. e.g. {send_to}</description>
                        </item>
                        <item>
                            <name>BCC</name>
                            <description>A comma or cr-lf delimited list of e-mail addresses. You can use a component placeholder for the e-mail address. e.g. {send_to}</description>
                        </item>
                        <item>
                            <name>Load message from Repository</name>
                            <description>Specify if the message should use a saved template stored in the Repository.</description>
                        </item>
                        <item>
                            <name>Saved message name</name>
                            <description>Specify the saved message template name. You can use component placeholders. e.g. {message_template_name}</description>
                        </item>
                        <item>
                            <name>Message body (HTML)</name>
                            <description>The HTML version of the message. You can use component placeholders in the text. e.g. {send_to}. You can call an Xbasic function to compute the message body by specifying this as the message text: {ExecuteFunction:myFunc} (where 'myFunc' is an Xbasic function defined in the Xbasic Functions section). The function that is called takes 'e' as an input parameter and must return the text of the message.</description>
                        </item>
                        <item>
                            <name>Message body (Plain text)</name>
                            <description>The plain text version of the message. You can use component placeholders in the text. e.g. {send_to}. You can call an Xbasic function to compute the message body by specifying this as the message text: {ExecuteFunction:myFunc} (where 'myFunc' is an Xbasic function defined in the Xbasic Functions section). The function that is called takes 'e' as an input parameter and must return the text of the message.</description>
                        </item>
                        <item>
                            <name>Attachments</name>
                            <description>A comma delimited list of filename attachments. You can use component placeholders for the filenames. e.g. {file1}.</description>
                        </item>
                        <item>
                            <name>Store message in outbox</name>
                            <description>Specify if the message should be stored in the outbox. Outbox name and connection string are defined in the Web Project Properties.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>Send When Properties</title>
                    <list>
                        <item>
                            <name>Send when</name>
                            <description>Specify when the email should be sent. The 'Immediate' option sends the e-mail immediately. However, since connecting to a SMTP server can be slow, this option may not be suitable in a high traffic site. The 'AddToWorkQueue' option adds the task to the Work Queue so that another process can perform the work. Choices include *[ui:Immediate]*, *[ui:AddToWorkQueue]*.</description>
                        </item>
                        <item>
                            <name>Work queue format</name>
                            <description>Specify the format to use when adding the task to the Work Queue table. 'XbasicScript' stores a complete Xbasic script that the process that handles the work queue can just execute. 'XbasicProperties' stores the properties of the task using the Xbasic 'property_to_string()' function. 'JSON' stores the properties ot the task in JSON format. The process that handles the work queue will be responsible for converting the properties into Xbasic code. Choices include *[ui:XbasicScript]*, *[ui:XbasicProperties]*, *[ui:JSON]*.</description>
                        </item>
                    </list>
                </section>
                <section>
                    <title>Client-side Events Properties</title>
                    <list>
                        <item>
                            <name>After message sent</name>
                            <description>Specify the name of a Javascript function to call after the message has been sent. The Javascript function gets passed 'e' which contains 'e.hasError - true/false' and 'e.errorText'.</description>
                        </item>
                        <item>
                            <name>Show confirmation message</name>
                            <description>Show an alert in the browser indicating whether the message was successfully sent or not. If you want more control over the text and display style of the message, you should set this option to false, and instead define an 'AfterMessageSent' event.</description>
                        </item>
                        <item>
                            <name>Confirmation message - success</name>
                            <description><![CDATA[Confirmation message - email sent or queued successfully. You can use language tags, <a5:r> and </a5:r> in the message.]]></description>
                        </item>
                        <item>
                            <name>Confirmation message - failure</name>
                            <description><![CDATA[Confirmation message - email not sent or queued because an error occurred. You can use language tags, <a5:r> and </a5:r> in the message.]]></description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
   </groups>
   <links>
       <link href="images/open.png">...</link>
   </links>
   
   
    <see>
       <ref>Action Javascript for the UX</ref>
   </see>
</page>