<page>
   <topic>Open a Help Window</topic>
   <description>Open a window to display a help topic from the Help Table.</description>
   
   <sections>
         <section>
            <description>Used with the Grid and UX components.</description>
       </section>
       
       
       <section>
         
           
           <title></title>
           <example><![CDATA[{grid.componentName}_G__1(this);]]></example>
          
       </section>
       
        <section>
            <title>Window Properties Properties</title>
            <list>
                <item>
                    <name>Window name</name>
                    <description><![CDATA[Set to <Default> to give the window a default name. If you give the window an explicit name (which must be unique), then you can easily get a pointer to the window to execute methods of the window object. Click the smart field for tips on how to name your window and for information on how to get a pointer to the window object.]]></description>
                </item>
                <item>
                    <name>Help ID</name>
                    <description>Specify the help ID of the help record to display in the window.</description>
                </item>
                <item>
                    <name>Window type</name>
                    <description>Specify the window type. Popup windows will show in a moveable window on the page. Dropdown windows have no title bar and cannot be moded. By default, Dropdown windows open directly below the control that you click to open the window. Note: An Ajax window will NOT be blocked by a browser's internal protection against popup windows.</description>
                </item>
                <item>
                    <name>Lock overlay CSS class name</name>
                    <description><![CDATA[Specify the CSS class name to use for the overlay that is displayed behind the window. The overlay prevents the user from clicking on controls that are outside the window. Leave blank, or specify <Default> to use the default style. Specify <Invisible> to create an invisible overlay (has no color, but user is still prevented from clicking on controls off the window). By specifying a class that has a 'background' attribute, you can control the color of the overlay. For example: background: rgba(0,0,0,0) to create a transparent overlay.]]></description>
                </item>
                <item>
                    <name>Sub-theme</name>
                    <description>(Optional) Specify a sub-theme for the window. The sub-theme can select a different pre-defined window 'look'. If you leave this property blank the 'base' sub-theme is automatically selected.</description>
                </item>
                <item>
                    <name>Dock window</name>
                    <description>Docked windows 'stick' to an edge of the screen and remain in place even when the page is scrolled.</description>
                </item>
                <item>
                    <name>Dock location</name>
                    <description>Specify which edge of the screen the window is docked to. Choices include *[ui:Left]*, *[ui:Right]*, *[ui:Top]*, *[ui:Bottom]*.</description>
                </item>
                <item>
                    <name>Unique window for each row</name>
                    <description>(Applies only when window opened from a button in a Grid row) Specify if each row should use a uniquely named window, or if all rows should share the same window.</description>
                </item>
                <item>
                    <name>How is window contents set</name>
                    <description>Specify how the contents of the window will be set. 
Ajax callback - an Ajax callback is made to the server and the server generates the HTML to shown in the window. 
Javascript Function - a Javascript function computes the HTML to show in the window. 
Local - the HTML for the window is defined here
DIV - the contents of a div (which is normally hidden with a style='display:none;' attribute) is shown in the window. This hidden div could be placed in one of the free-form areas that surround the Grid. Choices include.</description>
                </item>
                <item>
                    <name>Window HTML</name>
                    <description>Specify the HTML to display in the window.</description>
                </item>
                <item>
                    <name>Ajax callback function</name>
                    <description>Specify the name of the Xbasic function that will handle the Ajax callback. This function will generate the HTML to display in the window.</description>
                </item>
                <item>
                    <name>Javascript function call</name>
                    <description>Specify the name of the Javascript function call to make. This function should return the HTML to show in the window. You can optionally pass in rowNum and objEle (a pointer to the object that invoked the function) to your function. 
Examples: 
myfunc - will call the function without passing in any arguments e.g. myfunc()
myfunc(rowNum) - will call the function and pass in rowNum.</description>
                </item>
                <item>
                    <name>DIV id</name>
                    <description>Specify the ID of a DIV (which is typically hidden) on the component. The contents of this DIV will be shown in the window. It is common to include the Grid alias in the DIV Id to ensure that the Id is unique, even when a page contains multiple instances of the same Grid. e.g. {grid.componentname}_WINDOW1</description>
                </item>
                <item>
                    <name>Container id</name>
                    <description>Specify the ID of the container</description>
                </item>
                <item>
                    <name>Window position</name>
                    <description>Specify where the window will be shown.</description>
                </item>
                <item>
                    <name>Dropdown Window position</name>
                    <description>Specify where the window will be shown.</description>
                </item>
                <item>
                    <name>Window title show</name>
                    <description>Specify if the window title should be shown or hidden.</description>
                </item>
                <item>
                    <name>Window title</name>
                    <description>Specify the window title. The window title can contain data from fields in the current record. Enclose field values in curly parens. e.g. Customer - {lastname}. To reference values from a column in a List control use this syntax: {LIST::ListName::ColumnName} (e.g. {LIST::MYLIST1::LASTNAME} )</description>
                </item>
                <item>
                    <name>Window title position</name>
                    <description>Specify if the window title should appear at the top or bottom of the window. Choices include *[ui:Top]*, *[ui:Bottom]*.</description>
                </item>
                <item>
                    <name>Window title direction</name>
                    <description>Specify if the direction is 'ltr' (left-to-right) (title on left, close button on right) or 'rtl' (right-to-left) (close button on left and title on right). Choices include *[ui:ltr]*, *[ui:rtl]*.</description>
                </item>
                <item>
                    <name>Window title has close button</name>
                    <description>Specify if the window title has a Close button.</description>
                </item>
                <item>
                    <name>Close when click on background</name>
                    <description>Automatically close the window when user clicks on background.</description>
                </item>
                <item>
                    <name>Disable window move</name>
                    <description>Specify if the window cannot be moved by the user.</description>
                </item>
                <item>
                    <name>Window height</name>
                    <description>Specify the window height. Use CSS syntax. For example: 3in, 10cm, 200px. If you do not set the height, the window will resize automatically to accommodate the window contents. To set the window size so that it sizes automatically to accomodate the window contents, but does NOT EXCEED a certain height if the contents is large, specify the window height as: max: size. For example: max: 300px</description>
                </item>
                <item>
                    <name>Window width</name>
                    <description>Specify the window height. Use CSS syntax. For example: 3in, 10cm, 200px. If you do not set the width, the window will resize automatically to accommodate the window contents.</description>
                </item>
                <item>
                    <name>Window is resizable</name>
                    <description>Specify if the window is resizable.</description>
                </item>
                <item>
                    <name>Working message</name>
                    <description>Specify the text of the message to show in the window while the window waits for its contents to be generated.</description>
                </item>
                <item>
                    <name>Working message icon</name>
                    <description>Specify the image to show in the window while the window waits for its contents to be generated.</description>
                </item>
                <item>
                    <name>Window background style</name>
                    <description>Specify the inline-style for the window background</description>
                </item>
              
                <item>
                    <name>Has pointer icon</name>
                    <description>Specify if the window has a pointer icon that points to the element that was clicked to show the window.</description>
                </item>
                <item>
                    <name>Pointer position</name>
                    <description>Specify the window edge that has the pointer icon. If you select 'Auto' the most appropriate edge is automatically selected. Choices include *[ui:Auto]*, *[ui:Top]*, *[ui:Bottom]*, *[ui:Left]*, *[ui:Right]*.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Window Buttons Properties</title>
            <list>
                <item>
                    <name>Has custom toolbar buttons</name>
                    <description>Specify if the window has custom buttons in the window toolbar (at the bottom of the window).</description>
                </item>
                <item>
                    <name>Define buttons</name>
                    <description>Define the buttons that appear in the window toolbar (at the bottom of the window).</description>
                </item>
                <item>
                    <name>Buttons in-line style</name>
                    <description>In-line style for the buttons. TIP: To display the buttons left justified, enter an in-line style of: text-align:left;</description>
                </item>
            </list>
        </section>
        <section>
            <title>Optional Window Parts Properties</title>
            <list>
                <item>
                    <name>Show top bar</name>
                    <description>Specify if a top bar should be shown. (Shows above the window body, but inside the body container).</description>
                </item>
                <item>
                    <name>Top bar HTML</name>
                    <description>Specify the HTML to show in the top bar.</description>
                </item>
                <item>
                    <name>Top bar style</name>
                    <description>Specify the in-line style for the top bar.</description>
                </item>
                <item>
                    <name>Show bottom bar</name>
                    <description>Specify if a top bar should be shown. (Shows below the body, inside the body container).</description>
                </item>
                <item>
                    <name>Bottom bar HTML</name>
                    <description>Specify the HTML to show in the top bar.</description>
                </item>
                <item>
                    <name>Bottom bar style</name>
                    <description>Specify the in-line style for the top bar.</description>
                </item>
                <item>
                    <name>Show header</name>
                    <description>Specify if a header should be shown. (Shows above the window body, but inside the body container).</description>
                </item>
                <item>
                    <name>Header HTML</name>
                    <description>Specify the HTML to show in the header.</description>
                </item>
                <item>
                    <name>Header style</name>
                    <description>Specify the in-line style for the top bar.</description>
                </item>
                <item>
                    <name>Show footer</name>
                    <description>Specify if a footer should be shown. (Displays below the body, the bottom bar and below any user-defined buttons).</description>
                </item>
                <item>
                    <name>Footer HTML</name>
                    <description>Specify the HTML to show in the footer.</description>
                </item>
                <item>
                    <name>Footer style</name>
                    <description>Specify the in-line style for the footer.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Window Animation Properties</title>
            <list>
                <item>
                    <name>Animation</name>
                    <description>Specify if the window should be animated when it is shown or hidden. Note: If the window contains an IFrame, which in turn contains a PDF viewer, animation may not work well and should not be used.</description>
                </item>
                <item>
                    <name>Show animation style</name>
                    <description>Select the animation method to use when the window is shown. Fade and Slide use methods in jQuery core. Other options require jQueryUI.</description>
                </item>
                <item>
                    <name>Show animation speed</name>
                    <description>Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds), or you can enter an explicit value in milliseconds.</description>
                </item>
                <item>
                    <name>Hide animation style</name>
                    <description>Select the animation method to use when the window is closed. Fade and Slide use methods in jQuery core. Other options require jQueryUI.</description>
                </item>
                <item>
                    <name>Hide animation speed</name>
                    <description>Specify the animation speed. You can select a pre-defined option (slow = 600 milliseconds, fast = 200 milliseconds), or you can enter an explicit value in milliseconds.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Window Javascript Events Properties</title>
            <list>
                <item>
                    <name>onInitialize</name>
                    <description>Specify the Javascript code to execute the first time the window is shown.</description>
                </item>
                <item>
                    <name>onBeforeShow</name>
                    <description>Specify the Javascript code to execute before the window is shown.</description>
                </item>
                <item>
                    <name>onShow</name>
                    <description>Specify the Javascript code to execute when the window is shown.</description>
                </item>
                <item>
                    <name>onBeforeHide</name>
                    <description>Specify the Javascript code to execute before the window is hidden.</description>
                </item>
                <item>
                    <name>onHide</name>
                    <description>Specify the Javascript code to execute when the window is hidden.</description>
                </item>
                <item>
                    <name>onFocus</name>
                    <description>Specify the Javascript code to execute when the window gets focus.</description>
                </item>
                <item>
                    <name>onMove</name>
                    <description>Specify the Javascript code to execute when the window is moved.</description>
                </item>
                <item>
                    <name>onResize</name>
                    <description>Specify the Javascript code to execute when the window is resized.</description>
                </item>
            </list>
        </section>
        <section>
            <title>Drag Scrolling of Window Contents Properties</title>
            <list>
                <item>
                    <name>Body can scroll</name>
                    <description>Specify if the Body of the window can be scrolled.</description>
                </item>
                <item>
                    <name>Body scroll axis</name>
                    <description>Body scroll axis property. Choices include *[ui:Both]*, *[ui:Horizontal]*, *[ui:Vertical]*.</description>
                </item>
                <item>
                    <name>Body stop drag propogation</name>
                    <description>Specify if drag events should be propogated to containing elements.</description>
                </item>
                <item>
                    <name>'Pull past end' settings and events</name>
                    <description>Specify if the user can drag the contents of the Window beyond any of its boundaries. If enabled, the content will snap back to its natural position when the user releases, and 'pull' events (wich you can define) are fired.</description>
                </item>
                <item>
                    <name>Custom scroll indicator settings</name>
                    <description>You can customize the position and appearance of the scroll indicator that is shown when the window is scrolled.</description>
                </item>
            </list>
        </section>
       
   </sections>
   
   
    <see>
       <ref>Action Javascript for the UX</ref>
       <ref>Action Javascript in the Grid</ref>
   </see>
   
</page>