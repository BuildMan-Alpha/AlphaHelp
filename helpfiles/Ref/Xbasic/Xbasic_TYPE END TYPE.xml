<page api="xb">
    <shortlink>Xbasic type end type</shortlink>
    <topic>TYPE ... END TYPE</topic>
    <description>Defines an Xbasic structure.</description>

    <syntax>TYPE Xbasic_Structure_Name
    SubVariable1 as Type1
    SubVariable2 as Type2
    SubVariableN as TypeN
END TYPE</syntax>
    <arguments>
        <argument>
            <name>Xbasic_Structure_Name</name>
            <description>The generic name of the variable type that you are creating.</description>
        </argument>
        <argument>
            <name>SubVariable1 ... SubVariableN</name>
            <description>The names of the components of the structure.</description>
        </argument>
        <argument>
            <name>Type1 ... TypeN</name>
            <description>The variable type of each component:</description>
            <list>
                <item>
                    <name>N</name>
                    <description>numeric</description>
                </item>
                <item>
                    <name>D</name>
                    <description>date</description>
                </item>
                <item>
                    <name>C</name>
                    <description>character</description>
                </item>
                <item>
                    <name>L</name>
                    <description>logical</description>
                </item>
                <item>
                    <name>P</name>
                    <description>pointer</description>
                </item>
                <item>
                    <name>T</name>
                    <description>time</description>
                </item>
                <item>
                    <name>B</name>
                    <description>blob</description>
                </item>
                <item>
                    <name>U</name>
                    <description>collection</description>
                </item>
                <item>
                    <name>A</name>
                    <description>any type</description>
                </item>
                <item>
                    <name>Integer</name>
                    <description>32 bit integer, equivalent to C long int</description>
                </item>
                <item>
                    <name>Short</name>
                    <description>16 bit integer, equivalent to C short int</description>
                </item>
                <item>
                    <name>Byte</name>
                    <description>8 bit integer, equivalent to C unsigned char</description>
                </item>
                <item>
                    <name>{YourType}</name>
                    <description>a user defined type created with a different *[xb:TYPE ... END TYPE]* command.</description>
                </item>
            </list>
        </argument>
    </arguments>

    <discussion>*[xb:TYPE ... END TYPE]* defines an Xbasic structure, which allows you to quickly define dot variables with sub-variable names defined by the Xbasic_Structure_Name.</discussion>

    <sections>
        <section>
            <tip>In many cases, using an Xbasic class will be preferable to using the TYPE command. See example below. See also [DIM] and [DECLARE].</tip>
        </section>
        <section>
            <title>Examples</title>
            <example code="xb">
                <![CDATA[' Declaring Variables Using a Structure
' Define the structure.

type customer
    name as C
    company as C
    phone as C
    age as N
end type

dim cust as {customer}

? properties_enum(cust)
= NAME
COMPANY
PHONE
AGE

dim custs[10] as {customer}
? properties_enum(custs[1] )
= NAME
COMPANY
PHONE
AGE

' The Windows POINT structure would be represented by :
type point
    x as integer
    y as integer
end type

' a new type contain point types
type line
    x as {point}
    y as {point}
end type ]]>
            </example>
        </section>
        <section>
            <title>Example: Using an Xbasic Class</title>
            <example code="xb">
                <![CDATA[define class myclass
    dim name as c 
    dim time_start as t
    dim duration as y
end class 

dim b as myclass
?b 
= name = ""
duration = 12:00:00 00 am
time_start = 00/00/0000 12:00:00 00 am ]]>
            </example>
        </section>
    </sections>
    <links>
        <link link="Xbasic dim as">DIM</link>
        <link link="Xbasic declare">DECLARE</link>
    </links>

    <see>

        <ref link="Xbasic Language Reference">Xbasic Language Reference</ref>
    </see>

</page>