<page api="xb">
	<shortlink>Xbasic substring inclusion operator</shortlink>
	<topic>$ (Substring Inclusion Operator)</topic>

	<description>The $ operator determines whether the character expression on the left of the operator is contained anywhere within the character expression on the right.</description>


	<syntax>Result as L = Find_String as C $ Search_String as C</syntax>
	<arguments>
		<argument>
			<name>Find_String</name>
			<type>C</type>
			<description>The character string that you are looking for.</description>
		</argument>
		<argument>
			<name>Search_String</name>
			<type>C</type>
			<description>The character string to examine.</description>
		</argument>

	</arguments>
	<returns>
		<return>
			<name>Result</name>
			<type>L</type>
			<description>Returns .t. if *[xb:Search_String]* is found in *[xb:Find_String]*, otherwise .f.</description>
		</return>
	</returns>
	<discussion>Operations involving the $ operator return a logical result (i.e., TRUE or FALSE). The string comparison is not case sensitive. If Find_String is a null string ("") then this operator will return TRUE. While this seems a meaningless comparison, this can happen if your Find_String is stored in a variable and you neglect to test whether the variable string is empty before using this operator in an expression or script. See also [Character Search Functions].</discussion>
	<sections>
		<section>
			<title>Example:</title>
			<description>For example, if Company contains "The Computer Store":</description>
			<example code="xb">
				<![CDATA[dim Company as C
Company = "The Computer Store"

? "Computer" $ Company
= .T.

? "computer" $ Company
= .T.

? "computer" $ LOWER(Company)
= .T.


? "" $ "alpha"
= .T.

? " " $ "alpha"
= .F.]]>
			</example>
		</section>
	</sections>
	<links>
		<link link="Character Search Functions">Character Search Functions</link>
	</links>
	<see>
		<ref link="Character Search Functions">Character Search Functions</ref>
		<ref link="Operators in Xbasic">Operators in Xbasic</ref>
	</see>

</page>