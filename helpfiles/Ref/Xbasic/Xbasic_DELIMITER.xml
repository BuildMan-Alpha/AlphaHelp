<page api="xb">
    <shortlink>Xbasic delimiter</shortlink>
    <topic>&lt;&lt;%DELIMITER% ... %DELIMITER%</topic>
    <description>&lt;&lt;%DELIMITER% ... %DELIMITER% allows you to define a quoted character string. This command is typically used when the string includes carriage return-line feed characters (CR-LF).</description>
    <syntax><![CDATA[List as C = <<%DELIMITER%
string1 
string2 
... 
stringN
%DELIMITER%]]></syntax>
    <arguments>
        <argument>
            <name>string1, stringN</name>
            <type>C</type>
            <description>Any character string.</description>
        </argument>
    </arguments>
    <sections>
        <section>
            <important>&lt;&lt;%DELIMITER% *[must]* be terminated with a newline. Any spaces or other characters after the closing % will result in an "*[em:Extra characters at end of expression]*" error.</important>
        </section>
        <section>
            <description>
                <p>The string used for "*[em:DELIMITER]*" can be any text you like, as long as it is identical in the opening and closing delimiter statements.</p>
                <p>For example:</p>
                <p>
                    <example code="xb"><![CDATA[X = <<%a%
Alpha Software
%a%
Y = <<%b%
Alpha Anywhere
%b%]]></example>
                </p>
                <p>The above two commands are equivalent to:</p>
                <p>
                    <example code="xb"><![CDATA[X = "Alpha Software"
Y = "Alpha Anywhere"]]></example>
                </p>
                <p>The Xbasic autohelp system will offer suggestions for delimiters as you write your scripts. There are several special case delimiters, such as %code% and %html%, which add special behaviors such as syntax highlighting and validation. The delimiters offered through autohelp include:</p>
                <p>
                    <list>
                        <item>
                            <name-title>Delimiter</name-title>
                            <description-title>Description</description-title>
                        </item>
                        <item>
                            <name>&lt;&lt;%a5w% ... %a5w%</name>
                            <description>A5W page string</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%code% ... %code%</name>
                            <description>Xbasic code string. Xbasic written inside code blocks will have full access to autohelp and includes syntax highlighting.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%css% ... %css%</name>
                            <description>CSS code string. CSS written inside a CSS block will include syntax highlighting and autohelp.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%dlg% ... %dlg%</name>
                            <description>XDialog string. XDialog code written inside dlg blocks will have syntax highlighting and autohelp.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%html% ... %html%</name>
                            <description>HTML code string. HTML written inside html blocks will have syntax highlighting and autohelp.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%js% ... %js%</name>
                            <description>JavaScript code string.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%json% ... %json%</name>
                            <description>JSON string.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%xml% ... %xml%</name>
                            <description>XML string. XML code written inside xml blocks will have syntax highlighting and autohelp.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%str% ... %str%</name>
                            <description>Text string.</description>
                        </item>
                        <item>
                            <name>&lt;&lt;%txt% ... %txt%</name>
                            <description>Text string.</description>
                        </item>
                    </list>
                </p>
            </description>
        </section>
        <section>
            <title>Example: Array Initialization</title>
            <description>The following script initializes an array.</description>
            <example code="xb"><![CDATA[dim colors10 as C
' First, create a string with a list of choices. Each choice is delimited with CR-LF
color_string = <<%choices%
Red
Green
Blue
Orange
Purple
%choices%

' Then, initialize the array with the CR-LF delimited string.
colors.initialize(color_string)]]></example>
        </section>
    </sections>
    <see>
        <ref link="Reserved Words">Reserved Words</ref>
        <ref link="Xbasic a5 tag"><![CDATA[<%A5 ? ... %>]]></ref>
        <ref link="Xbasic Language Reference">Xbasic Language Reference</ref>
    </see>
</page>