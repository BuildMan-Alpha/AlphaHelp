<page>
	<topic>TYPE ... END TYPE</topic>
<description>Defines an Xbasic structure.</description>	

	<syntax>TYPE Xbasic_Structure_Name 
    SubVariable1 as Type1 
    SubVariable2 as Type2 
    SubVariableN as TypeN 
END TYPE
</syntax>
<arguments>
	<argument>
		<name>Xbasic_Structure_Name</name>
		<description>The generic name of the variable type that you are creating.</description>
	</argument>
	<argument>
		<name>SubVariable1 ... SubVariableN</name>
		<description>The names of the components of the structure.</description>
	</argument>
	<argument>
		<name>Type1 ... TypeN</name>
		<description>The variable type of each component:</description>
		<cases>
			<case>
				<description>"N" = numeric</description>
			</case>
			<case>
				<description>"D" = date</description>
			</case>
			<case>
				<description>"C" = character</description>
			</case>
			<case>
				<description>"L" = logical</description>
			</case>
			<case>
				<description>"P" = pointer</description>
			</case>
			<case>
				<description>"T" = time</description>
			</case>
			<case>
				<description>"B" = blob</description>
			</case>
			<case>
				<description>"U" = collection</description>
			</case>
			<case>
				<description>"A" = any type</description>
			</case>
			<case>
				<description> "Integer" = 32 bit integer, equivalent to C long int</description>
			</case>
			<case>
				<description>"Short" = 16 bit integer, equivalent to C short int</description>
			</case>
			<case>
				<description>"Byte" = 8 bit integer, equivalent to C unsigned char</description>
			</case>
			<case>
				<description>"{YourType}" = a user defined type created with a different TYPE ... END TYPE command.</description>
			</case>
			
		</cases>
	</argument>
</arguments>	
	
<discussion>TYPE ... END TYPE defines an Xbasic structure, which allows you to quickly define dot variables with sub-variable names defined by the Xbasic_Structure_Name. TIP: In many cases, using an Xbasic class will be preferable to using the TYPE command. See example below. See also, DIM, Declare
</discussion>

<sections>
<section>
	<title>Examples</title>
	<description>Declaring Variables Using a Structure, Define the structure.
</description>
<example><![CDATA[type customer
    name as C
    company as C
    phone as C
    age as N
end type
dim cust as {customer}
? properties_enum(cust)
= "NAME
COMPANY
PHONE
AGE
"
dim custs10 as {customer}
? properties_enum(custs1 )
= "NAME
COMPANY
PHONE
AGE
" ]]></example>	
</section>	
<section>
	<description>The Windows POINT structure would be represented by :
</description>
<example><![CDATA[type point
    x as integer
    y as integer
end type
' a new type contain point types
type line
    x as {point}
    y as {point}
end type ]]></example>	
</section>		
	<section>
	<description>Using an Xbasic class
</description>
<example><![CDATA[define class myclass
dim name as c 
dim time_start as t
dim duration as y
end class 

dim b as myclass
?b 
= name = ""
duration = 12:00:00 00 am
time_start = 00/00/0000 12:00:00 00 am ]]></example>	
</section>	
</sections>


<see>
	
	<ref href="/documentation/index?search=Xbasic Language Reference">Xbasic Language Reference</ref>
</see>	
	
</page>