<page>
    <shortlink>function sequence error</shortlink>
    <topic>Function Sequence Error</topic>
    <description><p>The "Function sequence error" may occur when you execute a SQL statement in the wrong context such as when a SQL result set has not been completely read by the client.</p></description>
    <discussion>
        <p>A common cause of this error is executing a SELECT statement, but not reading through the result set before executing another SQL statement.
		Alpha Anywhere attempts to release all resources held as a result of executing a SQL statement when you attempt to execute another SQL statement.
		There are cases, however, when an error in your code or a complex SQL statement will cause such an error.
		Two cases are discussed below.</p>
        <p>
            <example><![CDATA[Function sequence error]]></example>
        </p>
		<p>1. You have assigned the ResultSet property of a connection to a local variable.  You then execute another SQL statement (perhaps within a transaction 
		initiated by SQL::Connection::BeginTransaction()), then execute another SQL statement on the connection and then
		attempt to call the SQL::Connection::Commit() or SQL::Connection::Rollback() function on the current connection.</p>

		<p>For more information on best practices for storing the connection object's ResultSet property in a variable,
		see the section entitled "An Important Note About Assigning the ResultSet Property to Variables" on the documentation for the
		<ref href="/pages/Ref/Api/Namespace/SQL/Connection/index.xml">SQL::Connection class.</ref></p>

		<p>2. You have called SQL::Connection::Execute() with a string beginning with an INSERT, UPDATE, or DELETE SQL statement and followed by one or more other SQL statements 
		that return a result set.</p>

		<p>Alpha DAO attempts to retrieve the value of the last inserted identity when processing an INSERT statement, and the count of rows affected when processing
		UPDATE and DELETE statements.</p>

		<p>In order to retrieve counts and identities while executing each SQL statement Alpha DAO looks for the keyword INSERT, UPDATE, or DELETE at the beginning of the string passed
		to SQL::Connection::Execute(). If the respective keyword is found, Alpha DAO will make the appropriate call for the database to retrieve this information after a successful call.
		You can retrieve the affected row count or last inserted identity values from the CallResult property of the
		SQL::Connection the Execute() function was invoked on after the call returns successfully to XBasic.</p>

		<p>If your SQL string includes additional statements that return a result set (such as a SELECT or a stored procedure call), a result set is opened before your SQL string
		completes executing.  This may cause the SQL that Alpha DAO executes to fail.</p>

		<p>If your SQL string contains multiple INSERT, UPDATE, or DELETE statements, only the count or identity of the last data update statement will be preserved and you may find the values 
		in the CallResult property of the SQL::Connection object have incorrect or unexpected values.</p>

		<p>For more information on retrieving the last inserted identity or rows affected see the
		<ref href="/pages/Ref/Api/Namespace/Root%20Classes/CallResult.xml">SQL::CallResult class.</ref></p>
    </discussion>
	<see>
	<ref href="/pages/Ref/Api/Namespace/SQL/Connection/index.xml">SQL::Connection Class</ref>	
	<ref href="/pages/Ref/Api/Namespace/Root%20Classes/CallResult.xml">SQL::CallResult Class</ref>
	</see>
    <terms>function sequence error</terms>
 </page>