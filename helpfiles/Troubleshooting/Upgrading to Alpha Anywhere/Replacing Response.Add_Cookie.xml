<page>
    <shortlink>server Replacing ResponseAddCookie Function</shortlink>
    <topic>Replacing Response.Add_Cookie Function</topic>
    <description>Response.Add_Cookie() was marked as deprecated in the V10 release and has been removed in V11. Any code which attempts to use this method will generate an error and must be updated.</description>
    <groups>
        <group>
            <title>Migrating to Alpha Anywhere</title>
            <sections>  
                <section>
                    <description>
                        <p>In Alpha Anywhere, cookies are added and accessed through the Context object. To read cookies, use the *[xb:Context.Request.Cookies.Get]* function to get a cookie. You can call the [Context.Request.HasCookie] method to check if the cookie exists before fetching it. If you request a cookie that doesn't exist using *[xb:Context.Request.Cookies.Get]*, the cookie will be created.</p>
                        <p>Cookies are added through the *[xb:Context.Response]* object. Use the [Context.Response.AppendCookie] method to add a cookie.</p>
                        <p>For more information on adding and reading cookies in Alpha Anywhere, see [How to Create and Read Cookies].</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Migrating to Alpha Five Version 11</title>
            <sections>
                <section>
                    <description>
                        <p>In Alpha Five Version 11, sending cookies at part of the Response is done using the Response.Cookie property.</p>
                        <p>Response.Cookies is a .NET [System::Web::HttpCookieCollection], and it is functionally equivalent to ASP.NET's [HttpResponse.Cookies] property.</p>
                        <p>Adding a cookie to the Response.Cookies [System::Web::HttpCookieCollection] object is done using either the Add or Set method, both of which take a .NET [System::Web::HttpCookie] as their only argument.</p>
                    </description>
                    <note>If you are migrating to Alpha Anywhere, please follow the migration instructions in the section above, [Migrating to Alpha Anywhere].</note>
                </section>
                <section>
                    <cases>
                        <case>
                            <description>The Add method adds a cookie without checking to see if it already exists in the collection. The Add allows duplicate cookies in the cookie collection. </description>
                        </case>
                        <case>
                            <description>The Set method first checks to see if a cookie already exists in the collection and if so updates it. The Set method does not allow duplicate cookies in the cookie collection.</description>
                        </case>    
                    </cases>
                </section>
                <section>
                    <description>Because these methods take a System::Web::HttpCookie .NET object and add it to the Response.Cookies collection, the Xbasic programmer must create the .NET object and then add it.</description>
                    <example><![CDATA['first create a new cookie
dim NewCookie as System::Web::HttpCookie = new System::Web::HttpCookie("Cookie1", "Cookie1's data")
'now add/set the cookie
Response.Cookies.Set(NewCookie)]]></example>
                </section>
                <section>
                    <description>When adding a simple cookie such as this, the code can be consolidated into a single line of code.</description>
                    <example><![CDATA['add/set a simple cookie
Response.Cookies.Set(new System::Web::HttpCookie("Cookie1", "Cookie1"))]]></example>
                </section>
                <section>
                    <description>However, it is not possible to set any other properties of the cookie with this abbreviated syntax. If there is a need to set the path, lifetime, Secure flag, HttpOnly flag or any other property, the longer syntax is required.</description>
                    <example><![CDATA['create the new cookie
dim NewCookie as System::Web::HttpCookie = new System::Web::HttpCookie("This is the data in Cookie1")
'set the value (data to be stored in the cookie
NewCookie.Value = "Cookie2"
. make this an "This is the data in my Cookie2" cookie
NewCookie.HttpOnly = .t.
'restrict the cookie to the "/MyApplication" path
NewCookie.Path = "/MyApplication"

'finally, add/set the cookie
Response.Cookies.Add(NewCookie)]]></example>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <link href="#group_Migrating to Alpha Anywhere">Migrating to Alpha Anywhere</link>
        <link link="api objects response object append cookie method">Context.Response.AppendCookie</link>
        <link link="api objects request object has cookie method">Context.Request.HasCookie</link>
        <link link="how to create and read cookies">How to Create and Read Cookies</link>
        <link href="http://msdn.microsoft.com/en-us/library/system.web.httpresponse.cookies.aspx">HttpResponse.Cookies</link>
        <link href="http://msdn.microsoft.com/en-us/library/system.web.httpcookiecollection.aspx">System::Web::HttpCookieCollection</link>
        <link href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.aspx">System::Web::HttpCookie</link>
    </links>
    <see>
        <ref link="Context Object">Context Object</ref>
        <ref link="api objects response object append cookie method">Context.Response.AppendCookie Method</ref>
        <ref link="api objects request object has cookie method">Context.Request.HasCookie Method</ref>
        <ref href="http://msdn.microsoft.com/en-us/library/system.web.httpresponse.cookies.aspx">Complete documentation of ASP.Net HttpResponse.Cookies property</ref>
        <ref href="http://msdn.microsoft.com/en-us/library/system.web.httpcookiecollection.aspx">Complete documentation of System::Web::HttpCookieCollection</ref>
        <ref href="http://msdn.microsoft.com/en-us/library/system.web.httpcookie.aspx">Complete documentation of System::Web::HttpCookie</ref>
    </see>
</page>