<page>
    <topic>Building Master Detail Applications for Web Applications - UX Component</topic>
    <description>Learn how to build a Master-Detail application that uses repeating sections. While less powerful that the Grid Component approach, repeating sections can enable you to build robust data entry interfaces for collecting information, such as Orders or customer addresses.</description>
    <groups>
        <group background="true">
            <title>Overview</title>
            <sections>
                <section>
                    <description>
                        <p>In a UX Component, you can data bind UX controls to one or more tables in a database. This allows you to create interfaces for editing or viewing records in one or more tables. Data bound UX Components are used to create interfaces for editing records in a grid component or creating forms, such as an Order form, to collect information to be entered in one or more tables.</p>
                        <p>Repeating sections can be used to display Master-Detail data structures in a UX Component. Repeating sections are a type of container available in UX Components. Controls placed in a repeating section container are duplicated for each row in a repeating section. You can use these controls to edit existing records or create new entries in the table that is tied to the repeating section.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Lesson 1: Creating the UX Component and Controls</title>
            <sections>
                <section>
                    <description>In this lesson, you will learn:</description>
                    <cases>
                        <case>
                            <description>How to create a UX Component</description>
                        </case>
                        <case>
                            <description>How to add Multiple Fields to a UX Component at the same time</description>
                        </case>
                        <case>
                            <description>How to add a Repeating Section to UX Component</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Lesson 1-1: Creating a new Component</title>
                    <description>Create a new UX Component</description>
                    <steps>
                        <step>
                            <description>Create a new UX Component. From the Web Projects Control Panel, click the *[ui:New]* button in the toolbar.</description>
                        </step>
                        <step>
                            <description>Wen the *[ui:New File]* dialog appears, select *[ui:Web Component]* and click *[ui:Next]*.</description>
                            <figure>
                                <title>Creating a new Web Component using the New File dialog.</title>
                                <link>images/mdGrid_new1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[ui:UX]* and click *[ui:Next]*.</description>
                            <figure>
                                <title>Creating a new UX Component from the New File dialog.</title>
                                <link>images/mdUXRep_new1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[ui:Start with a blank UX Component]* and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/mdUXRep_new2.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 1-2: Adding Controls for the Suppliers and Products Table</title>
                    <description>Next, you need to add controls the the UX Component that represent the fields in the Suppliers and Products tables.</description>
                    <steps>
                        <step>
                            <description>Click on *[ui:Controls]* in the left-hand column in the *[ui:UX]* section to display the Controls pane.</description>
                            <figure>
                                <link>images/mdUXRep_newControlsPane.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Data Controls]* section listed on the left-hand column, click *[ui:[TBox][TextBox]]* to open the *[ui:New Control]* dialog.</description>
                            <figure>
                                <link>images/mdUXRep_newFields1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>The *[ui:New Control]* dialog can be used to insert one control or multiple controls all at once.</p>
                                <p>Select the *[ui:Create multiple new controls at once]* radio button at the top of the dialog. You will use *[ui:Field type codes]* to indicate the type of each text box to create. Fields in the Suppliers and Products table are either a Character (C), Numeric (N), or Logical (L) format.</p>
                                <p>Controls defined in the New Control dialog are be inserted into the UX Component in the order they are defined. You will be placing all of the controls for the Products table in a repeating section below the controls for the Suppliers table. Achieving this layout is easiest if the controls for the Suppliers table are defined first, followed by the controls for the Products table.</p>
                                <p>First, define the controls to create for fields in the Suppliers table. Specify each control on its own line in the format *[xb:field_name|field_type]*:</p>
                            </description>
                            <example><![CDATA[SupplierID|N
CompanyName|C
Address|C
City|C
Region|C
Country|C]]></example>
                        </step>
                        <step>
                            <description>Next, define the controls for fields in the Products table as shown in the example code below. You will add a repeating section around the controls for these fields.</description>
                            <example><![CDATA[ProductID|N
ProductName|C
QuantityPerUnit|C
UnitPrice|N
UnitsInStock|N
UnitsOnOrder|N
Discontinued|L]]></example>
                        </step>
                        <step>
                            <description>When you are done adding the fields, the *[ui:New Control]* dialog should look similar to the image below. Click the *[ui:OK]* button to create the controls.</description>
                            <figure>
                                <title>The list of controls and their types that will be added to the UX Component</title>
                                <link>images/mdUXRep_newFields2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the *[ui:ProductId]*, *[ui:ProductName]*, *[ui:QuantityPerUnit]*, *[ui:UnitPrice]*, *[ui:UnitsInStock]*, *[ui:UnitsOnOrder]*, and *[ui:Discontinued]* controls.</description>
                            <figure>
                                <link>images/mdUXRep_newFields3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Containers]* section, click the *[Container]* option to open the *[ui:Insert Container]* dialog. Select *[RepeatingSection]* and click *[ui:OK]*. This will insert a repeating section around the selected controls.</description>
                            <figure>
                                <link>images/mdUXRep_newFields4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select all of the controls inside the repeating section, named *[REPEATINGSECTION_1]*, and click the *[ui:[ToggleBreak] Toggle Break]* button in the UX Builder toolbar to remove the break after each control. Removing the break will place all of the controls on one line, side by side.</description>
                            <figure>
                                <link>images/mdUXRep_newFields5.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>The UX Component has all the controls you need to display data from the Suppliers and Products tables. Next, you will configure the Data Binding definition for the UX Component that will link the controls in the UX to tables and fields in the Northwind database.</description>
                </section>
            </sections>
        </group>
        <group>
            <title>Lesson 2: Data Binding the UX Component to the Suppliers and Products Tables</title>
            <sections>
                <section>
                    <description>In this lesson, you will learn:</description>
                    <cases>
                        <case>
                            <description>How to Setup and Configure Data Binding to a UX Component</description>
                        </case>
                        <case>
                            <description>How to add Data Binding to a Repeating Section in a UX Component</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <description>The next step is to bind the controls in the UX Component to the tables in the Northwind database. This is done using Data Binding.</description>
                </section>
                <section>
                    <title>Lesson 2-1: Defining the Data Binding SQL Query</title>
                    <steps>
                        <step>
                            <description>In the left-hand column, click *[ui:Data Binding]* to open the UX Component's Data Binding pane.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click *[ui:Bind the controls on your UX to fields in one or more existing tables]* to open the *[ui:Bind UX Controls to Table Fields]* dialog.</description>
                        </step>
                        <step>
                            <description>The *[ui:Bind UX Controls to Table Fields]* dialog is where you define the mapping between tables in a database to controls in the UX Component. To data bind controls in the UX Component, you must first specify the tables in the database that will be bound to controls. Click *[ui:Specify Tables]* to select the tables.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Select Table(s)]* dialog, define the *[ui:SQL connection string]*. Make sure *[SQL]* is selected for *[ui:Table type]*. Then, click the *[ui:Select]* button.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Connection String]* dialog, click the *[ui:Select...]* button. This opens the *[ui:AlphaDAO Connection Strings]* dialog.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The *[ui:AlphaDAO Connection Strings]* dialog lists all of the named connections you have created in Alpha Anywhere. Select the *[Northwind]* connection string and click *[ui:OK]*.</description>
                            <note>If you do not have a connection string for the Northwind database or this dialog is blank, see [Creating AlphaDAO Connection Strings] for instructions on how to create a connection string to the Northwind database.</note>
                            <figure>
                                <link>images/mdUXRep_newDataBinding5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click *[ui:OK]* in the *[ui:Connection String]* dialog to save the selected connection string.</description>
                        </step>
                        <step>
                            <description>Now that the connection string is selected, you can add the tables to the data binding definition. In the *[ui:Select Table(s)]* dialog, click *[ui:Add table]*.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Add New Table]* dialog, click the *[ui:Select Table...]* button.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the *[Suppliers]* table from the list of tables in the Northwind database and click *[ui:OK]*.</description>
                            <note>Your *[ui:Select Table]* dialog may look different - it may only list the tables in your version of the Northwind database. The image shows both tables and views in the Northwind Access database. For databases with many tables, you can use the *[ui:Advanced table picker]* to apply filters to find the table you want to use. Click the *[ui:Advanced table picker]* link to display additional options.</note>
                            <figure>
                                <link>images/mdUXRep_newDataBinding8.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, you will add the Products table with a "One to Many" linking relationship with the Suppliers table. Click the *[ui:Add Table]* button to add another table.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding9.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the *[ui:Select Table...]* button.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding10.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Select Table]* dialog, select the *[Products]* table and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding11.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Add New Table]* dialog, change the *[ui:Link type]* to *[OneToMany]* and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding12.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The linking fields need to be defined for the Products table. The link fields define the parent-child relationship between tables. All products in the Products table have a supplier, which can be looked up using the SupplierID. Click the [...] button for the *[ui:Parent link fields]* property to open the *[ui:Linking fields]* dialog.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding13.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>For the *[ui:Fields in This Table]*, select *[SupplierID (N)]* from the dropdown box of choices.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding14.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>For the *[ui:Field in Parent Table]* property, select *[SupplierID (N)]*. Click *[ui:OK]* to save the linking fields definition.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding15.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click *[ui:OK]* to save the SQL table definition for the UX data binding properties.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding16.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 2-2: Binding Sections to the Suppliers and Products Tables</title>
                    <description>Next, you need to bind the Products table to the Repeating Section in the UX Component.</description>
                    <steps>
                        <step>
                            <description>Click on *[ui:Bind Tables to Repeating Sections]*. This will open the *[ui:Specify Parent Table for Each Dialog Section]* dialog.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding17.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>In the *[ui:Specify Parent Table for Each Dialog Section]* dialog, you will see two items listed under *[ui:Dialog Section]*. The first item, *[<![CDATA[<Top Level>]]>]* should already be set to *[Supplies]*. *[<![CDATA[<Top Level>]]>]* refers to every control in the UX Component that is not inside a repeating section container.</p>
                                <p>The second item, *[REPEATINGSECTION_1]*, is the repeating section in your UX Component. Every repeating section in the UX Component will be listed in this dialog. You can choose to bind the repeating section to no tables, "unbound", or to a table that has a one to many relationship with the table defined for the *[<![CDATA[<Top Level>]]>]* item.</p>
                                <p>Select *[REPEATINGSECTION_1]* and click the *[ui:Edit]* button to bind the repeating section to a table.</p>
                            </description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding18.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Select Alias]* dialog, select *[Products]*. Then, click the *[ui:OK]* button. This will bind the REPEATINGSECTION_1 to the Products table.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding19.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click *[ui:OK]* in the *[ui:Specify Parent Table for Each Dialog Section]* dialog to save the data binding.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding20.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 2-3: Binding Controls to Fields in the Suppliers and Products Table</title>
                    <description>Now, you need to bind each control in the UX Component to a table field. Binding controls to fields tells the UX Component what controls are used to edit and view data from the database.</description>
                    <steps>
                        <step>
                            <description>Click the *[ui:Bind UX Component Controls to Table Fields]* button to open the *[ui:Bind Controls to Fields]* dialog.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding21.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:UX Section]* list, select *[<![CDATA[<Top Level>]]>]*.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding22.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Click the *[ui:Automatically map fields]* link in the bottom left-hand corner of the dialog. Alpha Anywhere will auto-assign fields to controls if both have the same name.</p>
                                <p>Alternatively, you can double-click on each row to open the assign fields dialog to select a specific column from the table to assign to the control.</p>
                            </description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding23.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, select *[REPEATINGSECTION_1]* in the *[ui:UX Section]* list so you can bind controls in the repeating section to fields in the Products table.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding24.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the *[ui:Automatically map fields]* link in the bottom left-hand corner of the dialog to auto-assign the fields. Once you are satisfied with the control data binding, click the *[ui:OK]* button to save your changes.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding25.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The Data Binding tab in the UX Builder now shows the data binding settings for the UX Component.</description>
                            <figure>
                                <link>images/mdUXRep_newDataBinding26.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
            </sections>
        </group>
        <group>
            <title>Lesson 3: Adding Record Navigation and Editing with Action Scripting</title>
            <sections>
                <section>
                    <description>In this lesson, you will learn:</description>
                    <cases>
                        <case>
                            <description>How to load Records for a Data Bound UX Component</description>
                        </case>
                        <case>
                            <description>How to add Record Navigation to a Data Bound UX Component</description>
                        </case>
                        <case>
                            <description>How to save Changes to Records in a Data Bound UX Component</description>
                        </case>
                    </cases>
                </section>
                <section>
                    <title>Lesson 3-1: Loading the Records from the Database Into the UX Component</title>
                    <description>Next, you need to add code to load the Primary Keys from the tables defined in the Data Binding settings. This is done using server-side Action Scripting.</description>
                    <steps>
                        <step>
                            <description>
                                <p>In the UX Builder's *[ui:Events]* section in the left-hand column, click on *[ui:Server-side]* to display the Server-Side Events pane. Click on *[onDialogInitialize]* to select the onDialogInitialize sever-side event.</p>
                                <p>Place the text cursor inside the onDialogInitialize function, either by clicking at the beginning of a line with a comment or clicking on a blank row. You can also add a new row at the beignning of the function.</p>
                                <p>With the insertion point inside the function, click the *[ui:[actionScript] Action Scripting]* button to insert a new server-side action script.</p>
                            </description>
                            <figure>
                                <link>images/mdUXRep_newLoadKeys1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[Load Primary keys for Parent Table]* and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/mdUXRep_newLoadKeys2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>When the *[ui:Specify Action Name]* dialog appears, click *[ui:OK]* to accept the default action name.</description>
                            <figure>
                                <link>images/mdUXRep_newLoadKeys3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Accept the default settings and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/mdUXRep_newLoadKeys4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The following Action Script will be inserted into the *[xb:onDialogInitialize]* event. Follow the instructions in the comments if you wish to modify the Action Script.</description>
                            <example><![CDATA['To edit this action, place insertion point anywhere in the command, then click the 'Action Scripting' button'.
ExecuteServerSideAction("Get Primary Keys for Parent Table::Load_Primary_keys_for_Parent_Table")]]></example>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 3-2: Adding Controls to Navigate Between Suppliers</title>
                    <steps>
                        <step>
                            <description>Select the *[ui:Country]* control in the UX Component. Then, click the *[record Navigation Buttons]* option listed under *[ui:Defined Controls]* to insert navigation buttons. Navigation buttons allow you to navigate between records in a Data Bound UX Component.</description>
                            <figure>
                                <link>images/mdUXRep_newNavigation1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the *[ui:Last]* control. Then, click the *[ui:[ToggleBreak] Toggle Break]* button in the UX Builder toolbar. This adds a break after the Last button. Without a break, the repeating section will appear to the right of the navigation controls instead of below.</description>
                            <figure>
                                <link>images/mdUXRep_newNavigation2.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 3-3: Saving Changes to the Suppliers and Products Tables</title>
                </section>
                <section>   
                    <description>Repeating sections can be used to build powerful interfaces for web applications. You can create multiple repeating sections to capture data in multiple tables.</description>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Open the *[ui:Server-Side Events]* pane and click on the *[afterDialogValidate]* event. The afterDialogValidate event is triggered after data has been submitted to the server. If your UX Component has any field validation, this event will be exectuted after fields are sucesfully validated. If any validation rules fail, this event will not be fired.</description>
                            <note>If you want to add validation to your UX component, check out our videos on data validation listed in [Appendix A: Validating Data].</note>
                            <figure>
                                <link>images/mdUXRep_newSave1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Place the mouse cursor inside the afterDialogValidate function, such as at the start of one of the comments or on a blank line, and click the *[ui:Action Scripting]* button.</description>
                        </step>
                        <step>
                            <description>In the *[ui:Server-side Actions - Select an Action]* dialog, select the *[Save Submitted Data to Table(s)]* action and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/mdUXRep_newSave2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>When the *[ui:Specify Action Name]*, click *[ui:OK]* to accept the default action name.</description>
                            <figure>
                                <link>images/mdUXRep_newSave3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The *[ui:Save Submitted Data to Tables]* dialog allows you to configure the Save Submitted Data to Table(s) action script. Here is where you define the behaviors that occur before, during, and after data is saved to the tables. Save Submitted Data to Table(s) is only available for UX Components with data bound controls. The action script uses the data binding definintion to update records in a database.</description>
                            <figure>
                                <link>images/mdUXRep_newSave4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The default configuration for the Save Submitted Data to Table(s) action is to redirect to another page after the data is submitted. Change the *[ui:After submit action]* from Redirect to another page to *[Edit record just submitted]*. The Edit record just submitted behavior will leave the current record on screen rather than redirecting the user to another page or resetting the UX component for entering a new record (i.e. *[ui:Enter another record]*).</description>
                            <figure>
                                <link>images/mdUXRep_newSave5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>If a UX Component includes repeating sections, it's good practice to enable *[ui:Use transactions]*. Use transactions will transaction the updates to the database. If an error occurs when updating or inserting records in either the Suppliers or Products tables, the entire transaction will be rolled back. If *[ui:Use transactions]* is not enabled, if an error occurs when inserting records, your database can end up with partial records resulting in poor data integrity.</description>
                            <figure>
                                <link>images/mdUXRep_newSave6.png</link>
                            </figure>
                            <note>Transactions are not supported for .dbf tables. Some SQL databases do not support transactions, either. Consult your database documentation to determing if your database software supports transactions.</note>
                        </step>
                        <step>
                            <description>Click *[ui:OK]* to finish creating the action script that will save edits to the Suppliers and Products tables. Alpha Anywhere will insert two lines of xbasic that should looks similar to the example and image below. If you want to edit the action script that submits data to tables, follow the instructions in the comment.</description>
                            <figure>
                                <link>images/mdUXRep_newSave7.png</link>
                            </figure>
                            <example><![CDATA['To edit this action, place insertion point anywhere in the command, then click the 'Action Scripting' button'.
ExecuteServerSideAction("Save Data::Save_Submitted_Data_to_Table_s_")]]></example>
                        </step>
                        <step>
                            <description>
                                <p>Next, you need to add buttons to submit the UX component. Submitting the UX component is the process by which data, including edits, are sent to the server. The server processes the submitted data, including checking for validation errors, and then executes several server-side events, including the afterDialogValidate event where you just added the Save Submitted Data to Table(s) server-side action script.</p>
                            </description>
                            <figure>
                                <link>images/mdUXRep_newSubmit1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Select the *[ui:RepeatingSection End]* control for *[REPEATINGSECTION_1]*. In the *[ui:Defined Controls]* section, click *[ui:[submitReset] Submit-Reset]* to insert two pre-defined buttons after the repeating section: Submit and Reset.</p>
                            </description>
                            <figure>
                                <link>images/mdUXRep_newSubmit2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>The Submit and Reset buttons will be dynamically enabled (or disabled) when edits are made to the controls in the UX Component. This behavior can occur when any control in the UX Component is edited or when controls that are bound to a table are edited.</p>
                                <p>In the app that you're building, all controls on the UX Component are bound to data controls. Therefore, the first option, *[ui:When any control on the UX Component is dirty]*, is a reasonable choice. However, if you wanted to add a dropdownbox that lists available records the user could view/edit, the second choice, *[ui:When a control that is bound to a table is dirty]*, is best.</p>
                                <p>When a record is selected in the dropdownbox to display, the dropdownbox control becomes "dirty". Under the *[ui:When any control on the UX component is dirty]* behavior, choosing a different record to display would enable the Submit and Reset buttons. This behavior, however, is not desireable. You would only want the Submit and Reset buttons to be enabled if the Suppliers or Products records were edited, not when the user chooses a record to display. In this situation, you would want to use the *[ui:When a control that is bound to a table is dirty]* behavior.</p>
                                <p>Select *[ui:When a control that is bound to a table is dirty]* and click *[ui:OK]*.</p>
                            </description>
                            <description></description>
                            <figure>
                                <link>images/mdUXRep_newSubmit3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The Submit and Reset buttons will be inserted after the closing tag for the repeating section container. Save your UX Component.</description>
                            <figure>
                                <link>images/mdUXRep_newSubmit4.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Preview Your Application</title>
                    <description>Your Master Detail application now has all of the pieces required that allow you to view, modify, and add records to the Suppliers and Products table in the Northwind database.</description>
                    <steps>
                        <step>
                            <description>Preview the web application. Click the *[ui:Live Preview]* tab to open the Live Preview. If prompted, start the server. When prompted, choose the *[ui:Full Preview]* option for displaying the Live Preview. (For an explanation of *[ui:Full Preview]*, see [Previewing Components].)</description>
                            <note>If you see an error message telling you that the port is in use, you need to change the Development Server's port number. See [Configuring the Alpha Anywere Development Server] for an explanation for how this is done.</note>
                            <figure>
                                <link>images/mdUXRep_newPreview1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>The first record in the Suppliers database will be shown with the associated Products records listed in the repeating section - which appears between the navigation buttons and Submit and Reset buttons. Clicking the First, Next, Previous, and Last navigation buttons will navigate through the records in the Suppliers table. The Products repeating section will be updated with the Products records associated with the current Suppliers record.</p>
                            </description>
                            <figure>
                                <link>images/mdUXRep_newPreview2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Editing a value in one of the text boxes will cause the Submit and Reset buttons to be enabled. After you make an edit, you can click the Submit button to save the changes to the Northwind database. Clicking the Reset button will undo all changes made to both the Suppliers and Products records.</description>
                            <figure>
                                <link>images/mdUXRep_newPreview3.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
            </sections>
        </group>
        <group>
            <title>Improving the User Interface</title>
            <sections>
                <section>
                    <description>
                        <p>While your web application has the functional elements for editing records in the Suppliers and Products table, a lot can be done to improve the interface to make it more user friendly. For example, the Discontinued field is displayed as a text box with the word "true" or "false" used to indicate whether or not a product is discontinued. This text box control could be changed to a checkbox control that displays as checked if Discontinued is "true" and unchecked if Discontinued is "false".</p>
                        <p>Other changes that could be made include adjusting the widths of the text boxes - making some boxes narrower (such as those text boxes that display numeric values) while making other text boxes wider (e.g. Company Name and Address). The *[ui:[Width]]* property defines the width of these controls.</p>
                        <p>Some controls, such as the Product ID, may not be appropriate to display. Controls can be selectively hidden by checking the *[ui:Hide]* property in the control's [Field Properties]. The Product ID is needed for saving changes to records in the Products repeating section, but it is not necessary to display the Product ID to the user.</p>
                        <p>Formatting directives could be added to the Unit Price field to display the value as a dollar amount. This is done by creating a Client side format with a [Format type] of 'Number'. See [Client side properties] to learn more about client side formatting options available for UX controls.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Publish Your Application</title>
            <sections>
                <section>
                    <description>
                        <p>The next step is to publish your application. Follow our [How to Publish an Alpha Anywhere Application] Guide to learn how to publish web applications to the Local Webroot using the Alpha Anywhere Development Server.</p>
                        <p>If you're planning to deploy your application using the Alpha Anywhere Application Server for IIS, you'll want to check out our [IIS User's Guide]. The IIS User's Guide includes information on how to setup publishing profiles and configure the IIS Server.</p>
                    </description>
                </section>
            </sections>
        </group>
        <group>
            <title>Appendix A: Validating Data</title>
            <sections>
                <section>
                    <title>Validating Data in UX Components</title>
                    <description>Validation rules can be defined using a variety of methods in Alpha Anywhere. Validation Rules can be defined declaratively or using code. Rules can be evaluated client-side using Javascript or server-side using Xbasic. The videos below explain the validation options available in Alpha Anywhere and how you may use them in your own applications.</description>
                    <videos>
                        <video>
                            <name>Validating Data Part 1</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part1.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data Part 2</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part2.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data Part 3</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part3.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data Part 4</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part4.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data Part 5</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part5.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data Part 6</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part6.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data Part 7</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_Part7.swf</link>
                        </video> 
                    </videos>
                </section>
                <section>
                    <title>Validating Data in Repeating Sections</title>
                    <description>Validation rules can be added for repeating sections as well. Watch to learn how this is done in Alpha Anywhere.</description>
                    <videos>
                        <video>
                            <name>Validating Data in Repeating Sections Part 1</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_RepeatingSections1.swf</link>
                        </video> 
                        <video>
                            <name>Validating Data in Repeating Sections Part 2</name>
                            <link>http://www.ajaxvideotutorials.com/V11Videos/DialogValidation_RepeatingSections2.swf</link>
                        </video> 
                    </videos>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <link href="#group_Appendix%20A:%20Validating%20Data">Appendix A: Validating Data</link>
        <link href="images/ellipsesButton.png">...</link>
        <link href="/images/$$control.edit.png">TBox</link>
        <link href="/images/$$control.button.png">submitReset</link>
        <link href="/images/$$generic.pilcrow.png">ToggleBreak</link>
        <link href="/images/$$generic.lamp.png">actionScript</link>
        <link href="/documentation/index?search=how to publish an alpha anywhere application">How to Publish an Alpha Anywhere Application</link>
        <link href="/documentation/index/iis">IIS User's Guide</link>
        <link href="/documentation/index?search=UX Control Field Properties">Width</link>
        <link href="/documentation/index?search=UX Control Field Properties">Field Properties</link>
        <link href="/documentation/index?search=ux control format type property">Format type</link>
        <link href="/documentation/index?search=ux control client side properties">Client side properties</link>
        <link href="/documentation/index?search=previewing components">Previewing Components</link>
        <link href="/documentation/index?search=configuring the alpha anywhere development server">Configuring the Alpha Anywere Development Server</link>
        <link href="/documentation/index?search=creating alphadao connection strings">Creating AlphaDAO Connection Strings</link>
    </links>
    <see>
        <link href="/documentation/index?search=building master detail web applications with grid components">Building Master Detail Web Applications with Grid Components</link>
        <!--<link href="">Building Master Detail Mobile Applications</link>-->
        <link href="">Publishing Your Application to the Local Web Root</link>
        <link href="/documentation/index?search=IIS">IIS User's Guide</link>
    </see>
</page>
