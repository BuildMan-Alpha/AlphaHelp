<page>
    <shortlink>Build a Mobile App</shortlink>
    <topic>Getting Started With Alpha Anywhere - Build Your First Mobile App</topic>
    <description>Follow this step-by-step guide to your first Alpha Anywhere application to run in a mobile web environment.</description>
    <!--Updated for the Alpha Anywhere 4.5.4.5 release-->
    <groups>
        <group background="true">
            <title>Overview</title>
            <sections>
                <section>
                    <description>
                        <p>In this guide, Getting Started with Alpha Anywhere - Build Your First Mobile App, you will build a mobile web application with data integration and disconnected application support. Your mobile web application will include the ability to search, add, edit, and delete information in the Northwind database. It will also include a responsive layout design that can adapt to a mobile device's size and orientation.</p>
                        <p>The mobile application you create will be built using the UX Component. All applications in Alpha Anywhere are built using components. The UX Component is the core component for creating mobile applications. Features in the UX Component enable you to take advantage of native mobile functionality using a low-code rapid mobile development approach with built-in support for *[extlink:offline data storage@http://www.alphasoftware.com/mobile-app-development/offline-applications/]*, *[extlink:responsive mobile design@http://www.alphasoftware.com/mobile-app-development/html5-phonegap/]*, *[extlink:optimized mobile forms@http://www.alphasoftware.com/mobile-app-development/mobile-forms/]*, and *[extlink:more@http://www.alphasoftware.com/mobile-app-development/]*.</p>
                    </description>
                    <figure>
                        <title>The mobile app you are building.</title>
                        <link>images/mobileFinal1.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>By the end of this guide, you will have recreated the  *[ui:MobileAppFramework_Sample_Disconnected_app]* UX Component template. Templates can accelerate building some types of applications. Alpha Anywhere ships with a number of pre-built templates for many components. In addition, you can create your own custom templates. Watch *[extlink:Grid Templates@https://www.viddler.com/v/7144791c]* for more details on creating component templates.</p>
                    </description>
                </section>
                <section>
                    <title>Approach</title>
                    <description>
                        <p>There are two approaches you can use when building a mobile app: Layout First or Functionality First.</p>
                        <p>The Layout First approach focuses on the application's appearance. This involves creating the layout of the app, adding navigation buttons and using placeholder data, if necessary, to get the desired visual appearance before adding any core functionality.</p>
                        <p>Functionality First approach focuses on getting core functionality -- such as Create, Read, Update, and Delete (CRUD) features -- working first. After this core functionality is built, the interface is added, including creating any additional navigation necessary for using the app in a mobile environment.</p>
                        <p>This guide uses a *[Functionality First]* approach. </p>
                    </description>
                </section>
                <section>
                    <title>About This Guide</title>
                    <description>
                        <p>This guide is broken into three parts: [First Things First - Setting Up Your Workspace], [Part 1 - Building Basic Functionality], and [Part 2 - Creating the Responsive Mobile Layout]. In addition, there is an *[link:Appendix@./index.xml#group_Appendix]* at the end of this document that includes additional resources.</p>
                        <p>[First Things First] covers creating a new Alpha Anywhere workspace and create an AlphaDAO connection string for communicating with the Northwind database. An Alpha Anywhere workspace contains the files required for your application.</p>
                        <p>[Part 1] walks you through creating a new List control with a Detail View and Search Part using the List Control Quick Start Genie. The List control is the core building block of any Alpha Anywhere mobile app. It handles displaying records from a database and tracking any changes to that data. The Detail View is an interface for creating, editing, and deleting records in a List control. The Search Part is used to request the records of interest from the data source to display in the List control.</p>
                        <p>[Part 2] details adding layout elements necessary to create a responsive mobile layout that adapts to device's size and orientation. Part 2 also covers styling the UX Component to look and feel like a native mobile interface.</p>
                        <p>At the beginning of each lesson, a component may be available for download. The downloadable component contains a snapshot of the mobile app as it would look if you had built the component following the previous lessons. Not all lessons will have a component for download. Specifically, Part 1 does not have component downloads for Lesson 3 through 7, as these lessons discuss configuring the List Control Quick Setup Genie, which cannot be saved mid-setup.</p>
                        <p>At the end of this Tutorial, you will find an Appendix. The Appendix contains troubleshooting information and links to useful resources to add to your Alpha Anywhere development toolbox.</p>
                    </description>
                    <note>
                        <p>The components available for download in each lesson use the 'AADemo-Northwind' named connection string. The 'AADemo-Northwind' connection string is an AlphaDAO (Alpha Anywhere Data Access Object) connection to the MS Access Northwind database that ships with Alpha Anywhere. Follow the instructions in [Lesson 2: Build a Database Connection String] to create this connection string.</p>
                        <p>[NoConnectionString]</p>
                    </note>
                </section>
            </sections>
        </group>
        <group>
            <title>First Things First - Setting Up Your Workspace</title>
            <sections>
                <section>
                    <title>Lesson 1: Create a new Workspace</title>
                    <description>
                        To create a new mobile application with Alpha Anywhere, you must create a new workspace. A workspace contains all of the files that your application needs, including files such as UX components, javascript libraries, images, HTML pages, .a5w pages, and css style sheets.
                    </description>
                    <figure>
                        <title>An Alpha Anywhere workspace.</title>
                        <link>images/newWorkspace5.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Launch Alpha Anywhere. Under the *[ui:File]* menu, select *[ui:New Workspace...]* to create a new Alpha Anywhere project.</description>
                            <figure>
                                <title>Create a New Workspace from the File menu.</title>
                                <link>images/newWorkspace1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Enter "HelloAlpha" in the *[ui:Workspace name]* box. Then click *[ui:OK]*.</description>
                            <figure>
                                <title>Create a new workspace.</title>
                                <link>images/newWorkspace2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>When you create mobile applications in Alpha Anywhere, all mobile resources are added using the Web Projects Control Panel. Check the box for *[ui:Open the Web Control Panel when this Workspace is opened]* and click *[ui:OK]*.</p>
                            </description>
                            <figure>
                                <title>Specifying the Web Projects Control Panel should be opened when the Workspace is opened.</title>
                                <link>images/newWorkspace4.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>You have created a new, blank Alpha Anywhere workspace. You can now start building your mobile application.</description>
                    <figure>
                        <title>A new, blank Alpha Anywhere workspace.</title>
                        <link>images/newWorkspace5.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Tip: Accessing the Web Projects Control Panel</title>
                    <description>The Web Projects Control Panel can be accessed at any time by clicking the *[ui:Web Projects]* toolbar button when you are editing a component or have navigated away from the Web Projects Control Panel.</description>
                    <figure>
                        <link>images/webprojects.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 2: Build a Database Connection String</title>
                    <description>
                        <p>The application you will be creating will interact with the Northwind database. Alpha Anywhere can communicate with databases using an AlphaDAO connection string. AlphaDAO stands for "Alpha Anywhere Data Access Object". AlphaDAO is an interface through which you access data stored in SQL, noSQL, DBaaS, SaaS, and other data sources, including static JSON and OData (Open Data Protocol) APIs. (See *[extlink:AlphaDAO Overview@/documentation/index?search=AlphaDAO Overview]* and *[extlink:AlphaDAO Objects@/documentation/index?search=AlphaDAO Objects]* for information on using AlphaDAO with Xbasic.)</p>
                        <p>Alpha Anywhere provides a pre-defined AlphaDAO connection string you can use to communicate with the Northwind database, a Microsoft Access database included in the Alpha Anywhere Developer Edition.</p>
                    </description>
                    <steps>
                        <step>
                            <description>From the Web Projects Control Panel in Alpha Anywhere, select *[ui:[ManageConnStr] Manage Connection Strings]* &gt; *[ui:Alpha DAO Connection strings]* from the *[ui:Edit]* menu to open the AlphaDAO Connections dialog.</description>
                            <figure>
                                <link>images/connectionString_AA0.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>The *[ui:AlphaDAO Connections]* dialog allows you to create and manage named connection strings in your Alpha Anywhere projects. "Named" connections are useful as they allow you to define a connection string to a database once and reference the AlphaDAO connection throughout your application using a "named" reference.</p>
                                <p>For this tutorial, we will be using the *[AADemo-Northwind]* connection string, which is a pre-built connection for the MS Access Northwind database that ships with Alpha Anywhere.</p>
                                <p>If the *[AADemo-Northwind]* connection string is not already listed, click the *[ui:Create 'AADemo-Northwind' demo connection string]* link at the bottom of the *[ui:AlphaDAO Connections]* dialog to create it.</p> 
                            </description>
                            <figure>
                                <link>images/connectionString_AA1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>When prompted, click *[ui:OK - Create a named connection string called 'AADemo-Northwind']* to create the connection string.</description>
                            <figure>
                                <title>The Demo Connection String dialog provides useful information about the 'AADemo-Northwind' connection string.</title>
                                <link>images/connectionString_AA2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>You will be shown a *[ui:Notice]* confirming the connection string has been created. Click *[ui:OK]* to close the *[ui:Notice]*.</description>
                            <figure>
                                <link>images/connectionString_AA3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Finally, click the *[ui:Close]* button to close the *[ui:AlphaDAO Connections]* dialog.</description>
                            <figure>
                                <link>images/connectionString_AA4.png</link>
                            </figure>
                            <tip>If desired, you can create a connection string to a SQL Server or MySQL version of the Northwind database. Check out the [Creating AlphaDAO Connection Strings] tutorial to learn how.</tip>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Congratulations! You have created a connection string that can be used to interact with data in the Northwind database. You are now ready to begin building your application.</description>
                </section>
            </sections>
        </group>
        <group>
            <title>Part 1 - Building Basic Functionality</title>
            <sections>
                <section>
                    <description>
                        <p>In this section, Part 1 - Building Basic Functionality, you will create a List control with a Detail View and Search Part using the List Control Quick Start Genie. By the end of this section, you will have built an app that can perform Create, Read, Update, and Delete (CRUD) operations against the Customers table in the Northwind database, shown below.</p>
                    </description>
                    <figure>
                        <title>Part 1 - Building Basic Functionality</title>
                        <link>images/newlist8.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 1: Add a UX Component to the Workspace</title>
                    <description>All applications built with Alpha Anywhere start with a component. Mobile applications are built using the UX Component. Let's start by adding a UX Component to the project. </description>
                    <note>See [First Things First Lesson 1] for instructions on how to create a new workspace.</note>
                </section>
                <section>
                    <figure>
                        <title>The UX Builder for the new UX Component.</title>
                        <link>images/newux4.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Add a new UX Component to the workspace by clicking the *[ui:[FileNew]New]* button in the Web Projects Control Panel toolbar.</description>
                            <figure>
                                <title>The Web Projects Control Panel toolbar.</title>
                                <link>images/newFile1b.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the New File dialog, select *[ui:Web Component]* and click the *[ui:Next >]* button.</description>
                            <figure>
                                <title>The New File dialog.</title>
                                <link>images/newux1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[ui:UX]* from the file types listed and click *[ui:Next >]*.</description>
                            <figure>
                                <title>Selecting the type of component to create.</title>
                                <link>images/newux2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>A number of templates for the UX Component are available. These templates make building some types of applications faster. You will be creating a blank UX Component to start. Select *[ui:Start with a blank UX Component]* option and click *[ui:OK]*.</description>
                            <figure>
                                <title>Select UX Component Template</title>
                                <link>images/newux3.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now that you have a UX Component, you can start creating the core functionality needed to interact with data in the Northwind database.</description>
                    <figure>
                        <title>The UX Builder for the new, blank UX Component.</title>
                        <link>images/newux4.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 2: Add a List Control</title>
                    <description>[Download Component for Part 1 Lesson 2]</description>
                </section>
                <section>
                    <description>The List Control is one of the core building blocks in mobile applications. Using the *[ui:[ListGenie]List Control - Quick Setup Genie]*, you will create a List with a Detail View and Search part for interacting with the Customers table in the Northwind database.</description>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>The interface for the UX Component is designed on the *[ui:[UXControls] Controls]* pane. Click *[ui:[UXControls] Controls]*. In the *[ui:Data Controls]* section, click *[ui:[ListCtrl] [List]]* to insert a new List control into the UX Component's layout.</description>
                            <figure>
                                <title>Insert a new List Control</title>
                                <link>images/newlist0.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Choose *[ui:Create a single new control]*. Click the *[ui:[ListGenie] List Control - Quick Setup Genie]* button to open the List Control Quick Setup Genie.</p>
                            </description>
                            <figure>
                                <title>Create a new List Control</title>
                                <link>images/newlist1.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 3: Connect the List to a Database</title>
                    <description>Configure your List control to connect to the Northwind database using the AlphaDAO connection string you created in First Things First Lesson 2, [Build a Database Connection String]. </description>
                    <steps>
                        <step>
                            <description>Click the [...] button in the *[ui:Connection string]* property to open the *[ui:Connection String]* dialog.</description>
                            <figure>
                                <title>The List Control - Quick Setup Genie.</title>
                                <link>images/newlist2b.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Connection String]* dialog, select *[AADemo-Northwind]* from the *[ui:]* column. Then click *[ui:OK]*.</description>
                            <figure>
                                <title>Selecting a named connection in the Connection String dialog.</title>
                                <link>images/selectConnStr1b.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the [...] button for the *[ui:Table name]* property. </description>
                            <figure><link>images/tableprop1.png</link></figure>
                        </step>
                        <step>
                            <description>The *[ui:Table name]* property defines what table in the database will be queried for records. Choose the *[[tbl]Customers]* table from the list and click *[ui:OK]*.</description>
                            <figure>
                                <title>Select the Customers table.</title>
                                <link>images/newlist3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The *[ui:Method for defining SQL query]* the list will use is *[FieldsFromTable]*. This means you will define the table and fields you wish to edit rather than creating a SQL query. Alpha Anywhere will generate the appropriate SQL query to pull the data from the Northwind database from the *[ui:Table name]*, *[ui:Field list]*, *[ui:Filter]*, *[ui:Order]*, *[ui:Distinct]*, and *[ui:Record limit]* properties.</description>
                            <figure>
                                <title>The List will use the "FieldsFromTable" method to query the database.</title>
                                <link>images/selectConnStr4b.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the [...] next to the *[ui:Field list]* property.</description>
                            <figure>
                                <title>The "Field List" Property</title>
                                <link>images/fieldlistprop.png</link>
                            </figure>
                        </step>                    
                        <step>
                            <description>
                                <p>Next configure the *[ui:Field list]* property. The *[ui:Field list]* property determines what fields will be available for displaying, searching, and editing in the List. If you want to edit records in the table, the table's ID field must be included in the *[ui:Selected Fields]*. The ID field for the Customers table is *[CustomerID]*.</p>
                                <p>Select the *[CustomerID]*, *[CompanyName]*, *[Address]*, *[City]*, and *[Country]* fields from the Customers table and click *[ui:OK]*.</p></description>
                            <figure>
                                <title>Selecting the Fields that will be available in the List control to view and modify.</title>
                                <link>images/newlist4.png</link>
                            </figure>
                            <figure>
                                <title>The *[ui:List Data Source Definition]* completely configured to work with the Customers table in the Northwind database.</title>
                                <link>images/newlist5.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 4: Add the Detail View</title>
                    <description>Next, you will configure the List control's Detail View. The Detail View is an interface for editing or adding data in the List control.</description>
                    <steps>
                        <step>
                            <description>Find the *[ui:Has Detail View]* box in the List Builder.</description>
                            <figure>
                                <title>The 'Has Detail View'' box</title>
                                <link>images/listbuilddetail.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Check the *[ui:Has Detail View]* box to add a Detail View to the List control. The default settings for the Detail View will open.</description>
                            <figure>
                                <title>Add a Detail View to the List control.</title>
                                <link>images/newlist_dv1.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>The default settings for the Detail View will generate everything your app needs to add, edit, and delete records from the Customers table in the Northwind database. New fields will be created for the CustomerID, CompanyName, Address, City, and Country fields. In addition, buttons will be created to Add, Save, Reset, Delete, and Synchronize records.</description>
                </section>
                <section>
                    <title>Lesson 5: Configure the Search Part</title>
                    <description>Now, you will configure a *[ui:Search Part]* for the List control. The Search Part queries the Customers table and sends the results to the List control for display.</description>
                    <steps>
                        <step>
                            <description>Find the *[ui:Search Part]* Properties section in the List Builder.</description>
                            <figure>
                                <title>The 'Search Part'</title>
                                <link>images/listbuildsearch.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Search Part]* Properties section, click the checkbox for *[ui:Has Search Part]*.</description>
                            <figure>
                                <title>Adding a *[ui:Search Part]* to the List control.</title>
                                <link>images/newlist_s1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>You will be creating a Keyword search part. For the *[ui:Search Part type]* property, click the [...] button.</description>
                            <figure>
                                <title>The "Search Part type" Property.</title>
                                <link>images/searchparttypeprop1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[ui:SingleKeywordControl]* in the *[ui:Select Search Style]* dialog and click *[ui:OK]*.</description>
                            <figure>
                                <title>The *[ui:Select Search Style]* dialog.</title>
                                <link>images/newlist_s2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, find the "Search Part fields" property in the List control. These will be the fields that are queried when a search is executed. Click the [...] button next to the *[ui:Search Part fields]* property.</description>
                            <figure>
                                <title>The "Search Part fields" property.</title>
                                <link>images/searchpartfieldsprop1.png</link>
                            </figure>
                        </step>
                        
                        <step>
                            <description>In the dialog that opens, select all of the fields and click *[ui:OK]*.</description>
                            <figure>
                                <title>Select all of the fields in the List control to search.</title>
                                <link>images/newlist_s3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>When the List control is first rendered, the query to the server will return both the generated HTML to render the application and the results for the query in the List control's definition. While the Customers table in the Northwind database does not contain a large number of records, many databases have tables with millions of entries. Loading a million records when an app is first launched can take a long time and may even time out, creating the perception that your app is unreliable and doesn't work. In addition, the List control stores its data and edits to that data in local storage when disconnected application features are enabled. Local storage can only store up to 5MB of data.</p>
                                <p>To ensure your app loads quickly and reduce storage needs, *[ui:Delay populate List till active search]* can be enabled, preventing any data from being loaded into the List control until an explicit query against the data source is made by the user.</p>
                                <p>Check *[ui:Delay populate List till active search]*.</p>
                            </description>
                            <figure>
                                <title>The *[ui:Search Part]* configured to add search capabilities for the List control.</title>
                                <link>images/newlist_s4.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 6: Enable Disconnected Support and Generate the Controls</title>
                    <description>The final step in setting up the List control with Detail View and Search Part is to add Disconnected support. This allows your mobile app to continue to work when a connection to the data source is lost. Data in the List control, as well as any edits made to that data, will be persisted to local storage on the device. If a connection to the network is lost, or the app is closed, the List control will retain the records and edits to the records until a connection with the data source can be reestablished.</description>
                    <note>Only apps deployed using PhoneGap can offer full disconnected operation support. Web applications with *[ui:Persist List to Local Storage]* option enabled will remember the data and edits made to that data in a List control, but may not behave as expected if the network connection is lost as the web browser may attempt to reload the page instead of using the HTML, CSS, and Javascript previously retrieved when a connection was available. See the *[extlink:Getting Started with PhoneGap@/documentation/index?search=getting%20started%20with%20phonegap]* to learn more.</note>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Expand the *[ui:Disconnected Operation]* properties section under List Properties.</description>
                            <figure>
                                <title>The "Disconnected Operation" properties section.</title>
                                <link>images/disconnected1a.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Disconnected Operation]* properties, check the box for *[ui:Persist List data to Local Storage]*.</description>
                            <figure>
                                <title>Enabling offline capabilities for your mobile application.</title>
                                <link>images/newlist6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the *[ui:OK]* button in the *[ui:List Control - Quick Setup Genie]*. This will generate all of the controls necessary for the List, Detail View, and Search Part. Your UX Component should have a list of controls similar to the ones shown in the image below:</description>
                            <figure>
                                <title>The controls created by the *[ui:List Control - Quick Setup Genie]*</title>
                                <link>images/newlist7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Save your component. Click the *[ui:[FileSave]Save]* button on the toolbar at the top of the screen.</description>
                            <figure>
                                <title>Save the UX Component</title>
                                <link>images/newux5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Alpha Anywhere may prompt you to enable pre-rendering for the UX Component. Alpha Anywhere applications (both mobile and web) are rendered using HTML and CSS. The HTML and CSS for a componet can be computed on-demand when a component is viewed or pre-rendered before an application is published.</p>
                                <p>Pre-rendering the component can result in substantial performance improvements for an application. A pre-rendered component's layout will not be recalculated when it is viewed in a mobile or web application because the layout is computed during design-time. If server-side code is used to dynamically compute portions of the component when a user tries to view it, you may not be able to use pre-rendering. See [UX Component Optimizations] to learn more.</p>
                                <p>The mobile app you're creating does not require any server-side code to compute the layout, therefore pre-rendering can be used. Click *[ui:Yes - turn pre-render on]*.</p>
                            </description>
                            <figure>
                                <link>images/newux_prerender1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Since you may want to disable pre-rendering for the next application you build, click *[ui:This UX component only]* so Alpha Anywhere will prompt you again for future apps. Pre-rendering can always be enabled or disabled in the [UX Component Properties].</description>
                            <figure>
                                <link>images/newux_prerender2.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title>Lesson 7: Preview the UX Component</title>
                    <description>[Download Component for Part 1 Lesson 7]</description>
                </section>
                <section>
                    <description>
                        <p>Now that the List control, Detail View, and Search Part have been created, let's preview the app and test it out to verify the basic functionality for viewing and editing records in the Customers table works.</p>
                        <p>Click on the *[ui:[LPreview] Live Preview]* tab located between the *[ui:[Design] Design]* and *[ui:[WPreview] Working Preview]* tabs at the top of the UX Builder.</p>
                    </description>
                    <figure>
                        <link>images/livePreview.png</link>
                    </figure>
                </section>
                <section>
                    <description>If the development server is not running, you may be prompted to turn it on. If asked if you want to turn on the development server, select *[ui:Yes]* and click *[ui:OK]*.</description>
                    <figure>
                        <link>images/remoteTest2.png</link>
                    </figure>
                </section>
                <section>
                    <note>If you receive a warning that the port is in use, you need to change the Development Server's *[ui:Server Port]*. See [Appendix A: Configure the Development Server] to learn how to setup the Alpha Anywhere Development Server.</note>
                </section>
                <section>
                    <description>You will be asked what kind of Preview you would like. The options presented are *[ui:Fast Preview]* and *[ui:Full Preview]*. Since this is the first time you will be previewing your app using Live Preview, select *[ui:Full Preview]*. This ensures all of the files you need to preview your app will be created.</description>
                    <figure>
                        <link>images/remoteTest3.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>In Live Preview, the Search Part should appear above the List control on the left side of the screen. To the right of the List control, you should see several text boxes and several buttons. This is the Detail View.</p>
                    </description>
                    <figure>
                        <title>Previewing the Search Part, List control, and Detail View in [LPreview] Live Preview.</title>
                        <link>images/livePreview1.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>The List control at this point should be empty. This is because there is no data in the List control. Remember that you enabled "Delay populate List till active search" in the List Genie. This means that no records will be available until a search is performed. Let's do a search to populate the list with some data.</p>
                        <p>Type "Spain" into the Search box and click the *[ui:Search]* button.</p>
                    </description>
                    <figure>
                        <title>Searching for "Spain" yields several records in the List control.</title>
                        <link>images/livePreview2.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>Several records should appear in the List control. When you click on a record, the Detail View will be populated with data from that record. Select a record by clicking on it in the List control to display it in the Detail View.</p>
                    </description>
                    <figure>
                        <title>Selecting a record populates the Detail View with the record's data.</title>
                        <link>images/livePreview3.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>Edit the record you selected and click the *[ui:[FileSave] Save]* button to save your changes. A little yellow icon will appear next to the record in the List control. This icon indicates that the record has been modified but has not been persisted (ie, saved) to the Northwind database.</p>
                    </description>
                    <figure>
                        <title>The edited record appears with an orange triangle, indicating that it has been modified</title>
                        <link>images/livePreview4.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>If there are any modifications to the data in the List control, no searches can be performed on the source data - eg, the Northwind database. If you tried searching for "Germany" now to pull up all the records from the Northwind database for Customers with a Country of Germany, no results will be displayed in the List control. In addition, you may notice that the Detail View remains populated with the last record you were editing. This is because the Search Part performed a local search on the data in the List and did not query the Northwind data source. This local search is performed to prevent losing changes to data in the List control.</p>
                        <p>If you want to perform a new search to retrieve a new set of records from the Northwind database, you must persist the changes in the List control with the Northwind database. To persist changes back to the Northwind database, click *[ui:[FileSave] Synchronize]*.</p>
                    </description>
                    <figure>
                        <title>Search will only search locally stored records if the List control has unsynchronized changes</title>
                        <link>images/livePreview5.png</link>
                    </figure>
                </section>
                <section>
                    <description>
                        <p>When disconnected application features are enabled, the List control will remember both the records in the List control and any changes you have made to those records when you exit *[ui:[LPreview] Live Preview]*. The data in the List control is saved in local storage. Click on the *[ui:[Design] Design]* tab and then back on the *[ui:[LPreview] Live Preview]* tab. The List control will remain populated with the data that was in it when you navigated away from *[ui:[LPreview] Live Preview]*.</p>
                    </description>
                </section>
                <section>
                    <description>Now that you have the functional components of the mobile application working, let's configure the UX Component to look and feel like a mobile application.</description>
                </section>
            </sections>
        </group>
        <group>
            <title>Part 2 - Creating the Responsive Mobile Layout</title>
            <sections>
                <section>
                    <description>
                        <p>In this section, Part 2 - Creating the Responsive Mobile Layout, you will add the layout elements necessary to create a responsive mobile application. Using Panels, you will create an application that adapts to a mobile device's size and orientation.</p>
                        <p>Alpha Anywhere's mobile emulation tools will help you understand how your app will appear and behave on various devices. You will also add a mobile style sheet to the project, which will give UX Component the look and feel of a native mobile app.</p>
                        <p>By the end of this section, you will have a mobile application that can be deployed using PhoneGap Build or Cordova CLI, or published to the web as a mobile web application.</p>
                    </description>
                    <figure>
                        <title>How your completed mobile app will appear on iPhone 4 with a vertical orientation.</title>
                        <link>images/mobileFinal1.png</link>
                    </figure>
                    <figure>
                        <title>How your completed mobile app will appear on iPhone 6 with a horizontal orientation.</title>
                        <link>images/mobileFinal_h1.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 1: Add Panel Cards and Panel Layouts</title>
                    <description>[Download Component for Part 2 Lesson 1]</description>
                </section>
                <section>
                    <description>
                        <p>All mobile applications built in Alpha Anywhere use Panels - Panel Cards, Panel Layouts, and Panel Navigators.</p>
                        <p>Panel Cards group controls into "screens" and provide the navigation between "screens" of your application.</p>
                        <p>Panel Layouts define the layout of the Panels within them. Panel Layouts can have a horizontal (eg, left to right) or vertical (eg, top to bottom) layout. Buttons can be defined to trigger navigation between panels in a Panel Layout.</p>
                        <p>Panel Navigators include built-in swipe navigation in addition to being able to specify a horizontal or vertical layout of Panels in the navigator.</p>
                        <p>Panel Layouts and Panel Navigators can be nested inside other Panel Layouts and Panel Navigators, allowing you to create very complex and sophisticated mobile application layouts. Watch *[extlink:Panel layouts, Panel Navigators, and Panel Cards Explained@https://www.viddler.com/v/a0d330b9]* to learn more.</p>
                    </description>
                    <figure>
                        <title>The UX Component with Panel Cards and Panel Layouts.</title>
                        <link>images/final21.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select all of the Search Part controls in the UX Component. Click *[ui:[PCard][Panel Card]]* listed in the *[ui:Panels]* section. Click *[ui:OK]* to insert the Panel Card around the selected controls.</description>
                            <figure>
                                <title>Place the Search Part in a Panel Card.</title>
                                <link>images/panel1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, wrap the List control in a Panel Card. Select the List control in the Tree View and click *[ui:[PCard][Panel Card]]*. When prompted, click the *[ui:Insert Around]* button to place the List inside the Panel Card.</description>
                            <figure>
                                <title>Wrapping the List control in a Panel Card.</title>
                                <link>images/panel2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Check the *[ui:Fill container]* option so the List control will fill the Panel Card. This ensures the List control will take full advantage of the screen real estate available on the mobile device.</description>
                            <figure>
                                <title>Configuring a List control to Fill container.</title>
                                <link>images/panel3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Add a Panel Card around the Detail View the same way as you did for the Search Part. Select all the Detail View controls and click *[ui:[PCard][Panel Card]]*. Click *[ui:OK]*.</description>
                            <figure>
                                <title>Adding a Panel Card around the Detail View.</title>
                                <link>images/panel4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Now you must remove the Container controls from the UX. Select the *[ui:[Container:CONTAINER_1]]* and *[ui:[Container End:CONTAINER_1]]* controls and delete them by clicking the [DelObj] *[ui:Delete selected objects]* UX Builder toolbar button.</description>
                            <cases><case>
                            <case>
                                <note>If you delete 'Container:CONTAINER_1' first you will be presented with a prompt with three options. The first option, the default, is "Alpha Anywhere can delete the: Control you selected AND its corresponding closing control (but NOT its child controls) - 2 controls". This option will delete the 'Container:CONTAINER_1' control and the 'Container End:CONTAINER_1' control. If you delete the 'Container End:CONTAINER_1' first you will not receive the prompt.</note>
                            </case>
                            
                            <figure>
                                <title>Removing CONTAINER_1.</title>
                                <link>images/panel5.png</link>
                            </figure>
                            
                            </case></cases>
                            
                        </step>
                        <step>
                            <description>Select the *[ui:[Container:CONTAINER_1_2]]* and *[ui:[Container End:CONTAINER_1_2]]* controls and delete them as well by clicking the [DelObj] *[ui:Delete selected objects]* UX Builder toolbar button.</description>
                            <figure>
                                <title>Removing CONTAINER_1_2.</title>
                                <link>images/panel6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The Search Part should appear above the List control. Select PANELCARD_1 and PANELCARD_2, including all of the controls they contain and PANELCARD_2's *[Panel Card End]* control. Click *[ui:[PLayout][Panel Layout]]* in the *[ui:Panels]* section to wrap the selected controls in a Panel Layout.</description>
                            <figure>
                                <title>Adding a Panel Layout to contain the Search and List.</title>
                                <link>images/panelLayout1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, change the layout direction for PANELLAYOUT_1 from Left-To-Right (LTR) to Top-To-Bottom (TTB). The Top-To-Bottom layout will position the Search Part above the List control.</description>
                            <figure>
                                <title>Changing the Panel Layout from LTR to TTB.</title>
                                <link>images/panelLayout2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, add a Panel Layout that will contain both the Panel Layout for the Search Part and List as well as the Panel for the Detail View. Select all of the controls in the UX Component. Click *[ui:[PLayout][Panel Layout]]* in the *[ui:Panels]* section to wrap all the controls in a Panel Layout.</description>
                            <figure>
                                <title>Adding a Panel Layout for the entire UX Component.</title>
                                <link>images/panelLayout3.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now that the controls in the UX Component have been encapsulated inside Panel Cards, you can add Panel Headers and Footers. The Panel Headers and Footers will contain the buttons for the Detail View. In a later lesson, you will add buttons for dynamically displaying the Search Part and navigating between the Detail View and List control to the Panel Headers.</description>
                    <figure>
                        <title>The UX Component with Panel Cards and Panel Layouts.</title>
                        <link>images/final21.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 2: Add Panel Headers and Footers</title>
                    <description>[Download Component for Part 2 Lesson 2]</description>
                </section>
                <section>
                    <description>Next, Panel Headers and Panel Footers need to be added. The Panel Headers and Panel Footers will contain the Detail View buttons and any other buttons that need to be added to navigate the mobile app.</description>
                    <figure>
                        <link>images/headerFooter11.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the *[[PLayout][Panel Layout: PANELLAYOUT_1]]* control. Click *[ui:[Cont][Container]]*, which is listed in the *[ui:Containers]* controls to open the *[ui:Insert Container]* dialog. Select *[ui:Panel Header]* from the list of container choices and click the *[ui:Insert After]* button.</description>
                            <figure>
                                <title>Adding a Panel Header to the Search Part.</title>
                                <link>images/headerFooter1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>This Panel Header will hold the New Record and Synchronize buttons. Select the New Record button and click the [MoveTo] *[ui:Move to a specified location]* button on the UX Builder toolbar.</description>
                            <figure>
                                <title>Selecting the New Record button for moving into the Panel Header for the Search Part.</title>
                                <link>images/headerFooter2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[[PHead][PanelHeader: PANELHEADER_1]]* in the *[ui:Move Selected Control(s) To..]* dialog. Choose *[ui:After]* for the *[ui:Move]* action. Click *[ui:OK]* to move the New Record button inside the Panel Header.</description>
                            <figure>
                                <title>Moving the New Record button into the Search Part Panel Header using the Move Selected Control(s) To dialog.</title>
                                <link>images/headerFooter3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Now, move the Synchronize button into the Panel Header. Select the Synchronize button and click the [MoveTo] *[ui:Move to a specified location]* button on the UX Builder toolbar.</description>
                            <figure>
                                <title>Selecting the Synchronize button for moving into the Panel Header for the Search Part.</title>
                                <link>images/headerFooter4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[[CtrlBtn][Button: New Record]]* in the *[ui:Move Selected Control(s) To..]* dialog. Choose *[ui:After]* for the *[ui:Move]* action. Click *[ui:OK]* to move the Synchronize button after the New Record button.</description>
                            <figure>
                                <title>Moving the Synchronize button into the Search Part Panel Header after the New Record button.</title>
                                <link>images/headerFooter5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, add a Panel Header to the Detail View to hold the Delete Record button for the Detail View. Select the *[[PCard][Panel Card: PANELCARD_3]]* control. Click *[ui:[Cont][Container]]* in the *[ui:Containers]* controls to open the *[ui:Insert Container]* dialog. Select *[ui:Panel Header]* from the list of container choices and click the *[ui:Insert After]* button.</description>
                            <figure>
                                <title>Adding a Panel Header to the Detail View.</title>
                                <link>images/headerFooter6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Move the Delete Record button into the header for the Detail View. Select the Delete Record button and click the [MoveTo] *[ui:Move to a specified location]* button on the UX Builder toolbar.</description>
                            <figure>
                                <title>Selecting the Delete Record button for moving into the Panel Header for the Detail View.</title>
                                <link>images/headerFooter7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[[PHead][PanelHeader: PANELHEADER_1]]* in the *[ui:Move Selected Control(s) To..]* dialog. Choose *[ui:After]* for the *[ui:Move]* action. Click *[ui:OK]* to move the New Record button inside the Panel Header.</description>
                            <figure>
                                <title>Moving the Delete Record button into the Detail View Panel Header.</title>
                                <link>images/headerFooter8.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, add a Panel Footer to the Detail View. Select the Save and Reset buttons. Click *[ui:[Cont][Container]]* in the *[ui:Containers]* controls to open the *[ui:Insert Container]* dialog. Select *[ui:Panel Footer]* from the list of container choices and click *[ui:OK]*.</description>
                            <figure>
                                <title>Adding a Panel Footer to the Detail View around the Save and Reset buttons.</title>
                                <link>images/headerFooter9.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the *[ui:[PFoot] [Panel Footer: PANELFOOTER_1]]* control. In the *[ui:Container Begin Properties]*, change the *[ui:Container alignment]* from *[Left]* to *[Center]*. This will center the Save and Reset buttons in the footer.</description>
                            <figure>
                                <title>Centering the Save and Reset buttons in the Detail View Panel Footer.</title>
                                <link>images/headerFooter10.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>The controls in the UX Component have been organized into a Panel structure, with Panel Cards, Panel Layouts, Panel Headers, and Panel Footers. Next, you will add a mobile style sheet and enable mobile emulation for the application so you can visualize how the application will look and behave on a mobile device.</description>
                    <figure>
                        <title>How the app looks after controls are organized into Panel Cards, Panel Layouts, Panel Headers, and Panel footers.</title>
                        <link>images/headerFooter11.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 3: Using a Mobile Style Sheet</title>
                    <description>Now that the Panel structure and navigation has been established, the next step is to start styling the UX Component to look like a mobile application. Alpha Anywhere ships with a number of styles that allow you to build apps that look like iOS or Android applications in addition to some generic mobile styles. Alpha Anywhere also includes tools for emulating a mobile device in *[ui:[LPreview] Live Preview]*, which you will turn on in Lesson 3-3.</description>
                    <figure>
                        <title>The app rendered using the iOS7 style sheet and using Mobile Emulation in Alpha Anywhere.</title>
                        <link>images/mobileEmulate4.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 3-1: Choose a New Style</title>
                    <description>[Download Component for Part 2 Lesson 3-1]</description>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Start by changing the style sheet used by the UX Component. On the UX Component's *[ui:[Prop]Properties]* pane, click the [...] button for the *[ui:Style name]* property to select a new style.</description>
                            <figure>
                                <title>The Style name UX Component Property.</title>
                                <link>images/style1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Select Style]* dialog, choose the *[iOS7]* style from the list of options and click *[ui:OK]*.</description>
                            <figure>
                                <title>Choosing the iOS7 style in the Select Style dialog.</title>
                                <link>images/style2.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title nested="2">Lesson 3-2: Install the Style's Icon Fonts</title>
                    <description>[Download Component for Part 2 Lesson 3-2]</description>
                </section>
                <section>
                    <description>
                        <p>To preview this style you will need to install a few Fonts on your system. At this point, if you try to open *[ui:[LPreview] Live Preview]*, you will see several dialogs informing you that you need to install several fonts in order for your UX Component to render correctly in *[ui:[LPreview] Live Preview]*.</p>
                        <p>Let's install the fonts for the *[iOS7]* style so you can see the icons in *[ui:[LPreview] Live Preview]*, as shown below.</p>
                    </description>
                    <figure>
                        <title>The UX Component rendered with an iOS7 style sheet and font icons.</title>
                        <link>images/final32.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Open Windows Explorer and navigate to the *[CSS\iOS7]* directory in the executable folder where you installed Alpha Anywhere. This is usually *[bold:C:\Program Files (x86)\a5v12]*.</description>
                            <figure>
                                <title>Finding the A5_iOS7Icons.ttf file in the CSS\iOS7 directory.</title>
                                <link alt="The iOS7 directory.">images/fontInstall1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Double-click the *[A5_iOS7Icons.ttf]* file. If file extensions are not configured to display, double-click the *[A5_iOS7Icons]* with a *[ui:Type]* description of "TrueType". Windows will prompt you to install the font. Click the *[ui:Install]* button to install the font.</description>
                            <figure>
                                <title>Installing the A5_iOS7Icons.ttf font.</title>
                                <link alt="The installation window for the A5_iOS7Icons.ttf file.">images/fontInstall2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Once the install completes, close all windows and return to Alpha Anywhere.</description>
                        </step>
                        <step>
                            <description>Next, you need to install the *[font-awesome]* font library that ships with Alpha Anywhere. In the *[ui:Web Projects Control Panel]*, click the [FolderOpen] *[ui:Open Project Folder in Windows Explorer]* button on the toolbar.</description>
                            <figure>
                                <title>Opening the project directory using the Open Project Folder in Windows Explorer tool.</title>
                                <link alt="The Open Project Folder in Windows Explorer toolbar button.">images/fontInstall3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Navigate to the *[fonts]* directory inside the *[css/CSSIcons/font-awesome]* in the project folder in Windows Explorer. Double-click the *[fontawesome-webfont.ttf]* file, or if extensions are not shown, double-click the *[fontawesome-webfont]* file with a *[ui:Type]* description of "TrueType". Click the *[ui:Install]* button to install the font.</description>
                            <figure>
                                <title>Finding the fontawesome-webfont.ttf file in the css\CSSIcons\font-awesome\fonts directory.</title>
                                <link  alt="The fonts directory.">images/fontInstall4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>When the install is complete, close all windows and return to Alpha Anywhere.</description>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now, when you open *[ui:[LPreview] Live Preview]*, the app will render using the iOS7 style sheet and display images from the font libraries you installed.</description>
                    <figure>
                        <title>The UX Component rendered with an iOS7 style sheet and font icons.</title>
                        <link>images/final32.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 3-3: Enable Mobile Preview</title>
                    <description>[Download Component for Part 2 Lesson 3-3]</description>
                </section>
                <section>
                    <description>Alpha Anywhere includes the built-in tools for simulating your application on a Mobile device in *[ui:[WPreview] Working Preview]* and *[ui:[LPreview] Live Preview]*. In order to style the app to look and feel like a native mobile app, mobile emulation helps visualize the space Panels and buttons require and navigation controls required to handle small screens. It also allows you to test actions, such as "swiping" within the Alpha Anywhere development environment.</description>
                    <note>In addition to using the built in mobile emulator, you can also perform a Remote Test of your mobile application on any device that is on the same network as your development machine. See *[link:Appendix A: Remote Testing@./index.xml#section1_Appendix%20A:%20Remote%20Testing]* for more information on how to perform a Remote Test.</note>
                    <steps>
                        <step>
                            <description>To preview your app on a variety of Mobile devices, first check the Mobile checkbox [Mob] on the UX Builder toolbar.</description>
                            <figure>
                                <title>UX Builder toolbar's 'Mobile' checkbox</title>
                                <link>images/checkmobile.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The Mobile device emulation tools will now be enabled when you test your app. Click on the *[ui:[WPreview] Working Preview]* or *[ui:[LPreview] Live Preview]* tab to preview your mobile app using the mobile style sheet with the mobile emulator turned on.</description>
                            <figure>
                                <title>Previewing with the mobile device emulator.</title>
                                <link>images/mobileEmulate2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>You can choose from a list of devices. Each device has an option for portrait or landscape orientation. Click on the dropdown box and select a different device option.</description>
                            <figure>
                                <title>Available device emulation options.</title>
                                <link>images/mobileEmulate3.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now that your app has a mobile style sheet and can be previewed using the mobile emulator, the next step is to configure the controls so they fit comfortably on a small screen.</description>
                    <figure>
                        <title>How the app looks emulated on an iPhone 4 in portrait (vertical) orientation after adding the iOS7 style sheet.</title>
                        <link>images/mobileEmulate4.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 4: Style the UX Controls for Mobile</title>
                    <description>In this lesson, you'll start styling the UX Component to fit on a mobile device. In the next 3 lessons, you'll define the space each Panel requires, which will force the Detail View to render on its own screen rather than side by side with the List control. The buttons in the Panel Headers will be modified to display just an icon, allowing more space for additional buttons to be added in Lesson 5 to provide navigation between the List control and Detail View Panels. You will also modify the Search Part's panel to display on demand.</description>
                    <figure>
                        <title>The Search Part is now hidden, shown only when the search icon in the upper left-hand corner is clicked. The Detail View is not shown because there is not enough space to render it on-screen with the List control.</title>
                        <link>images/final43.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 4-1: Sizing Panels</title>
                    <description>[Download Component for Part 2 Lesson 4-1]</description>
                </section>
                <section>
                    <description>The next step in creating a responsive layout for your mobile application is to add size information to the panels. The Panels containing the Detail View and List need to have their Layout size defined. A Layout size for a Panel defines how much space the Panel requires to display its contents. On smaller devices, if two Panels' total required Layout size is greater than the space available on screen, only one Panel will be displayed at a time.</description>
                    <figure>
                        <title>The UX Component rendered on iPhone 4 with a vertical layout. The Detail View is not visible because there is not enough space to show it and the List control and Search Part, which require 300px of space.</title>
                        <link>images/final41.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the *[ui:[PLayout][Panel Layout: PANELLAYOUT_1]]* control. In the *[ui:Panel Size and Dock Options]*, set the *[ui:Layout size]* to 300px.</description>
                            <figure>
                                <title>Setting the Layout size for the Search Part and List Panel Layout to 300px.</title>
                                <link>images/panelSize1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, select the List's Panel Card, *[ui:[PCard][Panel Card: PANELCARD_2]]*, and set the *[ui:Minimum size]* to 300px in the *[ui:Panel Size and Dock Options]*.</description>
                            <figure>
                                <title>Setting the Minimum size for the List's Panel Card to 300px.</title>
                                <link>images/panelSize2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Finally, select the Detail View's Panel Card, *[ui:[PCard][Panel Card: PANELCARD_3]]*, and set the *[ui:Minimum size]* to 300px in the *[ui:Panel Size and Dock Options]*.</description>
                            <figure>
                                <title>Setting the Minimum size for the Detail View's Panel Card to 300px.</title>
                                <link>images/panelSize3.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <figure>
                        <title>The UX Component rendered on iPhone 4 with a vertical layout. The Detail View is not visible because there is not enough space to show it and the List control and Search Part, which require 300px of space.</title>
                        <link>images/final41.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 4-2: Style the List Buttons</title>
                    <description>[Download Component for Part 2 Lesson 4-2]</description>
                </section>
                <section>
                    <description>Next, you will modify the Detail View buttons to use images from the UX Component's style instead of text to fit in the headers and footer of the mobile layout.</description>
                    <figure>
                        <title>The New Record and Synchronize buttons displaying as icons.</title>
                        <link>images/final42.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the New Record button and change its *[ui:Button layout]* to *[Image only]*.</description>
                            <figure>
                                <title>Changing the button layout for the New Record button to Image only.</title>
                                <link>images/styleButtons1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click on the label for the *[ui:Button layout]* property for the New Record button to select the property. Then, click on the [pasteProp] *[ui:Paste Properties]* button on the UX Builder toolbar.</description>
                            <figure>
                                <title>Selecting the Button layout for the New Record button so it can be copied to multiple controls using the Set Multiple Properties tool.</title>
                                <link>images/styleButtons2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the Synchronize and Delete Record buttons in the *[ui:Select Controls]* dialog and click *[ui:Set Properties]* to set the selected controls' *[ui:Button layout]* property to Image only.</description>
                            <figure>
                                <title>Selecting the Synchronize and Delete Record buttons to set their Button style to Image only using the Set Multiple Properties tool.</title>
                                <link>images/styleButtons3.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <figure>
                        <title>The New Record and Synchronize buttons displaying as icons.</title>
                        <link>images/final42.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 4-3: Dock the Search Panel</title>
                    <description>[Download Component for Part 2 Lesson 4-3]</description>
                </section>
                <section>
                    <description>
                        <p>The Search Part only needs to be shown when the user wants to perform a search. The rest of the time, the Search Part can be hidden, or docked, off screen. By docking the panel, the content in the panel is only displayed when an explicit call to display the panel is made.</p>
                        <p>In this section, you will configure the Search Part's Panel to be a Docked Panel and add a button that can be clicked to show or hide the docked Search Part. </p>
                    </description>
                    <figure>
                        <title>Clicking the Search icon in the upper left-hand corner brings the docked Search Part into view.</title>
                        <link>images/final43.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the Panel Card that contains the Search control and change the *[ui:Dock]* property to *[collapse-before]*.</description>
                            <figure>
                                <title>Changing the Dock property from none to collapse-before for the Search Part's Panel Card.</title>
                                <link>images/searchDock1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, set the *[ui:Layout Size]* of the Panel Card to 100px.</description>
                            <figure>
                                <title>Adding a Layout size of 100px to the Search Part's Panel Card.</title>
                                <link>images/searchDock2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the Panel Header Begin control for the header for the Search Part and List control. Click [CtrlBtn] *[ui:[Button]]* in *[ui:Other Controls]* to insert a new button in the Panel Header. This button will be used to toggle the display of the Search Part.</description>
                            <figure>
                                <title>Add a button to the component by clicking [CtrlBtn] [Button] listed in Other Controls.</title>
                                <link>images/searchDock3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Name the button you just inserted. Select the button and click the [...] button for the *[ui:Id]* property. Type "TOGGLESEARCH" into text box for the button's ID.</description>
                            <figure>
                                <title>Changing the ID for a control using the Specify New Id dialog.</title>
                                <link>images/searchDock4.png</link>
                            </figure>
                            <note>When specifying a new ID for a control, the New ID must be unique among the controls in the UX Component.</note>
                        </step>
                        <step>
                            <description>Remove the break after the Toggle Search button. Select the Toggle Search button and click the [breakTool] *[ui:Toggle break]* button on the UX Builder toolbar.</description>
                            <figure>
                                <title>The Toggle break tool will add or remove a break after the selected control(s).</title>
                                <link>images/searchDock5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the Toggle Search button. In the *[ui:Button Appearance]* settings for the Toggle Search button, change the *[ui:Button layout]* to *[Image only]*.</description>
                            <figure>
                                <title>Changing the Button layout to Image only for the Toggle Search button.</title>
                                <link alt="Button layout options">images/searchDock6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Add the Search icon image to the Toggle Search button by clicking on the [...] button for the *[ui:Image name]* property. This will open the Specify Image dialog. In the *[ui:Specify Image]* dialog, select *[ui:Image in Web Project or Style]* to pick an image from the UX Component's style. Then, click the *[ui:Select]* button and choose the *[ui:Select from the Style]* option.</description>
                            <figure>
                                <title>The Specify Image dialog.</title>
                                <link alt="The Specify Image dialog">images/searchDock7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Using the *[ui:Filter]* text box, search for the *[{images.SearchPart.RunSearch}]* option. Select *[{images.SearchPart.RunSearch}]* and click the *[ui:OK]* button. Click *[ui:OK]* in the *[ui:Specify Image]* dialog to set the *[ui:Image name]* property to the style image you selected.</description>
                            <figure>
                                <title>Selecting the image to display from the images in the UX Component's style.</title>
                                <link alt="The Select a Style Image dialog">images/searchDock8.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select *[ui:[PLayout][Panel Layout: PANELLAYOUT_1]]* and click the [...] button for *[ui:Dock Panel controller buttons]*.</description>
                            <figure>
                                <title>Open Docked Panel controller buttons property by clicking the [...] button for the property.</title>
                                <link>images/searchDock9.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the *[ui:Add Button Controller]* button to add a new Docked Panel Controller Button.</description>
                            <figure>
                                <title>Add a new Button Controller on the Docked Panel Controller Buttons dialog by clicking Add Button Controller.</title>
                                <link>images/searchDock10.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Add New Dock Panel Controller Button]* dialog, set *[ui:Button Id]* to *[TOGGLESEARCH]* and *[ui:Panel Id]* to the Panel Card for the Search Part, *[PANELCARD_1]*. Click *[ui:OK]*.</description>
                            <figure>
                                <title>The Add New Dock Panel Controller Button dialog.</title>
                                <link>images/searchDock11.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click *[ui:OK]* to save the changes in the *[ui:Docked Panel Controller Buttons]* dialog. The Search Part will now be shown when the TOGGLESEARCH button is clicked.</description>
                            <figure>
                                <title>Linking the Toggle Search button (TOGGLESEARCH) to the Panel Card for the Search Part (PANELCARD_1.)</title>
                                <link>images/searchDock12.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the Search and Clear Filter buttons. Click *[ui:[Cont] [Container]]*. Select *[ButtonGroup]* from the list of options and click *[ui:OK]*.</description>
                            <figure>
                                <title>Adding a Button Group around the Search and Clear Filter buttons for the Search Part. The Button Group will apply special styling to the button controls within it.</title>
                                <link>images/styleButtons4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Change the *[ui:Button text]* for the Search Part's clear button to "Clear":</description>
                            <figure>
                                <title>Changing the Button text for the Clear button for the Search to "Clear".</title>
                                <link>images/styleButtons5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the *[LIST1_KEYWORDSEARCH]* control. Click the [%] *[ui:Set control width]* UX Builder toolbar button. Choose *[100%]* from the list of options to resize the Search text box to 100% wide.</description>
                            <figure>
                                <title>Setting the Search text box width to 100% wide.</title>
                                <link>images/searchDock16.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>For the *[LIST1_KEYWORDSEARCH]* control, change the *[ui:Position]* for the *[ui:Field Label]* to *[None]*.</description>
                            <figure>
                                <title>Removing the label for the search box.</title>
                                <link>images/searchDock17.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>
                        <p>There are many options available for docked panel behaviors, allowing for a wide variety of uses. Panels can be docked on the edge of the screen relative to the panel layout. In a Top-to-Bottom layout, panels can be docked on the top or bottom of the screen. In a Left-to-Right layout, panels can be docked on the sides of the screen. Panels can also be configured to dock when the device is in a specific orientation (ie, landscape or portrait.)</p>
                        <p>In addition to overlapping other panels when shown, docked panels can push content off screen when they slide into view. For more information about docking panels and some use cases, check out these videos:</p>
                    </description>
                    <cases>
                        <case>
                            <description>*[Showing a Docked Panel]* - How the docked panel is shown can be configured. Watch this video to learn about the options available.</description>
                            <videos>
                                <video>
                                    <name>Available Options for Showing a Docked Panel</name>
                                    <link>http://www.viddler.com/v/f8a2a83f</link>
                                </video>
                            </videos>
                        </case>
                        <case>
                            <description>*[Building a Docked Menu]* - A popup menu in a mobile application can be created using docked panels. Watch this 5 part video series to learn how to build a docked menu in Alpha Anywhere.</description>
                            <videos>
                                <video>
                                    <name>Building a Docked Menu</name>
                                    <link>http://www.viddler.com/v/5a4aae8c</link>
                                </video>
                            </videos>
                        </case>
                    </cases>
                </section>
                <section>
                    <description>
                        <p>Now that the Search Part is docked, you need to add javascript to show the Detail View when a record in the List control is selected or the New Record button is clicked. On devices that do not have enough space to display both the List control and Detail View side by side, the Detail View is rendered off-screen.</p>
                        <p>In addition to navigating to the Detail View, you also need to add a button to navigate back to the List control from the Detail View.</p>
                    </description>
                    <figure>
                        <title>Clicking the Search icon in the upper left-hand corner brings the docked Search Part into view.</title>
                        <link>images/final43.png</link>
                    </figure>
                </section>
               <section>
                   <title>Lesson 5: Add Navigation Between the List and Detail View</title>
                </section>
                <section>
                    <description>Javascript can be used to navigate between the List control and Detail View when records are selected. On devices with more screen space, such as a tablet, the Detail View and List will be shown side by side. However, on smaller screens, such as smartphones, the Detail View is hidden on another "screen". You need to add javascript to show the Detail View when a record in the List control is selected or the New Record button is clicked.</description>
                    <figure>
                        <title>The List control and Detail View panels shown side by side, rendered on iPhone 4 with a vertical layout.</title>
                        <link>images/final53.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 5-1: Add Javascript to Show the Detail View</title>
                    <description>[Download Component for Part 2 Lesson 5-1]</description>
                    <steps>
                        <step>
                            <description>Open the List Builder for the List control by selecting the list and clicking the [...] button for the *[ui:List Properties]* in the *[ui:[Prop]Properties]* pane.</description>
                            <figure>
                                <title>Open the List Builder by clicking the [...] button for List properties.</title>
                                <link>images/listnav1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the *[ui:[Events]List Events...]* button in the toolbar at the bottom of the List Builder to open the List Events Editor.</description>
                            <figure>
                                <title>The [Events]List Events button provides quick access to all of the Client-Side events for the List control.</title>
                                <link>images/listnav2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Search for the onClick event by typing "click" in the *[ui:Filter]* text box.</description>
                            <figure>
                                <title>Use the Filter box to quickly find the event you're looking for in the List Control System Events editor.</title>
                                <link>images/listnav3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the *[ui:Insert method...]* link at the bottom of the *[ui:Javascript code]* editor. This opens the *[ui:Insert Method]* dialog. The *[ui:Insert Method]* dialog lists javascript methods available for the UX Component and objects (List controls, maps, button lists, etc) in the UX Component. The placeholder, *[ui:{dialog.object}]*, represents a javascript object for the UX Component. It has methods and properties that can be utilized to interact with the interface elements in the UX Component.</description>
                            <figure>
                                <title>Insert Method dialog for the UX Component</title>
                                <link>images/listnav8.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>To show the Detail View panel when a List control record is clicked, you need to call the *[js:{dialog.object}.panelSetActive]* method. Search for "panelSetActive" in the *[ui:Filter]* text box. Select *[{dialog.object}.panelSetActive(UXPanelName [, flagAnimate]);]* from the Method list and click *[ui:Insert]*</description>
                            <figure>
                                <title>Insert Method dialog for the UX Component</title>
                                <link>images/listnav7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the Javascript code editor, delete the text "*[js:UXPanelName [, flagAnimate]]*" from between the opening and closing parentheses for the panelSetActive method. Type a single quote (') between the parentheses to activate the autocomplete system in Alpha Anywhere. Press the "Ctrl+Down key" on the keyboard to open a popup menu of available Panel objects that can be activated using the *[js:panelSetActive]* method. You can also right-click on the text in the popup to activate the menu. Select *[PANELCARD_3]* from the list of choices to set the *[js:UXPanelName]* parameter for the *[js:panelSetActive]* method.</description>
                            <figure>
                                <title>Autocomplete is available for most methods in the Javascript code editor.</title>
                                <link>images/listnav9.png</link>
                            </figure>
                            <figure>
                                <title>A dropdown menu is available for some methods, listing available controls a UX Component's method can access. Follow the instructions in the popup help for a method to access any dropdowns and genies that may be available.</title>
                                <link>images/listnav10.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>For the second parameter, *[js:flagAnimate]*, type in *[js:false]*. The *[js:flagAnimate]* parameter defines whether or not an animation should be used when activating the panel. A value of *[js:false]* means that no animation will be used.</description>
                            <figure>
                                <title>Set the animation flag to false.</title>
                                <link>images/listnav4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The javascript to activate the Detail View in the List control's onClick should like the code in the example below. Click *[ui:OK]* to save your changes.</description>
                            <example><![CDATA[{dialog.object}.panelSetActive('PANELCARD_3',false);]]></example>
                        </step>
                        <step>
                            <description>
                                <p>When you return to the List Builder, click the List Builder's *[ui:OK]* button to save your change to the List control.</p>
                            </description>
                            <figure>
                                <link>images/listnav11.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Select the *[ui:New Record]* button in the UX Builder.</p>
                            </description>
                            <figure>
                                <link>images/listnav12.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, click the [...] button to open the editor for the New Record button's *[ui:click]* event.</description>
                            <figure>
                                <title>Open the Event editor for an event by clicking the [...] button.</title>
                                <link>images/listnav5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Add code to the click event for the New Record button to navigate to the Detail View's pane when the button is clicked. There are already 2 lines of Javascript code in the button's click event. Add the same call to *[js:<![CDATA[{dialog.object}.panelSetActive()]]>]* at the end of the script. Click *[ui:[FileSave] Save]* to save your changes and close the Edit Event dialog.</description>
                            <example><![CDATA[var lObj = {dialog.object}.getControl('LIST1');
lObj.newDetailViewRecord();
{dialog.object}.panelSetActive('PANELCARD_3',false);]]></example>
                            <figure>
                                <title>The Event Editor is where you can add Action Javascript, Javascript, or even Server-side Xbasic to perform actions when client-side events occur for controls in the UX Component.</title>
                                <link>images/listnav6.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <title nested="2">Lesson 5-2: Add a Back Button</title>
                    <description>[Download Component for Part 2 Lesson 5-2]</description>
                </section>
                <section>
                    <description>Now that you can navigate to the Detail View from the List control, a Back button needs to be added so that you can return to the List and Search Part from the Detail View.</description>
                    <figure>
                        <title>The Detail View Panel with a Back button in the Panel Header.</title>
                        <link>images/final52.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the *[ui:[PHead][PanelHeader: PANELHEADER_2]]* control. In the *[ui:Other Controls]* section, click *[ui:[CtrlBtn][Button]]* to add a new button. </description>
                            <figure>
                                <title>Inserting a button into the UX Component.</title>
                                <link>images/backButton1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>While the new button is selected, click the [breakTool] *[ui:Toggle break]* button on the UX Builder toolbar to remove the break after the button.</description>
                            <figure>
                                <title>The UX Builder toolbar.</title>
                                <link>images/mobileEmulate1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Button text]* property, type "Back". </description>
                            <figure>
                                <title>Add text to a new button by changing the Button text property.</title>
                                <link>images/backButton2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Change the button's *[ui:Id]* to "BACK". Click the [...] button for the *[ui:Id]* property to open the *[ui:Specify New Id]* dialog. Type in "BACK" in the *[ui:New ID]* text box. Click *[ui:OK]* to save the changes.</description>
                            <figure>
                                <title>Changing the ID for the Button using the Specify New Id dialog.</title>
                                <link>images/backButton3.png</link>
                            </figure>
                            <note>When specifying a new ID for a control, the New ID must be unique among the controls in the UX Component.</note>
                        </step>
                        <step>
                            <description>Under *[ui:Button Appearance]*, change the *[ui:Button layout]* to *[Image followed by text]*.</description>
                            <figure>
                                <title>Changing the Button layout from Text only to Image followed by text.</title>
                                <link>images/backButton4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click the [...] for the *[ui:Image name]* property to open the *[ui:Specify Image]* dialog. With *[ui:Image in Web Project or Style]* select, click *[ui:Select]* and select *[ui:Select from the Style]* from the list of options. Search for "prev" and select the *[{images.dv.prevRecord}]* image from the style. Click *[ui:OK]* to select the image. Click *[ui:OK]* again to close the *[ui:Specify Image]* dialog and save your changes.</description>
                            <figure>
                                <title>Selecting the image to display on the button.</title>
                                <link>images/backButton5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Add an enable expression to the Back button to prevent the user from going back to the List control if any changes have been made in the Detail View. In the *[ui:Client Side Properties]* for the Back button, click the [...] button for *[ui:Enable expression]*</p>
                            </description>
                            <figure>
                                <title>Open the Define Client-Side Enable Expression editor by clicking the [...] button for the Enable expression property.</title>
                                <link>images/backButton6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Define Client-Side Enable Expression]* dialog, click the *[ui:Insert Field]* button. Select *[{dialog.listDetailView.LIST1.isDirty}]* from the list to insert it into the expression.</description>
                            <figure>
                                <title>Click Insert Field to insert a control or UX Component variable into an Enable Expression.</title>
                                <link>images/backButton7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p> *[js:{dialog.listDetailView.LIST1.isDirty}]* is a logical variable that is true if the Detail View has been modified and false if no changes have been made. The Back button should only be enabled when the Detail View is modified, or when  *[js:{dialog.listDetailView.LIST1.isDirty}]* is false.</p>
                                <p>After  *[js:{dialog.listDetailView.LIST1.isDirty}]*, type *[js: = false]* into the Enable Expression builder. You're Enable Expression should match the expression shown in the code example below. Click *[ui:OK]* to save the Enable Expression.</p>
                            </description>
                            <example><![CDATA[dialog.listDetailView.LIST1.isDirty = false]]></example>
                            <figure>
                                <title>The complete Enable Expression for the Back button.</title>
                                <link>images/backButton8.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the Panel Card that contains the Detail View, *[ui:[PCard][Panel Card: PANELCARD_3]]*. In the *[ui:Parent Navigation Buttons]* properties, check the *[ui:Has 'Previous card' button]*.</description>
                            <figure>
                                <title>Check the box for Has 'Previous card' button to enable display of the 'Previous card' button ID property.</title>
                                <link>images/backButton9.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>For the *[ui:'Previous card' button Id]*, select *[BACK]* from the dropdown.</description>
                            <figure>
                                <title>Setting the 'Previous card' button ID to BACK.</title>
                                <link>images/backButton10.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now that there is a Back button, you can return to the List control after viewing or modifying a record on the Detail View pane.</description>
                    <figure>
                        <title>The Detail View Panel with a Back button in the Panel Header.</title>
                        <link>images/final52.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 5-3: Right Align Buttons in the Panel Header</title>
                    <description>[Download Component for Part 2 Lesson 5-3]</description>
                </section>
                <section>
                    <description>In this lesson, you will add separation between the Toggle Search button and New Record button, making it easier to open the search part without accidentally tapping the New Record button. Similarly, space will be added between the Back button and the Delete Record button in the Detail View's Panel Header, reducing the chance of tapping the Delete Record button when navigating back to the List control.</description>
                    <figure>
                        <title>Right aligning the New Record, Synchronize, and Delete buttons.</title>
                        <link>images/final53.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the New Record and Synchronize buttons. Click *[ui:[Cont] [Container]]* to insert a Container around the selected buttons. Choose *[ui:None]* and click *[ui:OK]*</description>
                            <figure>
                                <title>Add a container around the New Record and Synchronize buttons.</title>
                                <link>images/searchDock13.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Add "float:right;" to the *[ui:Container style]* property for the Container. This will align the New Record and Synchronize buttons on the right side of the Panel Header.</description>
                            <figure>
                                <title>Adding float:right; to the Container's style will align the New Record and Synchronize buttons to the right-hand side of the Panel Header.</title>
                                <link>images/floatButtons1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the Delete Record button. Click *[ui:[Cont] [Container]]* to insert a Container around the Delete Record button. Select *[None]* and click *[ui:Insert Around]*.</description>
                            <figure>
                                <title>Add a container around the Delete Record button in the Detail View's Panel Header.</title>
                                <link>images/searchDock15.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Add "float:right;" to the *[ui:Container style]* property for the Container. This will align the Delete Record button on the right side of the Panel Header.</description>
                            <figure>
                                <title>Adding float:right; to the Container's style will align the Delete Record button to the right-hand side of the Panel Header.</title>
                                <link>images/floatButtons2.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <figure>
                        <title>Right aligning the New Record, Synchronize, and Delete buttons.</title>
                        <link>images/final53.png</link>
                    </figure>
                </section>
                <section>
                    <title>Lesson 6: Styling the List Control and Detail View</title>
                    <description>The final steps are to add a few styling elements to the List Control and Detail View so the controls are easier to read and use on a mobile device.</description>
                </section>
                <section>
                    <title nested="2">Lesson 6-1: Add a Freeform Layout to the List</title>
                    <description>[Download Component for Part 2 Lesson 6-1]</description>
                </section>
                <section>
                    <description>
                        <p>You will now add the layout and styling necessary to make it readable on a mobile device. This starts with converting the List's layout from a Column Layout to a Freeform layout, allowing you to take advantage of Client-side Templates to render the data in a more mobile-friendly fashion.</p>
                    </description>
                    <figure>
                        <title>The List control rendered with a Freeform layout.</title>
                        <link>images/mobileFinal1.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Open the List Builder for the List control. On the *[ui:List Properties]* tab, change the Layout from *[ui:Column]* to *[ui:Freeform]*</description>
                            <figure>
                                <title>Changing the layout type for a List control.</title>
                                <link>images/freeform1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>On the List Layout tab, click the *[ui:Pre-defined Templates]* link located along the bottom of the Template editor. This will open the List Template Picker. Select the template with Level1, Level2, and Detail on the left and Context on the right. (Watch *[extlink:Pre-Defined Free-Form List Templates@https://www.viddler.com/v/6e41050a]* to learn more about the pre-defined Freeform list templates available.)</description>
                            <figure>
                                <title>One of the pre-defined templates available in the List Template Picker</title>
                                <link>images/freeform3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Assign the fields from the List control to the placeholders in the pre-defined template. You can select the fields from the dropdown controls or type them in manually. You can assign multiple fields to the same placeholder by typing them in.</p>
                                <p>Assign the *[ui:[[Context]]]* placeholder to *[{CustomerID}]*</p>
                                <p>Assign the *[ui:[[Level1]]]* placeholder to *[{CompanyName}]*</p>
                                <p>Assign the *[ui:[[Level2]]]* placeholder to *[{Address}]*</p>
                                <p>Assign the *[ui:[[Detail]]]* placeholder to *[{City} {Country}]*</p>
                            </description>
                            <figure>
                                <title>Assigning fields to template placeholders.</title>
                                <link>images/freeform4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>The placeholders in the list template will be replaced with the fields you picked. This will produce a template that will look similar to the following:</description>
                            <example><![CDATA[<div style="display: table; width: 100%;">
	<div style="display: table-cell;">
		<div class="[theme:listBox.base.item.parts.contextClassName|{dialog.style}ListItemLabelContext]" style="float: right;">{CustomerID}</div>
		<div class="[theme:listBox.base.item.parts.mainClassName|{dialog.style}ListItemLabelMain]">{CompanyName}</div>
		<div class="[theme:listBox.base.item.parts.subClassName|{dialog.style}ListItemLabelSub]">{Address}</div>
		<div class="[theme:listBox.base.item.parts.contentClassName|{dialog.style}ListItemContent]">
			{City} {Country}<br/>
			
		</div>
	</div>
			
	
	<div style="display: table-cell; width: 40px; text-align: right; vertical-align: middle;">
		<img src="{images.dialog.listNav}" />
	</div>
</div>]]></example>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>
                        <p>Client-side templates allow you to define a dynamic layout for a List control that is calculated client-side, rather than server-side. This enables the List control to render new records when the mobile device is disconnected from the internet. Rendering data using client-side templates also offers speed advantages as it reduces the amount of data required to download from the server and can be done on the user's computer.</p>
                        <p>There are a rich variety of template directives available. Read *[extlink:Client Side Templates@/documentation/index?search=client%20side%20templates]* to learn more about the Client-Side Template syntax. You can learn more about Client-Side Templates by watching the videos below, as well.</p>
                    </description>
                    <videos>
                        <video>
                            <name>Client-Side Templates Tutorial</name>
                            <link>https://www.viddler.com/v/4f5b3e82</link>
                        </video>
                        <video>
                            <name>Template Tester Tutorial</name>
                            <link>https://www.viddler.com/v/658bef50</link>
                        </video>
                    </videos>
                </section>
                <section>
                    <description>Now that the List control is styled so data in the List is readable, you can style the Detail View's controls to render with a more mobile-friendly look.</description>
                    <figure>
                        <title>The List control rendered with a Freeform Layout.</title>
                        <link>images/mobileFinal1.png</link>
                    </figure>
                </section>
                <section>
                    <title nested="2">Lesson 6-2: Mobilize the Detail View Controls</title>
                    <description>[Download Component for Part 2 Lesson 6-2]</description>
                </section>
                <section>
                    <description>The final thing you need to do is to style the Detail View's controls to be mobile friendly.</description>
                    <figure>
                        <link>images/mobileFinal2.png</link>
                    </figure>
                </section>
                <section>
                    <steps>
                        <step>
                            <description>Select the CustomerID, CompanyName, Address, City, and Country text controls in the Detail View. Click *[ui:[Cont][Container]]*. Select *[ui:ControlGroup]* and click *[ui:OK]*</description>
                            <figure>
                                <title>Select the text boxes in the Detail View to place them inside a ControlGroup.</title>
                                <link>images/detail1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the same group of controls again and click the [%] *[ui:Set control width]* UX builder toolbar button. Choose *[100%]* from the list of options to resize the controls to 100% wide.</description>
                            <figure>
                                <title>Change the width of all of the text boxes in the Detail View to 100% wide.</title>
                                <link>images/detail6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the CustomerID control. Change the *[ui:Position]* in the *[ui:Field Label]* properties to *[Left]*. </description>
                            <figure>
                                <title>Change the Label Position to Left for the CustomerID control.</title>
                                <link>images/detail2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>While the CustomerID control is selected, select the *[ui:Position]* property. Click the [pasteProp] *[ui:Paste Properties]* UX Builder toolbar button to open the *[ui:Set Multiple Properties]* dialog.</description>
                            <figure>
                                <title>Selecting the Position property for the CustomerID control so it can be copied to multiple controls using the Set Multiple Properties tool.</title>
                                <link>images/detail4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>In the *[ui:Select Controls]* dialog, select the CompanyName, Address, City, and Country controls. Click *[ui:Set Properties]* to copy the label position from the CustomerID control to the selected controls.</description>
                            <figure>
                                <title>Selecting the other text box controls in the Detail View so their Label Position can be set to Left.</title>
                                <link>images/detail5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Select the CompanyName control. Change the *[ui:Label]* in the *[ui:Field Label]* properties from "CompanyName" to "Company".</description>
                            <figure>
                                <title>Change the CompanyName title to "Company".</title>
                                <link>images/detail7.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now, when you view the Detail View, the text boxes appear larger and will fill the space available on the mobile device.</description>
                    <figure>
                        <link>images/mobileFinal2.png</link>
                    </figure>
                </section>
                <section>
                    <title>Congratulations! You have built your first Mobile App!</title>
                    <description>[Download Completed App]</description>
                </section>
                <section>
                    <description>You have completed building your first mobile app. This app is ready to be deployed and will support a variety of mobile layouts. This app can be distributed as a mobile web application or published as a PhoneGap application and distributed through a private or public app store. Read the *[extlink:Getting Started with PhoneGap@/documentation/index?search=getting%20started%20with%20phonegap]* to learn how to deploy an app using PhoneGap.</description>
                    <figure>
                        <title>Searching for records.</title>
                        <link>images/mobileFinal0.png</link>
                    </figure>
                    <figure>
                        <title>Search results in the List.</title>
                        <link>images/mobileFinal1.png</link>
                    </figure>
                    <figure>
                        <title>Viewing a Record.</title>
                        <link>images/mobileFinal2.png</link>
                    </figure>
                    <figure>
                        <title>A record after the City field was edited.</title>
                        <link>images/mobileFinal3.png</link>
                    </figure>
                    <figure>
                        <title>The List indicating a change is ready to synchronize with the server.</title>
                        <link>images/mobileFinal4.png</link>
                    </figure>
                    <figure>
                        <title>The same app in an iPhone 6 Horizontal layout.</title>
                        <link>images/mobileFinal_h1.png</link>
                    </figure>
                </section>
            </sections>
        </group>
        <group>
            <title>Before You Deploy: Remote Testing</title>
            <sections>
                <section>
                    <description>
                        <p>Before you consider deploying your application using PhoneGap, it's worth performing a Remote Test of your app on a mobile device.</p>
                        <p>Remote Testing is a way to test a mobile web application on a remote device. Remote Testing can be useful when trying to figure out layout and design elements for your mobile application. While the mobile emulator simulates several devices, it doesn't simulate all mobile devices on the market. With Remote Test, you can test your mobile and web applications on devices that are not available in Alpha Anywhere's mobile emulator.</p>
                        <p>Both the device and your development computer *[must be running on the same network]*. If they are not on the same network, remote testing is not possible.</p>
                    </description>
                    <note>Remote Testing cannot be used to test features that require access to a device's hardware, such as the camera or GPS. In order to test functionality that uses the device's hardware, you must deploy your application using PhoneGap. See *[extlink:Getting Started with PhoneGap@/documentation/index?search=getting%20started%20with%20phonegap]* to learn how to deploy an app using PhoneGap.</note>
                </section>
                <section>
                    <description>Let's perform a Remote Test with the mobile application you have built. You can optionally download the full mobile app to use with Remote Testing: [Download Completed App].</description>
                    <steps>
                        <step>
                            <description>Click the *[ui:[WPreview] Remote Test]* toolbar button. This will open the Remote Test dialog.</description>
                            <figure>
                                <link>images/remoteTest1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>If the development server is not running, you may be prompted to turn it on. If asked if you want to turn on the development server, select *[ui:Yes]* and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/remoteTest2.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Next, you will be asked what kind of Preview you would like. The options presented are *[ui:Fast Preview]* and *[ui:Full Preview]*. Since this is the first time you will be previewing your app using Remote Test, select *[ui:Full Preview]*. This ensures all of the files you need to preview the app are published to a local testing directory.</description>
                            <figure>
                                <link>images/remoteTest3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>Next, you need to configure how the Remote Test URL will be generated and delivered. You can get the URL for the test page one of 3 ways: *[ui:Send an Email]*, *[ui:Display a QR Code]*, or *[ui:Copy URL to the clipboard]*. The last option, *[ui:Do nothing]*, should only be selected if you have made changes to the UX Component and want to test those changes on a device that already  has a Remote Test active for the component.</p>
                                <p>If your device has a QR Reader, select the *[ui:Display a QR Code with the URL of the test page]* option. Otherwise, choose *[ui:Copy URL to the clipboard]*.</p>
                            </description>
                        </step>
                        <step>
                            <description>For the *[ui:Host Name Settings]*, select *[ui:Automatic]* and click *[ui:OK]*.</description>
                            <figure>
                                <link>images/remoteTest4.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>If you chose to copy the URL to the clipboard, paste the URL into an application such as Notepad. You will need to type this URL manually in the address bar in the browser on your device. Do this now.</p>
                                <p>If you chose to display a QR code, the QR code should be on the screen. Open the QR reader on your device and use it to scan the QR code. The web browser on your device will open and navigate to the URL for the Remote Test.</p>
                                <figure>
                                    <title>Confirmation that the URL was copied to the clipboard.</title>
                                    <link>images/remoteTest5.png</link>
                                </figure>
                                <figure>
                                    <title>The generated QR Code for distributing the URL.</title>
                                    <link>images/remoteTest6.png</link>
                                </figure>
                            </description>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>You can now test your app on your remote device.</description>
                    <note>If you have trouble establishing a Remote Test on your mobile device, verify that the port for the Application Web Server is not being blocked by the firewall or other security software on your computer.</note>
                </section>
                <section>
                    <note>Your development machine and remote device *[must]* be on the same network in order to perform a Remote Test. Verify both devices are on the same network.</note>
                </section>
            </sections>
        </group>
        <group>
            <title>Appendix</title>
            <sections>
                <section>
                    <title>Appendix A: Configure the Development Server</title>
                    <description>
                        <p>Live Preview is a tool for testing your Alpha Anywhere application before publishing it to the local webroot or a remote server. Live Preview requires the Alpha Anywhere Development Server in order to run. You need to configure the Development Server to run on your local development machine first, however, before a Live Preview can be performed. See *[extlink:Previewing Components@/documentation/index?search=previewing%20components]* for more information about Live Preview.</p>
                        <p>The Development Server is also required to do a Remote Test. Remote testing allows you to test your component remotely on another device or computer connected to your local area network. You will perform a Remote Test of the completed mobile app at the end of this tutorial.</p>
                    </description>
                    <steps>
                        <step>
                            <description>On the Web Projects Control Panel, open the Development Server Settings. They can be accessed under the Web menu. Select "Development Server".</description>
                            <figure>
                                <link>images/developmentServer1.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>The Server Port is the port number that requests to the Alpha Anywhere Server are made. The default value for the Server Port is 80. In a production environment, requests to the Alpha Anywhere Server will be made on port 80. However, in a development environment, port 80 is usually in use by other applications. If you start the development server using port 80, you will see an error message stating port 80 is already in use.</p>
                                <p>Change the Server Port to another port number. Pick a high-number port, such as 8080, for your Server Port setting.</p>
                            </description>
                            <figure>
                                <title>Error message stating that Port 80 is already in use.</title>
                                <link>images/developmentServer4.png</link>
                            </figure>
                            <figure>
                                <title>Changing the server port to 8080.</title>
                                <link>images/developmentServer5.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Click *[ui:Save]* to save the changes to the Development Server. If the Development Server was already running, click the *[ui:Restart Server]* button for the changes to take effect. If the Development Server is not running, click *[ui:Start Server]* to start the server.</description>
                            <figure>
                                <title>Prompt asking to confirm starting the development server.</title>
                                <link>images/developmentServer3.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>If this is the first time you have started the development server, you will be asked if you wish to create the Document Root "C:\A5Webroot". This directory is where all files are published for local testing. Click *[ui:Yes]* to create the directory.</description>
                            <figure>
                                <title>Message asking to create the C:\A5Webroot directory.</title>
                                <link>images/developmentServer6.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>You will see a confirmation popup that the development server settings were saved. Click *[ui:OK]*.</description>
                            <figure>
                                <title>Popup confirming that settings were saved.</title>
                                <link>images/developmentServer7.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>Windows Firewall may display a Windows Security Alert when the Alpha Anywhere application server starts. Click the *[ui:Allow access]* button to allow Alpha Anywhere to communicate through the firewall. If access is not given to Alpha Anywhere, you may not be able to use some features, such as Remote Testing and Live Preview, on your system.</description>
                            <figure>
                                <title>Windows Security Alert from Windows Firewall asking to allow Alpha Anywhere to communicate over the network.</title>
                                <link>images/developmentServer8.png</link>
                            </figure>
                        </step>
                        <step>
                            <description>
                                <p>The development server should be running. Check the *[ui:Server Status]*. The icon should appear green with the words "Running" next to it. Underneath the server status is the *[ui:License State]*. The license state indicates how many simultaneous sessions you can have.</p>
                                <p>Click *[ui:Close]* to close the Development Server Settings and return to the Web Projects Control Panel.</p>
                            </description>
                            <figure>
                                <link>images/developmentServer9.png</link>
                            </figure>
                        </step>
                    </steps>
                </section>
                <section>
                    <description>Now that the development server is configured and running, you can use Live Preview and Remote Test tools for testing Alpha Anywhere applications.</description>
                </section>
                <section>
                    <title>Appendix B: Helpful Resources</title>
                    <description>
                        <p>In addition to the Alpha Anywhere documentation system, located at *[link:https://documentation.alphasoftware.com/documentation]*, there are several other resources you may find useful for finding help or learning new tips and tricks about Alpha Anywhere:</p>
                    </description>
                    <list>
                        <item>
                            <name-title>Where You Should Go</name-title>
                            <description-title>Why You Should Visit</description-title>
                        </item>
                        <item>
                            <name>*[extlink:Alpha Anywhere Video Library@https://www.alphasoftware.com/videos]*</name>
                            <description><p>*[extlink:https://www.alphasoftware.com/videos]*</p><p>Alpha Anywhere has a vast array of videos covering a variety of topics. Find how-tos, overviews, recordings of webinars and classes, and more.</p></description>
                        </item>
                        <item>
                            <name>*[extlink:Alpha Users Forums@https://forum.alphasoftware.com/]*</name>
                            <description><p>*[extlink:https://forum.alphasoftware.com]*</p><p>The Alpha Forum is a highly active users forum and is an excellent resource for any Alpha Anywhere developer. Collaborate with other Alpha Anywhere developers on problems and show off apps you've built. No question is too simple nor complex.</p></description>
                        </item>
                        <item>
                            <name>*[extlink:Alpha Software Blog@https://www.alphasoftware.com/blog/]*</name>
                            <description>
                                <p>*[extlink:https://www.alphasoftware.com/blog/]*</p><p>Learn the latest features and news from *[extlink:Alpha Software@https://www.alphasoftware.com/mobile-app-development-platform]*. Posts range from what's hot in the market to development tips and announcements of new features in Alpha Anywhere.</p></description>
                        </item>
                    </list>
                </section>
            </sections>
        </group>
    </groups>
    <links>
        <!-- links to top level images -->
        <link href="/images/$$generic.link.png">ManageConnStr</link>
        <link href="/images/$$file.new.png">FileNew</link>
        <link href="/images/$$file.save.png">FileSave</link>
        <link href="/images/$$control.edit.png">UXControls</link>
        <link href="/images/$$control.browse.png">ListCtrl</link>
        <link href="/images/$$mini.generic.lamp.png">ListGenie</link>
        <link href="/images/$$database.unavailable.png">db</link>
        <link href="/images/$$table.png">tbl</link>
        <link href="/images/$$code.execute.blue.png">WPreview</link>
        <link href="/images/$$code.execute.png">LPreview</link>
        <link href="/images/$$generic.tools.png">Design</link>
        <link href="/images/$$web.panel.card.png">PCard</link>
        <link href="/images/$$web.panel.navigator.png">PNav</link>
        <link href="/images/$$web.panel.layout.png">PLayout</link>
        <link href="/images/$$web.panel.header.png">PHead</link>
        <link href="/images/$$web.panel.footer.png">PFoot</link>
        <link href="/images/$$edit.delete.png">DelObj</link>
        <link href="/images/$$generic.properties.png">Prop</link>
        <link href="/images/$$folder.open.png">FolderOpen</link>
        <link href="/images/$$layout.hierarchy.goto.nextSibling.png">MoveTo</link>
        <link href="/images/$$control.button.png">CtrlBtn</link>
        <link href="/images/$$format.border.style.dash.png">Cont</link>
        <link href="/images/$$code.aScript.png">Events</link>
        <link href="/images/tools/ellipsesButton.png">...</link>
        <!-- links to images in this tutorials image directory -->
        <link href="images/pasteProp.png">pasteProp</link>
        <link href="images/enableMobile.png">Mob</link>
        <link href="images/sizeCtrls.png">%</link>
        <link href="images/breakTool.png">breakTool</link>
        <link href="images/connectionStringError.png">NoConnectionString</link>
        <!-- links within the document -->
        <link href="#section1_Lesson 1: Create a new Workspace">First Things First Lesson 1</link>
        <link href="#section1_Lesson 2: Build a Database Connection String">Build a Database Connection String</link>
        <link href="#group_First Things First - Setting Up Your Workspace">First Things First - Setting Up Your Workspace</link>
        <link href="#group_First Things First - Setting Up Your Workspace">First Things First</link>
        <link href="#section1_Appendix A: Configure the Development Server">Appendix A: Configure the Development Server</link>
        <link href="#group_Part 1 - Building Basic Functionality">Part 1 - Building Basic Functionality</link>
        <link href="#group_Part 1 - Building Basic Functionality">Part 1</link>
        <link href="#group_Part 2 - Creating the Responsive Mobile Layout">Part 2 - Creating the Responsive Mobile Layout</link>
        <link href="#group_Part 2 - Creating the Responsive Mobile Layout">Part 2</link>
        <link href="#section1_Lesson 2: Build a Database Connection String">Lesson 2: Build a Database Connection String</link>
        <!-- links to downloadable components -->
        <link href="components/Part1Lesson2.zip">Download Component for Part 1 Lesson 2</link>
        <link href="components/Part1Lesson7.zip">Download Component for Part 1 Lesson 7</link>
        <link href="components/Part2Lesson1.zip">Download Component for Part 2 Lesson 1</link>
        <link href="components/Part2Lesson2.zip">Download Component for Part 2 Lesson 2</link>
        <link href="components/Part2Lesson31.zip">Download Component for Part 2 Lesson 3-1</link>
        <link href="components/Part2Lesson32.zip">Download Component for Part 2 Lesson 3-2</link>
        <link href="components/Part2Lesson33.zip">Download Component for Part 2 Lesson 3-3</link>
        <link href="components/Part2Lesson41.zip">Download Component for Part 2 Lesson 4-1</link>
        <link href="components/Part2Lesson42.zip">Download Component for Part 2 Lesson 4-2</link>
        <link href="components/Part2Lesson43.zip">Download Component for Part 2 Lesson 4-3</link>
        <link href="components/Part2Lesson51.zip">Download Component for Part 2 Lesson 5-1</link>
        <link href="components/Part2Lesson52.zip">Download Component for Part 2 Lesson 5-2</link>
        <link href="components/Part2Lesson53.zip">Download Component for Part 2 Lesson 5-3</link>
        <link href="components/Part2Lesson61.zip">Download Component for Part 2 Lesson 6-1</link>
        <link href="components/Part2Lesson62.zip">Download Component for Part 2 Lesson 6-2</link>
        <link href="components/HelloAlpha.zip">Download Completed App</link>
        <!-- links to other pages -->
        <link link="creating alphadao connection strings">Creating AlphaDAO Connection Strings</link>
        <link link="UX Properties Optimizations">UX Component Optimizations</link>
        <link link="UX Properties Optimizations">UX Component Properties</link>
    </links>
    <see>
        <ref link="build a web app">Build a Web App</ref>
        <ref link="BuildingDisconnectedApplications">List Control Overview : Building Disconnected Applications</ref>
        <ref link="Getting Started with PhoneGap">Getting Started with PhoneGap</ref>
    </see>
</page>